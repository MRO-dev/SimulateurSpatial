[
    {
        "id": "107c9bc.328b364",
        "type": "tab",
        "label": "START MCS Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dd1202fd.a2e23",
        "type": "tab",
        "label": "Time Setter Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a37cc3392dfe3850",
        "type": "tab",
        "label": "On Start",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3913ac76.e7a7a4",
        "type": "tab",
        "label": "Ground-station Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7c68352c.1b47bc",
        "type": "tab",
        "label": "TLE builder",
        "disabled": false,
        "info": ""
    },
    {
        "id": "36e05050e3375022",
        "type": "tab",
        "label": "Rescue Empty TLE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "374a79f0f056bee3",
        "type": "tab",
        "label": "Delete RED/BLUE DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b711cf531b370c21",
        "type": "tab",
        "label": "Update Other VTS Sats",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6ac37828.4c7288",
        "type": "tab",
        "label": "Antenna Tracker Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a9c7c6499fb06192",
        "type": "tab",
        "label": "Maneuver Manager",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4f2d767445be8316",
        "type": "tab",
        "label": "Other Maneuvers Manuals",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "62c122b2f65be8e8",
        "type": "tab",
        "label": "Maneuvre prédéfinie",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0b6378c01090c728",
        "type": "tab",
        "label": "Maneuvre prédéfinie BLUE2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a45be5c622f6091e",
        "type": "tab",
        "label": "Maneuvre prédéfinie RED1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "32fc9731f5355a29",
        "type": "tab",
        "label": "Maneuvre prédéfinie RED2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c852882eb324b626",
        "type": "tab",
        "label": "Ergol Calculator - BLUE-RED",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9fc2d0daadf97d1e",
        "type": "tab",
        "label": "Earth_Observation_Manager",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4ddfcb5d4ffd885f",
        "type": "tab",
        "label": "Mean movement/SMA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "66f9d9ba2072108b",
        "type": "tab",
        "label": "Thrust Duration ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "50584aeb17eaebde",
        "type": "tab",
        "label": "Constellation Docker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "62804953b962105f",
        "type": "tab",
        "label": "Audio",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9329235efacd1483",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "31490b37c0bdea56",
        "type": "tab",
        "label": "Calculateur",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9aae31178d2023fd",
        "type": "tab",
        "label": "Iframe sans Scroll",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7041cc0d.5676f4",
        "type": "group",
        "z": "107c9bc.328b364",
        "name": "Main Buttons to manage the MCS",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f225da6f.835808",
            "cb0fed7.3a64e1"
        ],
        "x": -32,
        "y": -47,
        "w": 1694,
        "h": 614
    },
    {
        "id": "1fd96d24.c576c3",
        "type": "group",
        "z": "3913ac76.e7a7a4",
        "name": "Remove a ground station from databases",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "830078cd.5ce018",
            "80466439.be38c8",
            "cc07039e.b636d",
            "95062db2.f9d1d",
            "883d17a2.efed38",
            "4a4284af.a91d7c"
        ],
        "x": 94,
        "y": 199
    },
    {
        "id": "312c8fe7.75cef",
        "type": "group",
        "z": "3913ac76.e7a7a4",
        "name": "When angular database is complete, write a .TXT file for each ground station with angular data",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7f54d608.f66d18",
            "71548a7e.e894d4",
            "725004f9.2e6f1c",
            "550ae2ac.c7d07c",
            "783d60bf.56ed4",
            "fcb2e5a3.0e2f78",
            "fe49e6f5.8df938",
            "a71e2b4c.233488",
            "9a1fe386.f5e59",
            "a4ff9b34.579b18",
            "6eba071.10a38f8",
            "efe2c69b.fd76d8",
            "9c64b4eb.3ee8b8",
            "601c3227.d4d72c",
            "1e6e1bc5.0f5834",
            "520c3859.aa50c8",
            "eb2aa14e.a61f4",
            "b3db7416.4787d8",
            "dcefc108.5f804",
            "e6efdf13.cfcb6",
            "ce1d15e8.6c1078",
            "11567371c0f67cc9"
        ],
        "x": 94,
        "y": 439
    },
    {
        "id": "b6d29b3c.89b878",
        "type": "group",
        "z": "3913ac76.e7a7a4",
        "name": "Fill the Ground Station database",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e57e953b.7cd0a8",
            "edd76d7d.08bdb",
            "507d36b2.5917f8",
            "de5fe0c8.0d6bb",
            "90bc963d.ab5238"
        ],
        "x": 94,
        "y": 39
    },
    {
        "id": "d02d39d9.704b38",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Notification message preparation for Dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8c66adb9.78a24",
            "ccc1c309.94261",
            "f4e8516e.d638a",
            "97bf463.9b785b8",
            "8be87eed.6b61d",
            "3ebdce04.545c52",
            "82142810.e8ee98",
            "c02b28f9.44f608",
            "f48249b.dec28b8",
            "becd8ee3.9efcd",
            "bd944618.65d4c8"
        ],
        "x": 2034,
        "y": 4419,
        "w": 632,
        "h": 442
    },
    {
        "id": "1e404e3b.14ce32",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Store and display current TLE",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b538102e.235bb",
            "eea2e68b.c73728",
            "f9ce7744.af89a8",
            "287ac47f.0441ac"
        ],
        "x": 1474,
        "y": 59,
        "w": 352,
        "h": 182
    },
    {
        "id": "c6dcd18b.ea624",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Prepare query for JSatOrb API REST with TLE, ground stations and time data",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a10e1e99.b755e",
            "f48c422f.86566",
            "8f9784ae.86ddc8",
            "b6ca8b9b.ec16d8",
            "86ee657f.dfff28",
            "d25089c5.16ad98",
            "804d4875e2f1648a",
            "64e005a8c862bfaf",
            "8d2d46d99b3c70d1",
            "6f5ae58615d925eb",
            "00e423d5cecf63ac",
            "48fac77f27ebe694",
            "cd235fc9d45bd07e",
            "d220bc3808928eb3",
            "7edb0b79e9981fac",
            "5bfdeb3df1dc8e7e",
            "f2107460f7852ca0",
            "0fe194477cfd115a",
            "bd4011b41b1eed28",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "d80b430a49c5bc67",
            "24e475a7e7cc30b0"
        ],
        "x": 2254,
        "y": -1,
        "w": 1192,
        "h": 382
    },
    {
        "id": "4e981e1c.9c0d",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "When TLE update is asked, goes search for time settings",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "848d6f10.6746c",
            "97d64ebb.eedeb"
        ],
        "x": 14,
        "y": 4459,
        "w": 363,
        "h": 82
    },
    {
        "id": "571e2c55.406334",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "When TLE update button is pushed, asks for new TLE on Celestrak website",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b4ed5b61.777588",
            "a011d9bd.cb5668",
            "2002146a.dd37ac",
            "8f00d092.2ceaf",
            "52cc4274.d51c7c",
            "a29ee050.688fc",
            "b9a6ef87.24de3",
            "a43c137e.63e62",
            "75ace4d0.f680ac",
            "be5b3468b95dc183",
            "4af158778ce1bf1e",
            "8197137aa9aef967",
            "b4f92e23ab3d8349"
        ],
        "x": 54,
        "y": 19,
        "w": 1282,
        "h": 262
    },
    {
        "id": "3ccbb53f.0e92ea",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Messages to the Dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "68e5ba45.705be4",
            "7e174054.f4b3",
            "126451f0.88e04e",
            "18880b23.8d3665",
            "76a24cf9.258434",
            "a026019c.78bc9",
            "1e4d8792.74f5a8",
            "cedd76e1.9e8238",
            "7b763b58.51ce74",
            "a8f379dc355cc865"
        ],
        "x": 1234,
        "y": 4419,
        "w": 672,
        "h": 362
    },
    {
        "id": "a70ba86a.746ad8",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Select satellite position inside visibility windows, calculate angular data for each position and fill the angular database ",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dce3220a.a2827",
            "2e7fb2ab.ff8a5e",
            "5d531160.429e6",
            "30879888.257e48",
            "88e679ca.dca768",
            "72aca196.278cf",
            "8f9bb2ec.12936",
            "5e4f2147.9249e",
            "fce1105a.6ef5",
            "ca00b8d1.93b088",
            "a53ae528.1172e8",
            "6b922809.e4f268",
            "2668a3d2.59aabc",
            "986279ab.994688",
            "2e404121.6748ae",
            "333f1f0b.07ba1",
            "e9076de9.07737",
            "8361c2b3.30592",
            "5cf3906d.cd20b",
            "c781d830.604888",
            "c5dfe4bd.95e2e8",
            "ce326199.0a85b",
            "ca490983.7ec9b8",
            "88e99eb4.37486",
            "a8b66cd3.d5319",
            "f1175ba2.a05c28",
            "4a6b4791859a7ec7",
            "ddff7293e03f0b82"
        ],
        "x": 34,
        "y": 699
    },
    {
        "id": "68821a62.dd81d4",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "SkyView dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a5ef7279.4f0f6",
            "4a7abf0e.e4e85",
            "eac5880a.b59fb8",
            "36c58d2d.bf0f02",
            "95af4893.c89828",
            "362b3f2b.4d2ac",
            "fc51d4bf.af93b8",
            "c33f4812.c84db8",
            "58db54d0.12d46c",
            "c43a64bf.f83098",
            "d2a2dc9c.b4a27",
            "7cb023f0.0c57bc",
            "da44af67.6b24f",
            "a647cc01.bfdfb",
            "5192d05b.d1875",
            "da50ca5b.310b28",
            "429b1393.6ffd6c",
            "386d7942.156c76",
            "b8207185.f42bd",
            "18f17f32.5f7e71",
            "992c5674.60e4f8",
            "c62dbe90.1b804",
            "69383c6d.0abe04",
            "a4da2217.fb14a",
            "e364185d.295dd8",
            "7133e66d.aacb98",
            "18151515.6d2f0b",
            "b8bf83a3.79c91",
            "48c9278751e6dd80",
            "edb348011caef461",
            "7666c04f07bbb05f",
            "b83d4c26dabed0ee",
            "7bdca02863b868fd",
            "9e71a5834972f14f",
            "13ab995fda488768",
            "70f082f113f3cffb",
            "f1d4084e6377b063",
            "6d1ccf9412d0d665",
            "a9e817f573788987",
            "170b38f03bd0fc97",
            "7233d22172de1941",
            "dc4fd25033b5651f"
        ],
        "x": 34,
        "y": 1139
    },
    {
        "id": "ca417f4.d57648",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Select Station Names Form",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ce2c1d1e.f767",
            "dd210a3f.75a238",
            "e9ccf3f5.9a0dd",
            "62ecd0ac.9f798",
            "ef9996c9.844698",
            "880e080b.6e03c8",
            "43419e4a.69252",
            "9d1f06ad.04cba8"
        ],
        "x": 34,
        "y": 959
    },
    {
        "id": "f9ac2a4f.ec0f18",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Delete Visibility windows database before fill new data",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6b1d521f.f17bdc",
            "fa7c0ed1.a0037",
            "ea29f6f6.a79b68",
            "3124de43.b13802",
            "12859d93.ff2bb2"
        ],
        "x": 34,
        "y": 319
    },
    {
        "id": "2b159612.3e728a",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Read the satellite position in VTS file and fill the sat position database",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b28fa916.8cecf8",
            "30f8536.28de1ac",
            "ac33343b.ba4e78",
            "d2fa18fb.bb0268",
            "6e83ca21.272f94",
            "17ecad58.1256a3",
            "fe40c70e.60f8c8",
            "6c0fd70b.db8398",
            "f0d578c5.436e78",
            "1a4d810e.14739f",
            "55945d7e.c40f94",
            "bffee3e0.8e31f",
            "44ae3f5e.453b7",
            "b4a46ba6.0c8db8",
            "d96ea2e8.2a85a",
            "cb89ef4c.ba97b",
            "56b0ea89.58abe4",
            "68bafbeb.9ea644",
            "4b6b90eb.77d19",
            "3ce6983f.32dee8",
            "f2b0db0a.891f48",
            "733f7d7b.5f7334",
            "d652d2af.e4153",
            "5598c3c58ce87176"
        ],
        "x": 34,
        "y": 19
    },
    {
        "id": "4a641fde.c960f",
        "type": "group",
        "z": "6ac37828.4c7288",
        "name": "Read data in visibility windows files and fill the visibility database",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "95d28814.324448",
            "ccdacc27.0b8d5",
            "27642efd.b128c2",
            "2597a39d.2cd17c",
            "41078e88.a6fd9",
            "5011c869.b39c88",
            "66f1c442.2f1dbc",
            "dbe1ad67.c3a45",
            "d84b60ca.de634",
            "c8d1a797.2e0608",
            "df778f9f.fb09e",
            "1692c203.53310e",
            "a54a8ad9.b9fcd8",
            "72c44582.c5e4ec",
            "48bcbb3f.1b82b4",
            "918bdb58.54e5a8",
            "7622255e.b430ec",
            "e4972806.98b458",
            "527ae382.4cd48c",
            "74efb784.8f5f08",
            "da43a5f9.d381a8",
            "39c9f32f.91a26c",
            "93b14ae0.e32aa8",
            "4c4d2bcd.1f4104",
            "518f311d.94f08",
            "c1aa03b9.0e853",
            "1487730a.2f8b9d",
            "56d08e9d1e1b8ab3"
        ],
        "x": 34,
        "y": 479
    },
    {
        "id": "2345ff89d3122291",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "CUSTOM TLE INJECTION :BLUE1",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5aa49bbf.e8b304",
            "4538bc69.22afe4",
            "127ee21c.b3153e",
            "3d2822d5.9f85de",
            "5927d4ed.88df2c",
            "4f22e057.0b261",
            "e3a04705.5ea298",
            "806158a8.2a45d8",
            "bad3f015.92d69",
            "c4bc0507.a5aa28",
            "912d16a.67297e8",
            "f047630c.597cf",
            "788aabf0.013d94",
            "6dcb91d.1b8e47",
            "ef029d22.ba5f5",
            "f6ee9f4a.0abf9",
            "5b94fea4bc8be85c",
            "d733ae2362598440",
            "e946fe5a6f3b792e",
            "b3804737c3bc7442",
            "dd63fe1a15842d7c",
            "db13b17e988b264f",
            "d0db2a049689d1eb",
            "292964d19c921b46",
            "fe5ea50b57aa1c32",
            "17bd6cd48b2a4ff4",
            "b8234c2a75bb5ae9",
            "3481f1216259b66e",
            "a82cd02c21cae659",
            "cf8728c9f3d62ae1",
            "9218e67ae12ff56e",
            "0a501f0d14245ad2",
            "59d5c5d7591c060f",
            "0b382f17aa76d1e4",
            "211ce65b221c6d6b",
            "f5304b8a408542c8",
            "d83b568b192310f6",
            "c24543b528ceac66",
            "c940a9398f89f223",
            "a117569a1ea3ef31",
            "b12b6db8e50017f8",
            "6e09578b5c3977d8",
            "89e69845755f4c77",
            "08298fee71f7bff1",
            "af9822fbee098e88",
            "09b6f94b45eb28b7",
            "6e46ffd229497b6c",
            "40b0f757fccedcae",
            "58f4cd6a92f77065",
            "823834c6c8859a3a",
            "8dffd9504e4178a6",
            "0bf45204b0f771f7",
            "24f7737fe3d4b910",
            "2b2fa0a36bd2a3c4",
            "97a158c453e2a327",
            "cbd32898497f1878",
            "e064d761f7b93a0c",
            "80b8871a94e1c476",
            "13e6783f699d391f",
            "396dad2ae32bfc99",
            "d9df6459a6ea96ab",
            "5c3232735d2e2038",
            "ec94bcaf7ccbbade",
            "b99ef16ba1924c22",
            "98e2adb0a1d844fb",
            "472fd34f5a4b63ee",
            "7abf459108d1bb9a",
            "abf049d1b139611c",
            "5e9981620393537d",
            "de1b34b4051c103e",
            "eb7e570c18ebe251",
            "8bbba65843f30b70",
            "d7a414cbb17adc76",
            "2986a8ef075e6a8e",
            "92a9cc220aee7971",
            "09f039e28a10270a",
            "02e1b04d3d6f60d5",
            "28604ce259be3b47",
            "4289331cabd17a6f",
            "e6b1abc87d5a903a",
            "0599a22e1f0c18ca",
            "1018c17f521a78d5",
            "94d0137eed1571be",
            "58b79c85054ff2f6",
            "f7ec29fc0b7587f6",
            "3caca984d43a0458",
            "e457cfd254c5c098",
            "4d57473e9c0639bc",
            "d9df7ea6bd458c2e",
            "8e72ef785e5f16d0",
            "734a8b5a7f270f52",
            "da7f645037c13d72",
            "1bf8870c0a4ad28c",
            "72e5bbd76c9d7769",
            "c10c9701b49b24a2",
            "6ebf82e906445aab",
            "36426cd5b9b3bd96",
            "e5b2527236fc0c04",
            "39dfb7984ba6d244",
            "96958d5564f9b6ea",
            "c25b9ad7b2531e04",
            "d7232d37a9db1bec",
            "16cb0f3e9eda3709",
            "0ad156ea6a621999",
            "1fbbcac029dcc3d7",
            "271c7910053fd9fd",
            "06ba5363a0f7099a",
            "34d7536228db8c16",
            "d81841cc861652b3",
            "43fe9e86990cf063",
            "818f02fd792ae94f",
            "a32375cb5c832b1c",
            "704f795a9d472a02",
            "8072e9a960749636",
            "7a1a4db24be58879",
            "5ec4f0f1b2bac771",
            "12fa9b1ad5c9c910",
            "0dd45e03b795aea7",
            "29c46eded1eeadbb",
            "5a99bed22b559864",
            "cfb48adbff178dbf",
            "45e431bd688eabab"
        ],
        "x": 34,
        "y": 639,
        "w": 3052,
        "h": 722
    },
    {
        "id": "4be805205e728ae6",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "TLE Request to Display in dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "68a04f6a.3ad01",
            "3e3626b1.c6cc4a",
            "74fcd845.6038d8",
            "4336a6fd.067998",
            "a972d547.ac2aa8",
            "eacad089ec7f2e6f",
            "4aa96994a4b16522",
            "90616c77ddc20a7b",
            "85bda3f55da806af"
        ],
        "x": 34,
        "y": 4559,
        "w": 1112,
        "h": 242
    },
    {
        "id": "32829735bc4f3d16",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "CUSTOM TLE INJECTION :  RED1",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "05269e71ae136bf8"
        ],
        "x": 2074,
        "y": 2819,
        "w": 272,
        "h": 82
    },
    {
        "id": "3dd210d88054dfaa",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Telemetry flow from TinyGS API",
        "style": {
            "label": true
        },
        "nodes": [
            "bc58e5ec55a98be1",
            "c7eaa84961499300",
            "10f3d8edfb57378f",
            "5c9f53db8c9861c7",
            "ca60a913a04c776b",
            "58539589f8fcb0c9",
            "c15b273a542fde54",
            "9f1af8dc1eb5e870",
            "502dff010f3a7547",
            "1316eb234f76fca6",
            "fd1e7f82277b7ef9",
            "13dd1dc8e33f6fa8",
            "bac813c77cbdeddf",
            "dc8f652dc05f134f",
            "753a66a0e91c8b65"
        ],
        "x": 34,
        "y": 4799,
        "w": 1952,
        "h": 202
    },
    {
        "id": "f47ebdbe9aa02fbc",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "PHR1B TLE INJECTION",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "0ddd48be7ff5da84",
            "3006319b8fdd4fb3",
            "02e0e1d732f50700",
            "70f11a2962c5200c",
            "30e9c44a36e2a7e3",
            "ee267f8df3cc8adb",
            "498533a743c018ee",
            "1dbead4c928ed8d1",
            "8382a53a41598013",
            "d14cf312fe0a60e0",
            "c8ba9d7bacfdb53a",
            "f6fcc56248f740f9",
            "e8094a552d3b4227",
            "035c0a7ed2fe3ee2",
            "1bb78f1585330b5c",
            "86b56c5aafa5e5b1",
            "877f29714a1e351c",
            "ab8dbdad5d759b05",
            "a32f3f7732dd031e",
            "312b74e543efb25a",
            "04828409f3c8eb98",
            "24606f59b812db66",
            "a78ca4fbc4d9e57b",
            "8a57318edf3a260a"
        ],
        "x": 494,
        "y": 3979,
        "w": 1452,
        "h": 222
    },
    {
        "id": "9a5f859dacc543ae",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "PHRNEO4 TLE INJECTION",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "83de099b2fa78eaa",
            "a5c604765ba0012f",
            "5306b898760f6177",
            "af694b9214904c89",
            "22cfa6c3a9fd3b68",
            "1a705817a9b1fd99",
            "55f25125e4360666",
            "9e1f5debf634ca3b",
            "abedf550a283a82e",
            "aebcd6a0a5d13023",
            "ed97241f5a2c195c",
            "b30d48e22e8faab5",
            "a1bc0b9e16a50e7c",
            "c564d0a1ae3e8ebc",
            "5312b82aabb220d1",
            "a5eccb78df072978",
            "27fa46bdf416727e",
            "5d65976904a23103",
            "32528e58bc954e44",
            "aeccafdd8fb912b6",
            "728c9a9836560879",
            "ed7680e16e20cd8b",
            "ac147f0729ad1810",
            "56cdcf6595bfaf55"
        ],
        "x": 1594,
        "y": 4199,
        "w": 1472,
        "h": 222
    },
    {
        "id": "69e1011093603bba",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "PHRNEO3 TLE INJECTION",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "71543d1f07fc776a",
            "2344a2a78d98bf1d",
            "d35acc815acea49d",
            "a387ab4ec014cdc2",
            "37f4e2f7dffac770",
            "d97b6cdaaa326f22",
            "1fef9e3ba77e6407",
            "efae4a1d579c52c5",
            "e980327ca9595d9e",
            "dafaa8891883163a",
            "e79ac0bebb08ed4b",
            "bbdd5b9313b88193",
            "a25fb990a2d35418",
            "f342466cf1c63a12",
            "044b0506b8870c46",
            "293a2b71264a418f",
            "1d8f9124f6c023ac",
            "e7a2222d78b89f73",
            "09553c262bf1ebfe",
            "3f5b808e91194fec",
            "9c9ba7d591ec63b8",
            "52ce01ac6b3556ae",
            "f708c78a01711d59",
            "68c5a6850e745a21"
        ],
        "x": 14,
        "y": 4199,
        "w": 1572,
        "h": 242
    },
    {
        "id": "d79f942338defd7f",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "PHR TLE INJECTION",
        "style": {
            "label": true,
            "stroke": "#777777",
            "color": "#000000"
        },
        "nodes": [
            "fdeaa62f.5f5688",
            "fed8e554.829fa8",
            "f852b5f6.c99b98",
            "28c8f85d.5c8e08",
            "58575d12.429a94",
            "ff820ff.bf83af",
            "2678f85d.20ec28",
            "34aeb0d4c2a0550e",
            "ed46efe0511874af",
            "d3529a4d4ad201b1",
            "070901a887bb28c2",
            "28d0dbe164b06cd6",
            "225f7a9616f10423",
            "dd1d078a375fef72",
            "521bf868aa8d0de1",
            "57bf8da0f9e70613",
            "168c927c614295a8",
            "ccf9f6d431ed64cc",
            "279cfe02df54c94f",
            "80f76c3294a23ba0",
            "378c5b1017d00b9f"
        ],
        "x": 534,
        "y": 299,
        "w": 1712,
        "h": 302
    },
    {
        "id": "4c6998b4.6db838",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "name": "Time & TLE setter and storage from Dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2072d02e.cd2d4",
            "d2005c55.4ffd3",
            "4be84d73.e987b4",
            "d3182296.0de68",
            "8d74ca2b.7c5e38",
            "39db62d0.356f5e",
            "957fd7c.e6c7828",
            "220556fdf5358e27",
            "8755a720eb60c55f",
            "3cd463b18e414c52",
            "2ee441367340e50a",
            "2806b3dc1156fe5a",
            "aaf05bae2b29d885",
            "93d6ced5d286773b",
            "20e12284ea245aef",
            "9f05f084ce0ae8be",
            "844dc894dbd219b5",
            "94bc3f6dbc8d780f",
            "2b3c4d5e6f7g8h9i",
            "1a2b3c4d5e6f7g8h",
            "eae52224ec3faa16",
            "506fdc76a278e70d",
            "1a06e978399d2636",
            "9cd07aae0d11d2f7",
            "5fcb4e512a728761",
            "bc02ddec49e8d73e",
            "226b4aed47e88abc",
            "4513c0b1ade846e5",
            "7304714e7d848586",
            "c5aabe122c6fde32",
            "1b2cf425d09ce06d",
            "d1e40a289c9d9a8e",
            "aabb98fe3ab1ba7f",
            "4a5ca91dc65b319c",
            "fa071f3c0b39c4f8",
            "df203c13b4c0e703",
            "93a38b06d3837bcb",
            "1fc13cdde47f8d4b",
            "4e7e4910d10cdea2",
            "66c99a82ce0f1ac8",
            "efab8412a903f83b",
            "f61b867de535a450",
            "fefb65a231fede9d"
        ],
        "x": 34,
        "y": -21
    },
    {
        "id": "25671b51f351320d",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Checks Celestrack status",
        "style": {
            "label": true,
            "stroke": "#001f60",
            "color": "#000000"
        },
        "nodes": [
            "a57a4be5d794050d",
            "dcc5f3bfad012804",
            "041a53fbb9393209",
            "f22d599e751d9314",
            "ea046aa05eff206f",
            "a90db6e1e3f13fb6",
            "eaed2112c0d57b25",
            "c0b63df6732ea889",
            "adebc33415b96346"
        ],
        "x": 3494,
        "y": 1219,
        "w": 842,
        "h": 162
    },
    {
        "id": "d986a879ef5d40e6",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d014e76a2cb25da1",
            "dc0f2d6745c193a0",
            "e2704cd5c5caefc4",
            "046634799b95f29c",
            "e7057fba696ff651",
            "433296a4b830bcfb",
            "711dcfce6c678eae",
            "4f3dd26d2f95cced",
            "90eece077405292b",
            "ec27d3d9dfde1036",
            "8c1a3dd594ede97b",
            "bf5a0c7c968ace0f"
        ],
        "x": 2984,
        "y": 979,
        "w": 522,
        "h": 422
    },
    {
        "id": "9a9dfd74ece6e34c",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "976ed181456d5d92",
            "1b4cf2db17592916",
            "bc15dda52775a710",
            "8063232e20158d5a",
            "f30d12dd2058bef2",
            "19a75b7b1a234d67",
            "c06408fdecb6945d",
            "5a7f69a63e04e750",
            "82adf290f9b9473d",
            "beaf0a11e85d749d",
            "877350886188357e",
            "5adba86582d125c4",
            "11bfbb0c7f9356a8",
            "ebe80588c2cea7ea",
            "bb6892277131a073",
            "1f87636507e0aa01",
            "05a7b7228758721a",
            "742c36d88c0795e6",
            "a6585fdd8837e646",
            "5bf24823ff268871",
            "6cfe4705ace96064",
            "70b73ab02c552d95",
            "e94dd6a4d99bc2fb",
            "8677dba8b1f81479",
            "7216a78efe87f871",
            "402dd68eef637e28",
            "81503c71337a55a1",
            "321b54bc830393f5",
            "d787aa78e7f7c69f",
            "0616c975f506d2ad",
            "f9e0d8bfc76d2ea9",
            "a0ea95e83db4cacd",
            "4fc4cfd68a0b6570",
            "4c44820c369f21d8",
            "cc2f6f7ecc60d930",
            "5a357a4ae6a6d5b3",
            "90ab2f29db897acf",
            "695184832771955f",
            "cb779cec6c69d361",
            "c6a21b7e1f49e8fc",
            "bbd8d175663cbb34",
            "a329faec55f61f76",
            "1cc6fcbc62a009cb",
            "698067ded04938d2",
            "1a85a8622aac2584",
            "243383b13419e82a",
            "52dbdd123e7091c0",
            "5d93b6830d1ac092",
            "6d364e3e0869fe41",
            "5ab99c0c9192c682",
            "b0cbf5198d5ebd45",
            "1926d3943dce7523",
            "b448f6837eae385f",
            "c26754142d9a49d1",
            "1dd663aebe5da599",
            "f7f41c5df86844a6",
            "34c234d7767900b6",
            "927793742fe2a26b",
            "4aaa72e66efc6e22",
            "5981caa54d0d3dda",
            "d06c32609ea7ce1b",
            "104b3e91f2133bb5",
            "98ad1303250c48de",
            "60bab848a6e23861",
            "e926c4c14e9f850d"
        ],
        "x": 3454,
        "y": 339,
        "w": 1532,
        "h": 842
    },
    {
        "id": "6207162a83e4a4d1",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b34eebed99433c97",
            "4f58bdb6277957c9",
            "f663528e83935a5a",
            "232f9530e9483fd0",
            "e3a1c188f10c4bad",
            "2d62d383e359e3e4",
            "139d87a61de8fb2d",
            "38021a7090e5c90b",
            "fb20bf89f9a8900b"
        ],
        "x": 3824,
        "y": 4819
    },
    {
        "id": "bde6ea157d76a8b0",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ef3dc7e1d721b2f9",
            "f1a02d339ab15d13",
            "dcabc7e9b475cd6d",
            "99ee3d83f0302c37",
            "d32b325c8b1fc9af",
            "eff4798c71085513",
            "02d6f47bfaedd5f8",
            "957e182059950b33",
            "060259ab7d13bac7",
            "c14e2956fb7324a5",
            "4c61af07d5440b24",
            "5077a8cd215dacf8",
            "ede8891b57271a85",
            "93d678661c5d817a",
            "491df3b4c3bf3409",
            "69685c5cf75fe033",
            "3e84b71925909505",
            "1ad21657b2842d69",
            "8faff6b8783bf065",
            "8187c89370bdbf5a",
            "68f8a4538f23291d",
            "65d2f35495558a56",
            "2b24ea015282a48a",
            "40a6d644acf51561",
            "46b03384f7d40a32",
            "eade1819e9df8266",
            "a9e1c7b8b8ba82b1",
            "430bd02865c2e9a4",
            "c086f8d07bff1f6a",
            "f346772f25d986c5",
            "83edd962647bfb7c",
            "4558f81b5b176dfb",
            "9e725e8354818392",
            "91bbf87c386483b5",
            "b2131cb807c168eb",
            "557bea9ff93ac180",
            "2aeb85d6fbd53629",
            "6adf4dd2967876e5",
            "113dc4819dacaba8",
            "e65a24fb13407c7d",
            "bfa87efc6be614d9",
            "4aaba9ca01ff7754",
            "d18125d14af7aeeb",
            "f141f3208025a9d3",
            "478bef3a5a7bfe17",
            "afdb2c309e47c2e8",
            "e5b31c42abafcef9",
            "752f7d159c486c4c",
            "e4a4f149f10e643f",
            "8720958ccb6f1d96"
        ],
        "x": 314,
        "y": 379
    },
    {
        "id": "9364dbbaeae7efcc",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "029bbc417ee358dc",
            "3c3d942c136c7826",
            "7855c24fe1f2a894",
            "14e9f3349ffe258f",
            "10c966ac962761f1",
            "a924b29b46320d1c",
            "3dfe2f2f65db65d6",
            "0a2949f7bc6bbd3f",
            "d9a5bc7406abf2fc",
            "a9a84e889621e77f"
        ],
        "x": 1174,
        "y": 79
    },
    {
        "id": "ef7c6a255dddba2f",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6fe4f4018bc8dbf6",
            "c09ff10b2a7d849b",
            "c6a0f7e3ae8f5e2a",
            "21d004d8a0b3ad1d",
            "565906a73ac8bfd6",
            "df01864d55b31aa5",
            "6258d262ba03c5bd",
            "36edc6de3f4aea19"
        ],
        "x": 2194,
        "y": 39
    },
    {
        "id": "8634c7d9435a8b95",
        "type": "group",
        "z": "62804953b962105f",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "d80cb154.b2fe",
            "a43cf0c3ca8f0fd8",
            "f680cce196c2f842",
            "f5218ce3ebeb34dc",
            "2953ffcc68f6be38",
            "371f634149e6590c",
            "11d1c90a96340c32",
            "758e3d3b8fb58f33"
        ],
        "x": 174,
        "y": 479
    },
    {
        "id": "e570253ed9784b6a",
        "type": "group",
        "z": "62804953b962105f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "09d7a983b9b9ba06",
            "4e5dd8e0ab94d018",
            "b48acc271cc4016c",
            "1861660879507ceb",
            "8077005c0f87eec7",
            "fcb6777d67efa239",
            "c67ec5067dc22890",
            "1c5f8b40f6f0c84d",
            "167f1c74c0957544",
            "0e090ffde96409f4",
            "e69743906051c56e"
        ],
        "x": 164,
        "y": -21
    },
    {
        "id": "1d9db200c8c462a8",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ad55ac567e7d4286",
            "3c8cd23b8aa07ad9",
            "3ea47d3224650771",
            "962e1373fd8386f8",
            "0f2dbd34dd8c8d1c",
            "9e64e7461634b119",
            "e3c11e24c860be14",
            "316d50ec298861de",
            "39003ad824e44026",
            "aa939b6e05f7588d",
            "df82e82bf7ac3a5b",
            "d7e5761a91b6312d",
            "45ee86e0b247dfe2",
            "b35be834446d4aa7",
            "b36a9e198f579d6f",
            "f711fb70318c34f1",
            "fa23d8f8cd010485",
            "e24b2b4e0994443f",
            "2a32578c6833009a",
            "935ff25d886f0f1d",
            "2810c1a354194b23",
            "0416658a7e68ff94",
            "a3a6900ac880ed4d",
            "ab7c9532b74823ba",
            "719dfd890f629b79",
            "665016211d444ab6",
            "ffdcb73d3f9fb6a0",
            "3fa042c7226d650a",
            "131185f8d180b61b",
            "6d46f5b9e54454ec",
            "bbe011784c4e8416",
            "4f6a448fcc452112"
        ],
        "x": 3814,
        "y": 3239,
        "w": 1152,
        "h": 802
    },
    {
        "id": "9c8f7f2b5249150e",
        "type": "group",
        "z": "a9c7c6499fb06192",
        "name": "Initialize missing JSONs",
        "style": {
            "label": true
        },
        "nodes": [
            "1f15540a163a20fa",
            "4922ac523bdc91d3",
            "5dbba84369f71a58",
            "1688d203d6d2922f",
            "af5aae43d30de7ee",
            "6acd64861c2ddf3a",
            "db5372ec605c6c64",
            "6374784edd2511fd",
            "0d97d48b885c1636",
            "fe6dc5caccab0721"
        ],
        "x": 4254,
        "y": 4719,
        "w": 732,
        "h": 282
    },
    {
        "id": "a61b6b0beb4dae17",
        "type": "group",
        "z": "4ddfcb5d4ffd885f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "466bbc6fbc14edb5",
            "96f133ced1f48432",
            "3261e2adbf75e542",
            "963cb2a06bd831f9",
            "f31bd0fc8ff9cb9b",
            "926e8ab171ef1799",
            "5d78468f5708a3a7",
            "8d2ed2bbdcaf4084"
        ],
        "x": 54,
        "y": 679
    },
    {
        "id": "1475cac370a7ea02",
        "type": "group",
        "z": "4ddfcb5d4ffd885f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8cc23f520ddf1bcb",
            "e553d56e1c2f4824",
            "6830a5c9e7fcfcff",
            "744e8e51f18b2f2a",
            "da8610c96e96ee64",
            "a0a5b0f5b87c588f",
            "1c9766a5428969ad",
            "868d8d56042016ef"
        ],
        "x": 54,
        "y": 279
    },
    {
        "id": "12b73901907ee423",
        "type": "group",
        "z": "4ddfcb5d4ffd885f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "79b07c9deaca4821",
            "8bb75c59299e6da3",
            "726fe71bde08e4c8",
            "27ae954d12838df7",
            "08430eee228f26d7",
            "47cb2f9785ebd863",
            "83174910077b059e",
            "6bdf2e2484a0da64"
        ],
        "x": 54,
        "y": 79
    },
    {
        "id": "5335f31d2952084e",
        "type": "group",
        "z": "4ddfcb5d4ffd885f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ab66bbb721a17c46",
            "91701124e6aeddba",
            "15d619667444cffc",
            "ded1c2801fd6ed57",
            "e618c621cf58c52e",
            "43ec01f8f568bd93",
            "0ac92b32c17d312a",
            "e1aef5bdca676aae"
        ],
        "x": 54,
        "y": 479
    },
    {
        "id": "741fd77f6d9b3131",
        "type": "group",
        "z": "a37cc3392dfe3850",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e3ccf0456fcafedf",
            "d71f38be32964178",
            "af6690aaa1d5506e",
            "b21dfa55a8be32b8",
            "37ad0f5db69a0a92",
            "6254fed12b6d11e0",
            "b4c30d74303d3fda",
            "35aa96592eb7f377",
            "0b4745eab2465a5c",
            "ddb2c2c3841de05a",
            "66fe466045cd8ec4",
            "bccd3a1ae1354ea5",
            "66ac162682cb0dca",
            "9cf0270e24f5e7d2",
            "bd44410470f18aea",
            "7faa69c7a8fb5867",
            "8bb69708b193a7da",
            "0a13adeab708b2b4",
            "c5123fa5946ce9f8",
            "c3d85f2f1e1374d7",
            "d81801e66dd0e3e2",
            "105cf8995e9907cd",
            "5b28ae6e8ef675ca",
            "d1a214987ab144c3",
            "90fb241377880fb6",
            "c48f161fd1a57e8b",
            "3853f0aecc249b02",
            "60708c380b4d96f0",
            "1beb1794d7479693",
            "c76818d13ef10a3c",
            "1126c89aab66fa84",
            "04ed1738e951fc7c",
            "b6bfe9d256813cc5",
            "063d6204bbca5ae5",
            "394d5104c916b73d",
            "4589f3046d66a2df",
            "7ee83bfa9012128b",
            "acf389df7e18b753",
            "41aac3be63183d90",
            "43b5b85c781ed6ef",
            "0ed58f9d1d869b82",
            "cc193fb94f7f3622",
            "f8e19c46a949c689",
            "17abfbb1e4f9a504",
            "e3143333380b0887",
            "c19cef245773fdda",
            "bf612374bb57d8f8",
            "ad75897c0bb620c6",
            "a53d2ffec0f3c8c1"
        ],
        "x": 34,
        "y": -1
    },
    {
        "id": "6011c97c4327735d",
        "type": "group",
        "z": "a37cc3392dfe3850",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "997bd118e9898efa",
            "74ffb890146508df",
            "2db28dd3c2868aaf",
            "2eb94a5f6b339506",
            "ef392ad28cd90a7b",
            "8e0b25ba91d60a62",
            "ab789119f5160206",
            "33a991df40520ce7"
        ],
        "x": 174,
        "y": 579
    },
    {
        "id": "5dd0526663d52573",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "669f7c793cb1f361",
            "1e1390c3056a99d3",
            "1ac3312ced400e38",
            "c92f4913d7957eb6",
            "2ad3adeeb75bc060",
            "107784a718ca9ef6",
            "21420964ad137308",
            "a28507f7e5335712",
            "06e258dfe17a0402",
            "4e7b101e6a063184",
            "ea84c545ff576956",
            "7de122a1c34ee6cd",
            "7d3dd6ea81ec6986",
            "e5d34fa4a559d564",
            "be5d6394d45d278b",
            "3f7725a837ec3fa5",
            "de10a582350b690c",
            "29a58f23a9dd7f43",
            "00bc7a44dbeeb900",
            "0172393bd382e44e",
            "a4ac1c727df5b682",
            "4da12d7637cb7081",
            "58779d3ed5380d09",
            "8fe63f5346cc63fb",
            "5baf71ae94414613",
            "37b8374e051ff4b1",
            "20d88716681df6d3",
            "03951c2125f4682e",
            "b2fdc67d73da2e5d",
            "4a29c73c3af154f3",
            "8ce9e6a65847b662",
            "307a0de8b92563d3",
            "e2dcf049b87d0994",
            "0e8372714ac3b58d",
            "eec3eeb62c0735fd",
            "71b42cc5cdafa1a9",
            "38456c4c40d6ffe5",
            "0cdfaae66743bdbe",
            "d2fe684fedcbb52d",
            "9710d1298f5ac0d7",
            "fa64b86cd503310c",
            "1a6d25fb27d14604",
            "821dc3f50941ec6e",
            "05cea6123c628cf7",
            "1ff4c78d450da540",
            "d269b09495a1b845",
            "cbf3317bf16016f5",
            "cd7a52bb4ca2d0f5",
            "caa6a1c96c2f0961",
            "8f24ed5b8ec995ed",
            "ab02042148a5f97a",
            "961ca2a2fc11d841",
            "2573f33ae7988d13",
            "8b873cf2d5df3d31",
            "a6856dc8edf83891",
            "92a1f2c597e30167",
            "098b276ca212f2c4",
            "a5ff53e5e4c198e1",
            "3a5287406c0216a2",
            "c13536a31b6668c4"
        ],
        "x": 3394,
        "y": 1919,
        "w": 1532,
        "h": 822
    },
    {
        "id": "400721a2c2769c0e",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "VTS com",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3803c3c602de1c33",
            "c45c0e4863b2664e",
            "a9c821a33e9c5159",
            "640bcc1f704ee31a",
            "92e0db73f92c1c5d",
            "711bd6f73f5164ca",
            "331dd35712a62381",
            "472ddc8b042b18ad",
            "2207b00d6dc97dcd",
            "cca155df83b092e7",
            "4458e9f6ba29353e",
            "cc4ac44801069917",
            "5672ee467e4d6dd7",
            "f39fd29450499bc7",
            "fd0c7283182a866f",
            "c94607f83c5c85fe",
            "3d42eb889be4d0f0",
            "72d79951b45a48f6",
            "00e19d567c9b6a6d",
            "ab94d92507df934c",
            "9aa73ae4af3274c9",
            "48581bc26394cfc1",
            "d5b2bb2fbe32ed18",
            "07bc99c2e3c8bfb5",
            "d4254d02e7e07ebd",
            "e9cd4cacf8b50df9",
            "bf9d53aa9770f197",
            "d76d10eab019e310",
            "3b35bf6ac9b19b8d"
        ],
        "x": 3854,
        "y": 1499,
        "w": 972,
        "h": 429.5
    },
    {
        "id": "3500e6d55cf0a0c8",
        "type": "group",
        "z": "107c9bc.328b364",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3f4a217fd6976826",
            "5ce64a7b087a06e5",
            "7b5db4ce6542300b",
            "fb8c3572b2c748c0",
            "a7400d2baf7391aa",
            "ae7cd6589be97892",
            "608c263f026ec91d",
            "493469cc4df10615",
            "83fe4d75ba5deb94",
            "97c1c1a37a407745",
            "5b0bac86f7f846d6",
            "9dbefe6121f87bd0",
            "7383493e1cff74cc"
        ],
        "x": 1814,
        "y": 111.5,
        "w": 1132,
        "h": 289.5
    },
    {
        "id": "26d8e3a389b016a3",
        "type": "group",
        "z": "31490b37c0bdea56",
        "name": "Calculateur",
        "style": {
            "label": true
        },
        "nodes": [
            "72105630cf3abe20",
            "ca46b2c9d9e66325",
            "98b4fb3ab826231d",
            "960f9003e5d3c003"
        ],
        "x": 34,
        "y": 19
    },
    {
        "id": "723de58ee792edf6",
        "type": "group",
        "z": "62c122b2f65be8e8",
        "name": "Select Maneuver",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "83b1f06d.d7ddc",
            "71d8882a7823592a",
            "483a705947b69a55",
            "99e1aef3c6e64f7d",
            "38d4040002c51748",
            "abdfdc864bbae5d8",
            "09a97cf7ca5252b9",
            "39954fbfc7821c9d",
            "125d27b796f76d9d",
            "16f7d068cb2b06c1",
            "2bd93e5eca5b4dfc"
        ],
        "x": 14,
        "y": 19,
        "w": 712,
        "h": 262
    },
    {
        "id": "434126eb1a383e14",
        "type": "group",
        "z": "a37cc3392dfe3850",
        "name": "Logo to display in dashboards",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2825416bc2bb7a40",
            "b60ba44a77f95e5a",
            "0501b2db6f374950",
            "1cf4d22ebeed5446",
            "c30177438b624e7b",
            "a07d94b55ebcd37b",
            "5169308f9616e32c",
            "93875810af58d518",
            "4ef7eaa75d3249a0",
            "20defc373517e4b4",
            "6ece3940560dc4fa",
            "cf4a07ff693c2ef8",
            "f74a4b622c3f515a"
        ],
        "x": 174,
        "y": 779
    },
    {
        "id": "cc681a6adf75def8",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "efefb3362e012b40",
            "cb9310778af334ad",
            "2bf663a53ca7f644",
            "08371a8e834ed3fa",
            "0f1749dffdc1aa6d",
            "9958904edb2cfd1b",
            "393a1e981904174c",
            "2c13afbda9e52345",
            "f58b20b85a2b8c78",
            "af796903ae846c21",
            "b003810dbf6c337b",
            "f7ebd85fb66e8ba8",
            "4bbd3c0c495c20c2",
            "871fa62da5d6f2d3",
            "14f42ed5aa544e59",
            "85cd4e1c9d9c1da6",
            "adef8fa7dbebb37b",
            "8bab780e92b8d51c",
            "2a3a2826f85ab105",
            "6af08d975548cc25",
            "c72f4568fae52ea3",
            "ea3e20f1e27896c4",
            "b25b73d8412b6ddc",
            "e1da563798b90ae6",
            "cc6d05c65118620c",
            "23676e5567207271",
            "fc7b43f896ea0de4",
            "e129837eb4ccaf57",
            "1843d3ddde194a97",
            "d1724687d9c4c3ec",
            "7de2968a8e624b25",
            "13569978a3569fd7",
            "e3144d94fa7f4289",
            "0591ba7c899f79a7",
            "adc095e9c8bedc11",
            "6de4b497a2c76f7c",
            "619d8ca9a29bae31",
            "a0eed9fa1f75ff19",
            "93c897bf15c62e48",
            "5a64d2f541f39ed9",
            "c4f96236ac8e8b07",
            "819abd6e6e58c2fa",
            "1c04481a216a0e83",
            "84463b8ecc8b11f3",
            "6c6b2cfc044519e8",
            "b13f26ebfd29f450",
            "19cdc35c8aa36a2d",
            "89eb7796196f4e0e",
            "ee2ae64ebe3a9600",
            "3a6d91b7594ed6e0",
            "930923d46a59728d",
            "09e536e16ab2cd53",
            "b796d1d91d81d545",
            "01570b32eadc74b5",
            "1bd545764fadfa73",
            "771cfe56a1c47e40",
            "9f2d1fefb0051b17",
            "6a61307b89f50431",
            "7fd80d52bd58de06"
        ],
        "x": 314,
        "y": 899
    },
    {
        "id": "1be479826e16e852",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f36ccfbd745103f5",
            "ba7954e6d6c8a950",
            "8bc1efd3554ad211",
            "36fd8c5659d7f957",
            "e91677f207467ea6",
            "dcbf39312a7fec83",
            "d7d9ed7307b05596",
            "75228381d3df4f38",
            "eca8d80e6051ea18",
            "299f1adf53be1cfc",
            "c9a4002ef99be5b8",
            "16cad8bf6ddf98bd",
            "8250577b4ee60fa1",
            "61f11a943164d927",
            "94d4c1cc0102d76c",
            "69e31ad706e88836",
            "bf2650056330258a",
            "c6e4ab2dacba3336",
            "5517bc6d0ab76312",
            "c86d6d3f7c6f4964",
            "33432c494fa582ce",
            "2fd9d5cda8a004e8",
            "1dec613788c744b6",
            "223edc875ebde99b",
            "858cca2d56cc8ada",
            "dc68e14ef65a084c",
            "ce4a854dd05fb35b",
            "0d06357e4bf73064",
            "b6dd515973fab26f",
            "721e8d65f215d28a",
            "6e1d2c156e598fcc",
            "6571f614c1d6f5bb",
            "51d2dc2eafb646f9",
            "5914bf4f89b55c6e",
            "9f31f83050ba6492",
            "8786be0e275d6e81",
            "d8fce67289934963",
            "2a4f42941e2b799c",
            "ea89cffe40a7a0bf",
            "fd1c932b1e74837d",
            "c67119cea7b967d2",
            "3887cd5b1290a0e9",
            "49bd7febb544d5f8"
        ],
        "x": 114,
        "y": 4339
    },
    {
        "id": "7801a0a985539b08",
        "type": "group",
        "z": "107c9bc.328b364",
        "name": "data-base save",
        "style": {
            "label": true
        },
        "nodes": [
            "677a20b7f4a76c0c",
            "46abf691808f326e",
            "1392ef8702c362e4",
            "3ac83a59ead0b053",
            "4ec85e7ec0394fbe",
            "76b573dca28de409",
            "d41ebbb29c7356f6",
            "774a3faa2b24aec9",
            "67c1c6a872e6d2ea",
            "774e3507b1eae7cf",
            "b39cb71f0cc028ac",
            "afe4b04d4c8839f3",
            "9834a2c9d2e49348",
            "3da244017fa5bdf6",
            "fc39584f08b0b455",
            "c55411d4a050c710",
            "4c2ed996f7b7c0c2",
            "8551310a53e05d0e",
            "a4a2d882eea4ae05",
            "631823b8a751f8ce",
            "6301cad772d5cead",
            "1f6ab75fb7cfa57e",
            "bd8086a6529a4aa4",
            "229ca3420bb3cf15",
            "47a5ac256c196594",
            "d76fa8b5c3113960",
            "cd5926fc371a6256",
            "69258cbeeee97bc9",
            "aca37b5a2dfbfc9a",
            "ab3403c9f3115b4c",
            "0ee43ffb651b5c5d",
            "38646d09874dc0aa",
            "c38d2ad8a14570a4",
            "0432d26ce8cc2113",
            "74a446a0f55db785",
            "e7fcb812c2889f08",
            "43b8725feff4a917",
            "d77e135c8514c21d",
            "8bdc20a0f141b8c4",
            "d5f8a51e9308e828",
            "74461f753bd81e58",
            "4f9ae04ccd77c693",
            "7d99b706fb4b501b",
            "4ef5aecfb8ee18ab",
            "38d34e66ed011043",
            "566f0687ef8387cb",
            "a4ed00fe71128c7d",
            "d7c4d4ab7b2c55db",
            "9a29991b1357e024",
            "deda93d470d73466",
            "736c1e117afc482c",
            "e2691976e6b2db23",
            "b36acff8c2226695",
            "abb78e913ea25618",
            "5e0a87d25f00e613",
            "bf11c8a10004687e",
            "47e19971c4be43dc",
            "6ae3919937c8d8f6",
            "03d977b4ff831fab",
            "64b049f658815f2b",
            "eb4297fe5d43b488",
            "a2cd3cbb2ed59c61",
            "fd4b52c2424477d0",
            "a4bfdc9a2f319968",
            "e8c6f43310c7cedd",
            "82ab24465ae0bc08",
            "102335b710ef7488",
            "b85d5cf08b74a76d",
            "cc72d3141fc4e0ca",
            "c6f8a63529cea05c",
            "4abaddc0bee47b06",
            "57aed92c8e5c3ece",
            "b949ae53c02c3474",
            "befdf0551d65a57a",
            "bafaac7115284361",
            "e960bdb298d3d4de",
            "e41222931cafe4bb",
            "a9f0476b97129ad6",
            "f4b78cba0f572a75",
            "c346c4d1d6bfcf20",
            "33dbcba854e5c4bb",
            "eebda8414fa284bd",
            "56598af0747e98bd",
            "d6a559f99b2afda9",
            "3a7b6e04e06b5df7",
            "7f44675362e6c3b0",
            "b732859e6fc14f3d",
            "664fdae9c07f441a",
            "ff0d09c5938a3c57",
            "53ce9f3afc8b5b96"
        ],
        "x": -46,
        "y": 571.5,
        "w": 2372,
        "h": 1449.5
    },
    {
        "id": "4b45f3397f2f64b2",
        "type": "group",
        "z": "107c9bc.328b364",
        "name": "data-base load",
        "style": {
            "label": true
        },
        "nodes": [
            "4fcf25582125c69e",
            "e59499980c1f2048",
            "e4f9301e6810144a",
            "61f3326aaa94078e",
            "c5750cc143845755",
            "c0022c9453c88f35",
            "5d1990010f781ee4",
            "08186ac11d3ce73f",
            "ee4571c8db717ecf",
            "dc4b4f1d54e2c19a",
            "d0c2d09071d88302",
            "379eaa52bcf0945f",
            "cc0950e720a6dfc8",
            "2ac0b0d843e6c7dd",
            "fff09ed61d51e6d7",
            "05553a6fe2801c39",
            "98b4790b41a226f2",
            "e2fe55b7f478b6ac",
            "cb9c9fc27c956da7",
            "32b53bf9aadd2c46",
            "b20e104cc3068fbc",
            "8c4131831d00a027",
            "e30b2629fad101ec",
            "6eb49f243bb94be7",
            "cb9efc3cb62637db",
            "2fca9295b1770eb7",
            "80163a833e982934",
            "41e5fe03e3e239c0",
            "ce5aeee16c0ae3b2",
            "9c52d60953fc4043",
            "bb77c887bbb3497e",
            "c5532a7fd640e413",
            "a7a34eaf6d4b6551",
            "eedc672f88391f8e",
            "184f343453d18808",
            "b9719d584bf3706c",
            "06468a6e0665261b",
            "4b103d40d80f122d",
            "9f43f1135b5d5619",
            "b238a1f1f7048e80",
            "757609d73102abd8",
            "50715977ab816207",
            "cbb8eb2a7e4e23c0",
            "4d43b7f41edc3578",
            "f64ce070de34ce37",
            "7370f4ca899a489e",
            "55a12541a7248cc5",
            "034487307dbf0883",
            "2a6b5925733931eb",
            "8c9491881f8699e1",
            "8fd3cf3d48c8878e",
            "10729ce90919c9fa",
            "88ad4daf53128446",
            "f4e64e666e0803a3",
            "2bd24c2a26bf90d8",
            "44f1d5d29c6cb1a7",
            "9252a73c90316304",
            "9f04f9360593b4dd",
            "03e4437f8b4193ac",
            "a87ba6e87a1c571a",
            "14c692b94add6574",
            "d8a7204d7a0f84a1",
            "09706bf39b2b4fde",
            "3cd1b8058c36144b",
            "3db42ae545d16dbe",
            "b29a300d2011e18f",
            "e62a9cfd26e6369f",
            "90d795dd4e128f13",
            "3058f53f34d12d6a",
            "22ff084e0b3a6bce",
            "c6128b61027df9a9",
            "7b1d5efec20b559a",
            "32fc1783aa26dc8c",
            "3e9514bb9823deaf",
            "aeb445153976f0be",
            "64681845825e8408",
            "a4e3d34ef5bfb731",
            "5bd1ddb6ac9f424d",
            "bc245fd53ba96b2e",
            "de69c39bc77c5b8e",
            "d077bb67443025ac",
            "70852c739c9e8c82",
            "99f6d72b0102db19",
            "6e1958e433afd6d3",
            "33b0b17b3d698398",
            "8f37aadfa623384a",
            "3972957fb68a6ffe",
            "b34e8758c0d681c5",
            "f11f01266d722dd4",
            "73cf2d654b2c0825",
            "465a711f9ccb227e"
        ],
        "x": -6,
        "y": 2039,
        "w": 1872,
        "h": 1702
    },
    {
        "id": "7f8477734cd0fd39",
        "type": "group",
        "z": "62c122b2f65be8e8",
        "name": "AffichageErgols",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "177f98f1bfe9845d",
            "7ae1bbb942260344",
            "d16ced1d634dfe0d",
            "62f1c54ca072b46e",
            "template_node",
            "658e46ea1a6cf5ce",
            "3f7b49b3449bb776",
            "b08943fa3e1348b6",
            "79375e4e6264f9d4",
            "362d0aae8e57995b",
            "bed27095e2a1a071",
            "ce61d97b9c64c9b7",
            "7c2077bbeafd3316",
            "69132580263bf62e",
            "8878ad8ef3c6a124"
        ],
        "x": 4,
        "y": 1079,
        "w": 862,
        "h": 449.5
    },
    {
        "id": "4c0adca48375c892",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Query for JSatOrb API REST to update VTS files",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3484d4130ad4f48e",
            "a99206b2292d30e2",
            "04e1ec554f80d598",
            "6038a62d3834191f",
            "1da74b1aa73cfd5d",
            "ffb66edc1587c2b2",
            "5ca63912977c5309",
            "ea1ef4e5baf2cf49",
            "e2f3f03425eed5dd",
            "be831a0ec7225fda",
            "63cfc7eeb38277fc",
            "eee08ed120357e3c",
            "34dbd764333a80b4",
            "6eae650ae7241c64",
            "14b95b6f88573bb6",
            "283116bae59ff3f2",
            "867f27cd04e03942",
            "952c0a11f1605d7a",
            "55bd8ee8081f4e8a",
            "c84328b63a11cdc8",
            "3e608b3210a3b71b",
            "2decf83c3304a112",
            "0cea5bd8b77ae6da",
            "be321a9033361f03",
            "5030b864c5ce503d",
            "1d83106db0c091cd",
            "1a7828f90ec7810d",
            "d97910492e060e73",
            "c409a15d1ad51b59",
            "aa971f6aa764fedf",
            "ad211b157e4019ef",
            "19a84037bc7c4db2",
            "6ed0f3d4500e1405",
            "be135dc47bd1fdd0",
            "dfafa7363ac7c565",
            "b588cadfbef206ca",
            "0478118421fba8c9",
            "75a3abe65bd806d7",
            "5862c31007cdf94b",
            "3df79a501f214a11",
            "be89631c8c9d1c1d"
        ],
        "x": 3234,
        "y": 2759,
        "w": 1732,
        "h": 422
    },
    {
        "id": "5293fd84.fa1844",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Query for JSatOrb API REST to update VTS files",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "58ea7c57.11f754",
            "a5bc4015.3f8fa",
            "3dce35b.ba5adca",
            "105fdd91.9d22d2",
            "e8df78b.012af88",
            "4de09aa7.179f04",
            "79a8517a3d50ba46",
            "ed91f7078814f403",
            "ed6b13ca02a5a70d",
            "aeaa99f2.5cf4f8",
            "5a8ee579df55828c",
            "0b6a2fcc56b1307a",
            "8cb6f04c9bcdf194",
            "b2241bb2a12a8f16",
            "ffb4c4b51344ccf8",
            "d0e791394ec64d0c",
            "cee4def5e77bb830",
            "2147ad17b59aa35b",
            "e53c4b5d7212fd87",
            "72f9a7c1e4e8ac50",
            "33dd7b2edfd43b13",
            "73f805cb802528a7",
            "2f6ca90871f27075",
            "1df66e4e572c6e27",
            "3f56ea82b8ec4e6f"
        ],
        "x": 3474,
        "y": -1,
        "w": 1472,
        "h": 362
    },
    {
        "id": "f9035d5a2a57dc75",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Query for JSatOrb API REST to update VTS files",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cc993d5237b4ab75",
            "02246f9bacb02d0d",
            "ed1f1854bfdd42df",
            "a2f5a07a52e0702d",
            "208fbaec66263871",
            "a28638d5a72bfa40",
            "04a939aa8d984ef1",
            "e0e62f07ca4e391e",
            "8c4538d2189874b0",
            "ce8ed2997e37e803",
            "320ea35152c4b484",
            "5303c9394479ae66",
            "bd2092b1652d1ae2",
            "74280a45f33d072a",
            "9ec1f63f02462117",
            "e52d1bcc966ff6ad",
            "aa343756a6543700",
            "53268bfc77a9baaf",
            "940f14dc9b5b79d7",
            "968319d5ad47d00b",
            "0facf16a6feed06e",
            "816c1832c1b53d0d",
            "e2d9c7d875e296cd",
            "4f742aee13de8d7c",
            "c446f6d40a8b85e8",
            "671c0c988d6b8a93",
            "7dbcddb056ad261f",
            "3cce69aec6550cc5",
            "5dd0b760c48ef9db",
            "aee8e5a24293c5b8",
            "06f6b8666c6179d0",
            "2c09a6d77dc488f7",
            "ee5447b8d14c1792"
        ],
        "x": 3514,
        "y": 4139,
        "w": 1512,
        "h": 462
    },
    {
        "id": "b99f7cb9ffe8db6c",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "Query for JSatOrb API REST to update VTS files",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "99a20613a808948f",
            "d0ec6a14d9f3ba4c",
            "46fd52932d1e6c56",
            "9ca96162378e9adc",
            "027669e3657539e8",
            "19259c30face4b46",
            "2e38eac0b63703e7",
            "24c5a2f6ee949206",
            "97303e8b650de550",
            "d27634ae31cc7619",
            "29b5f1f00af5523e",
            "18071080204eb0df",
            "77280e4d8def2ee9",
            "4421ce08ebd6d5b2",
            "b9aa36f00ac5b959",
            "388b327e97c54b97",
            "bec42d6c6bcba11b",
            "a4ac0a29c7b12d1b",
            "a52e44981043c768",
            "08b8cc1d07b25322",
            "a181094a780817da",
            "e13b6bab661078ad",
            "b864471cc99b882f",
            "a85d9e3055b533de",
            "210e71071ff3a923",
            "ecb38185501471a6",
            "1369e3d241b0c2c6"
        ],
        "x": 3034,
        "y": 4619,
        "w": 1492,
        "h": 362
    },
    {
        "id": "b2b0b7d6472b62bd",
        "type": "group",
        "z": "107c9bc.328b364",
        "name": "data-base save reset",
        "style": {
            "label": true
        },
        "nodes": [
            "704dc87d85134af3",
            "72db30182a3208af",
            "bc2e9acead02b0b9",
            "6553eadd87372091",
            "e49ad8b04ea5e6b1",
            "6ae7e9176f67e8d6",
            "84eb51dadae9b955",
            "fa37e72eb6daa45e",
            "cf6d75a4fd2da59b",
            "200ef173330270dd",
            "ca3c3dea02f9c323",
            "ea5247516cbeef06",
            "1a74dbfd9bf4429a",
            "f833fe15ec86e037",
            "0dc6f2ea02319ae1",
            "96af240a0922a9ee",
            "ed20257d090e49f4",
            "02a907bdc2978285",
            "bff0046d3d503734",
            "75276af87b8f9708",
            "14d4d05f2f79f618",
            "5cb02f02bdedf3fe",
            "a2b2ece24a773e43",
            "858c0d825180182d",
            "c0e4bdf0ec9824d9",
            "79add69d89163a01",
            "66606cbc7f58324a",
            "55a0b1c397e0ae85",
            "dde2132f4b2729b9",
            "1194168483d4c5d2",
            "9cd554e925db2228",
            "5343deea67f898ae",
            "0d063ce450e4f370",
            "964169cc221ad902",
            "7a67941dae013632",
            "db3b156fe817fd59",
            "8109977aa59c0756",
            "2314358fc7877b2c",
            "259f13668b17f7bd",
            "cd1ed893e6624d07",
            "bad040b0d688381d",
            "cb502833c5faec4d",
            "0c4f4ef2c26e41ee",
            "a1b8c059c70a1447",
            "203f2a20f993e00a",
            "9c2824fb8e117418",
            "11d795d52c2123bc",
            "ef3e2a1c6ae096ac",
            "76767c897ee911b2",
            "e252b2f882f6e567",
            "e05e238118bcb231",
            "f5125f1ef8a5922d",
            "34388202a9fee4b0",
            "9b7d970fd077b87c",
            "ce116459c0456739",
            "b0c0e991fe25322f",
            "0011d3c8bfd20d8a",
            "65804949ca66fef8",
            "5e781b7fa560acc5",
            "d7275503a7578c76",
            "d2d30656da898a5b",
            "e1e0ed65ab86090e",
            "9b13b2cda12f7b86",
            "1022429310c3a7db",
            "326a85b24bfbce15",
            "5a9e7646df2c6d7c",
            "cf1c5029d15730b7",
            "dbc1a6da44691351",
            "2a4a0a5ad2cf75f3",
            "549ecdb48d512c19",
            "de81173396936862",
            "29b05ad662a0bc67",
            "355cb57fe9a4d956",
            "ca9fdef965147922",
            "89c037d85fad012e",
            "ed6a7bec2d295c79",
            "5772d60fe6860136",
            "455dc326ce5b331e",
            "1629e6d3b68e2c86",
            "6fbbb28fe7153081",
            "a02b957a1b6d1306",
            "8e4c6986326b15e0",
            "e818882e7cb7ca83",
            "d7457f4e86335f90",
            "4fe578c461387f85",
            "001b0824eb50ab35",
            "326346e845502938",
            "620c03cdcbcec889",
            "fc421704c3bee125",
            "c6a270a6ef6d0138",
            "de25163bba6129dd",
            "77676a6d5be87ab2",
            "28be6b066543afc1",
            "330ea53c64f0138f",
            "97e290b652bad5bf",
            "764182b0d50a2913"
        ],
        "x": 2734,
        "y": 599,
        "w": 2192,
        "h": 1442
    },
    {
        "id": "92c463ef87927c13",
        "type": "group",
        "z": "107c9bc.328b364",
        "name": "data-base load",
        "style": {
            "label": true
        },
        "nodes": [
            "ca3cd5d44c550444",
            "5518f99e77f4ab8f",
            "bb1e0850ed8c99fc",
            "e4644615f9ad0687",
            "a57b43a426b7a684",
            "5c4b9c2df7fdae90",
            "b0a7550dfa812ea0",
            "dbe0f66c95528227",
            "ee3287eacb568967",
            "4051d8215e293679",
            "6932c8c8d6150a8f",
            "f98291dc4ff7953c",
            "853d7d3ffa61a5d2",
            "148545e9632ffb12",
            "489f6f790aea3c49",
            "34f4c336c8c56f7d",
            "41c239c9fd9cf88f",
            "baac13cdfab9d582",
            "92f4e8271f16885d",
            "d59250196b75b42e",
            "fdfa885d1fd4d079",
            "971df0f0f80c7cf1",
            "b653297f6126fa16",
            "523b02cf5a3734cb",
            "178b9f9b9c166a7f",
            "bdbec9e9fd09ed33",
            "49f667faf5c448d0",
            "da5138ddb7f48515",
            "c14cb7eb9085e4d4",
            "d2103b6971931efa",
            "6a11f73df8b38639",
            "3a2bd24c6fdc9274",
            "8a2f0c4e96b30352",
            "fa8fec63d45c0250",
            "3ef4064b112ff826",
            "ac5bc7b7abcf5b3a",
            "53806540937b1c4d",
            "87529d7fdfc49de3",
            "7912d7dfb1f6dd0e",
            "6ccec3e447e56d68",
            "1620abe5d28e121b",
            "2461411f3e3f8144",
            "d571e87489cb5d4e",
            "ec2e0a73ca482221",
            "d2c2bc0afc1da67e",
            "974746bc2c59203c",
            "48f9d8d8e553059f",
            "5db0f19f388022a0",
            "4bee9fb156a3613f",
            "4dd8d15aac948fb3",
            "40647c71c1ef5410",
            "e30a5e4511540e55",
            "6c07713f70b78d16",
            "b29b532b82f955b8",
            "2ceae2c9b56984c1",
            "043b4a384e1a8662",
            "a1d72a78106a63f0",
            "6e7f76ff0403369a",
            "f223fd686cb4e51e",
            "c64ed3ba88341edb",
            "c5b6b5d0caf2f6de",
            "6d68815a456a141b",
            "db9d11a1e02ca5db",
            "5fe6641201072922",
            "921ef1a8e9d9a5a4",
            "a12f55a6d1810d23",
            "bfcf9260efdb7ea3",
            "7958d22eb1851c7c",
            "50767b9359e0cfb9",
            "d62493f20eb5a282",
            "33644053cd13cc6d",
            "c0aaf46d434336e9",
            "2bf5142c60044a0b",
            "9292a7079ce2d86c",
            "849432e9f65d6114",
            "d91c8ff21a13b799",
            "a01ccd5ef41de442",
            "0b5ab5ef1f7b5519",
            "7bd1a7e740e71249",
            "d4f6552102d80762",
            "268838be651ba326",
            "ea69137f31d3aa17",
            "67f3eb3177a2b15e",
            "f0043dffccad2274",
            "7292f3551795ec09",
            "592c24bad31d1a87",
            "6c16a8973772678b",
            "19c4cb66950d42da",
            "f036d3202b2b8c10",
            "dafc0bca21f9acc5",
            "35c6639f8da230cf",
            "c7a083b01b94e9eb",
            "1b2cf953e483d63b",
            "ea4cdd2e4f7b52c8",
            "212349f50e529bf7",
            "625e3fb2c49c4406",
            "d005a0609012a20f",
            "e469e0e2dcaa9726",
            "6d8a4f8baa30b127",
            "4d38b3d1db32466b",
            "ca81cec4388e1e8d",
            "5905919b573633bf",
            "67077e2686865a44",
            "b79b82174d69671e",
            "44d3124f635ddc60"
        ],
        "x": 2484,
        "y": 2171.5,
        "w": 2402,
        "h": 1589.5
    },
    {
        "id": "27871d2b6bf827cb",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "aac9f2b4b3e16c95",
            "15446c60ce8e71a7",
            "0a17ffd890892d08",
            "3022606e93580293",
            "715b43ae29d18a52",
            "18b75cc4a171a86d",
            "e649d74438988f7e",
            "e367bf2d7b82058e",
            "8019ab3b9dfa90e3",
            "4b69798dd8837d35",
            "1ddf539febf76838",
            "45d5e904efbae470",
            "b1aa7e4a31c421bc",
            "bebd743467ad9915",
            "da937326edc90e88",
            "9289ab8432b846ad",
            "3a8f39aa0a6f52d3",
            "6ffbad4981bc9a1c",
            "8db6cf11b5a2e55a",
            "b56bfe22a7c91122",
            "abe9f26357e63c21",
            "e0a218aae75f203b",
            "f9fb2903687ea247",
            "e82205a5aae61ab3",
            "f8d5c49c2e69a64b",
            "7426085b6d8c1a32",
            "6dffdaeaa16f28c6",
            "d1880e76f7f48021",
            "f0a18df19d06f472",
            "2d216db028c8bee9",
            "9f9b1cb337a442a7",
            "835dc99c25c81eea",
            "5b72e223675bc38e",
            "354c0da5b699e478",
            "b96a2a9905ad72f7",
            "04377986da1da156",
            "e8be8ef5192d0766",
            "a2104e1b56b1810f",
            "e2d51eb59360143a",
            "23df947a3782cb79",
            "e54bed644b0ee197",
            "e6cc6cc909c5a329",
            "79169477c396d864",
            "645fdf9cf67bc345",
            "a546de5223b9759c",
            "6c2653bd679e124c",
            "3f2c1be570301771",
            "f6d99cc60f866189",
            "d7f25667f92ea044",
            "8d0e179b1a444dc3",
            "2b27aedfed4e3353",
            "8e8f8899a93adf9a",
            "9c64e3e2d4199701",
            "98ab430c39565261",
            "5f1c8a85d379e58f",
            "bc0101c6fcfb2c7b",
            "b9887902d08160e1",
            "4794edf754bb9065",
            "916b55a638cf7c99"
        ],
        "x": 314,
        "y": 1779
    },
    {
        "id": "6d4a082917553328",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ae388cf01aa4e8e9",
            "9214dfcfbcf5216a",
            "516bc613f00a1598",
            "6edb35c4457c68ae",
            "1ba51aed995a8093",
            "71b301128c12bf6f",
            "b7a97cefb8c69e43",
            "c253f6f2c802f039",
            "7711e56fa6d9b1ae",
            "a54006e86ba0ff37",
            "14739741409c8eae",
            "b16eeb2c396d8602",
            "39ba1923491e247c",
            "d2990b715077937d",
            "c180665ffb2da7b1",
            "7c79bec0e626d0db",
            "525916b1bd65a20b",
            "96bf81354e796178",
            "ca23ba6ae2974b6d",
            "41503b440f8109b6",
            "89a6d3fc48c6ca48",
            "4f236e133f9b9428",
            "c293b71996891517",
            "cdeba71014e483b2",
            "bfc37d4a4b596c2c",
            "525ca060312d3dcc",
            "2734d90c93b0942e",
            "4b1a25d0abb90e78",
            "8eb281cccd239681",
            "83a04daeefef037e",
            "f2a6292369d2c459",
            "66e5d2a2c7c35d9e",
            "3202176001f545e3",
            "0d40ea7ec73427ca",
            "45fd00d3a788c605",
            "6818f14ce70e5af9",
            "147175e57c8407ad",
            "7d6a6cf1c578033f",
            "b4281a00c6ba58ce",
            "3c7109e081ef0932",
            "056c9fd8255b301a",
            "20bfd6e6cad5aa72",
            "38db18c1660a9bb4",
            "5265e337e5f53049",
            "27796799ac6bfafb",
            "2e4ad6300807eb30",
            "4c32f2067847b762",
            "0f159d20a2e40c8c",
            "37c6fa70421943e4",
            "f53aa6e3c64b4915",
            "c8f41b216960f33f",
            "4b98603cc7a35d9f",
            "1c0e0057ba763a87",
            "988f55311686fee2",
            "fab49aa74223aafc",
            "cfa3fdd1f0a1b306",
            "f0ad0faffec1b561",
            "d3c13e4720f89c84"
        ],
        "x": 254,
        "y": 2679
    },
    {
        "id": "638d2899cc047f09",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d5860bdb5e58b16c",
            "9373b38afd7442be",
            "e8388f8fcf8ccbf0",
            "00f0f576a14d8c28",
            "857f5529109245ed",
            "0731cb6f95d98a23",
            "eb3044e672f83415",
            "a08275200f4c608e",
            "40824f7641eb3253",
            "4b60566a75f1a103",
            "e1d5d31682a0f2e5",
            "66faaea235906f07",
            "b007df6c04ba0528",
            "4101c92312de19ea",
            "1832bcc54a88675f",
            "5b295aefc71329e9",
            "9223e517a6e6ce85",
            "35cab29ef44c90ae",
            "e9d817efb0ff68bc",
            "5fd1d483d2a8be5c",
            "0fd8e1b6c2a3d328",
            "06cb7d2df5e53ab8",
            "c1f31360b5f6f4f9",
            "b3c7ef724ca3cec5",
            "fc92b0695af75bea",
            "865ea8a3eb3fd206",
            "3e6876fe02908378",
            "eeca63e3cf156549",
            "4c6f7119c7852b5d",
            "aa8e57b3a7e054a5",
            "98237a88da47bf38",
            "f988662966ad46a4",
            "bc1d3ed7c64a13e6",
            "5667894cedba9285",
            "fc99fac77e7d772c",
            "8ff7614a38bba3a6",
            "aa7ef83185d1fb70",
            "ffa01e0a31c79a05",
            "74cbcd6391b27e7c",
            "a08afee85c06d1df",
            "77a53f1235f21956",
            "6cf9f775aece5134",
            "0c60dad20b14cfe3",
            "22917689fb699bcb",
            "42e5130569abfefa",
            "2e73ba5da7ceaf4c",
            "9fef70ebe3eb607e",
            "10c9b968b7fd10a0",
            "36171fc69003ce5f",
            "3cdb2f5d424c2d7c",
            "99a5694d21a78d3d",
            "00f5602bb540900e",
            "1b16a3f69fdc9eee",
            "6f5bdc0f3b958912",
            "03886b7dd58107ae",
            "ad246b233eda4926",
            "2303ac15072e1028",
            "0fae0716899fc918",
            "429e2c5002cf4825",
            "3922d1c1e0bffec1"
        ],
        "x": 14,
        "y": 3439
    },
    {
        "id": "b8d269524faf802b",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2e820658ee276e33",
            "2c6daa4677f1d853",
            "13a98bb8c23a33f9",
            "884581efc58f89cb",
            "c00c55e2e49f6552",
            "172a533dedc384e6",
            "068ef94aa2e346ac",
            "7ed3f3b067e5f7eb",
            "5e9af48991803e08",
            "21c01d131b76853f",
            "b29e9ea803711716",
            "09cbc993ce36d354",
            "dd8358d9a21ae1f2",
            "9cf830c1d254ec76",
            "7df29d4c8ea76192",
            "191e284f35cc3661",
            "22fb3a22a7358219",
            "b467b5c63020432a",
            "b92f875a36700294",
            "ecddba91702dbd84",
            "13cc93881c767a29",
            "c762df3d88d0f431",
            "3583508622c413ba",
            "f4ed52d9c1f0adda",
            "b4b11c04604f1922",
            "ea260fd177aff2fc",
            "3390e701c894d490",
            "9be27c0a87b968c9",
            "abda37d270bed670",
            "ac0f615322f41f8f",
            "f2ccfbb50a20915f",
            "81c86b2fd11dbe36",
            "6a44db828f499ca8",
            "edafeb893ef71613",
            "1c32c91c6792c1c4",
            "1308e9f2e1b485a8",
            "8eb48b695f0ef2ac",
            "7d3983b21c77d3ae",
            "9d74af614b33aeb8",
            "6b038ded92837454",
            "f236a58258d1d3e8",
            "37ba85f0b8ed5e1b",
            "a6e3cc68d873929a"
        ],
        "x": 2944,
        "y": 1639
    },
    {
        "id": "bfca5620f3441e3c",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "dfc82496d16bba5b",
            "fbe1e6acf1702ed6",
            "ee792ecc39ab3c0e",
            "f2933fa8dba20ac9",
            "8b998f4bb30a8137",
            "0a1f855a756a6ec6",
            "eb159faf45da2c1a",
            "5be70837ef67e8a1",
            "9a31f5668f14f85f",
            "4e330eaf61640db8",
            "5d5986ae1a0799fc",
            "0127908595c8ec7c",
            "f9b8a6e71c118e7a",
            "327d7c7f8c7cc39b",
            "e4aa1402d72f97fe",
            "c4eb18b851314ab9",
            "e5b7ee6ba3cc3b12",
            "f0d24a3d9489ec18",
            "9163739765e2e057",
            "405f5a2608704778",
            "433532f24271fc1d",
            "253922d9fa9d4020",
            "cd264db07f71d58f",
            "303b1cf9b79ec65e",
            "fa43f5e2b1625581",
            "635877e11461471b",
            "81cd2dbb0fa4394b",
            "9d2aba5d76a11619",
            "e32dd95642710f14",
            "7bb1e94bb718c9a6",
            "bc45460e86e59d50",
            "7e2b4cd77e9b3a95",
            "1eb4474c3c3175e5",
            "a510db9110382af1",
            "1baf63f029fa0aaa",
            "3eeb63580a19ce99",
            "15b4e7cd3c2ebd3a",
            "e3a677b2d9b279e5",
            "f1854b905263a150",
            "60e5dd2d9c99726d",
            "3b798a93160868b2",
            "cb162edb83270045",
            "92644bfcab44272b"
        ],
        "x": 2934,
        "y": 2539
    },
    {
        "id": "4f07d8c8c9c6686d",
        "type": "group",
        "z": "dd1202fd.a2e23",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "39255f4fd8e3f58f",
            "30e6b09f07fece24",
            "5237ef219dc70383",
            "51ecbdb6f445d9e7",
            "b8fc192a8d2c400d",
            "7e1dd46b203b2813",
            "9d7492b20a68bb88",
            "055e17eb5b4c91b1",
            "e81b5d17439596a2",
            "e36c27d6b931e3da",
            "bfb528a1ef404ab3",
            "39348cbc84d3e5c6",
            "7eea3e4027517074",
            "6252438d880c57fb",
            "8ad2ee59e45127f8",
            "2210cba7edee45ab",
            "990127d040e04202",
            "fe180d9ff4dc9914",
            "6e575da5cdd1a80d",
            "27fe3ce229b62bdd",
            "2a59cd588865a4fa",
            "9de46581ba12b54f",
            "fbc2ee8e49a222e0",
            "05579a55f37edfd2",
            "8aa9f74f42671fe8",
            "fbb54bf42803e56a",
            "add7531a537d1459",
            "914ff5e8cd57b3d4",
            "0c7a2482962d2125",
            "6dae6255a97c7b83",
            "236c48ded576a687",
            "0533d0c887b20983",
            "c9944c5515257d8e",
            "a113feb367079574",
            "b7cde209cf0821cf",
            "e96b1dc68bc775f5",
            "1f3365369dea503f",
            "2a034505da84e0f2",
            "bbe0593381268527",
            "9ba76c61789ca5df",
            "2b7bb211054aab28",
            "df3fc25706bd6610",
            "3bc6f9cf7e990b1b"
        ],
        "x": 2944,
        "y": 3379
    },
    {
        "id": "fdab8259e2b1d755",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "CUSTOM TLE INJECTION :  BLUE2",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2f25edf21b8a07d4",
            "54ed3a6bc8def2f5",
            "4bedade718858642",
            "5033e963d25a8747",
            "cfcab2023a094cdc",
            "eeb7ac39abf2e2c4",
            "9fd7873df4929469",
            "cbfe8678e36b0fa5",
            "5bf00d0b73be675b",
            "043192e17954a39e",
            "a9760725cef4a105",
            "ad7abde181040a3a",
            "5ab7a667fbb1644d",
            "0ea9525a009058f4",
            "61d1a72ac323af46",
            "f6a4ee3cc639daa0",
            "a4307ff40f12d270",
            "5b78836a816f993b",
            "c14ef75f83e7f1d7",
            "5473201b934a1f23",
            "5fad8bf0db418786",
            "57b7bbaac29962ab",
            "bf758146121476b5",
            "0d47e871bc6f030e",
            "74e51c45c254bc96",
            "993d5b6e321d4d30",
            "4356c0c7ca340718",
            "e9f67c2d021c7248",
            "ceb9ccefb33622fc",
            "98f9b9bd480a57e5",
            "94b4acbf7d735323",
            "e355bb10e7e33add",
            "79d946ae54145942",
            "d8fa7388583ba0ae",
            "82d391751cc737e2",
            "3aa1101ea2c5143a",
            "59cb2405e51d3dae",
            "2ca822c36f234207",
            "8b1f688102a4bde6",
            "e5fe6656c9f22fdb"
        ],
        "x": 54,
        "y": 1379,
        "w": 3352,
        "h": 782
    },
    {
        "id": "72a2d4bc14d948f6",
        "type": "group",
        "z": "7c68352c.1b47bc",
        "name": "CUSTOM TLE INJECTION :  RED2",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "417260ed0a2e03cd"
        ],
        "x": 2574,
        "y": 3899,
        "w": 272,
        "h": 82
    },
    {
        "id": "93b592892fcc50c8",
        "type": "group",
        "z": "b711cf531b370c21",
        "name": "Query for JSatOrb API REST to update BLUE2 VTS files",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f693d63c62570f8a",
            "0372893f29e0bda8",
            "1d11069de605ece6",
            "18c10a830f795391",
            "a7d719827bffc702",
            "26b952eb7b9c9813",
            "d7a660cda25dac9d",
            "f1a6f0a7f4514dcf",
            "f8eaf94835fc938d",
            "b7526ec620a475c6",
            "cf318dfacd4da19e",
            "1f422eea67d7a5be",
            "d155befe485d3213",
            "095a7bf2cf433323",
            "2766942c725b1c65",
            "cac456888820b002",
            "d5303d82ed22fa96",
            "0e1897c63762329b",
            "53032da51855d552",
            "8145ed7dd72bf7fb",
            "3e846f404d3b3dd4",
            "d2cd251a22174f61",
            "fc1d42be022de5bf",
            "25b3ecb94bd5faa9",
            "1e7784d619fcf45c",
            "48ee54bd869b3619",
            "a957d40878cb92bf",
            "aaa7724b1bec1bb2",
            "32a92bb13743039b",
            "e850a8d04766ac3c",
            "412619f53ed922d6",
            "fd0a7626203eccce",
            "8a7068b7fba6abe5",
            "e8e568aadaa16303",
            "098ed20d47fcd4cf",
            "b1ff878eb7cb1e20",
            "1a5b3092221308c1",
            "531dcf581ac5e866",
            "4232852ed8ec50b3",
            "cd78f44cfafcedc6",
            "f9c91c8ce7aabec7",
            "191af4d1144a9e5e"
        ],
        "x": 74,
        "y": 19,
        "w": 1732,
        "h": 422
    },
    {
        "id": "5ac1093b9ff24da2",
        "type": "group",
        "z": "b711cf531b370c21",
        "name": "Query for JSatOrb API REST to update RED1 VTS files",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a367d565230fff14",
            "59af655636e58b94",
            "e229f7e2176a7736",
            "823cd4b656c6f678",
            "30212b9a705c4dc4",
            "d01e198e8732a6fa",
            "6362f7812b2e8c03",
            "b2d96396fa5863d8",
            "51d80f547a4459bf",
            "eea7b58c49b5b773",
            "0a90201ea218cef6",
            "b95315ef78ccbf10",
            "56237cb99d323cd9",
            "c0127a356a250759",
            "5766aa28bad745ae",
            "54033599ff8e0c7f",
            "b5f69e12e5b964fe",
            "e01e6739f7ce51ea",
            "e4c20fcb9981dca8",
            "212785c57447f1d4",
            "6cf76c8f806eabc0",
            "045025ed0d65cab9",
            "028e645c181e507e",
            "62e16a59924f4a98",
            "76e0d3da60dfea21",
            "ee0af6fccbb5381f",
            "b4ab69fb76722690",
            "5ad5ff8e164b9036",
            "f939231efcb4c34c",
            "d2cb318f405975a3",
            "9555c58b1882f80e",
            "c94e8a646f6ffced",
            "1fcc0657a58b6366",
            "8fce5659e9d21ee6",
            "648520213ad35f27",
            "05ed1040bf903f37",
            "8ac1fbd222fbbc75",
            "907e861b4e3208f3",
            "6dfafa5dbb7f7bc8",
            "e7e49290a59cf863",
            "9dd502afeb659a28",
            "c71ba3ca6e2f98cd"
        ],
        "x": 74,
        "y": 459,
        "w": 1732,
        "h": 422
    },
    {
        "id": "a6482ba6881fb884",
        "type": "group",
        "z": "b711cf531b370c21",
        "name": "Query for JSatOrb API REST to update RED2 VTS files",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1e362c5ed3c4307a",
            "1fcbe1b2a298d0fe",
            "e5b85e11e64c22dd",
            "0778e8ab26b1c2a5",
            "98f2e7a2fa03ea6c",
            "0e647e91f10b4e9c",
            "42653947be507125",
            "553addc33fe6a950",
            "f252cd8f818a4514",
            "303cb9bffa4c4181",
            "d218d82f6930c26f",
            "5d8eab4453d5d6a5",
            "fbceae8e3791c921",
            "c1ed7673e3f78632",
            "54d1ea12042a3fb0",
            "6a5ea6b7faced984",
            "1c218801354bc691",
            "7d2cfa9eb87f9ab8",
            "8891ce862d8d1e1d",
            "b90532757deb2f4f",
            "079f3b4468c4887e",
            "49a7dc96b95e1035",
            "7661572817bed7ad",
            "2f020f4f32f52da4",
            "0c26b1acebd8d42f",
            "d39e139798401e69",
            "6c6fabeae1f46e76",
            "a4e67d43a4b38f18",
            "f7f30a86bae12dd6",
            "506d36fb0a684b5f",
            "20f63722fb9d1874",
            "cd3f51956308c239",
            "a0158770759a27e4",
            "e61bca96d2cc1a8d",
            "768be090527a2882",
            "ca64e5d06feae8b4",
            "e3e080638774b941",
            "7a2be699a5294c63",
            "011b2a822f225412",
            "07f5c28189b9ccbf",
            "f267061e59a61a98",
            "7660123249ed8b61"
        ],
        "x": 74,
        "y": 959,
        "w": 1732,
        "h": 402
    },
    {
        "id": "57c771c38920ce87",
        "type": "group",
        "z": "0b6378c01090c728",
        "name": "Select Maneuver",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3ea015530f7d74c2",
            "eee435e748ef1ec9",
            "e0d86c1c42fbd148",
            "fab7183608daa4be",
            "34d9a375349ae7b3",
            "6964e4842ea531d0",
            "38208a861ba52b6e",
            "d10825ab0b82ab88",
            "dadf84190d78d943",
            "55f3798586d1f287",
            "c5d1e97a54fe3f2b",
            "3634bbd6d3a1664f",
            "662b80af8ffd6c40",
            "a79ed325479a1732"
        ],
        "x": -46,
        "y": -1,
        "w": 722,
        "h": 342
    },
    {
        "id": "0e7bf272a0e91508",
        "type": "group",
        "z": "0b6378c01090c728",
        "name": "AffichageErgols",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "67aa5efb2967785b",
            "fb8fe517ae0e6b5c",
            "584b18af6e118824",
            "a4f1010740f0fe05",
            "c8ac3622c2fe8335",
            "ce526742b5bc5aa4",
            "741cf1b3dfea380f",
            "2b8b1bb00aa4b5c1",
            "e7f81724b0d83183",
            "ce3db67b0fbbef47",
            "68eb42bd9d157f70",
            "9a4424fa6214a2ad",
            "4a6e401a8753e8c5",
            "687de38dd90886fd",
            "124c95c9f3d361e3"
        ],
        "x": 14,
        "y": 1139,
        "w": 862,
        "h": 449.5
    },
    {
        "id": "dd296aa6c795b727",
        "type": "group",
        "z": "a45be5c622f6091e",
        "name": "Select Maneuver",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "688484175ede1ce7",
            "506316a1a0095eae",
            "edeedd1e94d3dfd9",
            "3313c2b3844ad03b",
            "4e701b2b001caf33",
            "8ad2529ac5750509",
            "582b20c3fb7fcbdc",
            "c752f23bac61eef1",
            "950e99890b5087c6",
            "2fd26a2560a1632c",
            "75b50fd31abdf6af",
            "4287785a29bcd685",
            "a805a6a944cb2230",
            "5f6ecf562f36cdbb",
            "985a20876c18596d"
        ],
        "x": -26,
        "y": 139,
        "w": 872,
        "h": 522
    },
    {
        "id": "f64a804bade9b6f9",
        "type": "group",
        "z": "a45be5c622f6091e",
        "name": "AffichageErgols",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1c38f2df24292dfc",
            "509e945025685dc6",
            "a95f86c78555b34e",
            "2200ce3b5872f2a3",
            "73d3a53a4abea0f8",
            "336e7c9174de0213",
            "88fa4be425998c53",
            "a9e1292beea07036",
            "23c40dab4e99a1e4",
            "1cd7ae11b7249260",
            "1eaa7813be5ec9c0",
            "52e4808188c6ed3c",
            "1d6a91b5bf41350a",
            "0408abc39ae1f825",
            "ba5ed5086870bb27"
        ],
        "x": 14,
        "y": 1459,
        "w": 862,
        "h": 449.5
    },
    {
        "id": "22a28b69317eec26",
        "type": "group",
        "z": "32fc9731f5355a29",
        "name": "Select Maneuver",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d445c8ef0e74fddc",
            "97fbc98f0f9bb72b",
            "94680b2fe58bb2d0",
            "5fd6e611ea04cace",
            "e791b1e73bc76f67",
            "bdc31cc1d657bcb8",
            "4aa96be32ec24727",
            "e6d3b3af4413ae90",
            "1d6db1efa516fbd3",
            "7fd223cdc9b763ca",
            "b430d5ced93a6cdf",
            "d78b64c5338d95aa"
        ],
        "x": -6,
        "y": 159,
        "w": 682,
        "h": 282
    },
    {
        "id": "e40219163c90eaf0",
        "type": "group",
        "z": "32fc9731f5355a29",
        "name": "AffichageErgols",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "77925db08f8193f1",
            "38c615b728663735",
            "783da612e8cc7528",
            "9cd65be85c851193",
            "3a216e20a647fd26",
            "3441df73db98bd2a",
            "31903f148581f8df",
            "94e6b249f2fa4e47",
            "e71dd297ba26fbb4",
            "f4cfb143dc89d75b",
            "9e0dc15cc6b3ba1e",
            "3c42ff531313de09",
            "ab80b748dde74f55",
            "42b2da0c1e826576",
            "4205c15db8cc3252"
        ],
        "x": 14,
        "y": 1239,
        "w": 862,
        "h": 449.5
    },
    {
        "id": "137096c381fcc9dc",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "f39d4341bb0e4df8",
            "ede83e604bb74820",
            "3ce10b942b7bd5b0",
            "64c58cba8d19f40c",
            "8ea391e4679da9c0",
            "1a253b7920de5c6a",
            "3b251b1c2dba47a0",
            "58196b7472dc7e3b",
            "2ac0e13af7b13f30",
            "520256129fff5b10",
            "7cb0d9a3a1e880e5",
            "ae6bb69a766cff2d",
            "e60bf4ccc10c4dcb",
            "7b9cd77f3f94e543",
            "20ef6a5d9b5c93d5",
            "49ea1a1f7df5f932",
            "c3aed06e6987ea17",
            "fbf19d1e2686c7e7",
            "cfe6a289ae48ad80",
            "f04e10d943c0af81",
            "269dbeeb616c3641",
            "f2a85a5a8ec1a6e3",
            "603d834aa9f2b9cd",
            "4921bb9ed0ae43b8",
            "a482fc363c9ec8d9",
            "2a67bc81e635f6ae",
            "61bceb793cc223c0",
            "560ee02521a4e11b",
            "1ca19174092c6db0",
            "255fe007b26e99cd",
            "f18ef92d806a5ea4",
            "2e9c0fdd5f70f8b7",
            "75b88281179fd9b8",
            "b0ce077afb6f589e",
            "c9ff27f775928785",
            "7f31e10c7a935038",
            "4b7be923bed537ff",
            "16c9f8c251174efe",
            "aa9fb3e31f201698",
            "b140aec4696a4357",
            "9c391407c2d0ab20",
            "4afde4d4650b165f",
            "5ede263d6aa3f153",
            "ee57e5d1fd688d3f",
            "35e8abafd04bc0e4",
            "e925e3ab3da23340",
            "ecfd634c4819e1a3",
            "0a415400da9b3f54",
            "488ef075cc9bbd1e",
            "a99e21ec0740199c",
            "c21e9ea6abd5a4ca",
            "923a07ed1158a6f6"
        ],
        "x": 934,
        "y": -1
    },
    {
        "id": "cd566d87e0be95d4",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "eef0ed836af8f7f9",
            "7db348de802038e7",
            "df0f98b93741b7e2",
            "a483f441f4a84edc",
            "0813edc0a123a9da",
            "b4253e8aa693a33e",
            "5b458c472a27df75",
            "798f66e1b2f4133b",
            "101da9fc5822cf62",
            "a19c88ed1003751f",
            "c2a33e4dcbe6c0c6",
            "2f6cde9d59eb5fdd",
            "a8cece9165b5e371",
            "c43a6c9b79203536",
            "20d3d2cb05552051",
            "a01f40d70106da3d",
            "04ca99a561d997cc",
            "0c73c3010ef1d45c",
            "afc05e6a4470d69c",
            "d564a7bf8bdffdcd",
            "11c9cba3d0b784ce",
            "0d54ca5ee0d1ee44",
            "5011c7bcd6df6dc3",
            "ce07259f679ae8bc",
            "f8bc24b908131b1a",
            "9972825d42c9ee04",
            "3b0584f295f8dad2",
            "43d3cddc97fd8e02",
            "d884ef7206b9c26a",
            "56c00ed1e48a0faf",
            "d133925768e2a5c6",
            "459e66e8685f3313",
            "815a597cdbd4c1c8",
            "93bcd18e9299d7c7",
            "109277c1120534ef",
            "f8e9e0cc445b8a56",
            "36271158bf2e5cdf",
            "e633a88a7421f255",
            "e5bd24c097d87be6",
            "59bbc733dc336010",
            "bf6603adabc41623",
            "e55982a1d8043904",
            "b5c1396816b09f13",
            "412dc849425064d1",
            "c041ddbc77fed555",
            "d45e9012e2e735d2",
            "c23e70ea6c4755a3",
            "f83637b951242d2d",
            "81d4f194ec3916e3",
            "0902aea82ccbadbb"
        ],
        "x": 2594,
        "y": -1
    },
    {
        "id": "f6ec7be8c8b50ef4",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "f162615d6010b4f0",
            "661750b3cef40fb5",
            "a9b099946ef94bd9",
            "4ed0a019dac25c2c",
            "a529e9db6d01f1cd",
            "57f81f1670988422",
            "f9b068fa916b3249",
            "6b39391a743846d1",
            "04c422ec73725ca7",
            "46678d4a7087f4a7",
            "ac39e191c4ced524",
            "9ceca59a0fb09672",
            "073f10fc49f5a711",
            "cee594ec223fd5d1",
            "87f9628af7345a91",
            "132f907f7bdc3bb5",
            "9b6c67ca0f990ff0",
            "cdd2116f2c351029",
            "152452e738ed2b37",
            "4195361faeaf71b7",
            "58bce64c8dbd42b3",
            "1f60202c86f4f0f9",
            "632bef5dc8a4d5ee",
            "fa1965b3e0ad8c03",
            "e30e0dc36de6f6fc",
            "9519a8394ddeae3d",
            "94f42d54ff82843e",
            "53368779a5f36358",
            "3c65dec756802357",
            "3c6950074510a8f0",
            "e7acae65323ed1fd",
            "33f857d87f733489",
            "2a4bea90adc87a18",
            "31b28d90aa8df44c",
            "db775728d9a08313",
            "4844689473d623b1",
            "65d133bb09646b99",
            "8709edc5df0d6b6a",
            "5ee472dfd8bd9bbf",
            "060e841045916da8",
            "65f367c707d74887",
            "40296fd2ae19769e",
            "63fa8a55f57c1ac4",
            "234c348b5b3e1f77",
            "3c09eff2c7fa3a9a",
            "7c3b99b02e64576b",
            "0be398269af2fb2e",
            "4f0105eee79139d2",
            "3b4bdbb74e017ae9",
            "09a5a0d453b9a0e3"
        ],
        "x": 134,
        "y": 979
    },
    {
        "id": "4f9f4ec412516243",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "e42f94c9dee1cc8e",
            "e211a3b35daedb97",
            "d93fdbb0c52f044c",
            "48303eea1f343220",
            "b2c8f9e2e177eb6f",
            "f66348ebc81ff2bd",
            "07560ee04314d977",
            "cdb6cd01eeb10c86",
            "e71676098e3b8b24",
            "6c45e59233628675",
            "ce619c6db2bdef31",
            "e0917e62602fbf59",
            "356cc324f505e259",
            "215f78d1e7701093",
            "df20f998b77f2f0f",
            "de8cd65f1ff47567",
            "028c28485137e385",
            "aca9ee0bef80e575",
            "efaddfecf4c76750",
            "ff8c3a90d84dc987",
            "22a4daaa76db9b09",
            "b5188ed6f8aed50d",
            "b48d43236c9ee170",
            "baca7229e3f4d959",
            "929f78b9274849b8",
            "ebaeeb07cf240072",
            "515e7796a18daf60",
            "0d86aded6288a7cb",
            "7859284b2c01fa7b",
            "244cd44c88d86428",
            "1a7293fa019302a1",
            "2969ee43278fa73b",
            "80e0d14d0e42cb6e",
            "71714c786f1dc6af",
            "cf2d0464d4e0c997",
            "42e816a5f77742a8",
            "df10258bce3d1b64",
            "751b6b68aa145d74",
            "c1a535c6e7c0a423",
            "84026e65f03a57a4",
            "3ad4a82f589c3de3",
            "1d5e3365bbd1ee40",
            "4f0602adcd72742a",
            "5abad142ad02682e",
            "60cf32f4c3489a17",
            "4c0f405cc42d9996",
            "0b61a522e52669bd",
            "eed0fd174995d5b0",
            "aad26eb6f70b2485",
            "1a9e3d84453d9a56"
        ],
        "x": 1654,
        "y": 999
    },
    {
        "id": "0cf4977f5480c358",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "820173ac1f4892fa",
            "b244eb629805740f",
            "91f2ea708afb5241",
            "d8b3842aaa8cf1fd",
            "653c62de63259d4b",
            "e3e2e1bc999e1214",
            "0b88604527146468",
            "46922aa4a59b4e09",
            "7da1cfbdf705748b",
            "7782d535a35db109",
            "29526ae85b94bf4a",
            "806e52ba1a01a053",
            "8b53e4203d90f3c8",
            "ac97bf5533b5065c",
            "d9692c8101477256",
            "d793e718f641d373",
            "2d07a56ffb738284",
            "15291fbcb8173ccc",
            "aabb604b10f1f391",
            "c66e9bed428a4772",
            "fd22f0eed8b29c8f",
            "ececb226b4801051",
            "db7990133f754e7e",
            "013f830fd09f2d7d",
            "18b5321deb925320",
            "e99d571d059ad5a0",
            "c4f9cf091b4854c2",
            "f0cc81a01ead6fd2",
            "7aaa804af1596fd8",
            "cf23c4f2821495dd",
            "5877e4c407d5430f",
            "897e8b2061258dd2",
            "5e8a8bb809f20981",
            "72a02e9dc5e134c9",
            "908a868e5844c290",
            "9bd0e7339a88b52b",
            "42cb191632d59531",
            "8faffc61aaa08238",
            "06b1c132c29fba09",
            "a483b0d05c354756",
            "d004b0ee071172eb",
            "3a88216476127dcb",
            "d0d6e4b33faff07a",
            "2f94c97fd3f2a127",
            "748abe6393f24763",
            "9d34006fbad5931f",
            "a91dde24c942210d",
            "655ad19276a8f599",
            "a18dc411fc867343",
            "fea1b0baf6176196"
        ],
        "x": 3274,
        "y": 999
    },
    {
        "id": "63c7fb1d8acb1fc4",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "2f3c976cdad52982",
            "2921d056dfb9ea58",
            "0c43539b44d83b6d",
            "476b8bce1284db02",
            "ea3beb7bfeb039a8",
            "9ced858a79f74df7",
            "21e080aeb252ff51",
            "9a6560fc66256ff3",
            "7718de3d29e0495a",
            "a6ede921a9fa5644",
            "90cbfc13f74673f9",
            "537eb4ecf121d1b4",
            "363004b6efc0b505",
            "dc8a6ae72b42ccfa",
            "5f2c249bfca9731b",
            "7d032d05b3ef0f11",
            "7c87042dd6704ffe",
            "efa40ff6d0084e75",
            "0098b1ff4ebca15f",
            "f0f340baf845c15d",
            "1c735e5d3f995404",
            "40da994dc3173f41",
            "3eaf641b9d98808c",
            "dc6162c9346a72a9",
            "d5c7c1256ce97335",
            "7d3500a4a85d71d2",
            "695fd671c12e4c01",
            "102632a0b6e7b423",
            "65b119b30798ab69",
            "10acbb7db4a4b6a5",
            "fe8badbb7943e0ca",
            "7786685f82d89f9c",
            "74f444ec5562ba94",
            "d9054a0d9bb83fbd",
            "20ae2a317af2127f",
            "52cce33b5fd93baa",
            "bd57d191cb6d7567",
            "509bda04506d5a69",
            "7645f5e1d5c86be0",
            "37e8d219d3b4447d",
            "cd375849039a7ff0",
            "e2396813278587a0",
            "79cdeb4868398534",
            "9c35217ae5d0f4b8",
            "981ef6d87054de71",
            "3f200128fcbb8dea",
            "4a351de7bdcf570f",
            "53cadd4ff784c659",
            "becb36a2adf60857",
            "10331ff691dcc989"
        ],
        "x": 134,
        "y": 1919
    },
    {
        "id": "ad61e78ebf98a78c",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "890d5612a64a95db",
            "96389e91c07ade36",
            "5a743692ebbf148c",
            "2baaf79438ee1680",
            "88381998ae7f02b0",
            "6b8ca77e04f20a3f",
            "67a17402e1642fcd",
            "ac5e9823a3b21568",
            "7d61926372297c8c",
            "27285fcbe3084848",
            "fcdae58c597f7977",
            "23d5c38c4de4c3ca",
            "1b99012470b379c2",
            "af73037057233b32",
            "de0742887bc0c78b",
            "834d8348c87e7654",
            "a82c225e4ff0ccf6",
            "f78baaadda52c40c",
            "038ebb1753d2c7ab",
            "84c29dfa2f149e58",
            "5037fb7cfca19571",
            "a9a0b9686986574e",
            "e32e12120d484f3e",
            "66be06619fc2d24c",
            "811e652d44db53e9",
            "dac54407c94566d1",
            "c1cfc231b6d73943",
            "ec782510d3f63533",
            "57fdbc60f9d69790",
            "4e4a75f60a0643c4",
            "de1c20fe65a826b9",
            "3f56b71c2b64e750",
            "f26e379fa71b4f4f",
            "778ed3ecb4fca430",
            "749c801f4b19cc92",
            "861ca3af22c71595",
            "f75986f828f51d53",
            "b4c7e0ea1d090f91",
            "76fa1d92df410a7a",
            "60fca16c6bd61f0c",
            "029285bcd7e092f1",
            "8041880e3f4726e9",
            "cc5f4a4f55e6543c",
            "dcf1eb6f60390d35",
            "cbf52896e447280f",
            "e7c33cd07f302f07",
            "6c8dd81184bb417a",
            "d88388a251a33878",
            "bb08d2bdafd18cba",
            "af89d5f4f668e65c"
        ],
        "x": 1634,
        "y": 1939
    },
    {
        "id": "a701e37a86adc5d2",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "6ee539988d281031",
            "a472f124c8180b0d",
            "a580ff37abe71af3",
            "dc3a63134d627677",
            "11506121a5ddf515",
            "7b68b2d7cd530d0f",
            "bf845f62507f74b3",
            "c964fc0c9b3f54b8",
            "c870948f1d956475",
            "cc0f7b7ef682c49c",
            "6bd3ca5522731f8f",
            "034815e966d3bc98",
            "c616928e0ce78794",
            "d7bdfb9f488a9ea4",
            "fd16fac6257af5bd",
            "9eaa8422fd9509d8",
            "0afe9503a905ef96",
            "8bd47b10368ab4e2",
            "e5dc6cb3e42b5270",
            "f26bddcdb230f031",
            "410171459bdbff8b",
            "e0c50e39bd50aedf",
            "bc2b7c680ba5e9a3",
            "4dfdc7b5ab87da3e",
            "c7e0211423bda1af",
            "e292f751baf2812b",
            "8b814ef6a67c2eda",
            "e365993d6db293a6",
            "344156bb6c48364e",
            "fc8b768c2759afda",
            "be2cb476ec364e94",
            "342a8f8173d09806",
            "8537532aa3725d43",
            "551fcf211ef13f41",
            "1ba439735945246b",
            "60f681c0e594763c",
            "7a98cb2e9ac069e2",
            "7eacaeeb802eb26a",
            "827c43ed975f7e28",
            "6b95dc6703f177a9",
            "aae878c11c615dad",
            "7ed28964ea26e35a",
            "680e281d09c64021",
            "8f568eb31430560d",
            "c9eeca2b41395219",
            "efa5a4161fbad53e",
            "820a31145c07a71e",
            "79fb1054f6de18d0",
            "65fea8461e96fa5f",
            "afd0b33f1a6382bb"
        ],
        "x": 3334,
        "y": 1959
    },
    {
        "id": "84d06975d8bcd442",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "f16e56ad2f669b6e",
            "8df9c506f930d2e7",
            "f402f9fcdec81304",
            "37c0ea20b26dd3f7",
            "05a1c9258a2e2eb3",
            "b2e995e7138c9e93",
            "d951bf75102645a3",
            "2041af8af411701c",
            "56b150228c3da714",
            "586b18a19bc82a01",
            "15750aa931f5039a",
            "073969ac786c165f",
            "7d8ccdc11a415bcc",
            "ffb83dbaf394d959",
            "9ee2dcba22d19fa7",
            "695311845bb3a8da",
            "abe381440e59b756",
            "e522e7dc6b978fad",
            "6b52b43dea8f5f87",
            "658072941c107d5f",
            "760947d4d9cd43fd",
            "035d87dbfd3386c7",
            "b0947befdc71ddd2",
            "7bbbbf765154fe6d",
            "d9885d6d5ca0b944",
            "a3f45ac9e365f4e2",
            "5a7e7a3ebf63c699",
            "8239b81a46cd0637",
            "affbdd34b0282cd8",
            "f117b2cbcfd990fe",
            "0ae7586b07d9c0d3",
            "3bca3cf2df6ed263",
            "a9c9ede207bf5f2f",
            "9e0221ae00949825",
            "2d2f4704914842c1",
            "c3f71e6bc29a117c",
            "98ba5ed7239c8c1f",
            "21b3f0c68dfdb920",
            "259568284b612689",
            "54eef4c6e8c45f49",
            "6f968837388d78c5",
            "efafb69c9b3e5bf9",
            "49441718f8591a8c",
            "ad8964d0d33058a5",
            "dd74082fe75ea6b8",
            "9c2e0eec58709dca",
            "085a424b4bac723e",
            "8e4842d5d9999187",
            "3de42f09ad049811",
            "da22d0979386e0b3"
        ],
        "x": 134,
        "y": 2819
    },
    {
        "id": "7ebb6f22c1784649",
        "type": "group",
        "z": "36e05050e3375022",
        "name": "data-base rescure with tle-latest.txt",
        "style": {
            "label": true
        },
        "nodes": [
            "f9756873dc9ac557",
            "18a322c37aa39109",
            "1d73fcbdc34780c4",
            "dffb573f76b32a8e",
            "d1908ab0ce2f9205",
            "9f94a6dff1a41a51",
            "62b19f418aad35bf",
            "e1206577f51ffe1d",
            "c498f93e467ac18d",
            "bbc49d1347cc34a2",
            "7e69671add81d102",
            "304d3137477a0664",
            "28126a0dcc0eaa53",
            "592388ef29f93fa3",
            "958b05a706cf1403",
            "7cb7182c292dd7c2",
            "6c5fb4555050f7fa",
            "479735de9022140a",
            "8eb6a8ea0ae36355",
            "d390072249f3f80b",
            "e6f786aea292d87f",
            "eb11293aa26e159f",
            "779566965cc52267",
            "51a74c2ec7224785",
            "ab50bd21eea112a3",
            "e885590ea56e3804",
            "ac55b2e29df3e27e",
            "cc1b1f78728544ea",
            "03e21a5829cbcbf2",
            "32dc883fd2893220",
            "8ca8a24c910cba19",
            "7b5a29dd2756bfa8",
            "c435e55429931a3c",
            "570b4b59e615ab98",
            "d64d6700717b0823",
            "578e02795f869e54",
            "c20ed5bb29a4736b",
            "f4dcdd2ac8fe9a47",
            "c064fa574825ce0a",
            "a704076d86a5a588",
            "1a70ac0f89de5628",
            "19d622a7a1e57857",
            "0783a8c602143ead",
            "93a23ad8f4c49ea4",
            "59cd0631d8f81a14",
            "d271e8060ff273d3",
            "1959bbd13e200ded",
            "85667f2df171a6b7",
            "2d48c79ae0828996",
            "4e471f1b0324c285"
        ],
        "x": 1674,
        "y": 2899
    },
    {
        "id": "0e0f916aa7c754d9",
        "type": "group",
        "z": "374a79f0f056bee3",
        "name": "DELETE RED / BLUE DB",
        "style": {
            "label": true
        },
        "nodes": [
            "abc023eaf9742ff4",
            "7693efda5c149b37",
            "2d048e610bae770c",
            "a92b9b92f69f3da3",
            "174f1174a53464f1",
            "f02e9c08ca001be7",
            "a3fcd1da77e2ece2",
            "b1541dff3ced43a3",
            "ce5a6d07030e2f3a",
            "93d3f91dc2acd7d3",
            "e862a676c829c98c",
            "44640bc6a1b5ff33",
            "508d38c3b32d4c33"
        ],
        "x": 414,
        "y": 79
    },
    {
        "id": "cb0fed7.3a64e1",
        "type": "group",
        "z": "107c9bc.328b364",
        "g": "7041cc0d.5676f4",
        "name": "",
        "style": {
            "label": false,
            "stroke": "none"
        },
        "nodes": [
            "4bd1d7a3.884648",
            "931b309d.f0a88",
            "13038277.3984de",
            "f05b1c73.c8a0a",
            "b417d0ae.ea66a",
            "1505a844.d0fcc8",
            "bc9a8d46d71b2c0a",
            "2f1ac6a9637d1abe",
            "5e2a36a63fa13335",
            "1df6f4783011c9ba",
            "a74eff43bace63eb",
            "92a3306af8afe631",
            "3186623bfab93670",
            "4519c16515fddae3",
            "eee1275b3aa61402",
            "1e6c927613bb91ab",
            "e2657a5bea29945e",
            "triggerFunction",
            "4047f428f2231390",
            "93fe89ce8903b3be",
            "0e2dbebeb0c26305",
            "1828c0a97e91eb11",
            "a64aa89b124a0d0d",
            "e207364cce175612",
            "8e709b7b1cc9bd07",
            "e57ecd8922630372",
            "45e19228aa39ceb1",
            "575bc1b26324641e",
            "64cbfe5e2bae5606",
            "0f41e91b50d161c6",
            "c6e9ed348bf2c443",
            "de5dee05de6b8e9e",
            "ae14d2fbd88bc3fd",
            "ac1d7003ea3661a2",
            "0ba4a96964d7b75b",
            "99da802f8da8596e",
            "7125f89be6b5907f",
            "421e1e6011f99174",
            "e97861653a7ba31d",
            "e0ec963913cbf7a9",
            "af9615b2a4c1e4cd",
            "2b8b1da4247a7ad3",
            "133b2bf208469cec",
            "1801ab9e4433bdda",
            "043e656d4f78d5d5",
            "95cacf74de2a3d53",
            "function_process",
            "ws_out_node",
            "6f6396a147f815f5",
            "8e98a8f1392f0168",
            "6076f4f2f1613493",
            "309acfd63bbd814a",
            "33f8ad5abcba092e",
            "5cb56295b18776c1",
            "b69d0baa0214c043",
            "ac573217bb539a6c",
            "b3b5942bcef21b50",
            "74feae12a21a0308",
            "4c51afe897e71d89",
            "76f517b68724f866",
            "2054ffdc8aa5c158",
            "af8b2b673a6619fc",
            "d6346f234ae10484",
            "878282b50f68afb1",
            "535e30ff0469df5c",
            "3dc3ad5f89940cca",
            "fab3d3fdff892299",
            "611d2559e0d334ad",
            "c66596163a9051ad",
            "90f5e0b845f5fefc",
            "dcd7bf8e7376f0aa",
            "dde5d8b5922080f8",
            "993cf635305db84a",
            "93a7595f0e9e6c79",
            "4986adffbe571116",
            "c2a583850e07004c",
            "7b8e3def200c9673",
            "7496da9a79dec10e"
        ],
        "x": -6,
        "y": -21,
        "w": 1642,
        "h": 562
    },
    {
        "id": "d9532912.7a0608",
        "type": "ui_tab",
        "name": "MCS Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dc3b3b9c.d231c8",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#434747",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Antoine-Theme",
                "default": "#4B7930",
                "baseColor": "#038add",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#038add",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#585755",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#000000",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#182834",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#01174b",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#00567a",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#212c31",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 0
            }
        }
    },
    {
        "id": "3dabe8df.a10df8",
        "type": "ui_group",
        "name": "Mission Monitoring",
        "tab": "d9532912.7a0608",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89c6e42c.26d338",
        "type": "ui_group",
        "name": "Satellite Tracker",
        "tab": "d9532912.7a0608",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e85e692d.e47bb8",
        "type": "ui_group",
        "name": "Ground Stations Database",
        "tab": "d9532912.7a0608",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ce913522.c3fc68",
        "type": "ui_group",
        "name": "Space Situation Worldmap - REAL LIVE",
        "tab": "478e14fd.681fac",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "b10e0a54.7b0198",
        "type": "ui_group",
        "name": "MCS Manager",
        "tab": "d9532912.7a0608",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e7d5b9e4.972fe8",
        "type": "ui_group",
        "name": "SkyView",
        "tab": "d9532912.7a0608",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "478e14fd.681fac",
        "type": "ui_tab",
        "name": "MCS Satellite Tracker",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "11fb2a90.bdba15",
        "type": "ui_group",
        "name": "Logo",
        "tab": "478e14fd.681fac",
        "order": 6,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "cbb369e33298cfeb",
        "type": "ui_group",
        "name": "BLUE1-TLE-setter",
        "tab": "57235fe8ed92dd71",
        "order": 1,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1583556bde074290",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 4,
        "width": 10,
        "height": 1
    },
    {
        "id": "67beab82532023a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 5,
        "width": 10,
        "height": 1
    },
    {
        "id": "46c3c02907846283",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 6,
        "width": 10,
        "height": 1
    },
    {
        "id": "4519c4c163d053a5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 7,
        "width": 10,
        "height": 1
    },
    {
        "id": "478cae2b09ba28e9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 8,
        "width": 10,
        "height": 1
    },
    {
        "id": "a201ba2c49e8a699",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 9,
        "width": 10,
        "height": 1
    },
    {
        "id": "f85d87b0d5e49c26",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 10,
        "width": 10,
        "height": 1
    },
    {
        "id": "d033a5789d24d0e0",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 11,
        "width": 10,
        "height": 1
    },
    {
        "id": "fda6580e697af2cb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 12,
        "width": 10,
        "height": 1
    },
    {
        "id": "87f7140d7230e6cf",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 13,
        "width": 10,
        "height": 1
    },
    {
        "id": "836544a146941eaa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 14,
        "width": 10,
        "height": 1
    },
    {
        "id": "5a7810372552815e",
        "type": "ui_group",
        "name": "Orbital Maneuver - BLUE1",
        "tab": "57235fe8ed92dd71",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b124d9d71f1e45e8",
        "type": "persist-store",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "interval": "60"
    },
    {
        "id": "57235fe8ed92dd71",
        "type": "ui_tab",
        "name": "MCS Maneuver Manager - BLUE1",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e3a0a21144e69c21",
        "type": "ui_tab",
        "name": "MCS Maneuver Manager - RED1",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c8a7959a4b0f55f9",
        "type": "ui_group",
        "name": "Orbital Maneuver - RED1",
        "tab": "e3a0a21144e69c21",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c02dcce485dfb187",
        "type": "ui_group",
        "name": "RED1-TLE-setter",
        "tab": "e3a0a21144e69c21",
        "order": 2,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7cbca3c0b9c25d7c",
        "type": "ui_group",
        "name": "Ergol Calculator",
        "tab": "b266a9c8793c0293",
        "order": 6,
        "disp": true,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1756cdc52869c611",
        "type": "ui_group",
        "name": "Orbital Maneuver - BLUE2",
        "tab": "87d362c0853f521f",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7465a3d35f5541d7",
        "type": "ui_group",
        "name": "Orbital Maneuver - RED2",
        "tab": "0007b54ff2837a35",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "85ebfab4c5310e30",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 6,
        "width": 13,
        "height": 1
    },
    {
        "id": "edf244a47085d4de",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 7,
        "width": 13,
        "height": 1
    },
    {
        "id": "458a7ed67ad4f4f2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 8,
        "width": 13,
        "height": 1
    },
    {
        "id": "a366c2549be7b3c4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 9,
        "width": 13,
        "height": 1
    },
    {
        "id": "10abb0a1e6a0b74f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fb0f170d8067c3d5",
        "order": 10,
        "width": 13,
        "height": 1
    },
    {
        "id": "81d0e5ee7c52f38a",
        "type": "ui_group",
        "name": "BLUE2-TLE-setter",
        "tab": "87d362c0853f521f",
        "order": 1,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "960e156071a227f3",
        "type": "ui_tab",
        "name": "MCS EO",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cd20a742773dd128",
        "type": "ui_group",
        "name": "Earth Observation Manager",
        "tab": "960e156071a227f3",
        "order": 1,
        "disp": true,
        "width": "36",
        "collapse": false
    },
    {
        "id": "cd81d08b.eebb3",
        "type": "ui_group",
        "z": "9fc2d0daadf97d1e",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "0deac27858739b34",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "a2b95ac780df025c",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9bcb1caa9a89abab",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "15ba7d5baa2a390e",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "c58c203b16e24971",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "24bc662896ca4306",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 11,
        "width": 14,
        "height": 1
    },
    {
        "id": "bbc9b7450be95660",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 12,
        "width": 14,
        "height": 1
    },
    {
        "id": "4aca3e8d870a17cf",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 13,
        "width": 14,
        "height": 1
    },
    {
        "id": "2fe7be3768513e6e",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 14,
        "width": 14,
        "height": 1
    },
    {
        "id": "137ac9d75a966d53",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "cc1b923d.14259",
        "order": 15,
        "width": 14,
        "height": 1
    },
    {
        "id": "d4e830c4b00daeae",
        "type": "ui_group",
        "name": "RED2-TLE-setter",
        "tab": "0007b54ff2837a35",
        "order": 1,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e53ba99e58445214",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 3,
        "width": 10,
        "height": 1
    },
    {
        "id": "ae8d4ccb7fb9c3af",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 2,
        "width": 10,
        "height": 1
    },
    {
        "id": "139d0fef1f7ac356",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a6a9da91.d6e4b8",
        "order": 1,
        "width": 10,
        "height": 1
    },
    {
        "id": "af48d51783d9f2e3",
        "type": "soundfile-directory",
        "directory": "/app/maneuver-manager/"
    },
    {
        "id": "0007b54ff2837a35",
        "type": "ui_tab",
        "name": "MCS Maneuver Manager - RED2",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ada4e0c8.ca2d58",
        "type": "ui_group",
        "z": "62804953b962105f",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "7e85bf4a6d733f1e",
        "type": "ui_group",
        "name": "Settings",
        "tab": "d9532912.7a0608",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "76d99b7f0de6e0e3",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "8888",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1b52a294.dc93fd",
        "type": "ui_group",
        "name": "three",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "5f97447cee9bbcaf",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "c199f829577fcdc5",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 6,
        "width": 8,
        "height": 1
    },
    {
        "id": "e657bf674f50dc62",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "b1d0505b199e4252",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 8,
        "width": 8,
        "height": 1
    },
    {
        "id": "e08732da1bd2b950",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "7f391daa53b5778f",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "ca20b59eb7bf0394",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 11,
        "width": 8,
        "height": 1
    },
    {
        "id": "122b6068513751ed",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 12,
        "width": 8,
        "height": 1
    },
    {
        "id": "31c5482d78e3776e",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 13,
        "width": 8,
        "height": 1
    },
    {
        "id": "1b5b94f2642c9ae3",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "186b4f497fffc21d",
        "type": "ui_spacer",
        "z": "a9c7c6499fb06192",
        "name": "spacer",
        "group": "2722a51fd28f6d2e",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "87d362c0853f521f",
        "type": "ui_tab",
        "name": "MCS Maneuver Manager - BLUE2",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7a25fb2059642188",
        "type": "ui_tab",
        "name": "Test Three",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e3d98afc2044f607",
        "type": "ui_group",
        "name": "Group test",
        "tab": "7a25fb2059642188",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d783cb980c3979fc",
        "type": "ui_group",
        "name": "Demo",
        "tab": "0449b3b1fea99d52",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0449b3b1fea99d52",
        "type": "ui_tab",
        "name": "Demo",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5476f1c.1f50a1",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "849ffeda.40e4",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8de6bb2e.d8b2a8",
        "type": "mongodb",
        "hostname": "mongo",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "csug",
        "name": ""
    },
    {
        "id": "e688816fa768592b",
        "type": "mqtt-broker",
        "name": "mosquittopc",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d6013838df620c4f",
        "type": "ui_group",
        "name": "Calculateur",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bbc8f2d89d6d1a28",
        "type": "ui_spacer",
        "z": "107c9bc.328b364",
        "name": "spacer",
        "group": "d6013838df620c4f",
        "order": 1,
        "width": "3",
        "height": "3"
    },
    {
        "id": "b992afea79c0e677",
        "type": "ui_group",
        "name": "RAS",
        "tab": "57235fe8ed92dd71",
        "order": 4,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8da1955ffecc49fe",
        "type": "ui_group",
        "name": "Maneuvre prédéfinie - BLUE1",
        "tab": "57235fe8ed92dd71",
        "order": 5,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b2c3d4e5.fgh456",
        "type": "ui_group",
        "name": "Formulaire",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "8e439138b5b8d6b5",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f8a3e2e0.4317",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "cfdf3e1c.0e41d8",
        "type": "ui_group",
        "name": "Groupe 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fb6b08bc.7d44f8",
        "type": "ui_group",
        "name": "Groupe 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "group_id",
        "type": "ui_group",
        "name": "Form",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e6c2235c.8d332",
        "type": "ui_group",
        "name": "Group",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "aba94b10.b0cc38",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dashboard_group_id",
        "type": "ui_group",
        "name": "Media Group",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "9c542a4c88f0d5d9",
        "type": "ui_group",
        "name": "Image",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6d2eda5c079ebc42",
        "type": "ui_group",
        "name": "Image",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "30f03ca1437561ca",
        "type": "ui_group",
        "name": "Image Test",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7c83ec07.adedf4",
        "type": "ui_group",
        "name": "Test Group",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "mongodb_instance",
        "type": "mongodb",
        "hostname": "localhost",
        "topology": "direct",
        "port": "27017",
        "db": "your_database_name",
        "name": "MongoDB Instance"
    },
    {
        "id": "f0d4b2a4bd20f4d0",
        "type": "ui_group",
        "name": "Sélection",
        "tab": "d3e5f8a9b4c1d2e3",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "d3e5f8a9b4c1d2e3",
        "type": "ui_tab",
        "name": "Sélection de dossier",
        "icon": "folder",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b1710e9c6b0f118d",
        "type": "ui_group",
        "name": "Sélection",
        "tab": "77a7346a4ecdefe7",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "77a7346a4ecdefe7",
        "type": "ui_tab",
        "name": "Sélection de dossier",
        "icon": "folder",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "447213219b033bdf",
        "type": "ui_group",
        "name": "Groupe 1",
        "tab": "f1bd6402730c423a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f1bd6402730c423a",
        "type": "ui_tab",
        "name": "Mon Tableau de Bord",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "websocket_server",
        "type": "websocket-listener",
        "path": "/ws/files",
        "wholemsg": "true"
    },
    {
        "id": "345ace8c590be9f3",
        "type": "ui_group",
        "name": "Groupe Iframe",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "8a9ecfd2a0fdfec7",
        "type": "ui_group",
        "name": "Démo",
        "tab": "0eaf9c2d9a58d83e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0eaf9c2d9a58d83e",
        "type": "ui_tab",
        "name": "Popup Test",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0c7ae3b0a9485d6d",
        "type": "websocket-listener",
        "path": "/ws/filesLoad",
        "wholemsg": "false"
    },
    {
        "id": "b0e6a3e1.4a6ce",
        "type": "ui_group",
        "name": "Default",
        "tab": "c5d4f6b8.8a1c68",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c5d4f6b8.8a1c68",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "dashboardGroup",
        "type": "ui_group",
        "name": "Main Group",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dashboard_group",
        "type": "ui_group",
        "name": "Default",
        "tab": "dashboard_tab",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "8233308af7b752f1",
        "type": "websocket-listener",
        "path": "/ws/reload",
        "wholemsg": "false"
    },
    {
        "id": "26115a3c12f91396",
        "type": "ui_group",
        "name": "RAS",
        "tab": "87d362c0853f521f",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef71537c5ac2b5d9",
        "type": "ui_group",
        "name": "Maneuvre prédéfinie - BLUE2",
        "tab": "87d362c0853f521f",
        "order": 4,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "15d5d7b5c150498c",
        "type": "ui_group",
        "name": "RAS",
        "tab": "e3a0a21144e69c21",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3befc064653e026e",
        "type": "ui_group",
        "name": "Maneuvre prédéfinie - RED1",
        "tab": "e3a0a21144e69c21",
        "order": 4,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5129c5502845f3d5",
        "type": "ui_group",
        "name": "RAS",
        "tab": "0007b54ff2837a35",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a1e2900e2867cd47",
        "type": "ui_group",
        "name": "Maneuvre prédéfinie - RED2",
        "tab": "0007b54ff2837a35",
        "order": 4,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "wss_server_id",
        "type": "websocket-listener",
        "path": "/ws/modal",
        "wholemsg": "false"
    },
    {
        "id": "b73497a912bb7548",
        "type": "ui_group",
        "name": "Counter Controls",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "da5d425fa0dcd610",
        "type": "websocket-listener",
        "path": "/ws/modal2",
        "wholemsg": "false"
    },
    {
        "id": "49e8547b37a5721a",
        "type": "websocket-listener",
        "path": "/ws/modal3",
        "wholemsg": "false"
    },
    {
        "id": "76b9ba0b34742c81",
        "type": "websocket-listener",
        "path": "/ws/modal4",
        "wholemsg": "false"
    },
    {
        "id": "7eab7619d7c1b31c",
        "type": "websocket-listener",
        "path": "/ws/modal5",
        "wholemsg": "false"
    },
    {
        "id": "f225da6f.835808",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "7041cc0d.5676f4",
        "name": "Time-out",
        "links": [
            "1ff29f60.5ef8c1",
            "2a0b6d91.16b622",
            "ce2c1d1e.f767",
            "c2e6aaa2c3a2e09f"
        ],
        "x": 615,
        "y": 500,
        "wires": []
    },
    {
        "id": "4bd1d7a3.884648",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "START VTS",
        "mode": "link",
        "links": [],
        "x": 565,
        "y": 360,
        "wires": []
    },
    {
        "id": "931b309d.f0a88",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "RELOAD DASHBOARD",
        "mode": "link",
        "links": [
            "4336a6fd.067998"
        ],
        "x": 345,
        "y": 460,
        "wires": []
    },
    {
        "id": "13038277.3984de",
        "type": "comment",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "2nd STEP : START VTS ",
        "info": "",
        "x": 730,
        "y": 400,
        "wires": []
    },
    {
        "id": "f05b1c73.c8a0a",
        "type": "comment",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "3rd STEP : TLE UPDATE REQUEST",
        "info": "",
        "x": 1220,
        "y": 20,
        "wires": []
    },
    {
        "id": "b417d0ae.ea66a",
        "type": "comment",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "PERMANENT : REFRESH DASHBOARD",
        "info": "",
        "x": 240,
        "y": 420,
        "wires": []
    },
    {
        "id": "1505a844.d0fcc8",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "TLE & Visi Windows Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "#477500",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "1df6f4783011c9ba"
            ]
        ]
    },
    {
        "id": "bc9a8d46d71b2c0a",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Trigger-ALL",
        "mode": "link",
        "links": [
            "031daf8ad228e86a",
            "04828409f3c8eb98",
            "1e9676e414d32f76",
            "220556fdf5358e27",
            "32528e58bc954e44",
            "5ab7a667fbb1644d",
            "a117569a1ea3ef31",
            "ba03309eb894bc80",
            "ccf9f6d431ed64cc",
            "e7a2222d78b89f73",
            "dc35d203539a3731",
            "fd139237417103d3",
            "17455f10c3aa5fbd",
            "c919c5df4b9c16f8",
            "cf5301c02084fcd3",
            "86d97c62b6182869",
            "560f4ea5b1b265d2",
            "6eb08ba30ada2b4d",
            "cc583fd12be99cc1"
        ],
        "x": 445,
        "y": 460,
        "wires": []
    },
    {
        "id": "2f1ac6a9637d1abe",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "TLE Blue1 updated OUT",
        "links": [
            "6c044cebf58617f5",
            "db74ac0a48d974d3",
            "31deccc384baab58",
            "7eba3e10420b1e8e",
            "32fdcf88c6843826",
            "eb86a48d805b0b8b",
            "2b4ccb74f56e22c2",
            "899754fdb746a767",
            "bbbaae8e174467a6",
            "3653af24f4f57ebd",
            "0d62970b216a315a",
            "b75bd948c971663a"
        ],
        "x": 475,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "5e2a36a63fa13335",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "d": true,
        "g": "cb0fed7.3a64e1",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "#477500",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 500,
        "wires": [
            [
                "931b309d.f0a88"
            ]
        ]
    },
    {
        "id": "1df6f4783011c9ba",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "TLE VISI UP",
        "mode": "link",
        "links": [
            "25b09542c21ac510",
            "3124de43.b13802",
            "51f47fc0821c4093",
            "6254fed12b6d11e0"
        ],
        "x": 385,
        "y": 360,
        "wires": []
    },
    {
        "id": "a74eff43bace63eb",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python memxterminator_teams.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 910,
        "y": 160,
        "wires": [
            [
                "eee1275b3aa61402",
                "1e6c927613bb91ab"
            ],
            [
                "4519c16515fddae3"
            ],
            []
        ]
    },
    {
        "id": "92a3306af8afe631",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete MEMs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "triggerFunction"
            ]
        ]
    },
    {
        "id": "3186623bfab93670",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "MEM FLUSH",
        "links": [
            "3a5b6e039d3032f5",
            "5ab99c0c9192c682",
            "234b19bae06648f8",
            "aa6920ce4f63136a"
        ],
        "x": 65,
        "y": 100,
        "wires": [
            [
                "1828c0a97e91eb11"
            ]
        ]
    },
    {
        "id": "4519c16515fddae3",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "FLUSHMEM ERR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 200,
        "wires": []
    },
    {
        "id": "eee1275b3aa61402",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "FLUSHMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 160,
        "wires": []
    },
    {
        "id": "1e6c927613bb91ab",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "MEM FLUSH OUT",
        "mode": "link",
        "links": [
            "ecb276912a78b4e7",
            "d1a214987ab144c3"
        ],
        "x": 1375,
        "y": 100,
        "wires": []
    },
    {
        "id": "e2657a5bea29945e",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Refresh tinygs",
        "links": [
            "1beb1794d7479693"
        ],
        "x": 245,
        "y": 460,
        "wires": [
            [
                "931b309d.f0a88"
            ]
        ]
    },
    {
        "id": "3f4a217fd6976826",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "DELETE TLE STORAGE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1950,
        "y": 200,
        "wires": [
            [
                "7b5db4ce6542300b"
            ]
        ]
    },
    {
        "id": "5ce64a7b087a06e5",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "command": "rm tle-latest.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2620,
        "y": 320,
        "wires": [
            [
                "9dbefe6121f87bd0"
            ],
            [
                "9dbefe6121f87bd0"
            ],
            [
                "9dbefe6121f87bd0"
            ]
        ]
    },
    {
        "id": "e0ec963913cbf7a9",
        "type": "ui_worldmap",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "group": "cd20a742773dd128",
        "order": 12,
        "width": "15",
        "height": "11",
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "true",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1520,
        "y": 500,
        "wires": []
    },
    {
        "id": "8bdc20a0f141b8c4",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "SAVE SITUATION",
        "tooltip": "",
        "color": "",
        "bgcolor": "#4682B4",
        "className": "",
        "icon": "fa-floppy-o",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "64b049f658815f2b"
            ]
        ]
    },
    {
        "id": "d5f8a51e9308e828",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python sauvegarder.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 820,
        "y": 880,
        "wires": [
            [
                "4f9ae04ccd77c693",
                "7d99b706fb4b501b",
                "4ef5aecfb8ee18ab",
                "566f0687ef8387cb"
            ],
            [
                "74461f753bd81e58"
            ],
            []
        ]
    },
    {
        "id": "74461f753bd81e58",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "FLUSHMEM ERR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 760,
        "wires": []
    },
    {
        "id": "7d99b706fb4b501b",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "FLUSHMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 880,
        "wires": []
    },
    {
        "id": "677a20b7f4a76c0c",
        "type": "comment",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "Repeupler les DB",
        "info": "",
        "x": 160,
        "y": 1480,
        "wires": []
    },
    {
        "id": "46abf691808f326e",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest_backup",
        "collection": "rob1btlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1340,
        "y": 1380,
        "wires": []
    },
    {
        "id": "1392ef8702c362e4",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest_backup",
        "collection": "p1atlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3ac83a59ead0b053",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest_backup",
        "collection": "sattlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 1500,
        "wires": []
    },
    {
        "id": "4ec85e7ec0394fbe",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest_backup",
        "collection": "p1btlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 1560,
        "wires": []
    },
    {
        "id": "76b573dca28de409",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest_backup",
        "collection": "pneo4tlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1360,
        "y": 1620,
        "wires": []
    },
    {
        "id": "d41ebbb29c7356f6",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest_backup",
        "collection": "pneo3tlelatest_backup",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 1360,
        "y": 1680,
        "wires": []
    },
    {
        "id": "774a3faa2b24aec9",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete rob1btlelatest_backup",
        "collection": "rob1btlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1660,
        "y": 860,
        "wires": []
    },
    {
        "id": "67c1c6a872e6d2ea",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest_backup",
        "collection": "p1atlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1660,
        "y": 920,
        "wires": []
    },
    {
        "id": "774e3507b1eae7cf",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest_backup",
        "collection": "sattlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1650,
        "y": 980,
        "wires": []
    },
    {
        "id": "b39cb71f0cc028ac",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest_backup",
        "collection": "p1btlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1660,
        "y": 1040,
        "wires": []
    },
    {
        "id": "afe4b04d4c8839f3",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest_backup",
        "collection": "pneo4tlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1660,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9834a2c9d2e49348",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest_backup",
        "collection": "pneo3tlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1660,
        "y": 1160,
        "wires": []
    },
    {
        "id": "3da244017fa5bdf6",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest_backup",
        "collection": "b1tlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 1740,
        "wires": []
    },
    {
        "id": "fc39584f08b0b455",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest_backup",
        "collection": "b1tlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1650,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c55411d4a050c710",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest_backup",
        "collection": "b2tlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 1800,
        "wires": []
    },
    {
        "id": "4c2ed996f7b7c0c2",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest_backup",
        "collection": "b2tlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1650,
        "y": 1280,
        "wires": []
    },
    {
        "id": "8551310a53e05d0e",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest_backup",
        "collection": "r1tlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 1860,
        "wires": []
    },
    {
        "id": "a4a2d882eea4ae05",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest_backup",
        "collection": "r1tlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1650,
        "y": 1340,
        "wires": []
    },
    {
        "id": "631823b8a751f8ce",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest_backup",
        "collection": "r2tlelatest_backup",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 1920,
        "wires": []
    },
    {
        "id": "6301cad772d5cead",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest_backup",
        "collection": "r2tlelatest_backup",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1650,
        "y": 1400,
        "wires": []
    },
    {
        "id": "1f6ab75fb7cfa57e",
        "type": "catch",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "scope": [
            "b74be44bcab0b76e"
        ],
        "uncaught": false,
        "x": 90,
        "y": 840,
        "wires": [
            [
                "bd8086a6529a4aa4",
                "d76fa8b5c3113960"
            ]
        ]
    },
    {
        "id": "bd8086a6529a4aa4",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 880,
        "wires": []
    },
    {
        "id": "229ca3420bb3cf15",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1050,
        "y": 1980,
        "wires": [
            [
                "47a5ac256c196594"
            ]
        ]
    },
    {
        "id": "47a5ac256c196594",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1330,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "d76fa8b5c3113960",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 235,
        "y": 840,
        "wires": []
    },
    {
        "id": "cd5926fc371a6256",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1520,
        "wires": []
    },
    {
        "id": "4f9ae04ccd77c693",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1060,
        "wires": [
            [
                "774a3faa2b24aec9",
                "67c1c6a872e6d2ea",
                "774e3507b1eae7cf",
                "b39cb71f0cc028ac",
                "afe4b04d4c8839f3",
                "9834a2c9d2e49348",
                "4c2ed996f7b7c0c2",
                "a4a2d882eea4ae05",
                "6301cad772d5cead",
                "fc39584f08b0b455",
                "69258cbeeee97bc9"
            ]
        ]
    },
    {
        "id": "69258cbeeee97bc9",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 170,
        "y": 1620,
        "wires": [
            [
                "aca37b5a2dfbfc9a",
                "0ee43ffb651b5c5d",
                "e7fcb812c2889f08",
                "74a446a0f55db785",
                "43b8725feff4a917",
                "d77e135c8514c21d",
                "cd5926fc371a6256",
                "229ca3420bb3cf15",
                "38d34e66ed011043",
                "ab3403c9f3115b4c",
                "38646d09874dc0aa",
                "c38d2ad8a14570a4",
                "0432d26ce8cc2113"
            ]
        ]
    },
    {
        "id": "aca37b5a2dfbfc9a",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "rob1btlelatest",
        "collection": "rob1btlelatest",
        "operation": "find",
        "x": 1060,
        "y": 1380,
        "wires": [
            [
                "46abf691808f326e",
                "03d977b4ff831fab"
            ]
        ]
    },
    {
        "id": "ab3403c9f3115b4c",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1atlelatest",
        "collection": "p1atlelatest",
        "operation": "find",
        "x": 1070,
        "y": 1440,
        "wires": [
            [
                "1392ef8702c362e4"
            ]
        ]
    },
    {
        "id": "0ee43ffb651b5c5d",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "sattlelatest",
        "collection": "sattlelatest",
        "operation": "find",
        "x": 1070,
        "y": 1500,
        "wires": [
            [
                "3ac83a59ead0b053"
            ]
        ]
    },
    {
        "id": "38646d09874dc0aa",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1btlelatest",
        "collection": "p1btlelatest",
        "operation": "find",
        "x": 1070,
        "y": 1560,
        "wires": [
            [
                "4ec85e7ec0394fbe"
            ]
        ]
    },
    {
        "id": "c38d2ad8a14570a4",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "operation": "find",
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "76b573dca28de409"
            ]
        ]
    },
    {
        "id": "0432d26ce8cc2113",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "operation": "find",
        "x": 1080,
        "y": 1680,
        "wires": [
            [
                "d41ebbb29c7356f6"
            ]
        ]
    },
    {
        "id": "74a446a0f55db785",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 1070,
        "y": 1740,
        "wires": [
            [
                "3da244017fa5bdf6"
            ]
        ]
    },
    {
        "id": "e7fcb812c2889f08",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 1070,
        "y": 1800,
        "wires": [
            [
                "c55411d4a050c710"
            ]
        ]
    },
    {
        "id": "43b8725feff4a917",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 1060,
        "y": 1860,
        "wires": [
            [
                "8551310a53e05d0e"
            ]
        ]
    },
    {
        "id": "d77e135c8514c21d",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 1060,
        "y": 1920,
        "wires": [
            [
                "631823b8a751f8ce"
            ]
        ]
    },
    {
        "id": "9252a73c90316304",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r2tlelatest_backup",
        "collection": "r2tlelatest_backup",
        "operation": "find",
        "x": 1230,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "44f1d5d29c6cb1a7",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r1tlelatest_backup",
        "collection": "r1tlelatest_backup",
        "operation": "find",
        "x": 1230,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "70852c739c9e8c82",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1680,
        "y": 3440,
        "wires": []
    },
    {
        "id": "f4e64e666e0803a3",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b2tlelatest_backup",
        "collection": "b2tlelatest_backup",
        "operation": "find",
        "x": 1230,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "88ad4daf53128446",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b1tlelatest_backup",
        "collection": "b1tlelatest_backup",
        "operation": "find",
        "x": 1230,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "9c52d60953fc4043",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 680,
        "y": 3500,
        "wires": []
    },
    {
        "id": "99f6d72b0102db19",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 1700,
        "y": 3320,
        "wires": []
    },
    {
        "id": "8fd3cf3d48c8878e",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo3tlelatest_backup",
        "collection": "pneo3tlelatest_backup",
        "operation": "count",
        "x": 1240,
        "y": 3320,
        "wires": [
            [
                "10729ce90919c9fa"
            ]
        ]
    },
    {
        "id": "2a6b5925733931eb",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo4tlelatest_backup",
        "collection": "pneo4tlelatest_backup",
        "operation": "count",
        "x": 1240,
        "y": 3260,
        "wires": [
            [
                "8c9491881f8699e1"
            ]
        ]
    },
    {
        "id": "6e1958e433afd6d3",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1700,
        "y": 3260,
        "wires": []
    },
    {
        "id": "33b0b17b3d698398",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1690,
        "y": 3200,
        "wires": []
    },
    {
        "id": "55a12541a7248cc5",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1btlelatest_backup",
        "collection": "p1btlelatest_backup",
        "operation": "count",
        "x": 1240,
        "y": 3200,
        "wires": [
            [
                "034487307dbf0883"
            ]
        ]
    },
    {
        "id": "f64ce070de34ce37",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "sattlelatest_backup",
        "collection": "sattlelatest_backup",
        "operation": "count",
        "x": 1230,
        "y": 3140,
        "wires": [
            [
                "7370f4ca899a489e"
            ]
        ]
    },
    {
        "id": "8f37aadfa623384a",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1690,
        "y": 3140,
        "wires": []
    },
    {
        "id": "3972957fb68a6ffe",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1690,
        "y": 3080,
        "wires": []
    },
    {
        "id": "cbb8eb2a7e4e23c0",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1atlelatest_backup",
        "collection": "p1atlelatest_backup",
        "operation": "count",
        "x": 1240,
        "y": 3080,
        "wires": [
            [
                "4d43b7f41edc3578"
            ]
        ]
    },
    {
        "id": "757609d73102abd8",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "rob1btlelatest_backup",
        "collection": "rob1btlelatest_backup",
        "operation": "count",
        "x": 1240,
        "y": 3020,
        "wires": [
            [
                "b238a1f1f7048e80"
            ]
        ]
    },
    {
        "id": "b34e8758c0d681c5",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1690,
        "y": 3020,
        "wires": []
    },
    {
        "id": "4ef5aecfb8ee18ab",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 700,
        "wires": []
    },
    {
        "id": "38d34e66ed011043",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "Sauvegarde des dossiers",
        "mode": "link",
        "links": [
            "3853f0aecc249b02",
            "5d6aebed740b9687"
        ],
        "x": 285,
        "y": 1740,
        "wires": []
    },
    {
        "id": "4fcf25582125c69e",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "LOAD SITUATION",
        "tooltip": "",
        "color": "",
        "bgcolor": "#4682B4",
        "className": "",
        "icon": "fa-upload ",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 2260,
        "wires": [
            [
                "e59499980c1f2048",
                "2fca9295b1770eb7",
                "eedc672f88391f8e"
            ]
        ]
    },
    {
        "id": "e59499980c1f2048",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 2320,
        "wires": []
    },
    {
        "id": "e4f9301e6810144a",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python charger.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 2180,
        "wires": [
            [
                "c0022c9453c88f35",
                "e30b2629fad101ec",
                "ce5aeee16c0ae3b2"
            ],
            [
                "c5750cc143845755"
            ],
            [
                "61f3326aaa94078e"
            ]
        ]
    },
    {
        "id": "61f3326aaa94078e",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "FLUSHMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 2240,
        "wires": []
    },
    {
        "id": "c5750cc143845755",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "FLUSHMEM ERR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 2180,
        "wires": []
    },
    {
        "id": "c0022c9453c88f35",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 2100,
        "wires": [
            [
                "cc0950e720a6dfc8",
                "98b4790b41a226f2",
                "5d1990010f781ee4",
                "08186ac11d3ce73f",
                "ee4571c8db717ecf",
                "dc4b4f1d54e2c19a",
                "d0c2d09071d88302",
                "379eaa52bcf0945f",
                "2ac0b0d843e6c7dd",
                "fff09ed61d51e6d7",
                "05553a6fe2801c39"
            ]
        ]
    },
    {
        "id": "5d1990010f781ee4",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1740,
        "y": 2180,
        "wires": []
    },
    {
        "id": "08186ac11d3ce73f",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1730,
        "y": 2220,
        "wires": []
    },
    {
        "id": "ee4571c8db717ecf",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest",
        "collection": "sattlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1730,
        "y": 2280,
        "wires": []
    },
    {
        "id": "dc4b4f1d54e2c19a",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1730,
        "y": 2340,
        "wires": []
    },
    {
        "id": "d0c2d09071d88302",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1740,
        "y": 2400,
        "wires": []
    },
    {
        "id": "379eaa52bcf0945f",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1740,
        "y": 2460,
        "wires": []
    },
    {
        "id": "cc0950e720a6dfc8",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1730,
        "y": 2520,
        "wires": []
    },
    {
        "id": "2ac0b0d843e6c7dd",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1730,
        "y": 2580,
        "wires": []
    },
    {
        "id": "fff09ed61d51e6d7",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1720,
        "y": 2640,
        "wires": []
    },
    {
        "id": "05553a6fe2801c39",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1720,
        "y": 2700,
        "wires": []
    },
    {
        "id": "98b4790b41a226f2",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 290,
        "y": 3300,
        "wires": [
            [
                "e2fe55b7f478b6ac",
                "b20e104cc3068fbc",
                "757609d73102abd8",
                "cbb8eb2a7e4e23c0",
                "f64ce070de34ce37",
                "55a12541a7248cc5",
                "2a6b5925733931eb",
                "8fd3cf3d48c8878e",
                "bb77c887bbb3497e",
                "4b103d40d80f122d",
                "22ff084e0b3a6bce",
                "7b1d5efec20b559a",
                "c6128b61027df9a9"
            ]
        ]
    },
    {
        "id": "e2fe55b7f478b6ac",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 3640,
        "wires": [
            [
                "cb9c9fc27c956da7"
            ]
        ]
    },
    {
        "id": "cb9c9fc27c956da7",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1010,
        "y": 3640,
        "wires": [
            [
                "32b53bf9aadd2c46"
            ]
        ]
    },
    {
        "id": "32b53bf9aadd2c46",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 1245,
        "y": 3640,
        "wires": []
    },
    {
        "id": "b20e104cc3068fbc",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 3080,
        "wires": []
    },
    {
        "id": "8c4131831d00a027",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1680,
        "y": 3560,
        "wires": []
    },
    {
        "id": "e30b2629fad101ec",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 2140,
        "wires": []
    },
    {
        "id": "6eb49f243bb94be7",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1680,
        "y": 3500,
        "wires": []
    },
    {
        "id": "cb9efc3cb62637db",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "maj aff",
        "mode": "link",
        "links": [
            "e459da4d7a79f366",
            "f38dbfa64db3a346",
            "ede046e780b859f6",
            "95ff3924537bd85a"
        ],
        "x": 595,
        "y": 3700,
        "wires": []
    },
    {
        "id": "58e147c9ef9fbee1",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Initialiser",
        "func": "msg.fileIndex = 0;\nmsg.filesContent = [];\nmsg.basePath = '/app/jsatorb-rest-api/files/default_Sat/Data/Backup';\nmsg.filesList = [];\n\nif (msg.basePath && typeof msg.basePath === \"string\") {\n    msg.basePath = msg.basePath.replace(/\\\\/g, '/');\n} else {\n    node.error(\"Le chemin de base est incorrect.\", msg);\n    return null;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 4000,
        "wires": [
            [
                "e05aa0ebfec34bcc",
                "7898f394a041fd3c"
            ]
        ]
    },
    {
        "id": "e05aa0ebfec34bcc",
        "type": "fs-ops-dir",
        "z": "107c9bc.328b364",
        "name": "Lister dossier principal",
        "path": "basePath",
        "pathType": "msg",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 460,
        "y": 4000,
        "wires": [
            [
                "3ea886615f4c2203",
                "a97cdb716dbdba36"
            ]
        ]
    },
    {
        "id": "3ea886615f4c2203",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Initialiser filesList",
        "func": "msg.filesList = msg.files.map(file => ({\n    name: file,\n    path: msg.basePath + '/' + file,\n    type: null\n}));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 4000,
        "wires": [
            [
                "cd46c427d8aaa805",
                "d19b16ea2da59160"
            ]
        ]
    },
    {
        "id": "d19b16ea2da59160",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Vérifier type",
        "func": "const fs = global.get('fs');\nconst currentItem = msg.filesList[msg.fileIndex];\n\nif (!currentItem) {\n    node.error(\"Aucun élément à traiter dans filesList.\");\n    return null;\n}\n\ntry {\n    const stats = fs.statSync(currentItem.path);\n    if (stats.isFile()) {\n        currentItem.type = \"file\";\n        msg.filename = currentItem.path;\n        return [msg, null];\n    } else if (stats.isDirectory()) {\n        currentItem.type = \"directory\";\n        msg.directoryPath = currentItem.path;\n        msg.filesContent.push({\n            name: currentItem.name,\n            type: \"directory\",\n            children: []\n        });\n        return [null, msg];\n    } else {\n        node.warn(\"Élément non reconnu : \" + currentItem.name);\n        return null;\n    }\n} catch (error) {\n    node.error(\"Erreur lors de la vérification : \" + error, msg);\n    return null;\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 4000,
        "wires": [
            [
                "e7b04e674c9c42b4"
            ],
            [
                "999d93c88fe975dd",
                "f72597b7c0e28481"
            ]
        ]
    },
    {
        "id": "e7b04e674c9c42b4",
        "type": "file in",
        "z": "107c9bc.328b364",
        "name": "Lire contenu fichier",
        "filename": "",
        "format": "utf8",
        "allProps": false,
        "x": 1150,
        "y": 3920,
        "wires": [
            [
                "59dc8b769c308a09"
            ]
        ]
    },
    {
        "id": "999d93c88fe975dd",
        "type": "fs-ops-dir",
        "z": "107c9bc.328b364",
        "name": "Lister sous-dossier",
        "path": "directoryPath",
        "pathType": "msg",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 930,
        "y": 4100,
        "wires": [
            [
                "4647dac2e662cd5a"
            ]
        ]
    },
    {
        "id": "59dc8b769c308a09",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Ajouter contenu fichier",
        "func": "const item = msg.filesList[msg.fileIndex];\n\n// Vérifiez si c'est un fichier et si le contenu est disponible dans msg.payload\nif (item.type === \"file\" && msg.payload) {\n    item.content = msg.payload;  // Ajout du contenu du fichier dans l'élément\n}\n\nmsg.fileIndex++;\n\nif (msg.fileIndex < msg.filesList.length) {\n    return [msg, null];  // Continuer la lecture des fichiers\n} else {\n    return [null, msg];  // Passer à la structuration avec la fonction récursive\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 3920,
        "wires": [
            [
                "d19b16ea2da59160"
            ],
            [
                "6728de8ea5d6a451",
                "a16a7387e890db0b"
            ]
        ]
    },
    {
        "id": "4647dac2e662cd5a",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Ajouter sous-dossiers",
        "func": "msg.filesList = msg.filesList.concat(\n    msg.files.map(file => ({\n        name: file,\n        path: msg.directoryPath + '/' + file,\n        type: null\n    }))\n);\nmsg.fileIndex++;\nreturn [msg, null];",
        "outputs": 1,
        "x": 1180,
        "y": 4100,
        "wires": [
            [
                "d19b16ea2da59160"
            ]
        ]
    },
    {
        "id": "6728de8ea5d6a451",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Finaliser filesContent",
        "func": "// Configuration Constants\nconst MAX_LOG_ENTRIES = 100; // Maximum number of log entries\nconst MAX_DEPTH = 10;         // Maximum recursion depth\n\n// Initialize logs\nmsg.logs = [];\n\n// Helper function to add logs with size limitation\nfunction addLog(entry) {\n    if (msg.logs.length >= MAX_LOG_ENTRIES) {\n        msg.logs.shift(); // Remove the oldest log entry\n    }\n    msg.logs.push(entry);\n}\n\n// Recursive function to organize filesContent\nfunction addToFilesContentRecursively(itemList, contentArray, depth = 0) {\n    // Prevent excessive recursion\n    if (depth > MAX_DEPTH) {\n        addLog(`Maximum recursion depth of ${MAX_DEPTH} reached.`);\n        return;\n    }\n\n    addLog(`Starting recursive function at depth ${depth} with ${itemList.length} items.`);\n\n    for (const item of itemList) {\n        addLog(`Processing item: ${item.name} (Type: ${item.type})`);\n\n        if (item.type === \"directory\") {\n            addLog(`Item is a directory: ${item.name}`);\n\n            // Find or create the directory in contentArray\n            let dir = contentArray.find(entry => entry.name === item.name && entry.type === \"directory\");\n            if (!dir) {\n                dir = { name: item.name, type: \"directory\", children: [] };\n                contentArray.push(dir);\n                addLog(`Directory added: ${dir.name}`);\n            }\n\n            // Retrieve children of the directory\n            const childFiles = msg.filesList.filter(subItem =>\n                subItem.path.startsWith(item.path + '/') && subItem.path !== item.path\n            );\n            addLog(`Found ${childFiles.length} children in directory ${item.name}`);\n\n            // Recursive call for child items\n            addToFilesContentRecursively(childFiles, dir.children, depth + 1);\n        } else if (item.type === \"file\" && item.content !== undefined) {\n            addLog(`Item is a file: ${item.name}`);\n\n            // Check if the file is already nested within a subdirectory\n            const isAlreadyNested = contentArray.some(entry =>\n                entry.type === \"directory\" && entry.children.some(child => child.name === item.name)\n            );\n\n            if (!isAlreadyNested) {\n                // Determine the parent directory based on the item's path\n                const parentDir = contentArray.find(entry =>\n                    entry.type === \"directory\" && item.path.startsWith(entry.name)\n                );\n\n                if (parentDir && parentDir.children) {\n                    parentDir.children.push({\n                        name: item.name,\n                        type: \"file\",\n                        content: item.content\n                    });\n                    addLog(`File ${item.name} added to directory ${parentDir.name}`);\n                } else {\n                    contentArray.push({\n                        name: item.name,\n                        type: \"file\",\n                        content: item.content\n                    });\n                    addLog(`File ${item.name} added directly to contentArray`);\n                }\n            } else {\n                addLog(`File ${item.name} is already nested; skipping root level.`);\n            }\n        }\n    }\n}\n\n// Execute the recursive function\naddToFilesContentRecursively(msg.filesList, msg.filesContent);\n\n// Finalization logs with summaries\naddLog(\"Finalization of filesContent completed.\");\naddLog(`Total directories: ${countDirectories(msg.filesContent)}`);\naddLog(`Total files: ${countFiles(msg.filesContent)}`);\n\nreturn msg;\n\n// Helper functions to count directories and files\nfunction countDirectories(arr) {\n    let count = 0;\n    for (const entry of arr) {\n        if (entry.type === \"directory\") {\n            count += 1 + countDirectories(entry.children);\n        }\n    }\n    return count;\n}\n\nfunction countFiles(arr) {\n    let count = 0;\n    for (const entry of arr) {\n        if (entry.type === \"file\") {\n            count += 1;\n        } else if (entry.type === \"directory\") {\n            count += countFiles(entry.children);\n        }\n    }\n    return count;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 3920,
        "wires": [
            [
                "5ebc852ac59b41d3",
                "723554a5dc99d789",
                "af5d498c3025db22",
                "0f9dd14a6721d1ec",
                "3b0ac374a078c3a1"
            ]
        ]
    },
    {
        "id": "5ebc852ac59b41d3",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "Résultat final",
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 3900,
        "wires": []
    },
    {
        "id": "cd46c427d8aaa805",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 3940,
        "wires": []
    },
    {
        "id": "a97cdb716dbdba36",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 4060,
        "wires": []
    },
    {
        "id": "ee9dde029df09316",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 4000,
        "wires": []
    },
    {
        "id": "f72597b7c0e28481",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 4000,
        "wires": []
    },
    {
        "id": "a16a7387e890db0b",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 3980,
        "wires": []
    },
    {
        "id": "373622bf13dbea66",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 3860,
        "wires": []
    },
    {
        "id": "723554a5dc99d789",
        "type": "websocket out",
        "z": "107c9bc.328b364",
        "name": "Envoyer via WebSocket",
        "server": "websocket_server",
        "client": "",
        "x": 2010,
        "y": 4040,
        "wires": []
    },
    {
        "id": "bc9b3f051f3a7d54",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "group": "b10e0a54.7b0198",
        "name": "Charger dossier",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n<script type=\"text/javascript\">\n    (async function() {\n        const socket = new WebSocket(`${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/files`);\n\n        socket.onopen = function() {\n            console.log(\"Connexion WebSocket établie avec succès.\");\n        };\n        const socketLoad = new WebSocket(`${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/filesLoad`);\n        \n\n        socketLoad.onopen = function() {\n            console.log(\"Connexion WebSocket pour le chargement établie avec succès.\");\n        };\n\n        socket.onerror = function(error) {\n            console.error(\"Erreur de connexion WebSocket : \", error);\n        };\n\n        async function readDirectory(directoryHandle) {\n            const filesContent = [];\n\n            async function traverseDirectory(handle, path = \"\") {\n                for await (const [name, child] of handle.entries()) {\n                    const childPath = path ? `${path}/${name}` : name;\n\n                    if (child.kind === \"directory\") {\n                        const dirObj = { name, type: \"directory\", children: [] };\n                        filesContent.push(dirObj);\n                        await traverseDirectory(child, childPath);\n                    } else if (child.kind === \"file\") {\n                        const file = await child.getFile();\n                        const content = await file.text();\n\n                        filesContent.push({\n                            name: name,\n                            type: \"file\",\n                            content: content,\n                            path: childPath  \n                        });\n                    }\n                }\n            }\n\n            await traverseDirectory(directoryHandle);\n            return filesContent;\n        }\n\n        async function selectAndSendFolder() {\n            try {\n                const dirHandle = await window.showDirectoryPicker();\n                console.log(\"Dossier source sélectionné :\", dirHandle);\n\n                const filesContent = await readDirectory(dirHandle);\n                \n                // Création de l'objet à envoyer\n                const dataToSend = {\n                    destinationPath: \"/app/jsatorb-rest-api/files/default_Sat/Data/Backup/\",\n                    filesContent: filesContent\n                };\n\n                // Vérification du format JSON avant envoi\n                if (typeof dataToSend === 'object') {\n                    socketLoad.send(JSON.stringify(dataToSend));\n                    console.log(\"Contenu du dossier envoyé via WebSocket.\");\n                    alert(\"Les fichiers et dossiers ont été envoyés pour être copiés dans le dossier prédéfini.\");\n                } else {\n                    console.error(\"Erreur : Le contenu n'est pas au format JSON attendu.\");\n                }\n                \n            } catch (error) {\n                console.error(\"Erreur lors de la sélection du dossier : \", error);\n            }\n        }\n\n        socket.onmessage = function(event) {\n            console.log(\"Message WebSocket reçu :\", event.data);\n            try {\n                const data = JSON.parse(event.data);\n                console.log(\"Données interprétées :\", data);\n\n                if (data.payload && data.payload.command === \"selectFolder\") {\n                    console.log(\"Commande de sélection de dossier détectée, lancement de `selectAndSendFolder`.\");\n                    selectAndSendFolder();\n                }\n            } catch (error) {\n                console.error(\"Erreur lors de l'interprétation des données WebSocket :\", error);\n            }\n        };\n\n        document.getElementById('selectFolderButtonLoad').addEventListener('click', selectAndSendFolder);\n        \n    })();\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 4300,
        "wires": [
            [
                "92c46ed78ef85316"
            ]
        ]
    },
    {
        "id": "3a9cfd7c8370488f",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 4320,
        "wires": []
    },
    {
        "id": "11eb00eaf3316517",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 4380,
        "wires": []
    },
    {
        "id": "349d4f7b1715fcd2",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Analyser les données",
        "func": "msg.filesContent = msg.filesContent || msg.payload.filesContent;\nmsg.destinationPath = msg.destinationPath || msg.payload.destinationPath;\nmsg.fileIndex = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 4420,
        "wires": [
            [
                "3a9cfd7c8370488f",
                "596685c79a63c138"
            ]
        ]
    },
    {
        "id": "596685c79a63c138",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Traiter chaque élément",
        "func": "// Obtenez l'élément en cours\nconst item = msg.filesContent[msg.fileIndex];\n\n// Définissez `fullPath` en utilisant `item.path` s'il est présent, sinon `item.name`\nmsg.fullPath = msg.destinationPath + (item.path ? item.path : item.name);\n\n// Si l'élément est un dossier, définir `folderName`\nif (item.type === 'directory') {\n    msg.folderName = item.name;  // Utilisez `item.name` comme `folderName`\n    return [msg, null];  // Passe au nœud de création de dossier\n} else if (item.type === 'file') {\n    msg.filename = msg.fullPath;\n    msg.payload = item.content;\n    return [null, msg];  // Passe au nœud d’écriture de fichier\n} else {\n    return null;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 4380,
        "wires": [
            [
                "bf9eb59ca9839e30",
                "ba255e14171a7e7a",
                "34d3ae547db54254"
            ],
            [
                "64eb5d97e6f84899",
                "865912455e997f78"
            ]
        ]
    },
    {
        "id": "96041bb2067f7b83",
        "type": "fs-ops-mkdir",
        "z": "107c9bc.328b364",
        "name": "Créer dossier",
        "path": "destinationPath",
        "pathType": "msg",
        "dirname": "folderName",
        "dirnameType": "msg",
        "recursive": false,
        "mode": "0o777",
        "fullpath": "",
        "fullpathType": "msg",
        "x": 840,
        "y": 4280,
        "wires": [
            [
                "424039586eef6d59"
            ]
        ]
    },
    {
        "id": "64eb5d97e6f84899",
        "type": "file",
        "z": "107c9bc.328b364",
        "name": "Écrire fichier",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 890,
        "y": 4460,
        "wires": [
            [
                "34d3ae547db54254",
                "52790e6c3f9a554a"
            ]
        ]
    },
    {
        "id": "34d3ae547db54254",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Passer au prochain élément",
        "func": "msg.fileIndex++;\nif (msg.fileIndex < msg.filesContent.length) {\n    return [msg, null];  // Continue le traitement\n} else {\n    return [null, msg];  // Terminer\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 4300,
        "wires": [
            [
                "596685c79a63c138",
                "bf43c3357a2936e8"
            ],
            [
                "c2932f38110325d4",
                "06171fec7cdd8820",
                "9ef39d22d91d55ac"
            ]
        ]
    },
    {
        "id": "c2932f38110325d4",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "Opération terminée",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 4380,
        "wires": []
    },
    {
        "id": "865912455e997f78",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 4440,
        "wires": []
    },
    {
        "id": "bf9eb59ca9839e30",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 4380,
        "wires": []
    },
    {
        "id": "52790e6c3f9a554a",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 4540,
        "wires": []
    },
    {
        "id": "424039586eef6d59",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 4280,
        "wires": []
    },
    {
        "id": "bf43c3357a2936e8",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 4300,
        "wires": []
    },
    {
        "id": "7898f394a041fd3c",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 4060,
        "wires": []
    },
    {
        "id": "b28deb14bbf6cdb9",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 3920,
        "wires": []
    },
    {
        "id": "925735ca38242d0b",
        "type": "link in",
        "z": "107c9bc.328b364",
        "name": "",
        "links": [
            "9ddf0fb6c87149c2",
            "566f0687ef8387cb",
            "4d107f25635fbd54"
        ],
        "x": 95,
        "y": 4000,
        "wires": [
            [
                "58e147c9ef9fbee1"
            ]
        ]
    },
    {
        "id": "566f0687ef8387cb",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "Sauvegarder",
        "mode": "link",
        "links": [
            "925735ca38242d0b"
        ],
        "x": 1175,
        "y": 820,
        "wires": []
    },
    {
        "id": "2fca9295b1770eb7",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "Envoyer commande selectFolder",
        "func": "msg.payload = { command: \"selectFolder\" };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2340,
        "wires": [
            [
                "80163a833e982934"
            ]
        ]
    },
    {
        "id": "80163a833e982934",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "Socket Load",
        "mode": "link",
        "links": [
            "6dbdbb73b7f982b2"
        ],
        "x": 185,
        "y": 2400,
        "wires": []
    },
    {
        "id": "6dbdbb73b7f982b2",
        "type": "link in",
        "z": "107c9bc.328b364",
        "name": "Socket load in",
        "links": [
            "80163a833e982934",
            "0d06d8c2c0044097"
        ],
        "x": 1755,
        "y": 4140,
        "wires": [
            [
                "8a38797607888494",
                "723554a5dc99d789"
            ]
        ]
    },
    {
        "id": "8a38797607888494",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1970,
        "y": 4140,
        "wires": []
    },
    {
        "id": "92c46ed78ef85316",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 4300,
        "wires": []
    },
    {
        "id": "abf2a2c160c0ac8c",
        "type": "exec",
        "z": "107c9bc.328b364",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Backup && mkdir -p Backup",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 4560,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c0a0198bb302e078",
        "type": "websocket in",
        "z": "107c9bc.328b364",
        "name": "Charger",
        "server": "0c7ae3b0a9485d6d",
        "client": "",
        "x": 100,
        "y": 4560,
        "wires": [
            [
                "abf2a2c160c0ac8c",
                "0641da6a9570ba15"
            ]
        ]
    },
    {
        "id": "a43539061883fa20",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "parseJSON",
        "func": "// Convertir le payload en objet JSON\nif (typeof msg.payload === \"string\") {\n    msg.payload = JSON.parse(msg.payload);\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 4420,
        "wires": [
            [
                "11eb00eaf3316517",
                "349d4f7b1715fcd2"
            ]
        ]
    },
    {
        "id": "ba255e14171a7e7a",
        "type": "exec",
        "z": "107c9bc.328b364",
        "command": "mkdir -p  ",
        "addpay": "msg.fullPath",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 640,
        "y": 4220,
        "wires": [
            [
                "6754c1659f7ca65b"
            ],
            [],
            []
        ]
    },
    {
        "id": "6754c1659f7ca65b",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "TEST DOSSIER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 4200,
        "wires": []
    },
    {
        "id": "0641da6a9570ba15",
        "type": "delay",
        "z": "107c9bc.328b364",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 150,
        "y": 4480,
        "wires": [
            [
                "a43539061883fa20"
            ]
        ]
    },
    {
        "id": "06171fec7cdd8820",
        "type": "link out",
        "z": "107c9bc.328b364",
        "name": "load bdd",
        "mode": "link",
        "links": [
            "41e5fe03e3e239c0",
            "0affa01a0d9c8d57"
        ],
        "x": 1495,
        "y": 4360,
        "wires": []
    },
    {
        "id": "41e5fe03e3e239c0",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "links": [
            "06171fec7cdd8820"
        ],
        "x": 145,
        "y": 2120,
        "wires": [
            [
                "a87ba6e87a1c571a"
            ]
        ]
    },
    {
        "id": "8274fe697cc3f84e",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "group": "b10e0a54.7b0198",
        "name": "Sélection de dossier",
        "order": 12,
        "width": 6,
        "height": 3,
        "format": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n    <title>File Copy Template</title>\n    <style>\n        .button {\n            padding: 10px 20px;\n            font-size: 16px;\n            border-radius: 4px;\n            border: none;\n            background-color: #4CAF50;\n            color: white;\n            cursor: pointer;\n            margin: 10px;\n        }\n        .button:disabled {\n            background-color: #cccccc;\n            cursor: not-allowed;\n        }\n        .status {\n            margin: 10px;\n            padding: 10px;\n            border-radius: 4px;\n        }\n        .error {\n            background-color: #ffebee;\n            color: #c62828;\n        }\n        .success {\n            background-color: #e8f5e9;\n            color: #2e7d32;\n        }\n        .progress {\n            background-color: #e3f2fd;\n            color: #1565c0;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"filePickerSection\">\n        <button id=\"selectFolderButton\" class=\"button\" style=\"display:none;\">Select Folder and Copy Files</button>\n        <div id=\"statusMessage\" class=\"status\"></div>\n    </div>\n\n    <script type=\"text/javascript\">\n    (function() {\n        const selectFolderButton = document.getElementById('selectFolderButton');\n        const statusMessage = document.getElementById('statusMessage');\n        let filesAndDirsData = null;\n        let isPickerActive = false;\n        let wsRetryCount = 0;\n        const MAX_RETRIES = 3;\n\n        function showStatus(message, type = 'progress') {\n            statusMessage.textContent = message;\n            statusMessage.className = `status ${type}`;\n        }\n\n        function connectWebSocket() {\n            const socket = new WebSocket(`${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/files`);\n\n            socket.onopen = function() {\n                console.log(\"WebSocket connection established successfully.\");\n                wsRetryCount = 0;\n                showStatus(\"Connected to server\", \"success\");\n            };\n\n            socket.onerror = function(error) {\n                console.error(\"WebSocket connection error: \", error);\n                showStatus(\"Connection error. Please check your connection.\", \"error\");\n            };\n\n            socket.onmessage = function(event) {\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"Data received from WebSocket\");\n\n                    if (!data.filesContent || !Array.isArray(data.filesContent)) {\n                        throw new Error(\"Invalid data structure received\");\n                    }\n\n                    const filesAndDirs = data.filesContent;\n                    for (let item of filesAndDirs) {\n                        if (!item.name || !item.type || (item.type === \"file\" && item.content === undefined)) {\n                            throw new Error(`Invalid element in filesContent: ${JSON.stringify(item)}`);\n                        }\n                    }\n\n                    filesAndDirsData = filesAndDirs;\n                    selectFolderButton.style.display = 'inline-block';\n                    showStatus(\"Please wait for the signal before starting the file copy process.\", \"success\");\n                } catch (error) {\n                    console.error(\"Error processing WebSocket data:\", error);\n                    showStatus(\"Loading processing...\", \"error\");\n                }\n            };\n\n            socket.onclose = function() {\n                console.log(\"WebSocket connection closed.\");\n                if (wsRetryCount < MAX_RETRIES) {\n                    wsRetryCount++;\n                    showStatus(`Connection lost. Retrying... (${wsRetryCount}/${MAX_RETRIES})`, \"error\");\n                    setTimeout(connectWebSocket, 3000);\n                } else {\n                    showStatus(\"Could not establish connection. Please refresh the page.\", \"error\");\n                }\n            };\n\n            return socket;\n        }\n\n        let socket = connectWebSocket();\n\n        async function copyItem(item, parentDirHandle, updateProgress) {\n            try {\n                if (item.type === \"directory\") {\n                    updateProgress(`Creating directory: ${item.name}`);\n                    const dirHandle = await parentDirHandle.getDirectoryHandle(item.name, { create: true });\n                    for (let child of item.children) {\n                        await copyItem(child, dirHandle, updateProgress);\n                    }\n                } else if (item.type === \"file\" && item.content) {\n                    updateProgress(`Copying file: ${item.name}`);\n                    const fileHandle = await parentDirHandle.getFileHandle(item.name, { create: true });\n                    const writable = await fileHandle.createWritable();\n                    await writable.write(item.content);\n                    await writable.close();\n                }\n            } catch (error) {\n                // Handle copying errors gracefully\n                updateProgress(`Error processing ${item.name}: ${error.message}`, \"error\");\n            }\n        }\n\n        selectFolderButton.addEventListener('click', async function() {\n            if (!filesAndDirsData) {\n                showStatus(\"No files or directories to copy.\", \"error\");\n                return;\n            }\n\n            if (isPickerActive) {\n                showStatus(\"File picker is already active. Please wait.\", \"error\");\n                return;\n            }\n\n            isPickerActive = true;\n            selectFolderButton.disabled = true;\n\n            try {\n                let dirHandle = null;\n                try {\n                    dirHandle = await window.showDirectoryPicker();\n                } catch (error) {\n                    if (error.name === 'AbortError') {\n                        // User cancelled directory selection\n                        showStatus(\"Directory selection was cancelled.\", \"error\");\n                        return; // Do not throw an error, just return\n                    }\n                    // Some other error occurred while showing directory picker\n                    console.error(\"Error selecting directory:\", error);\n                    showStatus(\"An error occurred while selecting directory.\", \"error\");\n                    return;\n                }\n\n                const permission = await dirHandle.requestPermission({ mode: 'readwrite' });\n                if (permission !== 'granted') {\n                    showStatus(\"Write permission not granted.\", \"error\");\n                    return;\n                }\n\n                showStatus(\"Starting file copy process...\", \"progress\");\n                \n                for (let item of filesAndDirsData) {\n                    await copyItem(item, dirHandle, (message, type = 'progress') => {\n                        showStatus(message, type);\n                    });\n                }\n\n                showStatus(\"All files and directories have been copied successfully!\", \"success\");\n                selectFolderButton.style.display = 'none';\n                location.reload();\n\n            } catch (error) {\n                console.error(\"Error:\", error);\n                showStatus(\"Folder created ! Please submit the save !\", \"error\");\n            } finally {\n                isPickerActive = false;\n                if (selectFolderButton.style.display !== 'none') {\n                    selectFolderButton.disabled = false;\n                }\n            }\n        });\n    })();\n    </script>\n</body>\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 180,
        "y": 3920,
        "wires": [
            [
                "b28deb14bbf6cdb9"
            ]
        ]
    },
    {
        "id": "triggerFunction",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup11' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 240,
        "wires": [
            [
                "b3b5942bcef21b50"
            ]
        ]
    },
    {
        "id": "4047f428f2231390",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "group": "89c6e42c.26d338",
        "name": "",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Confirmation Modal</title>\n    <style>\n        /* Modal Overlay */\n        .modal {\n            position: fixed;\n            z-index: 9999;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            background-color: rgba(128, 128, 128, 0.6);\n            opacity: 0;\n            visibility: hidden;\n            transition: opacity 0.3s ease, visibility 0.3s ease;\n        }\n\n        .modal.show {\n            opacity: 1;\n            visibility: visible;\n        }\n\n        /* Modal Content */\n        .modal-content {\n            background-color: #244052;\n            margin: 15% auto;\n            padding: 20px;\n            border: 1px solid #888;\n            width: 80%;\n            max-width: 400px;\n            text-align: center;\n            border-radius: 8px;\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.9);\n            color: white;\n            transform: translateY(-20px);\n            transition: transform 0.3s ease;\n        }\n\n        .modal.show .modal-content {\n            transform: translateY(0);\n        }\n\n        /* Button Group */\n        .button-group {\n            margin-top: 20px;\n        }\n\n        /* Buttons */\n        .button-group button {\n            padding: 10px 20px;\n            margin: 0 15px;\n            font-size: 16px;\n            cursor: pointer;\n            border: none;\n            border-radius: 4px;\n            transition: background-color 0.3s ease;\n            color: white;\n        }\n\n        /* Oui Button */\n        #ouiBtn {\n            background-color: #4CAF50;\n        }\n\n        #ouiBtn:hover {\n            background-color: #45a049;\n        }\n\n        /* Non Button */\n        #nonBtn {\n            background-color: #f44336;\n        }\n\n        #nonBtn:hover {\n            background-color: #da190b;\n        }\n    </style>\n</head>\n\n<body>\n    <!-- Confirmation Modal -->\n    <div id=\"confirmationModal\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n        <div class=\"modal-content\">\n            <p id=\"modalTitle\" class=\"modal-text\"\n                style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n                Attention : cette action supprimera les fichiers OEMs des satellites prédéfinis BLUE/RED.<br><br>\n                Êtes-vous sûr de vouloir poursuivre ?\n            </p>\n            <div class=\"button-group\">\n                <button id=\"ouiBtn\">Oui</button>\n                <button id=\"nonBtn\">Non</button>\n            </div>\n        </div>\n    </div>\n\n    <!-- JavaScript to Control Modal -->\n    <script>\n        (function(scope) {\n            var modal = document.getElementById('confirmationModal');\n\n            function showModal() {\n                modal.style.display = 'block';\n                // Force a reflow before adding the show class\n                modal.offsetHeight;\n                modal.classList.add('show');\n            }\n\n            function hideModal() {\n                modal.classList.remove('show');\n                // Wait for transitions to complete before hiding\n                modal.addEventListener('transitionend', function handler(e) {\n                    if (e.propertyName === 'opacity') {\n                        modal.style.display = 'none';\n                        modal.removeEventListener('transitionend', handler);\n                    }\n                });\n            }\n\n            // Reset the modal state on page load\n            window.addEventListener('load', function() {\n                if (localStorage.getItem('modalState1') === 'show') {\n                    localStorage.setItem('modalState1', 'hide');\n                }\n            });\n\n            // Listen for localStorage events to sync modal state across tabs\n            window.addEventListener('storage', function(event) {\n                if (event.key === 'modalState1') {\n                    if (event.newValue === 'show') {\n                        showModal();\n                    } else if (event.newValue === 'hide') {\n                        hideModal();\n                    }\n                }\n            });\n\n            // Watch for incoming messages\n            scope.$watch('msg', function(msg) {\n                if (msg && msg.payload === 'showPopup') {\n                    localStorage.setItem('modalState1', 'show');\n                    showModal();\n                }\n            });\n\n            document.getElementById('ouiBtn').addEventListener('click', function() {\n                scope.send({ payload: 'oui' });\n                localStorage.setItem('modalState1', 'hide');\n                hideModal();\n            });\n\n            document.getElementById('nonBtn').addEventListener('click', function() {\n                scope.send({ payload: 'non' });\n                localStorage.setItem('modalState1', 'hide');\n                hideModal();\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 280,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "93fe89ce8903b3be",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui11",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 240,
        "wires": [
            [
                "0e2dbebeb0c26305",
                "a74eff43bace63eb",
                "535e30ff0469df5c",
                "fab3d3fdff892299",
                "611d2559e0d334ad",
                "4986adffbe571116",
                "993cf635305db84a",
                "7b8e3def200c9673"
            ]
        ]
    },
    {
        "id": "0e2dbebeb0c26305",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "1828c0a97e91eb11",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup22' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 100,
        "wires": [
            [
                "b69d0baa0214c043"
            ]
        ]
    },
    {
        "id": "a64aa89b124a0d0d",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "group": "e7d5b9e4.972fe8",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n    \n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n    \n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button */\n    #ouiBtn2 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn2:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button */\n    #nonBtn2 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn2:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action rechargera et écrasera toutes les TLEs à partir de la base de données de Celestrak.<br><br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn2\">Oui</button>\n        <button id=\"nonBtn2\">Non</button>\n      </div>\n    </div>\n  </div>\n  \n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal2');\n      \n      function showModal() {\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n      \n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n          }\n        });\n      }\n      \n      // Reset modal state on page load\n      window.addEventListener('load', function() {\n        if (localStorage.getItem('modalState2') === 'show') {\n          localStorage.setItem('modalState2', 'hide');\n        }\n      });\n      \n      // Listen for localStorage events to sync state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState2') {\n          if (event.newValue === 'show') {\n            showModal();\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n      \n      // Watch for incoming messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState2', 'show');\n          showModal();\n        }\n      });\n      \n      document.getElementById('ouiBtn2').addEventListener('click', function() {\n        scope.send({ payload: 'oui' });\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n      \n      document.getElementById('nonBtn2').addEventListener('click', function() {\n        scope.send({ payload: 'non' });\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e207364cce175612",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui22",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "8e709b7b1cc9bd07",
                "043e656d4f78d5d5",
                "a74eff43bace63eb"
            ]
        ]
    },
    {
        "id": "8e709b7b1cc9bd07",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "POP UP DELETE",
        "mode": "link",
        "links": [
            "104b3e91f2133bb5",
            "d6b3e2740b382ae3",
            "f38932cff6852fc6",
            "599224fc8947bffd"
        ],
        "x": 505,
        "y": 120,
        "wires": []
    },
    {
        "id": "e57ecd8922630372",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup3' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 20,
        "wires": [
            [
                "6076f4f2f1613493"
            ]
        ]
    },
    {
        "id": "45e19228aa39ceb1",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "group": "89c6e42c.26d338",
        "name": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<!-- =========================\n Node-RED ui_template Content\n========================== -->\n\n<style>\n  /* ============ Modal Overlay ============ */\n  .modal {\n    position: fixed;\n    z-index: 9999;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    background-color: rgba(128, 128, 128, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease, visibility 0.3s ease;\n  }\n  \n  .modal.show {\n    opacity: 1;\n    visibility: visible;\n  }\n  \n  /* ============ Modal Content ============ */\n  .modal-content {\n    background-color: #244052;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 400px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n    color: white;\n    transform: translateY(-20px);\n    transition: transform 0.3s ease;\n  }\n  \n  .modal.show .modal-content {\n    transform: translateY(0);\n  }\n  \n  /* ============ Button Group ============ */\n  .button-group {\n    margin-top: 20px;\n  }\n  \n  /* ============ Buttons ============ */\n  .button-group button {\n    padding: 10px 20px;\n    margin: 0 15px;\n    font-size: 16px;\n    cursor: pointer;\n    border: none;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    color: white;\n  }\n  \n  /* ============ YES/NO styling for each ============ */\n  /* Modal 1 */\n  #ouiBtn11 { background-color: #4CAF50; }\n  #ouiBtn11:hover { background-color: #45a049; }\n\n  #nonBtn11 { background-color: #f44336; }\n  #nonBtn11:hover { background-color: #da190b; }\n\n  /* Modal 2 */\n  #ouiBtn22 { background-color: #4CAF50; }\n  #ouiBtn22:hover { background-color: #45a049; }\n\n  #nonBtn22 { background-color: #f44336; }\n  #nonBtn22:hover { background-color: #da190b; }\n\n  /* Modal 3 */\n  #ouiBtn3 { background-color: #4CAF50; }\n  #ouiBtn3:hover { background-color: #45a049; }\n\n  #nonBtn3 { background-color: #f44336; }\n  #nonBtn3:hover { background-color: #da190b; }\n   /* Modal 4 */\n  #ouiBtn4 { background-color: #4CAF50; }\n  #ouiBtn4:hover { background-color: #45a049; }\n\n  #nonBtn4 { background-color: #f44336; }\n  #nonBtn4:hover { background-color: #da190b; }\n   /* Modal 5 */\n  #ouiBtn5 { background-color: #4CAF50; }\n  #ouiBtn5:hover { background-color: #45a049; }\n\n  #nonBtn5 { background-color: #f44336; }\n  #nonBtn5:hover { background-color: #da190b; }\n\n  /* Modal 7 */\n  #ouiBtn7 { background-color: #4CAF50; }\n  #ouiBtn7:hover { background-color: #45a049; }\n\n  #nonBtn7 { background-color: #f44336; }\n  #nonBtn7:hover { background-color: #da190b; }\n\n  /* Modal 9 */\n  #ouiBtn9 { background-color: #4CAF50; }\n  #ouiBtn9:hover { background-color: #45a049; }\n\n  #nonBtn9 { background-color: #f44336; }\n  #nonBtn9:hover { background-color: #da190b; }\n  \n  /* Modal 17 */\n  #ouiBtn17 { background-color: #4CAF50; }\n  #ouiBtn17:hover { background-color: #45a049; }\n\n  #nonBtn17 { background-color: #f44336; }\n  #nonBtn17:hover { background-color: #da190b; }\n  \n</style>\n\n<!-- =============================\n       All Your Modal Markup\n============================= -->\n\n<!-- Modal 11 -->\n<div id=\"confirmationModal11\" class=\"modal\" aria-labelledby=\"modalTitle1\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle11\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Attention : cette action supprimera les fichiers OEM ainsi que les bases de données des satellites prédéfinis BLUE/RED.<br><br>\n          Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn11\">Oui</button>\n          <button id=\"nonBtn11\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 2 -->\n<div id=\"confirmationModal22\" class=\"modal\" aria-labelledby=\"modalTitle2\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle22\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : Cette opération va recharger et écraser toutes les TLE à partir de la base de données de Celestrak.\n      <br>\nN’effectuez cette action que si elle est nécessaire, par exemple lors de la création d’un tout nouvel horizon de simulation.\n<br>\n<br>\nUn usage excessif de ces requêtes peut entraîner une suspension temporaire de l’accès aux services Celestrak.\n<br>\n<br>\nÊtes-vous certain de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn22\">Oui</button>\n      <button id=\"nonBtn22\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 3 -->\n<div id=\"confirmationModal3\" class=\"modal\" aria-labelledby=\"modalTitle3\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle3\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rechargera et écrasera toutes les TLEs à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn3\">Oui</button>\n      <button id=\"nonBtn3\">Non</button>\n    </div>\n  </div>\n</div>\n\n <!-- Confirmation Modal -->\n  <div id=\"confirmationModal4\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action entraînera la suppression des dernières TLEs stockées pour l'ensemble des satellites.<br><br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn4\">Oui</button>\n        <button id=\"nonBtn4\">Non</button>\n      </div>\n    </div>\n  </div>\n  \n  <div id=\"confirmationModal5\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action rafraîchira les données VTS des satellites virtuels ( RED / BLUE ) en se basant sur la base de données de Celestrak.<br>\n        <br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn5\">Oui</button>\n        <button id=\"nonBtn5\">Non</button>\n      </div>\n    </div>\n  </div>\n\n<!-- Modal 7 -->\n<div id=\"confirmationModal7\" class=\"modal\" aria-labelledby=\"modalTitle7\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle7\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les fichiers OEMs ainsi que les base de données de l'ensemble des satellites.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn7\">Oui</button>\n      <button id=\"nonBtn7\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 9 -->\n<div id=\"confirmationModal9\" class=\"modal\" aria-labelledby=\"modalTitle9\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle9\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Celestrak.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn9\">Oui</button>\n      <button id=\"nonBtn9\">Non</button>\n    </div>\n  </div>\n</div>\n\n <!-- Confirmation Modal 17 -->\n  <div id=\"confirmationModal17\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Aiglons.<br><br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn17\">Oui</button>\n        <button id=\"nonBtn17\">Non</button>\n      </div>\n    </div>\n  </div>\n  <!-- Modal 18 -->\n<div id=\"confirmationModal18\" class=\"modal\" aria-labelledby=\"modalTitle18\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle18\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action restaurera l'état du système avant la dernière manoeuvre réalisée.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn18\">Oui</button>\n      <button id=\"nonBtn18\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- =========================\n   JavaScript Initialization\n========================= -->\n\n<script>\n(function(scope) {\n    // We use this flag so we only init once per dashboard rendering\n    let initialized = false;\n\n    scope.$watch('msg', function(msg) {\n        if (!initialized) {\n            initialized = true;\n            initModalLogic();\n        }\n    });\n\n    function initModalLogic() {\n      console.log(\"Initializing modal logic...\");\n\n      // 1) WebSocket connection\n      const socketUrl = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/modal`;\n      console.log(\"Connecting to WebSocket at:\", socketUrl);\n      const socket = new WebSocket(socketUrl);\n\n      socket.addEventListener('open', () => {\n        console.log(\"WebSocket connection established for modal!\");\n      });\n\n      socket.addEventListener('error', (error) => {\n        console.error(\"WebSocket error:\", error);\n      });\n\n      // 2) Show/hide logic based on incoming messages\n      socket.addEventListener('message', function(event) {\n        let command;\n        try {\n          const msg = JSON.parse(event.data);\n          command = msg.payload || msg;\n        } catch (e) {\n          command = event.data;\n        }\n\n        if (command.startsWith('hidePopup')) {\n          const modalId = `confirmationModal${command.replace('hidePopup', '')}`;\n          hideModal(modalId);\n        } else if (command.startsWith('showPopup')) {\n          const modalId = `confirmationModal${command.replace('showPopup', '')}`;\n          showModal(modalId);\n        } else {\n          console.warn(\"Unknown command:\", command);\n        }\n      });\n\n      // 3) Attach event listeners for each “Oui/Non” button\n      //    Make sure the elements exist before adding listeners\n\n      document.getElementById('ouiBtn11')?.addEventListener('click', function() {\n        console.log(\"Oui button 11 clicked\");\n        socket.send(JSON.stringify({ payload: 'oui11' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup11' }));\n        hideModal('confirmationModal11');\n      });\n\n      document.getElementById('nonBtn11')?.addEventListener('click', function() {\n        console.log(\"Non button 11 clicked\");\n        socket.send(JSON.stringify({ payload: 'non11' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup11' }));\n        hideModal('confirmationModal11');\n      });\n\n      document.getElementById('ouiBtn22')?.addEventListener('click', function() {\n        console.log(\"Oui button 22 clicked\");\n        socket.send(JSON.stringify({ payload: 'oui22' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup22' }));\n        hideModal('confirmationModal22');\n      });\n\n      document.getElementById('nonBtn22')?.addEventListener('click', function() {\n        console.log(\"Non button 22 clicked\");\n        socket.send(JSON.stringify({ payload: 'non22' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup22' }));\n        hideModal('confirmationModal22');\n      });\n\n      document.getElementById('ouiBtn3')?.addEventListener('click', function() {\n        console.log(\"Oui button 3 clicked\");\n        socket.send(JSON.stringify({ payload: 'oui3' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('nonBtn3')?.addEventListener('click', function() {\n        console.log(\"Non button 3 clicked\");\n        socket.send(JSON.stringify({ payload: 'non3' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n      \n      document.getElementById('ouiBtn4')?.addEventListener('click', function() {\n        console.log(\"Oui button 4 clicked\");\n        socket.send(JSON.stringify({ payload: 'oui4' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('nonBtn4')?.addEventListener('click', function() {\n        console.log(\"Non button 4 clicked\");\n        socket.send(JSON.stringify({ payload: 'non4' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n      document.getElementById('ouiBtn5')?.addEventListener('click', function() {\n        console.log(\"Oui button 5 clicked\");\n        socket.send(JSON.stringify({ payload: 'oui5' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('nonBtn5')?.addEventListener('click', function() {\n        console.log(\"Non button 5 clicked\");\n        socket.send(JSON.stringify({ payload: 'non5' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n\n      document.getElementById('ouiBtn7')?.addEventListener('click', function() {\n        console.log(\"Oui button 7 clicked\");\n        socket.send(JSON.stringify({ payload: 'oui7' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('nonBtn7')?.addEventListener('click', function() {\n        console.log(\"Non button 7 clicked\");\n        socket.send(JSON.stringify({ payload: 'non7' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('ouiBtn9')?.addEventListener('click', function() {\n        console.log(\"Oui button 9 clicked\");\n        socket.send(JSON.stringify({ payload: 'oui9' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      document.getElementById('nonBtn9')?.addEventListener('click', function() {\n        console.log(\"Non button 9 clicked\");\n        socket.send(JSON.stringify({ payload: 'non9' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n      document.getElementById('ouiBtn17')?.addEventListener('click', function() {\n        console.log(\"Oui button 17 clicked\");\n        socket.send(JSON.stringify({ payload: 'oui17' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n\n      document.getElementById('nonBtn17')?.addEventListener('click', function() {\n        console.log(\"Non button 17 clicked\");\n        socket.send(JSON.stringify({ payload: 'non17' }));\n        socket.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n    }\n\n    // ====== Functions to Show / Hide a Modal ======\n    function showModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n\n      // If modal is already visible, do nothing\n      if (modal.classList.contains('show')) {\n        console.log(`Modal with ID: ${modalId} is already shown, skipping showModal().`);\n        //return;\n      }\n\n      modal.style.display = 'block';\n      // Force reflow to ensure transition occurs\n      void modal.offsetHeight;\n      modal.classList.add('show');\n      console.log(`Modal with ID: ${modalId} shown`);\n    }\n\n    function hideModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n\n      modal.classList.remove('show');\n      \n      // Fallback to ensure hideModal completes if transitionend does not fire\n      setTimeout(() => {\n        if (modal.style.display !== 'none') {\n          modal.style.display = 'none';\n          console.log(`Modal with ID: ${modalId} hidden with fallback`);\n        }\n      }, 350); // slightly longer than the 0.3s transition\n\n      modal.addEventListener('transitionend', function handler(e) {\n        if (e.propertyName === 'opacity') {\n          modal.style.display = 'none';\n          modal.removeEventListener('transitionend', handler);\n          console.log(`Modal with ID: ${modalId} hidden via transitionend`);\n        }\n      });\n    }\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 20,
        "wires": [
            [
                "8e98a8f1392f0168"
            ]
        ]
    },
    {
        "id": "575bc1b26324641e",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 20,
        "wires": [
            [
                "0f41e91b50d161c6",
                "a74eff43bace63eb",
                "1801ab9e4433bdda"
            ]
        ]
    },
    {
        "id": "64cbfe5e2bae5606",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "links": [
            "098b276ca212f2c4"
        ],
        "x": 135,
        "y": 20,
        "wires": [
            [
                "e57ecd8922630372"
            ]
        ]
    },
    {
        "id": "0f41e91b50d161c6",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "DELETE DB AIGLONS",
        "mode": "link",
        "links": [
            "a5ff53e5e4c198e1"
        ],
        "x": 1035,
        "y": 20,
        "wires": []
    },
    {
        "id": "c6e9ed348bf2c443",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "links": [
            "0a13adeab708b2b4"
        ],
        "x": 385,
        "y": 180,
        "wires": [
            [
                "a74eff43bace63eb"
            ]
        ]
    },
    {
        "id": "7b5db4ce6542300b",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup4' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2220,
        "y": 200,
        "wires": [
            [
                "493469cc4df10615",
                "97c1c1a37a407745"
            ]
        ]
    },
    {
        "id": "fb8c3572b2c748c0",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "group": "89c6e42c.26d338",
        "name": "",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n    \n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n    \n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button */\n    #ouiBtn4 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn4:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button */\n    #nonBtn4 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn4:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal4\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action supprimera les dernières TLEs enregistrées.<br><br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn4\">Oui</button>\n        <button id=\"nonBtn4\">Non</button>\n      </div>\n    </div>\n  </div>\n  \n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal4');\n      \n      function showModal() {\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n      \n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n          }\n        });\n      }\n      \n      // Reset modal state on page load\n      window.addEventListener('load', function() {\n        if (localStorage.getItem('modalState4') === 'show') {\n          localStorage.setItem('modalState4', 'hide');\n        }\n      });\n      \n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState4') {\n          if (event.newValue === 'show') {\n            showModal();\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n      \n      // Watch for incoming messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState4', 'show');\n          showModal();\n        }\n      });\n      \n      document.getElementById('ouiBtn4').addEventListener('click', function() {\n        scope.send({ payload: 'oui' });\n        localStorage.setItem('modalState4', 'hide');\n        hideModal();\n      });\n      \n      document.getElementById('nonBtn4').addEventListener('click', function() {\n        scope.send({ payload: 'non' });\n        localStorage.setItem('modalState4', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2200,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a7400d2baf7391aa",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 260,
        "wires": [
            [
                "5ce64a7b087a06e5",
                "ae7cd6589be97892",
                "5b0bac86f7f846d6",
                "7383493e1cff74cc",
                "6eff1685472b2e56"
            ]
        ]
    },
    {
        "id": "ae7cd6589be97892",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 220,
        "wires": []
    },
    {
        "id": "de5dee05de6b8e9e",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python memxterminator.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1110,
        "y": 280,
        "wires": [
            [
                "1e6c927613bb91ab"
            ],
            [],
            []
        ]
    },
    {
        "id": "2b8b1da4247a7ad3",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 280,
        "wires": [
            [
                "de5dee05de6b8e9e",
                "af8b2b673a6619fc",
                "3dc3ad5f89940cca",
                "90f5e0b845f5fefc",
                "dcd7bf8e7376f0aa",
                "93a7595f0e9e6c79",
                "c2a583850e07004c",
                "7496da9a79dec10e"
            ]
        ]
    },
    {
        "id": "af9615b2a4c1e4cd",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup7' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "9be2582f48df69f5"
            ]
        ]
    },
    {
        "id": "ae14d2fbd88bc3fd",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "group": "3dabe8df.a10df8",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n    \n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n    \n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button */\n    #ouiBtn7 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn7:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button */\n    #nonBtn7 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn7:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal7\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action supprimera les fichiers OEMs de l'ensemble des satellites.<br><br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn7\">Oui</button>\n        <button id=\"nonBtn7\">Non</button>\n      </div>\n    </div>\n  </div>\n  \n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal7');\n      \n      function showModal() {\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n      \n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n          }\n        });\n      }\n      \n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState7') {\n          if (event.newValue === 'show') {\n            showModal();\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n      \n      // Watch for incoming messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState7', 'show');\n          showModal();\n        }\n      });\n      \n      document.getElementById('ouiBtn7').addEventListener('click', function() {\n        scope.send({ payload: 'oui' });\n        localStorage.setItem('modalState7', 'hide');\n        hideModal();\n      });\n      \n      document.getElementById('nonBtn7').addEventListener('click', function() {\n        scope.send({ payload: 'non' });\n        localStorage.setItem('modalState7', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 480,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ac1d7003ea3661a2",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "DELETE ALL MEMS",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "af9615b2a4c1e4cd"
            ]
        ]
    },
    {
        "id": "0ba4a96964d7b75b",
        "type": "ui_button",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "REFRESH ALL VTS SATs",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 730,
        "y": 440,
        "wires": [
            [
                "99da802f8da8596e"
            ]
        ]
    },
    {
        "id": "99da802f8da8596e",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup9' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 400,
        "wires": [
            [
                "76f517b68724f866"
            ]
        ]
    },
    {
        "id": "7125f89be6b5907f",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "group": "e7d5b9e4.972fe8",
        "name": "",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n    \n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n    \n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button */\n    #ouiBtn9 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn9:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button */\n    #nonBtn9 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn9:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal9\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Celestrak.<br><br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn9\">Oui</button>\n        <button id=\"nonBtn9\">Non</button>\n      </div>\n    </div>\n  </div>\n  \n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal9');\n      \n      function showModal() {\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n      \n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n          }\n        });\n      }\n      \n      // Reset modal state on page load\n      window.addEventListener('load', function() {\n        if (localStorage.getItem('modalState9') === 'show') {\n          localStorage.setItem('modalState9', 'hide');\n        }\n      });\n      \n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState9') {\n          if (event.newValue === 'show') {\n            showModal();\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n      \n      // Watch for incoming messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState9', 'show');\n          showModal();\n        }\n      });\n      \n      document.getElementById('ouiBtn9').addEventListener('click', function() {\n        scope.send({ payload: 'oui' });\n        localStorage.setItem('modalState9', 'hide');\n        hideModal();\n      });\n      \n      document.getElementById('nonBtn9').addEventListener('click', function() {\n        scope.send({ payload: 'non' });\n        localStorage.setItem('modalState9', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1340,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "421e1e6011f99174",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui9",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1350,
        "y": 340,
        "wires": [
            [
                "d6346f234ae10484",
                "878282b50f68afb1"
            ]
        ]
    },
    {
        "id": "e97861653a7ba31d",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "REFRESH ALL VTS SATs",
        "mode": "link",
        "links": [
            "e34b751145065be7"
        ],
        "x": 1595,
        "y": 420,
        "wires": []
    },
    {
        "id": "a4ed00fe71128c7d",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Backup",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 680,
        "wires": [
            [
                "d7c4d4ab7b2c55db",
                "bf11c8a10004687e",
                "a4bfdc9a2f319968",
                "b85d5cf08b74a76d",
                "b949ae53c02c3474"
            ],
            [
                "9a29991b1357e024"
            ],
            []
        ]
    },
    {
        "id": "d7c4d4ab7b2c55db",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 660,
        "wires": []
    },
    {
        "id": "9a29991b1357e024",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 700,
        "wires": []
    },
    {
        "id": "3b0ac374a078c3a1",
        "type": "exec",
        "z": "107c9bc.328b364",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Backup",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2090,
        "y": 3780,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8eb5303913352ff2",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "TEST DEBUH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 4480,
        "wires": []
    },
    {
        "id": "c34a4d90defd2585",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 4540,
        "wires": []
    },
    {
        "id": "ce5aeee16c0ae3b2",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Backup",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1110,
        "y": 2400,
        "wires": [
            [
                "184f343453d18808",
                "b9719d584bf3706c"
            ],
            [
                "184f343453d18808"
            ],
            []
        ]
    },
    {
        "id": "184f343453d18808",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "TEST DEBUH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 2400,
        "wires": []
    },
    {
        "id": "af5d498c3025db22",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "SAVE Signal",
        "func": "msg.payload=\"You can save !\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1965,
        "y": 3953,
        "wires": [
            [
                "df7454da395c47b4"
            ]
        ]
    },
    {
        "id": "df7454da395c47b4",
        "type": "link out",
        "z": "107c9bc.328b364",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890",
            "0eafb7b263d0ee63",
            "e69743906051c56e"
        ],
        "x": 2135,
        "y": 3940,
        "wires": []
    },
    {
        "id": "bb77c887bbb3497e",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "blue1-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver/blue1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 160,
        "y": 3460,
        "wires": [
            [
                "a7a34eaf6d4b6551"
            ]
        ]
    },
    {
        "id": "a7a34eaf6d4b6551",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 130,
        "y": 3500,
        "wires": [
            [
                "c5532a7fd640e413"
            ]
        ]
    },
    {
        "id": "c5532a7fd640e413",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = msg.payload[4].col1 || \"0.0\";\n\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // Handle cases where msg.payload is not an array\n    node.error(\"msg.payload is not an array.\", msg);\n    return null; // Stop further processing\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 3500,
        "wires": [
            [
                "9c52d60953fc4043",
                "9f43f1135b5d5619",
                "cb9efc3cb62637db",
                "b29a300d2011e18f",
                "09706bf39b2b4fde",
                "e62a9cfd26e6369f"
            ]
        ]
    },
    {
        "id": "deda93d470d73466",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "tle1-2",
        "func": "return {\n    topic: \"tle-mongo\",\n    payload: [\n        msg.payload[0]?.tle1 ?? \"0\",\n        msg.payload[0]?.tle2 ?? \"0\",\n        msg.payload[0]?.dry_mass != null ? String(msg.payload[0].dry_mass) : \"0\",\n        msg.payload[0]?.ergol_mass != null ? String(msg.payload[0].ergol_mass) : \"0\",\n        msg.payload[0]?.ergol_consumption != null ? String(msg.payload[0].ergol_consumption) : \"0\"\n    ],\n    body: 12\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 740,
        "wires": [
            [
                "736c1e117afc482c",
                "6ae3919937c8d8f6"
            ]
        ]
    },
    {
        "id": "736c1e117afc482c",
        "type": "split",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 110,
        "y": 800,
        "wires": [
            [
                "e2691976e6b2db23"
            ]
        ]
    },
    {
        "id": "e2691976e6b2db23",
        "type": "csv",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 250,
        "y": 800,
        "wires": [
            [
                "b36acff8c2226695",
                "47e19971c4be43dc",
                "b732859e6fc14f3d"
            ]
        ]
    },
    {
        "id": "b36acff8c2226695",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "blue1-tle-storage.json",
        "filename": "blue1-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 440,
        "y": 820,
        "wires": [
            [
                "abb78e913ea25618",
                "56598af0747e98bd"
            ]
        ]
    },
    {
        "id": "abb78e913ea25618",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 800,
        "wires": [
            [
                "5e0a87d25f00e613"
            ]
        ]
    },
    {
        "id": "5e0a87d25f00e613",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "command": "cp /app/maneuver-manager/blue1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 420,
        "y": 980,
        "wires": [
            [
                "a9f0476b97129ad6"
            ],
            [],
            []
        ]
    },
    {
        "id": "bf11c8a10004687e",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "deda93d470d73466"
            ]
        ]
    },
    {
        "id": "47e19971c4be43dc",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "TEST MOGNO RLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 860,
        "wires": []
    },
    {
        "id": "9ef39d22d91d55ac",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "Load Signal",
        "func": "msg.payload=\"Load Succesfull !\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 4420,
        "wires": [
            [
                "75c8945074dea488"
            ]
        ]
    },
    {
        "id": "75c8945074dea488",
        "type": "link out",
        "z": "107c9bc.328b364",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890",
            "0eafb7b263d0ee63",
            "e69743906051c56e"
        ],
        "x": 1605,
        "y": 4420,
        "wires": []
    },
    {
        "id": "6ae3919937c8d8f6",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 760,
        "wires": []
    },
    {
        "id": "06468a6e0665261b",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "TEDT LOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 2540,
        "wires": []
    },
    {
        "id": "b9719d584bf3706c",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copyManeuver.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1120,
        "y": 2500,
        "wires": [
            [
                "06468a6e0665261b"
            ],
            [
                "06468a6e0665261b"
            ],
            []
        ]
    },
    {
        "id": "eedc672f88391f8e",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 540,
        "y": 2260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "03d977b4ff831fab",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "ROB1BACKUP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1320,
        "wires": []
    },
    {
        "id": "133b2bf208469cec",
        "type": "ui_template",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "group": "e85e692d.e47bb8",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1340,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "1801ab9e4433bdda",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "TEST MODAL AIGLONS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 60,
        "wires": []
    },
    {
        "id": "9dbefe6121f87bd0",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2830,
        "y": 320,
        "wires": []
    },
    {
        "id": "4b103d40d80f122d",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "Update LastManeuverTime",
        "mode": "link",
        "links": [
            "d1bb1f02cfef5c21",
            "9c9b0d6a4f3be736",
            "614c0a9e70da8fda",
            "7ecf593b17dd6d6d"
        ],
        "x": 455,
        "y": 3180,
        "wires": []
    },
    {
        "id": "043e656d4f78d5d5",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 160,
        "wires": []
    },
    {
        "id": "95cacf74de2a3d53",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "TEST AFTER PROCESSING MESSAGE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 120,
        "wires": []
    },
    {
        "id": "function_process",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Process Message",
        "func": "if (msg.payload && typeof msg.payload === 'string') {\n    try {\n        const parsedPayload = JSON.parse(msg.payload);\n        \n        // Check for button clicks (oui/non, oui2/non2, or oui3/non3)\n        if (parsedPayload.payload === 'oui' || parsedPayload.payload === 'non') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui/non\n            const closeMsg = { payload: 'hidePopup' };\n            node.send(closeMsg);\n        }\n        else if (parsedPayload.payload === 'oui11' || parsedPayload.payload === 'non11') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui2/non2\n            const closeMsg = { payload: 'hidePopup11' };\n            node.send(closeMsg);\n        } else if (parsedPayload.payload === 'oui22' || parsedPayload.payload === 'non22') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui2/non2\n            const closeMsg = { payload: 'hidePopup22' };\n            node.send(closeMsg);\n        } else if (parsedPayload.payload === 'oui3' || parsedPayload.payload === 'non3') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui3/non3\n            const closeMsg = { payload: 'hidePopup3' };\n            node.send(closeMsg);\n        } \n        else if (parsedPayload.payload === 'oui4' || parsedPayload.payload === 'non4') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui3/non3\n            const closeMsg = { payload: 'hidePopup4' };\n            node.send(closeMsg);\n        } \n         else if (parsedPayload.payload === 'oui5' || parsedPayload.payload === 'non5') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui3/non3\n            const closeMsg = { payload: 'hidePopup5' };\n            node.send(closeMsg);\n        } \n        else if (parsedPayload.payload === 'oui7' || parsedPayload.payload === 'non7') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui3/non3\n            const closeMsg = { payload: 'hidePopup7' };\n            node.send(closeMsg);\n        } \n        else if (parsedPayload.payload === 'oui9' || parsedPayload.payload === 'non9') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui3/non3\n            const closeMsg = { payload: 'hidePopup9' };\n            node.send(closeMsg);\n        }else if (parsedPayload.payload === 'oui17' || parsedPayload.payload === 'non17') {\n            // First, send the button response\n            const buttonMsg = { payload: parsedPayload.payload };\n            node.send(buttonMsg);\n            \n            // Then, send the close command for oui3/non3\n            const closeMsg = { payload: 'hidePopup17' };\n            node.send(closeMsg);\n        }\n        else {\n            // For other messages, pass them through normally\n            msg.payload = parsedPayload.payload;\n            //node.send(msg);\n        }\n    } catch (err) {\n        node.warn(\"Payload parsing failed: \" + err.message);\n        node.send(msg);  // Send original message if parsing fails\n    }\n} else {\n    node.send(msg);  // Pass through non-string payloads\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 60,
        "wires": [
            [
                "95cacf74de2a3d53",
                "5cb56295b18776c1",
                "ws_out_node"
            ]
        ]
    },
    {
        "id": "ws_out_node",
        "type": "websocket out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "WebSocket Out",
        "server": "wss_server_id",
        "client": "",
        "x": 680,
        "y": 60,
        "wires": []
    },
    {
        "id": "6f6396a147f815f5",
        "type": "websocket in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "server": "wss_server_id",
        "client": "",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "function_process"
            ]
        ]
    },
    {
        "id": "8e98a8f1392f0168",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 20,
        "wires": []
    },
    {
        "id": "6076f4f2f1613493",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "trigger3",
        "mode": "link",
        "links": [
            "309acfd63bbd814a"
        ],
        "x": 395,
        "y": 20,
        "wires": []
    },
    {
        "id": "309acfd63bbd814a",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "links": [
            "6076f4f2f1613493",
            "b69d0baa0214c043",
            "e70f3417e72e8580",
            "b3b5942bcef21b50",
            "9be2582f48df69f5",
            "76f517b68724f866",
            "97c1c1a37a407745",
            "75731833d7ecf0e4",
            "e22a482ea33cbc88"
        ],
        "x": 525,
        "y": 80,
        "wires": [
            [
                "ws_out_node"
            ]
        ]
    },
    {
        "id": "33f8ad5abcba092e",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "links": [
            "5cb56295b18776c1",
            "7c125bcfd3a54595"
        ],
        "x": 805,
        "y": 20,
        "wires": [
            [
                "575bc1b26324641e"
            ]
        ]
    },
    {
        "id": "5cb56295b18776c1",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "retrieveOUI",
        "mode": "link",
        "links": [
            "2054ffdc8aa5c158",
            "33f8ad5abcba092e",
            "4c51afe897e71d89",
            "74feae12a21a0308",
            "ac573217bb539a6c",
            "02dd7cdf26159b03",
            "608c263f026ec91d",
            "18568075d6c5266c",
            "efdf0b40af887d60"
        ],
        "x": 445,
        "y": 80,
        "wires": []
    },
    {
        "id": "b69d0baa0214c043",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "trigger3",
        "mode": "link",
        "links": [
            "309acfd63bbd814a"
        ],
        "x": 335,
        "y": 100,
        "wires": []
    },
    {
        "id": "ac573217bb539a6c",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "links": [
            "5cb56295b18776c1",
            "7c125bcfd3a54595"
        ],
        "x": 235,
        "y": 140,
        "wires": [
            [
                "e207364cce175612"
            ]
        ]
    },
    {
        "id": "b3b5942bcef21b50",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "trigger3",
        "mode": "link",
        "links": [
            "309acfd63bbd814a"
        ],
        "x": 245,
        "y": 240,
        "wires": []
    },
    {
        "id": "74feae12a21a0308",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "links": [
            "5cb56295b18776c1",
            "7c125bcfd3a54595"
        ],
        "x": 375,
        "y": 240,
        "wires": [
            [
                "93fe89ce8903b3be"
            ]
        ]
    },
    {
        "id": "9be2582f48df69f5",
        "type": "link out",
        "z": "107c9bc.328b364",
        "name": "trigger3",
        "mode": "link",
        "links": [
            "309acfd63bbd814a"
        ],
        "x": 418.89581298828125,
        "y": 319.8888854980469,
        "wires": []
    },
    {
        "id": "4c51afe897e71d89",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "links": [
            "5cb56295b18776c1",
            "7c125bcfd3a54595"
        ],
        "x": 595,
        "y": 320,
        "wires": [
            [
                "2b8b1da4247a7ad3"
            ]
        ]
    },
    {
        "id": "76f517b68724f866",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "trigger3",
        "mode": "link",
        "links": [
            "309acfd63bbd814a"
        ],
        "x": 1115,
        "y": 400,
        "wires": []
    },
    {
        "id": "2054ffdc8aa5c158",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "links": [
            "5cb56295b18776c1"
        ],
        "x": 1245,
        "y": 340,
        "wires": [
            [
                "421e1e6011f99174"
            ]
        ]
    },
    {
        "id": "9f43f1135b5d5619",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 3440,
        "wires": []
    },
    {
        "id": "b238a1f1f7048e80",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3020,
        "wires": [
            [
                "b34e8758c0d681c5",
                "50715977ab816207"
            ]
        ]
    },
    {
        "id": "50715977ab816207",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 2960,
        "wires": []
    },
    {
        "id": "4d43b7f41edc3578",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3080,
        "wires": [
            [
                "3972957fb68a6ffe"
            ]
        ]
    },
    {
        "id": "7370f4ca899a489e",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3140,
        "wires": [
            [
                "8f37aadfa623384a"
            ]
        ]
    },
    {
        "id": "034487307dbf0883",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3200,
        "wires": [
            [
                "33b0b17b3d698398"
            ]
        ]
    },
    {
        "id": "8c9491881f8699e1",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3260,
        "wires": [
            [
                "6e1958e433afd6d3"
            ]
        ]
    },
    {
        "id": "10729ce90919c9fa",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3320,
        "wires": [
            [
                "99f6d72b0102db19"
            ]
        ]
    },
    {
        "id": "2bd24c2a26bf90d8",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "9f04f9360593b4dd",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "03e4437f8b4193ac",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "a87ba6e87a1c571a",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "command": "cd /app/maneuver-manager && rm -rf Result.txt && rm -rf PostManeuverDate.txt && rm -rf LastManeuverDate.txt && rm -rf Result2.txt && rm -rf PostManeuverDate2.txt && rm -rf LastManeuverDate2.txt && rm -rf Result3.txt && rm -rf PostManeuverDate3.txt && rm -rf LastManeuverDate3.txt && rm -rf Result4.txt && rm -rf PostManeuverDate4.txt && rm -rf LastManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 325,
        "y": 2100,
        "wires": [
            [
                "e4f9301e6810144a"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "14c692b94add6574",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 2080,
        "wires": [
            [
                "a87ba6e87a1c571a"
            ]
        ]
    },
    {
        "id": "af8b2b673a6619fc",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "delete all",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 340,
        "wires": []
    },
    {
        "id": "608c263f026ec91d",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "",
        "links": [
            "5cb56295b18776c1",
            "7c125bcfd3a54595"
        ],
        "x": 2195,
        "y": 300,
        "wires": [
            [
                "a7400d2baf7391aa",
                "83fe4d75ba5deb94"
            ]
        ]
    },
    {
        "id": "493469cc4df10615",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 160,
        "wires": []
    },
    {
        "id": "83fe4d75ba5deb94",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2390,
        "y": 360,
        "wires": []
    },
    {
        "id": "97c1c1a37a407745",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "trigger3",
        "mode": "link",
        "links": [
            "309acfd63bbd814a"
        ],
        "x": 2385,
        "y": 200,
        "wires": []
    },
    {
        "id": "0f9dd14a6721d1ec",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "",
        "func": "let totalSizeBytes = 0;\n\ntry {\n    // Convert the entire msg object to a JSON string\n    const msgString = JSON.stringify(msg);\n    \n    // Measure its size in bytes\n    totalSizeBytes = Buffer.byteLength(msgString, 'utf8');\n    \n    // Optionally store the size in the message for downstream nodes\n    msg.sizeInBytes = totalSizeBytes;\n    \n    // Or just log it here\n    node.warn(\"Total msg size: \" + totalSizeBytes + \" bytes\");\n} catch (err) {\n    node.error(\"Error stringifying msg: \" + err.message);\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 3840,
        "wires": [
            [
                "59c307278e8f13eb"
            ]
        ]
    },
    {
        "id": "59c307278e8f13eb",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "SIZE OF Obj",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 3840,
        "wires": []
    },
    {
        "id": "d6346f234ae10484",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "trigger time persistence vts",
        "mode": "link",
        "links": [
            "c5aabe122c6fde32"
        ],
        "x": 1475,
        "y": 300,
        "wires": []
    },
    {
        "id": "878282b50f68afb1",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1510,
        "y": 380,
        "wires": [
            [
                "e97861653a7ba31d"
            ]
        ]
    },
    {
        "id": "704dc87d85134af3",
        "type": "comment",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "Repeupler les DB",
        "info": "",
        "x": 3380,
        "y": 1380,
        "wires": []
    },
    {
        "id": "72db30182a3208af",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest_reset",
        "collection": "rob1btlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4450,
        "y": 1460,
        "wires": []
    },
    {
        "id": "bc2e9acead02b0b9",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest_reset",
        "collection": "p1atlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4470,
        "y": 1520,
        "wires": []
    },
    {
        "id": "6553eadd87372091",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest_reset",
        "collection": "sattlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4470,
        "y": 1580,
        "wires": []
    },
    {
        "id": "e49ad8b04ea5e6b1",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest_reset",
        "collection": "p1btlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4470,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6ae7e9176f67e8d6",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest_reset",
        "collection": "pneo4tlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 1700,
        "wires": []
    },
    {
        "id": "84eb51dadae9b955",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest_reset",
        "collection": "pneo3tlelatest_reset",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 1760,
        "wires": []
    },
    {
        "id": "fa37e72eb6daa45e",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete rob1btlelatest_reset",
        "collection": "rob1btlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4780,
        "y": 940,
        "wires": []
    },
    {
        "id": "cf6d75a4fd2da59b",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest_reset",
        "collection": "p1atlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4770,
        "y": 1000,
        "wires": []
    },
    {
        "id": "200ef173330270dd",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest_reset",
        "collection": "sattlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4770,
        "y": 1060,
        "wires": []
    },
    {
        "id": "ca3c3dea02f9c323",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest_reset",
        "collection": "p1btlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4770,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ea5247516cbeef06",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest_reset",
        "collection": "pneo4tlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4780,
        "y": 1180,
        "wires": []
    },
    {
        "id": "1a74dbfd9bf4429a",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest_reset",
        "collection": "pneo3tlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4780,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f833fe15ec86e037",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest_reset",
        "collection": "b1tlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4460,
        "y": 1820,
        "wires": []
    },
    {
        "id": "0dc6f2ea02319ae1",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest_reset",
        "collection": "b1tlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4770,
        "y": 1300,
        "wires": []
    },
    {
        "id": "96af240a0922a9ee",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest_reset",
        "collection": "b2tlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4460,
        "y": 1880,
        "wires": []
    },
    {
        "id": "ed20257d090e49f4",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest_reset",
        "collection": "b2tlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4770,
        "y": 1360,
        "wires": []
    },
    {
        "id": "02a907bdc2978285",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest_reset",
        "collection": "r1tlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4460,
        "y": 1940,
        "wires": []
    },
    {
        "id": "bff0046d3d503734",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest_reset",
        "collection": "r1tlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4760,
        "y": 1420,
        "wires": []
    },
    {
        "id": "75276af87b8f9708",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest_reset",
        "collection": "r2tlelatest_reset",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4460,
        "y": 2000,
        "wires": []
    },
    {
        "id": "14d4d05f2f79f618",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest_reset",
        "collection": "r2tlelatest_reset",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4760,
        "y": 1480,
        "wires": []
    },
    {
        "id": "5cb02f02bdedf3fe",
        "type": "catch",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "scope": [
            "b74be44bcab0b76e"
        ],
        "uncaught": false,
        "x": 3090,
        "y": 1320,
        "wires": [
            [
                "a2b2ece24a773e43",
                "c0e4bdf0ec9824d9"
            ]
        ]
    },
    {
        "id": "a2b2ece24a773e43",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3370,
        "y": 1340,
        "wires": []
    },
    {
        "id": "858c0d825180182d",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3270,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "c0e4bdf0ec9824d9",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 3265,
        "y": 1300,
        "wires": []
    },
    {
        "id": "79add69d89163a01",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3470,
        "y": 1600,
        "wires": []
    },
    {
        "id": "66606cbc7f58324a",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3290,
        "y": 1700,
        "wires": [
            [
                "55a0b1c397e0ae85",
                "1194168483d4c5d2",
                "7a67941dae013632",
                "964169cc221ad902",
                "db3b156fe817fd59",
                "8109977aa59c0756",
                "79add69d89163a01",
                "cd1ed893e6624d07",
                "dde2132f4b2729b9",
                "9cd554e925db2228",
                "5343deea67f898ae",
                "0d063ce450e4f370"
            ]
        ]
    },
    {
        "id": "55a0b1c397e0ae85",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "rob1btlelatest",
        "collection": "rob1btlelatest",
        "operation": "find",
        "x": 4100,
        "y": 1460,
        "wires": [
            [
                "72db30182a3208af",
                "34388202a9fee4b0"
            ]
        ]
    },
    {
        "id": "dde2132f4b2729b9",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1atlelatest",
        "collection": "p1atlelatest",
        "operation": "find",
        "x": 4110,
        "y": 1520,
        "wires": [
            [
                "bc2e9acead02b0b9"
            ]
        ]
    },
    {
        "id": "1194168483d4c5d2",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "sattlelatest",
        "collection": "sattlelatest",
        "operation": "find",
        "x": 4190,
        "y": 1580,
        "wires": [
            [
                "6553eadd87372091"
            ]
        ]
    },
    {
        "id": "9cd554e925db2228",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1btlelatest",
        "collection": "p1btlelatest",
        "operation": "find",
        "x": 4190,
        "y": 1640,
        "wires": [
            [
                "e49ad8b04ea5e6b1"
            ]
        ]
    },
    {
        "id": "5343deea67f898ae",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "operation": "find",
        "x": 4200,
        "y": 1700,
        "wires": [
            [
                "6ae7e9176f67e8d6"
            ]
        ]
    },
    {
        "id": "0d063ce450e4f370",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "operation": "find",
        "x": 4200,
        "y": 1760,
        "wires": [
            [
                "84eb51dadae9b955"
            ]
        ]
    },
    {
        "id": "964169cc221ad902",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 4190,
        "y": 1820,
        "wires": [
            [
                "f833fe15ec86e037",
                "5e781b7fa560acc5"
            ]
        ]
    },
    {
        "id": "7a67941dae013632",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 4190,
        "y": 1880,
        "wires": [
            [
                "96af240a0922a9ee"
            ]
        ]
    },
    {
        "id": "db3b156fe817fd59",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 4180,
        "y": 1940,
        "wires": [
            [
                "02a907bdc2978285"
            ]
        ]
    },
    {
        "id": "8109977aa59c0756",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 4180,
        "y": 2000,
        "wires": [
            [
                "75276af87b8f9708"
            ]
        ]
    },
    {
        "id": "2314358fc7877b2c",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python sauvegarder_reset.py blue1",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3565,
        "y": 1140,
        "wires": [
            [
                "259f13668b17f7bd",
                "76767c897ee911b2"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "259f13668b17f7bd",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4280,
        "y": 1140,
        "wires": [
            [
                "fa37e72eb6daa45e",
                "cf6d75a4fd2da59b",
                "200ef173330270dd",
                "ca3c3dea02f9c323",
                "ea5247516cbeef06",
                "1a74dbfd9bf4429a",
                "ed20257d090e49f4",
                "bff0046d3d503734",
                "14d4d05f2f79f618",
                "0dc6f2ea02319ae1",
                "66606cbc7f58324a"
            ]
        ]
    },
    {
        "id": "cd1ed893e6624d07",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "Sauvegarde des dossiers",
        "mode": "link",
        "links": [
            "3853f0aecc249b02",
            "5d6aebed740b9687"
        ],
        "x": 3415,
        "y": 1800,
        "wires": []
    },
    {
        "id": "bad040b0d688381d",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Reset && mkdir -p Reset",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3700,
        "y": 740,
        "wires": [
            [
                "cb502833c5faec4d",
                "e252b2f882f6e567",
                "d2d30656da898a5b",
                "cf1c5029d15730b7",
                "de81173396936862"
            ],
            [
                "0c4f4ef2c26e41ee"
            ],
            []
        ]
    },
    {
        "id": "cb502833c5faec4d",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4170,
        "y": 720,
        "wires": []
    },
    {
        "id": "0c4f4ef2c26e41ee",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4130,
        "y": 780,
        "wires": []
    },
    {
        "id": "a1b8c059c70a1447",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "tle1-2",
        "func": "return {\n    topic: \"tle-mongo\",\n    payload: [\n        msg.payload[0]?.tle1 ?? \"0\",\n        msg.payload[0]?.tle2 ?? \"0\",\n        msg.payload[0]?.dry_mass != null ? String(msg.payload[0].dry_mass) : \"0\",\n        msg.payload[0]?.ergol_mass != null ? String(msg.payload[0].ergol_mass) : \"0\",\n        msg.payload[0]?.ergol_consumption != null ? String(msg.payload[0].ergol_consumption) : \"0\"\n    ],\n    body: 12\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3430,
        "y": 820,
        "wires": [
            [
                "203f2a20f993e00a",
                "f5125f1ef8a5922d"
            ]
        ]
    },
    {
        "id": "203f2a20f993e00a",
        "type": "split",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3230,
        "y": 880,
        "wires": [
            [
                "9c2824fb8e117418"
            ]
        ]
    },
    {
        "id": "9c2824fb8e117418",
        "type": "csv",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3370,
        "y": 880,
        "wires": [
            [
                "11d795d52c2123bc",
                "e05e238118bcb231"
            ]
        ]
    },
    {
        "id": "11d795d52c2123bc",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "blue1-tle-storage.json",
        "filename": "blue1-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3560,
        "y": 880,
        "wires": [
            [
                "ef3e2a1c6ae096ac"
            ]
        ]
    },
    {
        "id": "ef3e2a1c6ae096ac",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3750,
        "y": 880,
        "wires": [
            [
                "001b0824eb50ab35"
            ]
        ]
    },
    {
        "id": "76767c897ee911b2",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cp blue1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp blue2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp red1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp red2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3735,
        "y": 1100,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "e252b2f882f6e567",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 3250,
        "y": 820,
        "wires": [
            [
                "a1b8c059c70a1447"
            ]
        ]
    },
    {
        "id": "e05e238118bcb231",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "TEST MOGNO RLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3520,
        "y": 920,
        "wires": []
    },
    {
        "id": "f5125f1ef8a5922d",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3590,
        "y": 800,
        "wires": []
    },
    {
        "id": "34388202a9fee4b0",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "ROB1BACKUP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4420,
        "y": 1420,
        "wires": []
    },
    {
        "id": "3cc8c1336018c456",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4660,
        "y": 3600,
        "wires": []
    },
    {
        "id": "9b7d970fd077b87c",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "Trigger Save Reset",
        "links": [
            "2edd3fed063cccae",
            "d81841cc861652b3",
            "9e08147f903bac3b",
            "6f3461db94b10e71",
            "b1e7607bcddbd0c3",
            "298cef2bd048ef80",
            "2a8b9d3f9b0d1194",
            "ac7881ae415c9c9c",
            "bdbfaa8345474655",
            "b223477af032653e",
            "4d58fbc57af7cb7d",
            "03046034c974aed3",
            "6a054fa4606e20a4",
            "93f5dfbe80e101d0",
            "2362705d7baa151b",
            "ba7e8a4777b42d3f",
            "817685086da2dd5b",
            "a34e0a1020eadb9d",
            "fa10fc9a5ac7d51a",
            "f826db85e17e6167"
        ],
        "x": 3025,
        "y": 820,
        "wires": [
            [
                "ce116459c0456739",
                "b0c0e991fe25322f",
                "5772d60fe6860136",
                "e818882e7cb7ca83"
            ]
        ]
    },
    {
        "id": "64b049f658815f2b",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "command": "cp blue1-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver && cp blue2-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver && cp red1-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver && cp red2-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1310,
        "y": 620,
        "wires": [
            [
                "a4ed00fe71128c7d"
            ],
            [
                "a4ed00fe71128c7d"
            ],
            []
        ]
    },
    {
        "id": "ce116459c0456739",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cp blue1-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ; cp blue2-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ; cp red1-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ; cp red2-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3475,
        "y": 660,
        "wires": [
            [
                "bad040b0d688381d"
            ],
            [
                "bad040b0d688381d"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "b0c0e991fe25322f",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3270,
        "y": 700,
        "wires": []
    },
    {
        "id": "0011d3c8bfd20d8a",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2980,
        "y": 660,
        "wires": [
            [
                "ce116459c0456739"
            ]
        ]
    },
    {
        "id": "65804949ca66fef8",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "Trigger Manoeuvre Suivante",
        "mode": "link",
        "links": [
            "494fe4243096d496",
            "e2e7293c6ae62c8f",
            "4c60605bb9b8ada9",
            "674ea034eaa018a4"
        ],
        "x": 3385,
        "y": 1880,
        "wires": []
    },
    {
        "id": "5e781b7fa560acc5",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4310,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ca3cd5d44c550444",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && python charger_reset.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3300,
        "y": 2320,
        "wires": [
            [
                "e4644615f9ad0687",
                "fdfa885d1fd4d079",
                "c14cb7eb9085e4d4"
            ],
            [
                "bb1e0850ed8c99fc"
            ],
            [
                "5518f99e77f4ab8f"
            ]
        ]
    },
    {
        "id": "5518f99e77f4ab8f",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "FLUSHMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3970,
        "y": 2380,
        "wires": []
    },
    {
        "id": "bb1e0850ed8c99fc",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "FLUSHMEM ERR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3970,
        "y": 2340,
        "wires": []
    },
    {
        "id": "e4644615f9ad0687",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3960,
        "y": 2260,
        "wires": [
            [
                "a57b43a426b7a684",
                "5c4b9c2df7fdae90",
                "b0a7550dfa812ea0",
                "dbe0f66c95528227",
                "ee3287eacb568967",
                "4051d8215e293679",
                "6932c8c8d6150a8f",
                "489f6f790aea3c49",
                "f98291dc4ff7953c",
                "853d7d3ffa61a5d2",
                "148545e9632ffb12"
            ]
        ]
    },
    {
        "id": "a57b43a426b7a684",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete rob1blelatest",
        "collection": "rob1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4750,
        "y": 2340,
        "wires": []
    },
    {
        "id": "5c4b9c2df7fdae90",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4750,
        "y": 2380,
        "wires": []
    },
    {
        "id": "b0a7550dfa812ea0",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest",
        "collection": "sattlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4750,
        "y": 2440,
        "wires": []
    },
    {
        "id": "dbe0f66c95528227",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4750,
        "y": 2500,
        "wires": []
    },
    {
        "id": "ee3287eacb568967",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4760,
        "y": 2560,
        "wires": []
    },
    {
        "id": "4051d8215e293679",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4760,
        "y": 2620,
        "wires": []
    },
    {
        "id": "6932c8c8d6150a8f",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4750,
        "y": 2680,
        "wires": []
    },
    {
        "id": "f98291dc4ff7953c",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4750,
        "y": 2740,
        "wires": []
    },
    {
        "id": "853d7d3ffa61a5d2",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4740,
        "y": 2800,
        "wires": []
    },
    {
        "id": "148545e9632ffb12",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4740,
        "y": 2860,
        "wires": []
    },
    {
        "id": "489f6f790aea3c49",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3310,
        "y": 3460,
        "wires": [
            [
                "34f4c336c8c56f7d",
                "92f4e8271f16885d",
                "523b02cf5a3734cb",
                "6a11f73df8b38639",
                "fa8fec63d45c0250",
                "ac5bc7b7abcf5b3a",
                "87529d7fdfc49de3",
                "6ccec3e447e56d68",
                "2461411f3e3f8144",
                "ec2e0a73ca482221",
                "7958d22eb1851c7c",
                "bfcf9260efdb7ea3",
                "a12f55a6d1810d23"
            ]
        ]
    },
    {
        "id": "34f4c336c8c56f7d",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3630,
        "y": 3640,
        "wires": [
            [
                "41c239c9fd9cf88f"
            ]
        ]
    },
    {
        "id": "41c239c9fd9cf88f",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3810,
        "y": 3640,
        "wires": [
            [
                "baac13cdfab9d582"
            ]
        ]
    },
    {
        "id": "baac13cdfab9d582",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 3885,
        "y": 3700,
        "wires": []
    },
    {
        "id": "92f4e8271f16885d",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3350,
        "y": 3400,
        "wires": []
    },
    {
        "id": "d59250196b75b42e",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4680,
        "y": 3720,
        "wires": []
    },
    {
        "id": "fdfa885d1fd4d079",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3950,
        "y": 2300,
        "wires": []
    },
    {
        "id": "971df0f0f80c7cf1",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4660,
        "y": 3660,
        "wires": []
    },
    {
        "id": "b653297f6126fa16",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3780,
        "y": 3620,
        "wires": []
    },
    {
        "id": "523b02cf5a3734cb",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "blue1-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver/blue1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3140,
        "y": 3520,
        "wires": [
            [
                "bdbec9e9fd09ed33",
                "7bd1a7e740e71249"
            ]
        ]
    },
    {
        "id": "178b9f9b9c166a7f",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = msg.payload[4].col1 || \"0.0\";\n\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // Handle cases where msg.payload is not an array\n    node.error(\"msg.payload is not an array.\", msg);\n    return null; // Stop further processing\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3260,
        "y": 3580,
        "wires": [
            [
                "b653297f6126fa16",
                "3a2bd24c6fdc9274",
                "db9d11a1e02ca5db",
                "0b5ab5ef1f7b5519",
                "67077e2686865a44",
                "6d68815a456a141b",
                "44d3124f635ddc60"
            ]
        ]
    },
    {
        "id": "bdbec9e9fd09ed33",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3090,
        "y": 3580,
        "wires": [
            [
                "178b9f9b9c166a7f"
            ]
        ]
    },
    {
        "id": "49f667faf5c448d0",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3560,
        "y": 2220,
        "wires": [
            [
                "ca3cd5d44c550444"
            ],
            [],
            []
        ]
    },
    {
        "id": "da5138ddb7f48515",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "TEST DEBUH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3760,
        "y": 2420,
        "wires": []
    },
    {
        "id": "c14cb7eb9085e4d4",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copyManeuverReset.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3320,
        "y": 2420,
        "wires": [
            [
                "d2103b6971931efa"
            ],
            [
                "d2103b6971931efa"
            ],
            []
        ]
    },
    {
        "id": "d2103b6971931efa",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "TEDT LOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3750,
        "y": 2480,
        "wires": []
    },
    {
        "id": "6a11f73df8b38639",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "Update LastManeuverTime",
        "mode": "link",
        "links": [
            "d1bb1f02cfef5c21",
            "9c9b0d6a4f3be736",
            "614c0a9e70da8fda",
            "7ecf593b17dd6d6d"
        ],
        "x": 3475,
        "y": 3340,
        "wires": []
    },
    {
        "id": "3a2bd24c6fdc9274",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3370,
        "y": 3540,
        "wires": []
    },
    {
        "id": "8a2f0c4e96b30352",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4430,
        "y": 3180,
        "wires": [
            [
                "3ef4064b112ff826",
                "2ceae2c9b56984c1"
            ]
        ]
    },
    {
        "id": "fa8fec63d45c0250",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "rob1btlelatest_reset",
        "collection": "rob1btlelatest_reset",
        "operation": "count",
        "x": 4230,
        "y": 3180,
        "wires": [
            [
                "8a2f0c4e96b30352"
            ]
        ]
    },
    {
        "id": "3ef4064b112ff826",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4610,
        "y": 3140,
        "wires": []
    },
    {
        "id": "ac5bc7b7abcf5b3a",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1atlelatest_reset",
        "collection": "p1atlelatest_reset",
        "operation": "count",
        "x": 4230,
        "y": 3240,
        "wires": [
            [
                "53806540937b1c4d"
            ]
        ]
    },
    {
        "id": "53806540937b1c4d",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4430,
        "y": 3240,
        "wires": [
            [
                "043b4a384e1a8662"
            ]
        ]
    },
    {
        "id": "87529d7fdfc49de3",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "sattlelatest_reset",
        "collection": "sattlelatest_reset",
        "operation": "count",
        "x": 4230,
        "y": 3300,
        "wires": [
            [
                "7912d7dfb1f6dd0e"
            ]
        ]
    },
    {
        "id": "7912d7dfb1f6dd0e",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4430,
        "y": 3300,
        "wires": [
            [
                "a1d72a78106a63f0"
            ]
        ]
    },
    {
        "id": "6ccec3e447e56d68",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1btlelatest_reset",
        "collection": "p1btlelatest_reset",
        "operation": "count",
        "x": 4230,
        "y": 3360,
        "wires": [
            [
                "1620abe5d28e121b"
            ]
        ]
    },
    {
        "id": "1620abe5d28e121b",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4430,
        "y": 3360,
        "wires": [
            [
                "6e7f76ff0403369a"
            ]
        ]
    },
    {
        "id": "2461411f3e3f8144",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo4tlelatest_reset",
        "collection": "pneo4tlelatest_reset",
        "operation": "count",
        "x": 4240,
        "y": 3420,
        "wires": [
            [
                "d571e87489cb5d4e"
            ]
        ]
    },
    {
        "id": "d571e87489cb5d4e",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4430,
        "y": 3420,
        "wires": [
            [
                "f223fd686cb4e51e"
            ]
        ]
    },
    {
        "id": "ec2e0a73ca482221",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo3tlelatest_reset",
        "collection": "pneo3tlelatest_reset",
        "operation": "count",
        "x": 4240,
        "y": 3480,
        "wires": [
            [
                "d2c2bc0afc1da67e"
            ]
        ]
    },
    {
        "id": "d2c2bc0afc1da67e",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4450,
        "y": 3480,
        "wires": [
            [
                "c64ed3ba88341edb"
            ]
        ]
    },
    {
        "id": "974746bc2c59203c",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b1tlelatest_reset",
        "collection": "b1tlelatest_reset",
        "operation": "find",
        "x": 4220,
        "y": 3540,
        "wires": [
            []
        ]
    },
    {
        "id": "48f9d8d8e553059f",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b2tlelatest_reset",
        "collection": "b2tlelatest_reset",
        "operation": "find",
        "x": 4220,
        "y": 3600,
        "wires": [
            [
                "5db0f19f388022a0"
            ]
        ]
    },
    {
        "id": "5db0f19f388022a0",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4470,
        "y": 3600,
        "wires": [
            []
        ]
    },
    {
        "id": "4bee9fb156a3613f",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r1tlelatest_reset",
        "collection": "r1tlelatest_reset",
        "operation": "find",
        "x": 4220,
        "y": 3660,
        "wires": [
            [
                "40647c71c1ef5410"
            ]
        ]
    },
    {
        "id": "4dd8d15aac948fb3",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r2tlelatest_reset",
        "collection": "r2tlelatest_reset",
        "operation": "find",
        "x": 4220,
        "y": 3720,
        "wires": [
            [
                "e30a5e4511540e55"
            ]
        ]
    },
    {
        "id": "40647c71c1ef5410",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4470,
        "y": 3660,
        "wires": [
            []
        ]
    },
    {
        "id": "e30a5e4511540e55",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4470,
        "y": 3720,
        "wires": [
            []
        ]
    },
    {
        "id": "6c07713f70b78d16",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "command": "cd /app/maneuver-manager && rm -rf Result.txt && rm -rf PostManeuverDate.txt && rm -rf LastManeuverDate.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3265,
        "y": 2240,
        "wires": [
            [
                "49f667faf5c448d0"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "b29b532b82f955b8",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2680,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "2ceae2c9b56984c1",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4630,
        "y": 3180,
        "wires": []
    },
    {
        "id": "043b4a384e1a8662",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4630,
        "y": 3240,
        "wires": []
    },
    {
        "id": "a1d72a78106a63f0",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4630,
        "y": 3300,
        "wires": []
    },
    {
        "id": "6e7f76ff0403369a",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4630,
        "y": 3360,
        "wires": []
    },
    {
        "id": "f223fd686cb4e51e",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4640,
        "y": 3420,
        "wires": []
    },
    {
        "id": "c64ed3ba88341edb",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 4660,
        "y": 3480,
        "wires": []
    },
    {
        "id": "c5b6b5d0caf2f6de",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "links": [
            "bec718485f8041b7",
            "09305a9aaa0dfe88",
            "8541c24772608099",
            "502deed56b914252"
        ],
        "x": 3175,
        "y": 2240,
        "wires": [
            [
                "6c07713f70b78d16",
                "6d8a4f8baa30b127"
            ]
        ]
    },
    {
        "id": "6d68815a456a141b",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "maj affichage RESET",
        "mode": "link",
        "links": [
            "99316e73af4e2cfd",
            "b50933f8d8ad72dc",
            "f0aeeb9330bd5736",
            "f2b7fba095ddcde8"
        ],
        "x": 3855,
        "y": 3540,
        "wires": []
    },
    {
        "id": "d7275503a7578c76",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3950,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "535e30ff0469df5c",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "cd /app/maneuver-manager && rm -rf Result.txt && rm -rf PostManeuverDate.txt && rm -rf LastManeuverDate.txt && rm -rf Result2.txt && rm -rf PostManeuverDate2.txt && rm -rf LastManeuverDate2.txt && rm -rf Result3.txt && rm -rf PostManeuverDate3.txt && rm -rf LastManeuverDate3.txt && rm -rf Result4.txt && rm -rf PostManeuverDate4.txt && rm -rf LastManeuverDate4.txt ",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 645,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "5b0bac86f7f846d6",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "command": "cd /app/maneuver-manager && rm -rf Result.txt && rm -rf PostManeuverDate.txt && rm -rf LastManeuverDate.txt && rm -rf Result2.txt && rm -rf PostManeuverDate2.txt && rm -rf LastManeuverDate2.txt && rm -rf Result3.txt && rm -rf PostManeuverDate3.txt && rm -rf LastManeuverDate3.txt && rm -rf Result4.txt && rm -rf PostManeuverDate4.txt && rm -rf LastManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2555,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "3dc3ad5f89940cca",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "cd /app/maneuver-manager && rm -rf Result.txt && rm -rf PostManeuverDate.txt && rm -rf LastManeuverDate.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 855,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "d8a7204d7a0f84a1",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 3340,
        "wires": [
            [
                "bb77c887bbb3497e",
                "73cf2d654b2c0825"
            ]
        ]
    },
    {
        "id": "09706bf39b2b4fde",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "func": "// Function Node: Correctly Handle Array and Object Payloads with Float Conversion\n\n// Initialize a new object to hold any additional transformed data\nlet newPayload = {};\n\n// Function to log current payload for debugging (optional)\nfunction logPayload(stage, payload) {\n    node.warn(`Stage: ${stage}, Payload: ${JSON.stringify(payload)}`);\n}\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Safely access the 4th element (index 3) and its 'col1' property\n        let col1Value = (msg.payload[3] && msg.payload[3].col1) ? msg.payload[3].col1 : \"0.0\";\n        \n        // Parse col1Value to float\n        let ergolMassFloat = parseFloat(col1Value);\n        \n        // Check if parsing was successful\n        if (isNaN(ergolMassFloat)) {\n            node.error(\"Failed to parse ergol_mass from msg.payload[3].col1\", msg);\n            return null; // Stop further processing\n        }\n        \n        // Assign the float value to the 3rd position (index 2) in the payload array\n        msg.payload[2] = ergolMassFloat;\n        \n        // Assign a static status value or derive it as needed\n        newPayload.status = 1;\n        \n        // Optional: Log the transformation\n        logPayload(\"Array Transformation\", msg.payload);\n        \n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n}\n// Check if msg.payload is an object with specific properties\nelse if (typeof msg.payload === 'object' && msg.payload !== null) {\n    // Define the required properties for the object payload\n    const requiredProperties = ['tle1', 'tle2', 'dry_mass', 'ergol_mass', 'ergol_consumption', 'status'];\n    \n    // Verify that all required properties exist in the payload\n    const hasAllProperties = requiredProperties.every(prop => prop in msg.payload);\n    \n    if (hasAllProperties) {\n        // Extract and parse properties from the object payload before modifying msg.payload\n        let tle1 = msg.payload.tle1 || \"\";\n        let tle2 = msg.payload.tle2 || \"\";\n        let dry_mass = parseFloat(msg.payload.dry_mass) || 0.0;\n        let ergol_mass = parseFloat(msg.payload.ergol_mass) || 0.0;\n        let ergol_consumption = parseFloat(msg.payload.ergol_consumption) || 0.0;\n        let status = parseInt(msg.payload.status, 10) || 0;\n        \n        // Optional: Log the extracted and parsed values\n        logPayload(\"Extracted Object Properties\", { tle1, tle2, dry_mass, ergol_mass, ergol_consumption, status });\n        \n        // Initialize transformed array\n        let transformedArray = [];\n        \n        // Assign properties to specific indices with correct data types\n        transformedArray[0] = tle1;                   // String\n        transformedArray[1] = tle2;                   // String\n        transformedArray[2] = ergol_mass;             // Float\n        transformedArray[3] = dry_mass;               // Float\n        transformedArray[4] = ergol_consumption;      // Float\n        \n        // Assign the transformed array to msg.payload\n        msg.payload = transformedArray;\n        \n        // Assign the status to newPayload\n        newPayload.status = status;\n        \n        // Optional: Log the transformation\n        logPayload(\"Object to Array Transformation\", msg.payload);\n        \n    } else {\n        // Handle cases where the object payload lacks required properties\n        node.error(\"msg.payload object does not contain all required properties.\", msg);\n        return null; // Stop further processing\n    }\n}\nelse {\n    // Handle cases where msg.payload is neither an array nor an object\n    node.error(\"Unsupported msg.payload format. It must be either an array or an object.\", msg);\n    return null; // Stop further processing\n}\n\n// Attach the newPayload to the message (optional)\nmsg.newPayload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 3540,
        "wires": [
            [
                "3cd1b8058c36144b",
                "3db42ae545d16dbe"
            ]
        ]
    },
    {
        "id": "3cd1b8058c36144b",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 3580,
        "wires": []
    },
    {
        "id": "3db42ae545d16dbe",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "Payload ergol mass",
        "mode": "link",
        "links": [
            "7c2077bbeafd3316",
            "4a6e401a8753e8c5",
            "1d6a91b5bf41350a",
            "ab80b748dde74f55"
        ],
        "x": 325,
        "y": 3540,
        "wires": []
    },
    {
        "id": "db9d11a1e02ca5db",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "func": "// Function Node: Correctly Handle Array and Object Payloads with Float Conversion\n\n// Initialize a new object to hold any additional transformed data\nlet newPayload = {};\n\n// Function to log current payload for debugging (optional)\nfunction logPayload(stage, payload) {\n    node.warn(`Stage: ${stage}, Payload: ${JSON.stringify(payload)}`);\n}\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Safely access the 4th element (index 3) and its 'col1' property\n        let col1Value = (msg.payload[3] && msg.payload[3].col1) ? msg.payload[3].col1 : \"0.0\";\n        \n        // Parse col1Value to float\n        let ergolMassFloat = parseFloat(col1Value);\n        \n        // Check if parsing was successful\n        if (isNaN(ergolMassFloat)) {\n            node.error(\"Failed to parse ergol_mass from msg.payload[3].col1\", msg);\n            return null; // Stop further processing\n        }\n        \n        // Assign the float value to the 3rd position (index 2) in the payload array\n        msg.payload[2] = ergolMassFloat;\n        \n        // Assign a static status value or derive it as needed\n        newPayload.status = 1;\n        \n        // Optional: Log the transformation\n        logPayload(\"Array Transformation\", msg.payload);\n        \n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n}\n// Check if msg.payload is an object with specific properties\nelse if (typeof msg.payload === 'object' && msg.payload !== null) {\n    // Define the required properties for the object payload\n    const requiredProperties = ['tle1', 'tle2', 'dry_mass', 'ergol_mass', 'ergol_consumption', 'status'];\n    \n    // Verify that all required properties exist in the payload\n    const hasAllProperties = requiredProperties.every(prop => prop in msg.payload);\n    \n    if (hasAllProperties) {\n        // Extract and parse properties from the object payload before modifying msg.payload\n        let tle1 = msg.payload.tle1 || \"\";\n        let tle2 = msg.payload.tle2 || \"\";\n        let dry_mass = parseFloat(msg.payload.dry_mass) || 0.0;\n        let ergol_mass = parseFloat(msg.payload.ergol_mass) || 0.0;\n        let ergol_consumption = parseFloat(msg.payload.ergol_consumption) || 0.0;\n        let status = parseInt(msg.payload.status, 10) || 0;\n        \n        // Optional: Log the extracted and parsed values\n        logPayload(\"Extracted Object Properties\", { tle1, tle2, dry_mass, ergol_mass, ergol_consumption, status });\n        \n        // Initialize transformed array\n        let transformedArray = [];\n        \n        // Assign properties to specific indices with correct data types\n        transformedArray[0] = tle1;                   // String\n        transformedArray[1] = tle2;                   // String\n        transformedArray[2] = ergol_mass;             // Float\n        transformedArray[3] = dry_mass;               // Float\n        transformedArray[4] = ergol_consumption;      // Float\n        \n        // Assign the transformed array to msg.payload\n        msg.payload = transformedArray;\n        \n        // Assign the status to newPayload\n        newPayload.status = status;\n        \n        // Optional: Log the transformation\n        logPayload(\"Object to Array Transformation\", msg.payload);\n        \n    } else {\n        // Handle cases where the object payload lacks required properties\n        node.error(\"msg.payload object does not contain all required properties.\", msg);\n        return null; // Stop further processing\n    }\n}\nelse {\n    // Handle cases where msg.payload is neither an array nor an object\n    node.error(\"Unsupported msg.payload format. It must be either an array or an object.\", msg);\n    return null; // Stop further processing\n}\n\n// Attach the newPayload to the message (optional)\nmsg.newPayload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3120,
        "y": 3640,
        "wires": [
            [
                "5fe6641201072922"
            ]
        ]
    },
    {
        "id": "5fe6641201072922",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "Payload ergol mass",
        "mode": "link",
        "links": [
            "7c2077bbeafd3316",
            "4a6e401a8753e8c5",
            "1d6a91b5bf41350a",
            "ab80b748dde74f55"
        ],
        "x": 3245,
        "y": 3640,
        "wires": []
    },
    {
        "id": "b29a300d2011e18f",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "Update Simulation Horizon",
        "mode": "link",
        "links": [
            "df203c13b4c0e703"
        ],
        "x": 375,
        "y": 3440,
        "wires": []
    },
    {
        "id": "e62a9cfd26e6369f",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "func": "// Initialize the payload as an array\nmsg.payload = [];\n\n// Create the first object with consommationErgols set to 0\nlet firstElement = {\n    consommationErgols: 0,\n    startdate: \"2025-01-31T00:00:00.000Z\",\n    enddate: \"2025-02-01T00:00:00.000Z\",\n    // Add other properties as needed\n    otherProperty1: \"value1\",\n    otherProperty2: \"value2\"\n};\n\n// Optionally, create additional objects\nlet secondElement = {\n    consommationErgols: 5,\n    startdate: \"2025-02-01T00:00:00.000Z\",\n    enddate: \"2025-02-02T00:00:00.000Z\",\n    // Add other properties as needed\n    otherProperty1: \"value3\",\n    otherProperty2: \"value4\"\n};\n\n// Push the objects into the payload array\nmsg.payload.push(firstElement);\nmsg.payload.push(secondElement);\n\n// Return the modified message\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 3620,
        "wires": [
            [
                "90d795dd4e128f13",
                "3058f53f34d12d6a"
            ]
        ]
    },
    {
        "id": "90d795dd4e128f13",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 3620,
        "wires": []
    },
    {
        "id": "3058f53f34d12d6a",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "Trigger path15 ergol mass",
        "mode": "link",
        "links": [
            "8878ad8ef3c6a124",
            "124c95c9f3d361e3",
            "ba5ed5086870bb27",
            "4205c15db8cc3252"
        ],
        "x": 345,
        "y": 3700,
        "wires": []
    },
    {
        "id": "0b5ab5ef1f7b5519",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "func": "// Initialize the payload as an array\nmsg.payload = [];\n\n// Create the first object with consommationErgols set to 0\nlet firstElement = {\n    consommationErgols: 0,\n    startdate: \"2025-01-31T00:00:00.000Z\",\n    enddate: \"2025-02-01T00:00:00.000Z\",\n    // Add other properties as needed\n    otherProperty1: \"value1\",\n    otherProperty2: \"value2\"\n};\n\n// Optionally, create additional objects\nlet secondElement = {\n    consommationErgols: 5,\n    startdate: \"2025-02-01T00:00:00.000Z\",\n    enddate: \"2025-02-02T00:00:00.000Z\",\n    // Add other properties as needed\n    otherProperty1: \"value3\",\n    otherProperty2: \"value4\"\n};\n\n// Push the objects into the payload array\nmsg.payload.push(firstElement);\nmsg.payload.push(secondElement);\n\n// Return the modified message\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3300,
        "y": 3700,
        "wires": [
            [
                "921ef1a8e9d9a5a4"
            ]
        ]
    },
    {
        "id": "921ef1a8e9d9a5a4",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "Trigger path15 ergol mass",
        "mode": "link",
        "links": [
            "8878ad8ef3c6a124",
            "124c95c9f3d361e3",
            "ba5ed5086870bb27",
            "4205c15db8cc3252"
        ],
        "x": 3425,
        "y": 3700,
        "wires": []
    },
    {
        "id": "22ff084e0b3a6bce",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "blue2-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver/blue2-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1080,
        "y": 2880,
        "wires": [
            [
                "32fc1783aa26dc8c"
            ]
        ]
    },
    {
        "id": "c6128b61027df9a9",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "red2-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver/red2-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1070,
        "y": 2760,
        "wires": [
            [
                "bc245fd53ba96b2e"
            ]
        ]
    },
    {
        "id": "7b1d5efec20b559a",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "red1-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver/red1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1070,
        "y": 2820,
        "wires": [
            [
                "64681845825e8408"
            ]
        ]
    },
    {
        "id": "d2d30656da898a5b",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 3030,
        "y": 940,
        "wires": [
            [
                "e1e0ed65ab86090e"
            ]
        ]
    },
    {
        "id": "e1e0ed65ab86090e",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "tle1-2",
        "func": "return {\n    topic: \"tle-mongo\",\n    payload: [\n        msg.payload[0]?.tle1 ?? \"0\",\n        msg.payload[0]?.tle2 ?? \"0\",\n        msg.payload[0]?.dry_mass != null ? String(msg.payload[0].dry_mass) : \"0\",\n        msg.payload[0]?.ergol_mass != null ? String(msg.payload[0].ergol_mass) : \"0\",\n        msg.payload[0]?.ergol_consumption != null ? String(msg.payload[0].ergol_consumption) : \"0\"\n    ],\n    body: 12\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3190,
        "y": 940,
        "wires": [
            [
                "9b13b2cda12f7b86"
            ]
        ]
    },
    {
        "id": "9b13b2cda12f7b86",
        "type": "split",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3330,
        "y": 940,
        "wires": [
            [
                "1022429310c3a7db"
            ]
        ]
    },
    {
        "id": "1022429310c3a7db",
        "type": "csv",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3050,
        "y": 980,
        "wires": [
            [
                "326a85b24bfbce15"
            ]
        ]
    },
    {
        "id": "326a85b24bfbce15",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "blue2-tle-storage.json",
        "filename": "blue2-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3240,
        "y": 980,
        "wires": [
            [
                "5a9e7646df2c6d7c"
            ]
        ]
    },
    {
        "id": "5a9e7646df2c6d7c",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3430,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "cf1c5029d15730b7",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 2980,
        "y": 1060,
        "wires": [
            [
                "dbc1a6da44691351"
            ]
        ]
    },
    {
        "id": "dbc1a6da44691351",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "tle1-2",
        "func": "return {\n    topic: \"tle-mongo\",\n    payload: [\n        msg.payload[0]?.tle1 ?? \"0\",\n        msg.payload[0]?.tle2 ?? \"0\",\n        msg.payload[0]?.dry_mass != null ? String(msg.payload[0].dry_mass) : \"0\",\n        msg.payload[0]?.ergol_mass != null ? String(msg.payload[0].ergol_mass) : \"0\",\n        msg.payload[0]?.ergol_consumption != null ? String(msg.payload[0].ergol_consumption) : \"0\"\n    ],\n    body: 12\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3150,
        "y": 1060,
        "wires": [
            [
                "b706fa238a700a00"
            ]
        ]
    },
    {
        "id": "b706fa238a700a00",
        "type": "split",
        "z": "107c9bc.328b364",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3275,
        "y": 1058,
        "wires": [
            [
                "3e221e40304f00e1"
            ]
        ]
    },
    {
        "id": "3e221e40304f00e1",
        "type": "csv",
        "z": "107c9bc.328b364",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 2998,
        "y": 1107,
        "wires": [
            [
                "2a4a0a5ad2cf75f3"
            ]
        ]
    },
    {
        "id": "2a4a0a5ad2cf75f3",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "red1-tle-storage.json",
        "filename": "red1-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3180,
        "y": 1100,
        "wires": [
            [
                "549ecdb48d512c19"
            ]
        ]
    },
    {
        "id": "549ecdb48d512c19",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3370,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "de81173396936862",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 2880,
        "y": 1200,
        "wires": [
            [
                "29b05ad662a0bc67"
            ]
        ]
    },
    {
        "id": "29b05ad662a0bc67",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "tle1-2",
        "func": "return {\n    topic: \"tle-mongo\",\n    payload: [\n        msg.payload[0]?.tle1 ?? \"0\",\n        msg.payload[0]?.tle2 ?? \"0\",\n        msg.payload[0]?.dry_mass != null ? String(msg.payload[0].dry_mass) : \"0\",\n        msg.payload[0]?.ergol_mass != null ? String(msg.payload[0].ergol_mass) : \"0\",\n        msg.payload[0]?.ergol_consumption != null ? String(msg.payload[0].ergol_consumption) : \"0\"\n    ],\n    body: 12\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3130,
        "y": 1200,
        "wires": [
            [
                "355cb57fe9a4d956"
            ]
        ]
    },
    {
        "id": "355cb57fe9a4d956",
        "type": "split",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3270,
        "y": 1200,
        "wires": [
            [
                "ca9fdef965147922"
            ]
        ]
    },
    {
        "id": "ca9fdef965147922",
        "type": "csv",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3410,
        "y": 1200,
        "wires": [
            [
                "89c037d85fad012e"
            ]
        ]
    },
    {
        "id": "89c037d85fad012e",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "red2-tle-storage.json",
        "filename": "red2-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3580,
        "y": 1200,
        "wires": [
            [
                "ed6a7bec2d295c79"
            ]
        ]
    },
    {
        "id": "ed6a7bec2d295c79",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3750,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "7958d22eb1851c7c",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "blue2-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver/blue2-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4220,
        "y": 3080,
        "wires": [
            [
                "d62493f20eb5a282"
            ]
        ]
    },
    {
        "id": "bfcf9260efdb7ea3",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "red1-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver/red1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4210,
        "y": 3020,
        "wires": [
            [
                "c0aaf46d434336e9"
            ]
        ]
    },
    {
        "id": "a12f55a6d1810d23",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "red2-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver/red2-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4210,
        "y": 2960,
        "wires": [
            [
                "2bf5142c60044a0b"
            ]
        ]
    },
    {
        "id": "eb4297fe5d43b488",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "command": "cp /app/maneuver-manager/blue2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 1120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a2cd3cbb2ed59c61",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "command": "cp /app/maneuver-manager/red1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 430,
        "y": 1240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fd4b52c2424477d0",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "command": "cp /app/maneuver-manager/red2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 1420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a4bfdc9a2f319968",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 130,
        "y": 1060,
        "wires": [
            [
                "e8c6f43310c7cedd"
            ]
        ]
    },
    {
        "id": "e8c6f43310c7cedd",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "tle1-2",
        "func": "return {\n    topic: \"tle-mongo\",\n    payload: [\n        msg.payload[0]?.tle1 ?? \"0\",\n        msg.payload[0]?.tle2 ?? \"0\",\n        msg.payload[0]?.dry_mass != null ? String(msg.payload[0].dry_mass) : \"0\",\n        msg.payload[0]?.ergol_mass != null ? String(msg.payload[0].ergol_mass) : \"0\",\n        msg.payload[0]?.ergol_consumption != null ? String(msg.payload[0].ergol_consumption) : \"0\"\n    ],\n    body: 12\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1060,
        "wires": [
            [
                "82ab24465ae0bc08"
            ]
        ]
    },
    {
        "id": "82ab24465ae0bc08",
        "type": "split",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "ff0d09c5938a3c57"
            ]
        ]
    },
    {
        "id": "ff0d09c5938a3c57",
        "type": "csv",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "102335b710ef7488",
                "664fdae9c07f441a"
            ]
        ]
    },
    {
        "id": "102335b710ef7488",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "blue2-tle-storage.json",
        "filename": "blue2-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 740,
        "y": 1060,
        "wires": [
            [
                "eb4297fe5d43b488",
                "d6a559f99b2afda9"
            ]
        ]
    },
    {
        "id": "b85d5cf08b74a76d",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "cc72d3141fc4e0ca"
            ]
        ]
    },
    {
        "id": "cc72d3141fc4e0ca",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "tle1-2",
        "func": "return {\n    topic: \"tle-mongo\",\n    payload: [\n        msg.payload[0]?.tle1 ?? \"0\",\n        msg.payload[0]?.tle2 ?? \"0\",\n        msg.payload[0]?.dry_mass != null ? String(msg.payload[0].dry_mass) : \"0\",\n        msg.payload[0]?.ergol_mass != null ? String(msg.payload[0].ergol_mass) : \"0\",\n        msg.payload[0]?.ergol_consumption != null ? String(msg.payload[0].ergol_consumption) : \"0\"\n    ],\n    body: 12\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1180,
        "wires": [
            [
                "c6f8a63529cea05c"
            ]
        ]
    },
    {
        "id": "c6f8a63529cea05c",
        "type": "split",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 1180,
        "wires": [
            [
                "4abaddc0bee47b06"
            ]
        ]
    },
    {
        "id": "4abaddc0bee47b06",
        "type": "csv",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 550,
        "y": 1180,
        "wires": [
            [
                "57aed92c8e5c3ece",
                "53ce9f3afc8b5b96"
            ]
        ]
    },
    {
        "id": "57aed92c8e5c3ece",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "red1-tle-storage.json",
        "filename": "red1-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 720,
        "y": 1180,
        "wires": [
            [
                "a2cd3cbb2ed59c61",
                "3a7b6e04e06b5df7"
            ]
        ]
    },
    {
        "id": "b949ae53c02c3474",
        "type": "mongodb in",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 100,
        "y": 1300,
        "wires": [
            [
                "befdf0551d65a57a"
            ]
        ]
    },
    {
        "id": "befdf0551d65a57a",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "tle1-2",
        "func": "return {\n    topic: \"tle-mongo\",\n    payload: [\n        msg.payload[0]?.tle1 ?? \"0\",\n        msg.payload[0]?.tle2 ?? \"0\",\n        msg.payload[0]?.dry_mass != null ? String(msg.payload[0].dry_mass) : \"0\",\n        msg.payload[0]?.ergol_mass != null ? String(msg.payload[0].ergol_mass) : \"0\",\n        msg.payload[0]?.ergol_consumption != null ? String(msg.payload[0].ergol_consumption) : \"0\"\n    ],\n    body: 12\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1300,
        "wires": [
            [
                "bafaac7115284361"
            ]
        ]
    },
    {
        "id": "bafaac7115284361",
        "type": "split",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 350,
        "y": 1300,
        "wires": [
            [
                "e960bdb298d3d4de"
            ]
        ]
    },
    {
        "id": "e960bdb298d3d4de",
        "type": "csv",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 470,
        "y": 1300,
        "wires": [
            [
                "e41222931cafe4bb",
                "7fc767274ef4c988"
            ]
        ]
    },
    {
        "id": "e41222931cafe4bb",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "red2-tle-storage.json",
        "filename": "red2-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 640,
        "y": 1300,
        "wires": [
            [
                "fd4b52c2424477d0",
                "7f44675362e6c3b0"
            ]
        ]
    },
    {
        "id": "32fc1783aa26dc8c",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1270,
        "y": 2880,
        "wires": [
            [
                "3e9514bb9823deaf"
            ]
        ]
    },
    {
        "id": "3e9514bb9823deaf",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = msg.payload[4].col1 || \"0.0\";\n\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // Handle cases where msg.payload is not an array\n    node.error(\"msg.payload is not an array.\", msg);\n    return null; // Stop further processing\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 2880,
        "wires": [
            [
                "aeb445153976f0be"
            ]
        ]
    },
    {
        "id": "aeb445153976f0be",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1600,
        "y": 2880,
        "wires": []
    },
    {
        "id": "64681845825e8408",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1270,
        "y": 2820,
        "wires": [
            [
                "a4e3d34ef5bfb731"
            ]
        ]
    },
    {
        "id": "a4e3d34ef5bfb731",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = msg.payload[4].col1 || \"0.0\";\n\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // Handle cases where msg.payload is not an array\n    node.error(\"msg.payload is not an array.\", msg);\n    return null; // Stop further processing\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 2820,
        "wires": [
            [
                "5bd1ddb6ac9f424d"
            ]
        ]
    },
    {
        "id": "5bd1ddb6ac9f424d",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1600,
        "y": 2820,
        "wires": []
    },
    {
        "id": "bc245fd53ba96b2e",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1250,
        "y": 2760,
        "wires": [
            [
                "de69c39bc77c5b8e"
            ]
        ]
    },
    {
        "id": "de69c39bc77c5b8e",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = msg.payload[4].col1 || \"0.0\";\n\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // Handle cases where msg.payload is not an array\n    node.error(\"msg.payload is not an array.\", msg);\n    return null; // Stop further processing\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 2760,
        "wires": [
            [
                "d077bb67443025ac"
            ]
        ]
    },
    {
        "id": "d077bb67443025ac",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1580,
        "y": 2760,
        "wires": []
    },
    {
        "id": "d62493f20eb5a282",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4410,
        "y": 3080,
        "wires": [
            [
                "50767b9359e0cfb9"
            ]
        ]
    },
    {
        "id": "50767b9359e0cfb9",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = msg.payload[4].col1 || \"0.0\";\n\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // Handle cases where msg.payload is not an array\n    node.error(\"msg.payload is not an array.\", msg);\n    return null; // Stop further processing\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4580,
        "y": 3080,
        "wires": [
            [
                "33644053cd13cc6d"
            ]
        ]
    },
    {
        "id": "33644053cd13cc6d",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4760,
        "y": 3080,
        "wires": []
    },
    {
        "id": "c0aaf46d434336e9",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4390,
        "y": 3020,
        "wires": [
            [
                "9292a7079ce2d86c"
            ]
        ]
    },
    {
        "id": "2bf5142c60044a0b",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4390,
        "y": 2960,
        "wires": [
            [
                "849432e9f65d6114"
            ]
        ]
    },
    {
        "id": "9292a7079ce2d86c",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = msg.payload[4].col1 || \"0.0\";\n\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // Handle cases where msg.payload is not an array\n    node.error(\"msg.payload is not an array.\", msg);\n    return null; // Stop further processing\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4560,
        "y": 3020,
        "wires": [
            [
                "d91c8ff21a13b799"
            ]
        ]
    },
    {
        "id": "849432e9f65d6114",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = msg.payload[4].col1 || \"0.0\";\n\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // Handle cases where msg.payload is not an array\n    node.error(\"msg.payload is not an array.\", msg);\n    return null; // Stop further processing\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4560,
        "y": 2960,
        "wires": [
            [
                "a01ccd5ef41de442"
            ]
        ]
    },
    {
        "id": "d91c8ff21a13b799",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4760,
        "y": 3020,
        "wires": []
    },
    {
        "id": "a01ccd5ef41de442",
        "type": "mongodb out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4760,
        "y": 2960,
        "wires": []
    },
    {
        "id": "f11f01266d722dd4",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 3400,
        "wires": []
    },
    {
        "id": "73cf2d654b2c0825",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "blue1-tle-storage-out",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 400,
        "y": 3380,
        "wires": [
            [
                "f11f01266d722dd4"
            ]
        ]
    },
    {
        "id": "465a711f9ccb227e",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "4b45f3397f2f64b2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 3280,
        "wires": [
            [
                "73cf2d654b2c0825"
            ]
        ]
    },
    {
        "id": "fab3d3fdff892299",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Reset Display LastManeuvers",
        "mode": "link",
        "links": [
            "95c8614d78c3473f",
            "2ef28ed3db4d0231",
            "a8d8e2d370892589",
            "7d465a2c88228a3f"
        ],
        "x": 315,
        "y": 200,
        "wires": []
    },
    {
        "id": "611d2559e0d334ad",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "func": "msg.payload='';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "c66596163a9051ad"
            ]
        ]
    },
    {
        "id": "c66596163a9051ad",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Flush Displays",
        "mode": "link",
        "links": [
            "113dc4819dacaba8",
            "e65a24fb13407c7d",
            "bfa87efc6be614d9",
            "4aaba9ca01ff7754",
            "f11b0ae6e6010670",
            "9f2d1fefb0051b17",
            "6a61307b89f50431",
            "3fa49594c489011f",
            "8f4a9a4f3a9fa16d",
            "ba0c1219bbaa679f",
            "4794edf754bb9065",
            "916b55a638cf7c99",
            "cfa3fdd1f0a1b306",
            "f0ad0faffec1b561",
            "d3c13e4720f89c84",
            "ae12ab0033fb8f47",
            "0fae0716899fc918",
            "429e2c5002cf4825",
            "bb7c2a8b25cd7a65",
            "b6a12c03d340a3ec",
            "49bd7febb544d5f8",
            "3bc6f9cf7e990b1b",
            "92644bfcab44272b",
            "a6e3cc68d873929a"
        ],
        "x": 515,
        "y": 320,
        "wires": []
    },
    {
        "id": "90f5e0b845f5fefc",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Reset Display LastManeuvers",
        "mode": "link",
        "links": [
            "95c8614d78c3473f",
            "2ef28ed3db4d0231",
            "a8d8e2d370892589",
            "7d465a2c88228a3f"
        ],
        "x": 735,
        "y": 200,
        "wires": []
    },
    {
        "id": "dcd7bf8e7376f0aa",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "",
        "func": "msg.payload='';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 360,
        "wires": [
            [
                "dde5d8b5922080f8"
            ]
        ]
    },
    {
        "id": "dde5d8b5922080f8",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "Flush Displays",
        "mode": "link",
        "links": [
            "113dc4819dacaba8",
            "e65a24fb13407c7d",
            "bfa87efc6be614d9",
            "4aaba9ca01ff7754",
            "f11b0ae6e6010670",
            "9f2d1fefb0051b17",
            "6a61307b89f50431",
            "3fa49594c489011f",
            "8f4a9a4f3a9fa16d",
            "ba0c1219bbaa679f",
            "4794edf754bb9065",
            "916b55a638cf7c99",
            "cfa3fdd1f0a1b306",
            "f0ad0faffec1b561",
            "d3c13e4720f89c84",
            "ae12ab0033fb8f47",
            "0fae0716899fc918",
            "429e2c5002cf4825",
            "bb7c2a8b25cd7a65",
            "b6a12c03d340a3ec",
            "49bd7febb544d5f8",
            "3bc6f9cf7e990b1b",
            "92644bfcab44272b",
            "a6e3cc68d873929a"
        ],
        "x": 805,
        "y": 360,
        "wires": []
    },
    {
        "id": "7383493e1cff74cc",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "3500e6d55cf0a0c8",
        "name": "Reset Display LastManeuvers",
        "mode": "link",
        "links": [
            "95c8614d78c3473f",
            "2ef28ed3db4d0231",
            "a8d8e2d370892589",
            "7d465a2c88228a3f"
        ],
        "x": 2435,
        "y": 300,
        "wires": []
    },
    {
        "id": "6eff1685472b2e56",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "",
        "func": "msg.payload='';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2440,
        "y": 140,
        "wires": [
            [
                "b6c5caf5a433eeb2"
            ]
        ]
    },
    {
        "id": "b6c5caf5a433eeb2",
        "type": "link out",
        "z": "107c9bc.328b364",
        "name": "Flush Displays",
        "mode": "link",
        "links": [
            "113dc4819dacaba8",
            "e65a24fb13407c7d",
            "bfa87efc6be614d9",
            "4aaba9ca01ff7754",
            "f11b0ae6e6010670",
            "9f2d1fefb0051b17",
            "6a61307b89f50431",
            "3fa49594c489011f",
            "8f4a9a4f3a9fa16d",
            "ba0c1219bbaa679f",
            "4794edf754bb9065",
            "916b55a638cf7c99",
            "cfa3fdd1f0a1b306",
            "f0ad0faffec1b561",
            "d3c13e4720f89c84",
            "ae12ab0033fb8f47",
            "0fae0716899fc918",
            "429e2c5002cf4825",
            "bb7c2a8b25cd7a65",
            "b6a12c03d340a3ec",
            "49bd7febb544d5f8",
            "3bc6f9cf7e990b1b",
            "92644bfcab44272b",
            "a6e3cc68d873929a"
        ],
        "x": 2435,
        "y": 180,
        "wires": []
    },
    {
        "id": "5772d60fe6860136",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "/app/maneuver-manager/LastManeuverDate.txt",
        "filename": "/app/maneuver-manager/LastManeuverDate.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2980,
        "y": 680,
        "wires": [
            [
                "1629e6d3b68e2c86"
            ]
        ]
    },
    {
        "id": "455dc326ce5b331e",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2840,
        "y": 800,
        "wires": [
            [
                "5772d60fe6860136"
            ]
        ]
    },
    {
        "id": "1629e6d3b68e2c86",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3250,
        "y": 640,
        "wires": []
    },
    {
        "id": "993cf635305db84a",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "echo \"{}\" > blue1-tle-storage.json && echo \"{}\" > blue2-tle-storage.json && echo \"{}\" > red1-tle-storage.json && echo \"{}\" > red2-tle-storage.json",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 575,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "93a7595f0e9e6c79",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "echo \"{}\" > blue1-tle-storage.json && echo \"{}\" > blue2-tle-storage.json && echo \"{}\" > red1-tle-storage.json && echo \"{}\" > red2-tle-storage.json",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 815,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "4986adffbe571116",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "del r/b db",
        "mode": "link",
        "links": [
            "508d38c3b32d4c33"
        ],
        "x": 615,
        "y": 260,
        "wires": []
    },
    {
        "id": "c2a583850e07004c",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "name": "del r/b db",
        "mode": "link",
        "links": [
            "508d38c3b32d4c33"
        ],
        "x": 845,
        "y": 320,
        "wires": []
    },
    {
        "id": "7bd1a7e740e71249",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3390,
        "y": 3500,
        "wires": []
    },
    {
        "id": "d4f6552102d80762",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "blue2-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver/blue1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2760,
        "y": 2620,
        "wires": [
            [
                "ea69137f31d3aa17"
            ]
        ]
    },
    {
        "id": "268838be651ba326",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 2680,
        "wires": []
    },
    {
        "id": "ea69137f31d3aa17",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2950,
        "y": 2620,
        "wires": [
            [
                "7292f3551795ec09",
                "67f3eb3177a2b15e"
            ]
        ]
    },
    {
        "id": "67f3eb3177a2b15e",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "func": "// Default to \"0\" if the expected object or col1 property is missing or empty\nlet ergolValue = \"0\";\n\n// Check if msg.payload is an array and that index 3 exists with a valid col1\nif (Array.isArray(msg.payload) && msg.payload[3] && typeof msg.payload[3].col1 !== 'undefined') {\n    // If col1 is empty or null, default to \"0\"\n    ergolValue = msg.payload[3].col1 || \"0\";\n}\n\n// Convert to a number\nlet ergolMass = Number(ergolValue);\n\n// Set a flag if ergolMass equals 0 (handles \"0\", \"0.0\", \"0.000\", etc.)\nmsg.massZero = (ergolMass === 0);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3100,
        "y": 2620,
        "wires": [
            [
                "f0043dffccad2274",
                "592c24bad31d1a87"
            ]
        ]
    },
    {
        "id": "f0043dffccad2274",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "massZero",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3270,
        "y": 2620,
        "wires": [
            [
                "268838be651ba326",
                "625e3fb2c49c4406"
            ]
        ]
    },
    {
        "id": "7292f3551795ec09",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2970,
        "y": 2680,
        "wires": []
    },
    {
        "id": "592c24bad31d1a87",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 2680,
        "wires": []
    },
    {
        "id": "6c16a8973772678b",
        "type": "file in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "blue1-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver/blue1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2740,
        "y": 2500,
        "wires": [
            [
                "19c4cb66950d42da"
            ]
        ]
    },
    {
        "id": "19c4cb66950d42da",
        "type": "json",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2950,
        "y": 2500,
        "wires": [
            [
                "1b2cf953e483d63b",
                "dafc0bca21f9acc5"
            ]
        ]
    },
    {
        "id": "1b2cf953e483d63b",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3010,
        "y": 2560,
        "wires": []
    },
    {
        "id": "c7a083b01b94e9eb",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3370,
        "y": 2460,
        "wires": []
    },
    {
        "id": "35c6639f8da230cf",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2930,
        "y": 2460,
        "wires": []
    },
    {
        "id": "f036d3202b2b8c10",
        "type": "switch",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "property": "massZero",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 2500,
        "wires": [
            [
                "c7a083b01b94e9eb",
                "212349f50e529bf7"
            ]
        ]
    },
    {
        "id": "dafc0bca21f9acc5",
        "type": "function",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "func": "// Default to \"0\" if the expected object or col1 property is missing or empty\nlet ergolValue = \"0\";\n\n// Check if msg.payload is an array and that index 3 exists with a valid col1\nif (Array.isArray(msg.payload) && msg.payload[3] && typeof msg.payload[3].col1 !== 'undefined') {\n    // If col1 is empty or null, default to \"0\"\n    ergolValue = msg.payload[3].col1 || \"0\";\n}\n\n// Convert to a number\nlet ergolMass = Number(ergolValue);\n\n// Set a flag if ergolMass equals 0 (handles \"0\", \"0.0\", \"0.000\", etc.)\nmsg.massZero = (ergolMass === 0);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3100,
        "y": 2500,
        "wires": [
            [
                "f036d3202b2b8c10",
                "35c6639f8da230cf",
                "ca81cec4388e1e8d"
            ]
        ]
    },
    {
        "id": "303a9b5269401b61",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 2800,
        "wires": []
    },
    {
        "id": "28108e2719d04f37",
        "type": "switch",
        "z": "107c9bc.328b364",
        "name": "",
        "property": "massZero",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3270,
        "y": 2740,
        "wires": [
            [
                "303a9b5269401b61",
                "d005a0609012a20f"
            ]
        ]
    },
    {
        "id": "dc5169a62f8b4feb",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 2800,
        "wires": []
    },
    {
        "id": "217876c1fb535444",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "",
        "func": "// Default to \"0\" if the expected object or col1 property is missing or empty\nlet ergolValue = \"0\";\n\n// Check if msg.payload is an array and that index 3 exists with a valid col1\nif (Array.isArray(msg.payload) && msg.payload[3] && typeof msg.payload[3].col1 !== 'undefined') {\n    // If col1 is empty or null, default to \"0\"\n    ergolValue = msg.payload[3].col1 || \"0\";\n}\n\n// Convert to a number\nlet ergolMass = Number(ergolValue);\n\n// Set a flag if ergolMass equals 0 (handles \"0\", \"0.0\", \"0.000\", etc.)\nmsg.massZero = (ergolMass === 0);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3100,
        "y": 2740,
        "wires": [
            [
                "28108e2719d04f37",
                "dc5169a62f8b4feb"
            ]
        ]
    },
    {
        "id": "a5239333e160716e",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2970,
        "y": 2800,
        "wires": []
    },
    {
        "id": "493d080228e51844",
        "type": "json",
        "z": "107c9bc.328b364",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2950,
        "y": 2740,
        "wires": [
            [
                "a5239333e160716e",
                "217876c1fb535444"
            ]
        ]
    },
    {
        "id": "02f0fa62da8f2824",
        "type": "file in",
        "z": "107c9bc.328b364",
        "name": "red1-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver/blue1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2750,
        "y": 2740,
        "wires": [
            [
                "493d080228e51844"
            ]
        ]
    },
    {
        "id": "62b32bec1a85fda3",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 2940,
        "wires": []
    },
    {
        "id": "afbe9de8f990c67e",
        "type": "switch",
        "z": "107c9bc.328b364",
        "name": "",
        "property": "massZero",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3270,
        "y": 2880,
        "wires": [
            [
                "62b32bec1a85fda3",
                "e469e0e2dcaa9726"
            ]
        ]
    },
    {
        "id": "760b86ef9250a2aa",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 2940,
        "wires": []
    },
    {
        "id": "e93c1b3cefcd2255",
        "type": "function",
        "z": "107c9bc.328b364",
        "name": "",
        "func": "// Default to \"0\" if the expected object or col1 property is missing or empty\nlet ergolValue = \"0\";\n\n// Check if msg.payload is an array and that index 3 exists with a valid col1\nif (Array.isArray(msg.payload) && msg.payload[3] && typeof msg.payload[3].col1 !== 'undefined') {\n    // If col1 is empty or null, default to \"0\"\n    ergolValue = msg.payload[3].col1 || \"0\";\n}\n\n// Convert to a number\nlet ergolMass = Number(ergolValue);\n\n// Set a flag if ergolMass equals 0 (handles \"0\", \"0.0\", \"0.000\", etc.)\nmsg.massZero = (ergolMass === 0);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3100,
        "y": 2880,
        "wires": [
            [
                "afbe9de8f990c67e",
                "760b86ef9250a2aa"
            ]
        ]
    },
    {
        "id": "d6db0431a7aa39e9",
        "type": "debug",
        "z": "107c9bc.328b364",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2970,
        "y": 2940,
        "wires": []
    },
    {
        "id": "2f680643b9eb0c0e",
        "type": "json",
        "z": "107c9bc.328b364",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2950,
        "y": 2880,
        "wires": [
            [
                "d6db0431a7aa39e9",
                "e93c1b3cefcd2255"
            ]
        ]
    },
    {
        "id": "29aefcdf376fb6e2",
        "type": "file in",
        "z": "107c9bc.328b364",
        "name": "red2-tle-storage-out",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver/blue1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2750,
        "y": 2880,
        "wires": [
            [
                "2f680643b9eb0c0e"
            ]
        ]
    },
    {
        "id": "ea4cdd2e4f7b52c8",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2620,
        "y": 2380,
        "wires": [
            [
                "6c16a8973772678b",
                "d4f6552102d80762",
                "02f0fa62da8f2824",
                "29aefcdf376fb6e2"
            ]
        ]
    },
    {
        "id": "212349f50e529bf7",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "command": "cd /app/maneuver-manager && rm -rf LastManeuverDate.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3345,
        "y": 2540,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "625e3fb2c49c4406",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "command": "cd /app/maneuver-manager && rm -rf LastManeuverDate2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3395,
        "y": 2600,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "d005a0609012a20f",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "command": "cd /app/maneuver-manager && rm -rf LastManeuverDate3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3385,
        "y": 2740,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "e469e0e2dcaa9726",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "command": "cd /app/maneuver-manager && rm -rf LastManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3385,
        "y": 2860,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "6d8a4f8baa30b127",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "Flush LastManeuverDate",
        "mode": "link",
        "links": [
            "4d38b3d1db32466b"
        ],
        "x": 2965,
        "y": 2280,
        "wires": []
    },
    {
        "id": "4d38b3d1db32466b",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "links": [
            "6d8a4f8baa30b127"
        ],
        "x": 2525,
        "y": 2620,
        "wires": [
            [
                "6c16a8973772678b",
                "d4f6552102d80762",
                "02f0fa62da8f2824",
                "29aefcdf376fb6e2"
            ]
        ]
    },
    {
        "id": "ca81cec4388e1e8d",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3210,
        "y": 2540,
        "wires": []
    },
    {
        "id": "7b8e3def200c9673",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Reset",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 555,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "7496da9a79dec10e",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "cb0fed7.3a64e1",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Reset",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 775,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "e818882e7cb7ca83",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cp /app/maneuver-manager/LastManeuverDate.txt /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ; cp /app/maneuver-manager/LastManeuverDate2.txt /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ; cp /app/maneuver-manager/LastManeuverDate3.txt /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ; cp /app/maneuver-manager/LastManeuverDate4.txt /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3295,
        "y": 740,
        "wires": [
            [
                "a02b957a1b6d1306"
            ],
            [
                "a02b957a1b6d1306"
            ],
            [
                "a02b957a1b6d1306"
            ]
        ],
        "l": false
    },
    {
        "id": "6fbbb28fe7153081",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3040,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "a02b957a1b6d1306",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3410,
        "y": 760,
        "wires": []
    },
    {
        "id": "8e4c6986326b15e0",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3420,
        "y": 1040,
        "wires": [
            [
                "2314358fc7877b2c"
            ]
        ]
    },
    {
        "id": "d7457f4e86335f90",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3200,
        "y": 780,
        "wires": [
            [
                "e818882e7cb7ca83"
            ]
        ]
    },
    {
        "id": "5905919b573633bf",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3420,
        "y": 3640,
        "wires": [
            [
                "6d68815a456a141b"
            ]
        ]
    },
    {
        "id": "4fe578c461387f85",
        "type": "link in",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "links": [
            "29645ceac3dd151a",
            "5b984e6300f5a102",
            "68f553b789ec6d9a",
            "c0c665279eb4c580",
            "640e0c9017e9572c",
            "e5fe6656c9f22fdb",
            "8ca277576f45a7c4",
            "9b46871b4fdfe2a5",
            "6b37dc4adcb902d6",
            "070ab495b74db407",
            "318469320d496c6d",
            "b2fb73f3e3075cb1",
            "bafc3afbdedfc38d",
            "bcbdb649408878f7"
        ],
        "x": 3655,
        "y": 1060,
        "wires": [
            [
                "326346e845502938",
                "620c03cdcbcec889",
                "fc421704c3bee125",
                "c6a270a6ef6d0138"
            ]
        ]
    },
    {
        "id": "001b0824eb50ab35",
        "type": "change",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3710,
        "y": 960,
        "wires": [
            [
                "326346e845502938",
                "620c03cdcbcec889",
                "fc421704c3bee125",
                "c6a270a6ef6d0138"
            ]
        ]
    },
    {
        "id": "326346e845502938",
        "type": "join-wait",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "paths": "[\"path_1\", \"blue1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "1",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3580,
        "y": 1000,
        "wires": [
            [
                "2314358fc7877b2c"
            ],
            []
        ]
    },
    {
        "id": "620c03cdcbcec889",
        "type": "join-wait",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "paths": "[\"path_1\", \"red2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "1",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4140,
        "y": 880,
        "wires": [
            [
                "97e290b652bad5bf"
            ],
            []
        ]
    },
    {
        "id": "fc421704c3bee125",
        "type": "join-wait",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "paths": "[\"path_1\", \"red1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "1",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4000,
        "y": 980,
        "wires": [
            [
                "77676a6d5be87ab2"
            ],
            []
        ]
    },
    {
        "id": "c6a270a6ef6d0138",
        "type": "join-wait",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "name": "",
        "paths": "[\"path_1\", \"blue2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3840,
        "y": 1060,
        "wires": [
            [
                "de25163bba6129dd"
            ],
            []
        ]
    },
    {
        "id": "de25163bba6129dd",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python sauvegarder_reset.py blue2",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3945,
        "y": 1100,
        "wires": [
            [
                "764182b0d50a2913",
                "259f13668b17f7bd"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "764182b0d50a2913",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cp blue1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp blue2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp red1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp red2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3995,
        "y": 1060,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "77676a6d5be87ab2",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python sauvegarder_reset.py red1",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4065,
        "y": 1040,
        "wires": [
            [
                "259f13668b17f7bd",
                "330ea53c64f0138f"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "330ea53c64f0138f",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cp blue1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp blue2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp red1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp red2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4125,
        "y": 1000,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "97e290b652bad5bf",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python sauvegarder_reset.py red2",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4235,
        "y": 1000,
        "wires": [
            [
                "28be6b066543afc1",
                "259f13668b17f7bd"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "28be6b066543afc1",
        "type": "exec",
        "z": "107c9bc.328b364",
        "g": "b2b0b7d6472b62bd",
        "command": "cp blue1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp blue2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp red1-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver && cp red2-tle-mongo.json /app/jsatorb-rest-api/files/default_Sat/Data/Reset/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4315,
        "y": 960,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "67077e2686865a44",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "Trigger netcat VTS",
        "mode": "link",
        "links": [
            "3b35bf6ac9b19b8d"
        ],
        "x": 3855,
        "y": 3500,
        "wires": []
    },
    {
        "id": "a9f0476b97129ad6",
        "type": "delay",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 790,
        "y": 960,
        "wires": [
            [
                "d5f8a51e9308e828"
            ]
        ]
    },
    {
        "id": "f4b78cba0f572a75",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 1020,
        "wires": [
            [
                "a4bfdc9a2f319968"
            ]
        ]
    },
    {
        "id": "c346c4d1d6bfcf20",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1140,
        "wires": [
            [
                "b85d5cf08b74a76d"
            ]
        ]
    },
    {
        "id": "33dbcba854e5c4bb",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 60,
        "y": 1260,
        "wires": [
            [
                "b949ae53c02c3474"
            ]
        ]
    },
    {
        "id": "eebda8414fa284bd",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 680,
        "wires": [
            [
                "bf11c8a10004687e"
            ]
        ]
    },
    {
        "id": "56598af0747e98bd",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 740,
        "wires": []
    },
    {
        "id": "d6a559f99b2afda9",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3a7b6e04e06b5df7",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1160,
        "wires": []
    },
    {
        "id": "7f44675362e6c3b0",
        "type": "debug",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b732859e6fc14f3d",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "blue1-tle-storage.json",
        "filename": "/app/maneuver-manager/blue1-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 420,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "664fdae9c07f441a",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "blue2-tle-storage.json",
        "filename": "/app/maneuver-manager/blue2-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 740,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "53ce9f3afc8b5b96",
        "type": "file",
        "z": "107c9bc.328b364",
        "g": "7801a0a985539b08",
        "name": "red1-tle-storage.json",
        "filename": "/app/maneuver-manager/red1-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 780,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "7fc767274ef4c988",
        "type": "file",
        "z": "107c9bc.328b364",
        "name": "red2-tle-storage.json",
        "filename": "/app/maneuver-manager/red2-tle-mongo.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 722,
        "y": 1359,
        "wires": [
            []
        ]
    },
    {
        "id": "b79b82174d69671e",
        "type": "inject",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3600,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "44d3124f635ddc60",
        "type": "link out",
        "z": "107c9bc.328b364",
        "g": "92c463ef87927c13",
        "name": "",
        "mode": "link",
        "links": [
            "9b0ac932bff73edd"
        ],
        "x": 3915,
        "y": 3580,
        "wires": []
    },
    {
        "id": "3d23bd653343df8f",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "triggerin",
        "links": [
            "97d64ebb.eedeb"
        ],
        "x": 165,
        "y": 740,
        "wires": [
            [
                "494dcf060f8953a6"
            ]
        ]
    },
    {
        "id": "152823c72351c9fd",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "timein",
        "links": [
            "2c13afbda9e52345",
            "0ca55a608cc3687e",
            "b34eebed99433c97",
            "c31b50f7670cb61d",
            "e831a7de1ca333eb",
            "2bf663a53ca7f644",
            "e74b2a1d23886926",
            "c077afd82fb12612",
            "7a765cd7d41b1745",
            "0ca8c09d7cbaeb77",
            "31ebbce3774b619c",
            "f4c8aad646f65aca",
            "9408b8be30e4d1e1",
            "98a121fd8de28a07",
            "1843d3ddde194a97",
            "6c8ac12042ef66cc",
            "0591ba7c899f79a7",
            "a78ed11d5a61eb38",
            "ce62107af64ea46c",
            "af4bc89fa6be7eb4",
            "331566af0f6396ab",
            "277eb99ba931bbbd",
            "1dc7dffde56d50df",
            "77dbd23c0cfe5c0c",
            "c1c9d1585e036f74",
            "67e6cbab14e31052",
            "572ea7f7bbdb519c",
            "3ef7d4b96b8b3e13",
            "cb96ef13fcd94cf9",
            "dee3da887861d66d",
            "066eba9a78869ea9",
            "90b6aa37c5ca6148",
            "40804f27e657f732",
            "178a86d5a080d961",
            "6d83cf452786331f",
            "1efde9b531ce558a",
            "a2bdabfead748363",
            "f9c30222ceee4263",
            "40182ea0f39fb8d4",
            "522c0aa0dc1b39fb",
            "b23b242eb251739c",
            "1fcf5fe8895c7cc9",
            "d15a1cea5750ffed",
            "0d6d22936790329a",
            "51e640e91aadc302",
            "ba7954e6d6c8a950",
            "e48dec8087640bae",
            "bcd6e96bf78b0b65",
            "223edc875ebde99b",
            "15446c60ce8e71a7",
            "18b75cc4a171a86d",
            "f9fb2903687ea247",
            "d1880e76f7f48021",
            "9214dfcfbcf5216a",
            "71b301128c12bf6f",
            "c293b71996891517",
            "4b1a25d0abb90e78",
            "9373b38afd7442be",
            "0731cb6f95d98a23",
            "c1f31360b5f6f4f9",
            "eeca63e3cf156549",
            "2e820658ee276e33",
            "b92f875a36700294",
            "dfc82496d16bba5b",
            "433532f24271fc1d",
            "39255f4fd8e3f58f",
            "2a59cd588865a4fa",
            "b4e81ceed2b56112",
            "680a4532cd086bdd",
            "6fddaf7f2007dbad",
            "f8b7dd53a06c884b"
        ],
        "x": 165,
        "y": 660,
        "wires": [
            [
                "494dcf060f8953a6"
            ]
        ]
    },
    {
        "id": "b34eebed99433c97",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 4295,
        "y": 4860,
        "wires": []
    },
    {
        "id": "4f58bdb6277957c9",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "Max slider HOME",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\nmsg = {ui_control:{max:(end-start)/10000}};//10sec step between start date and end date\nmsg.body = [start/1000, end/1000];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4010,
        "y": 4900,
        "wires": [
            [
                "f663528e83935a5a"
            ]
        ]
    },
    {
        "id": "f663528e83935a5a",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4280,
        "y": 4900,
        "wires": [
            [
                "232f9530e9483fd0",
                "e3a1c188f10c4bad"
            ]
        ]
    },
    {
        "id": "232f9530e9483fd0",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "Time visi",
        "func": "var datecurrent = msg.body[0]+msg.payload[1]*10;\n\nvar myDate = new Date(datecurrent *1000);\ndate= (myDate.toGMTString());\n\nmsg.payload = date\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4430,
        "y": 4940,
        "wires": [
            []
        ]
    },
    {
        "id": "e3a1c188f10c4bad",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "Preparation",
        "func": "msg = {curr : {max : msg.payload[1]}, ui_control : {max : msg.ui_control.max}, body : {min : msg.body[0]}};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4440,
        "y": 4900,
        "wires": [
            [
                "2d62d383e359e3e4"
            ]
        ]
    },
    {
        "id": "2d62d383e359e3e4",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4620,
        "y": 4900,
        "wires": [
            [
                "139d87a61de8fb2d",
                "38021a7090e5c90b"
            ]
        ]
    },
    {
        "id": "139d87a61de8fb2d",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "setpath1-HOME",
        "mode": "link",
        "links": [
            "29a4edb4fa25f4b5",
            "440df756d3e898f2",
            "a58b1046b5db4021",
            "d0db2a049689d1eb",
            "df435a8c7ac861f9",
            "14d1b68b8578a168",
            "df5326d15dc9e51a",
            "7f9af1aa3c1eff6d",
            "23bfb339e40ab72d",
            "9072d4ecfd2ab573",
            "026c0f42bb89c4ac",
            "e98a01a47f23395e",
            "5b78836a816f993b",
            "b5baeda070b9f6c8",
            "92dfc759b1f5275e",
            "45bd63e8db2df122"
        ],
        "x": 4765,
        "y": 4900,
        "wires": []
    },
    {
        "id": "029bbc417ee358dc",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "Mongo PeritimeB1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 200,
        "wires": []
    },
    {
        "id": "38021a7090e5c90b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "to Propagator",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4810,
        "y": 4860,
        "wires": []
    },
    {
        "id": "3c3d942c136c7826",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "query for perigee time",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 180,
        "wires": [
            [
                "7855c24fe1f2a894",
                "10c966ac962761f1",
                "d9a5bc7406abf2fc",
                "3dfe2f2f65db65d6"
            ]
        ]
    },
    {
        "id": "7855c24fe1f2a894",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 1800,
        "y": 200,
        "wires": [
            [
                "029bbc417ee358dc"
            ]
        ]
    },
    {
        "id": "14e9f3349ffe258f",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1280,
        "y": 180,
        "wires": [
            [
                "3c3d942c136c7826"
            ]
        ]
    },
    {
        "id": "10c966ac962761f1",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 1800,
        "y": 160,
        "wires": [
            [
                "a924b29b46320d1c"
            ]
        ]
    },
    {
        "id": "a924b29b46320d1c",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "Mongo PeritimeR1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 160,
        "wires": []
    },
    {
        "id": "3dfe2f2f65db65d6",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 1800,
        "y": 120,
        "wires": [
            [
                "0a2949f7bc6bbd3f"
            ]
        ]
    },
    {
        "id": "0a2949f7bc6bbd3f",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "Mongo PeritimeR2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 120,
        "wires": []
    },
    {
        "id": "d9a5bc7406abf2fc",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 1800,
        "y": 240,
        "wires": [
            [
                "a9a84e889621e77f"
            ]
        ]
    },
    {
        "id": "a9a84e889621e77f",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "9364dbbaeae7efcc",
        "name": "Mongo PeritimeB2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 240,
        "wires": []
    },
    {
        "id": "ef3dc7e1d721b2f9",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "blue2-tle-storage",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1110,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f1a02d339ab15d13",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1320,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "19cdc35c8aa36a2d",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Move to dateTLE",
        "info": "It seems that the parser ignores the object field name that i set earlier in B1 Timestamp checker nameingly \"dateTLE\" it is a problem becquse the date stays in payload and after because of the \"join-wait\" it will be erased",
        "x": 2100,
        "y": 1320,
        "wires": []
    },
    {
        "id": "13f24bd28d6f61be",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "name": "Json 02/05/23",
        "info": "I try to use a parser to write the time stamp in the date-storage file as a json string because i think it explains the field changes ",
        "x": 2030,
        "y": 840,
        "wires": []
    },
    {
        "id": "b13f26ebfd29f450",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "removed after json up left",
        "info": "",
        "x": 1870,
        "y": 1320,
        "wires": []
    },
    {
        "id": "494dcf060f8953a6",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 160,
        "y": 800,
        "wires": [
            [
                "d60bc19a3bf147c0"
            ]
        ]
    },
    {
        "id": "d60bc19a3bf147c0",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 880,
        "wires": [
            [
                "770a98795c591195",
                "a290b360e6a7c589"
            ]
        ]
    },
    {
        "id": "2072d02e.cd2d4",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "Time-Setter-Out2",
        "mode": "link",
        "links": [
            "50c9e4557fa523d4",
            "8c4538d2189874b0",
            "e2f3f03425eed5dd",
            "ed6b13ca02a5a70d",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 855,
        "y": 280,
        "wires": []
    },
    {
        "id": "d2005c55.4ffd3",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "Set path_8",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "2072d02e.cd2d4",
                "844dc894dbd219b5",
                "aabb98fe3ab1ba7f"
            ]
        ]
    },
    {
        "id": "4be84d73.e987b4",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "sortie persist",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "d3182296.0de68",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "triggerin",
        "links": [
            "97d64ebb.eedeb"
        ],
        "x": 175,
        "y": 340,
        "wires": [
            [
                "20e12284ea245aef",
                "912057b9dc600470"
            ]
        ]
    },
    {
        "id": "8d74ca2b.7c5e38",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "39db62d0.356f5e",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "MACHINE DEPENDENCE",
        "info": "time-persistence.json\n",
        "x": 310,
        "y": 20,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "957fd7c.e6c7828",
        "type": "ui_form",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "label": "Time Setter",
        "group": "3dabe8df.a10df8",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Start Date",
                "value": "startdate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "End Date",
                "value": "enddate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "startdate": "",
            "enddate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "8d74ca2b.7c5e38",
                "8755a720eb60c55f",
                "94bc3f6dbc8d780f",
                "eae52224ec3faa16"
            ]
        ]
    },
    {
        "id": "220556fdf5358e27",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "TLE Update time request",
        "links": [
            "27e3cd807b7dd36f",
            "5bf00d0b73be675b",
            "bc9a8d46d71b2c0a",
            "bd8de8502f02c463",
            "db7e42c1aee637bd",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001",
            "7a1a4db24be58879"
        ],
        "x": 135,
        "y": 220,
        "wires": [
            [
                "20e12284ea245aef",
                "efab8412a903f83b"
            ]
        ]
    },
    {
        "id": "8755a720eb60c55f",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 320,
        "y": 240,
        "wires": [
            [
                "4be84d73.e987b4",
                "d2005c55.4ffd3"
            ]
        ]
    },
    {
        "id": "dcabc7e9b475cd6d",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "blue1-tle-storage",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1030,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "3cd463b18e414c52",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 600,
        "y": 60,
        "wires": [
            [
                "2ee441367340e50a"
            ]
        ]
    },
    {
        "id": "2ee441367340e50a",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 60,
        "wires": [
            [
                "93d6ced5d286773b",
                "4a5ca91dc65b319c",
                "1a2b3c4d5e6f7g8h"
            ]
        ]
    },
    {
        "id": "2806b3dc1156fe5a",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 60,
        "wires": [
            [
                "3cd463b18e414c52"
            ]
        ]
    },
    {
        "id": "aaf05bae2b29d885",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "04/05/23",
        "info": "Deco pour test sans persist",
        "x": 120,
        "y": 20,
        "wires": []
    },
    {
        "id": "93d6ced5d286773b",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "unwrap",
        "func": "msg.payload=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "20e12284ea245aef",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 360,
        "wires": [
            [
                "9f05f084ce0ae8be"
            ]
        ]
    },
    {
        "id": "9f05f084ce0ae8be",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 300,
        "wires": [
            [
                "d2005c55.4ffd3",
                "4be84d73.e987b4"
            ]
        ]
    },
    {
        "id": "99ee3d83f0302c37",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "insure the tle format is respected",
        "func": "\n//msg.payload.incli=msg.payload.incli.toLocaleString('fr-FR',{minimumSignificantDigits: 6, maximumSignificantDigits: 7, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.incli = Intl.NumberFormat(undefined, {minimumSignificantDigits: 2, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.incli);\n//msg.payload.raan= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.raan);\n//msg.payload.raan=msg.payload.raan.toLocaleString('fr-FR',{minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.ecc=Intl.NumberFormat(undefined,{minimumSignificantDigits: 7, maximumFractionDigits: 0}).format(msg.payload.ecc);\n//msg.payload.aop= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.aop);\n//msg.payload.meana= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.meana);\n//msg.payload.mean=Intl.NumberFormat(undefined,{minimumSignificantDigits: 2, maximumSignificantDigits: 2, minimumFractionDigits: 14, maximumFractionDigits: 14}).format(msg.payload.mean)\nvar minimalEcc =0.0000001;\nvar eccFormat =10000000;\nmsg.payload.incli=Number(msg.payload.incli).toFixed(4);\nmsg.payload.incli=msg.payload.incli.padStart(8,'0');\nmsg.payload.raan=Number(msg.payload.raan).toFixed(4);\nmsg.payload.raan=msg.payload.raan.padStart(8,'0');\nmsg.payload.ecc=Number(msg.payload.ecc);\nif(msg.payload.ecc<minimalEcc){\n    msg.payload.ecc=msg.payload.ecc+minimalEcc;\n}\n//150523 Ajout des Numb() et String() pour l ecc\nmsg.payload.ecc=(msg.payload.ecc*eccFormat)\nmsg.payload.ecc=(msg.payload.ecc).toFixed(0);\n//150523 supression de la parti decimal par securité\nmsg.payload.ecc=String(msg.payload.ecc).padStart(7,'0');\n//150523 We erased the test in TLE 2 edit so we need to have\n//inc at a fixed 8 char for that reason we changed the pad 7->8\nmsg.payload.aop= Number(msg.payload.aop).toFixed(4);\nmsg.payload.aop= msg.payload.aop.padStart(8,'0');\nmsg.payload.meana= Number(msg.payload.meana).toFixed(4);\nmsg.payload.meana= msg.payload.meana.padStart(8,'0');\nmsg.payload.mean= Number(msg.payload.mean).toFixed(14);\nmsg.payload.mean= msg.payload.mean.padStart(17,'0');\nmsg.payload.dry_mass = Number(msg.payload.dry_mass).toFixed(5);\nmsg.payload.ergol_mass = Number(msg.payload.ergol_mass).toFixed(5);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 420,
        "wires": [
            [
                "957e182059950b33",
                "060259ab7d13bac7",
                "2b24ea015282a48a"
            ]
        ]
    },
    {
        "id": "d32b325c8b1fc9af",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "to TLE visualizer B1",
        "mode": "link",
        "links": [
            "593a52079dbca503",
            "803cd8d464314706"
        ],
        "x": 805,
        "y": 500,
        "wires": []
    },
    {
        "id": "eff4798c71085513",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "from TLE visu b1",
        "links": [
            "14d7295f97317f5a",
            "d5816ff9d550b0e0"
        ],
        "x": 865,
        "y": 500,
        "wires": [
            [
                "dcabc7e9b475cd6d",
                "2aeb85d6fbd53629"
            ]
        ]
    },
    {
        "id": "02d6f47bfaedd5f8",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "test TLE sanity",
        "func": "if(msg.payload.incli>180 || msg.payload.incli<0){\n    msg.errorMessage=\"Error inclination out of bounds i E [0;180]\"}\n    \nelse if (msg.payload.raan>360 || msg.payload.raan<0){\n    msg.errorMessage=\"Error RAAN out of bounds RAAN E [0;180]\"}\n    \nelse if (msg.payload.aop>360 || msg.payload.aop<0){\n    msg.errorMessage=\"Error Argument of perigee out of bounds AoP E [0;360]\"}\n    \nelse if (msg.payload.meana>360 || msg.payload.meana<0){\n    msg.errorMessage=\"Error mean anomaly out of bounds M E [0;360]\"}\n    \nelse if (msg.payload.ecc>1 || msg.payload.ecc<0){\n    msg.errorMessage=\"Error eccentricity out of bounds e E [0;1]\"}\nelse if (msg.payload.mean>16.42 || msg.payload.mean<0){\n    msg.errorMessage=\"Error Mean motion out of bounds N E [0;16.42]\"}\nelse if (msg.payload.dry_mass <= 0 ) {\n    msg.errorMessage = \"Error Negative Dry Mass\"\n}\nelse if (msg.payload.ergol_mass <= 0) {\n    msg.errorMessage = \"Error Negative Ergol Mass\"\n}\n    else{msg.errorMessage=\"TLE Accepted\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "99ee3d83f0302c37"
            ]
        ]
    },
    {
        "id": "957e182059950b33",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "property": "errorMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TLE Accepted",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "e5b31c42abafcef9",
                "d32b325c8b1fc9af"
            ],
            []
        ]
    },
    {
        "id": "060259ab7d13bac7",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "cbb369e33298cfeb",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TLE check",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1310,
        "y": 460,
        "wires": []
    },
    {
        "id": "c14e2956fb7324a5",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "81d0e5ee7c52f38a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TLE check",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1170,
        "y": 560,
        "wires": []
    },
    {
        "id": "4c61af07d5440b24",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "c02dcce485dfb187",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TLE check",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1190,
        "y": 700,
        "wires": []
    },
    {
        "id": "5077a8cd215dacf8",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "d4e830c4b00daeae",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "TLE check",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1210,
        "y": 800,
        "wires": []
    },
    {
        "id": "770a98795c591195",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "name": "FROM TIME PERSITENCE",
        "mode": "link",
        "links": [
            "4e8702575833e6dc",
            "d1724687d9c4c3ec",
            "1054fc71f09cdbc3",
            "a6c1e74ca5e04589",
            "c432ad1e21bc5f5c",
            "403b05e310953b8b",
            "8df6b131ac563ac8",
            "3cde0b43aead4fe1",
            "c86d6d3f7c6f4964",
            "e82205a5aae61ab3",
            "cdeba71014e483b2",
            "b3c7ef724ca3cec5",
            "7df29d4c8ea76192",
            "e5b7ee6ba3cc3b12",
            "990127d040e04202",
            "21eb0954cf1b9808"
        ],
        "x": 245,
        "y": 880,
        "wires": []
    },
    {
        "id": "ede8891b57271a85",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "property": "errorMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TLE Accepted",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 600,
        "wires": [
            [
                "e4a4f149f10e643f",
                "93d678661c5d817a"
            ],
            []
        ]
    },
    {
        "id": "93d678661c5d817a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "to TLE visualizer B2",
        "mode": "link",
        "links": [
            "1d61155a62c41a2d",
            "a77b39042024c5c7"
        ],
        "x": 895,
        "y": 600,
        "wires": []
    },
    {
        "id": "491df3b4c3bf3409",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "from TLE visu b2",
        "links": [
            "4cc7535d9d057763",
            "ff7d6c12c61aa819"
        ],
        "x": 965,
        "y": 600,
        "wires": [
            [
                "ef3dc7e1d721b2f9",
                "a9e1c7b8b8ba82b1"
            ]
        ]
    },
    {
        "id": "69685c5cf75fe033",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1020,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "3e84b71925909505",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "R1 from TLE visu",
        "links": [
            "66a5d326608ed97d",
            "b8ba65d923ce65d3"
        ],
        "x": 885,
        "y": 720,
        "wires": [
            [
                "69685c5cf75fe033",
                "b2131cb807c168eb"
            ]
        ]
    },
    {
        "id": "1ad21657b2842d69",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "to TLE visualizer R1",
        "mode": "link",
        "links": [
            "389c3d55659292b3",
            "6f05e6e5750f263f"
        ],
        "x": 815,
        "y": 720,
        "wires": []
    },
    {
        "id": "8faff6b8783bf065",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "property": "errorMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TLE Accepted",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 720,
        "wires": [
            [
                "752f7d159c486c4c",
                "1ad21657b2842d69"
            ],
            []
        ]
    },
    {
        "id": "8187c89370bdbf5a",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "property": "errorMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "TLE Accepted",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 840,
        "wires": [
            [
                "8720958ccb6f1d96",
                "68f8a4538f23291d"
            ],
            []
        ]
    },
    {
        "id": "68f8a4538f23291d",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "to TLE visualizer R2",
        "mode": "link",
        "links": [
            "7e949ae8d0015c6d",
            "c44e1cad8a03cc82"
        ],
        "x": 995,
        "y": 840,
        "wires": []
    },
    {
        "id": "65d2f35495558a56",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "R2 from TLE visu",
        "links": [
            "5093ac2e2ddb6701",
            "5c32c9383df2de25"
        ],
        "x": 1175,
        "y": 840,
        "wires": [
            [
                "f1a02d339ab15d13",
                "6adf4dd2967876e5"
            ]
        ]
    },
    {
        "id": "844dc894dbd219b5",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "setpath 8 time output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 220,
        "wires": []
    },
    {
        "id": "2b24ea015282a48a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "Audio BLUE1 out",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 1295,
        "y": 420,
        "wires": []
    },
    {
        "id": "40a6d644acf51561",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "AUDIO BLUE2",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 955,
        "y": 500,
        "wires": []
    },
    {
        "id": "46b03384f7d40a32",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "AUDIO RED1",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 1105,
        "y": 640,
        "wires": []
    },
    {
        "id": "eade1819e9df8266",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "AUDIO  RED2",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 1095,
        "y": 740,
        "wires": []
    },
    {
        "id": "6fe4f4018bc8dbf6",
        "type": "mongodb in",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 2480,
        "y": 340,
        "wires": [
            [
                "df01864d55b31aa5"
            ]
        ]
    },
    {
        "id": "c09ff10b2a7d849b",
        "type": "ui_button",
        "z": "dd1202fd.a2e23",
        "d": true,
        "g": "ef7c6a255dddba2f",
        "name": "",
        "group": "5a7810372552815e",
        "order": 9,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "Show current TLE Date",
        "tooltip": "",
        "color": "",
        "bgcolor": "#477500",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2490,
        "y": 380,
        "wires": [
            [
                "6fe4f4018bc8dbf6"
            ]
        ]
    },
    {
        "id": "c6a0f7e3ae8f5e2a",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "d": true,
        "g": "ef7c6a255dddba2f",
        "group": "5a7810372552815e",
        "order": 7,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "TLE Date",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2440,
        "y": 140,
        "wires": []
    },
    {
        "id": "21d004d8a0b3ad1d",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "300623 Helper that displays the TLE date",
        "info": "",
        "x": 2380,
        "y": 80,
        "wires": []
    },
    {
        "id": "565906a73ac8bfd6",
        "type": "csv",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 2450,
        "y": 260,
        "wires": [
            [
                "6258d262ba03c5bd"
            ]
        ]
    },
    {
        "id": "df01864d55b31aa5",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 300,
        "wires": [
            [
                "565906a73ac8bfd6"
            ]
        ]
    },
    {
        "id": "6258d262ba03c5bd",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 220,
        "wires": [
            [
                "36edc6de3f4aea19"
            ]
        ]
    },
    {
        "id": "36edc6de3f4aea19",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "ef7c6a255dddba2f",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp =new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\n\nlet text = utctimestamp.toUTCString();\nmsg.payload=utctimestamp;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 180,
        "wires": [
            [
                "c6a0f7e3ae8f5e2a"
            ]
        ]
    },
    {
        "id": "a9e1c7b8b8ba82b1",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "TLE SET 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 540,
        "wires": []
    },
    {
        "id": "efefb3362e012b40",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "group": "cbb369e33298cfeb",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "New TLE date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1740,
        "y": 1000,
        "wires": []
    },
    {
        "id": "cb9310778af334ad",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "setpath1-B1",
        "mode": "link",
        "links": [
            "d0db2a049689d1eb",
            "df435a8c7ac861f9",
            "14d1b68b8578a168",
            "df5326d15dc9e51a",
            "7f9af1aa3c1eff6d",
            "23bfb339e40ab72d",
            "9072d4ecfd2ab573",
            "026c0f42bb89c4ac"
        ],
        "x": 2585,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2bf663a53ca7f644",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1035,
        "y": 1080,
        "wires": []
    },
    {
        "id": "08371a8e834ed3fa",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Time visi",
        "func": "var timePicker = msg.payload;\n\nif (typeof timePicker === 'number') {\n    // Créer un objet Date à partir du timestamp en millisecondes\n    var timestampMillisecond = new Date(timePicker);\n\n    // Vérifier si la date est valide\n    if (isNaN(timestampMillisecond)) {\n        node.error(\"Invalid Date: Le timestamp donné est invalide\", msg);\n    } else {\n        // Convertir en une chaîne de caractères UTC\n        var dateString = timestampMillisecond.toUTCString();\n        msg.dateString = dateString;\n        msg.payload = timePicker;\n        return msg;\n    }\n} else {\n    node.error(\"Le payload n'est pas un nombre valide\", msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1180,
        "wires": [
            [
                "0f1749dffdc1aa6d",
                "9958904edb2cfd1b",
                "c4f96236ac8e8b07",
                "7fd80d52bd58de06"
            ]
        ]
    },
    {
        "id": "0f1749dffdc1aa6d",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "group": "5a7810372552815e",
        "order": 4,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Ordre de maneuvre",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1470,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9958904edb2cfd1b",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "b1 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "8671293235efd906",
            "d96813c8d3d9d7b7"
        ],
        "x": 1375,
        "y": 1220,
        "wires": []
    },
    {
        "id": "393a1e981904174c",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Time setter blue 1",
        "info": "",
        "x": 2370,
        "y": 960,
        "wires": []
    },
    {
        "id": "2c13afbda9e52345",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1325,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f58b20b85a2b8c78",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1110,
        "y": 1000,
        "wires": [
            [
                "2c13afbda9e52345",
                "cc6d05c65118620c",
                "23676e5567207271",
                "619d8ca9a29bae31",
                "93c897bf15c62e48"
            ]
        ]
    },
    {
        "id": "af796903ae846c21",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 1020,
        "wires": [
            [
                "f58b20b85a2b8c78"
            ]
        ]
    },
    {
        "id": "b003810dbf6c337b",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "B1 time-time-tle-request",
        "links": [
            "7a1a4db24be58879"
        ],
        "x": 1635,
        "y": 1160,
        "wires": [
            [
                "e1da563798b90ae6"
            ]
        ]
    },
    {
        "id": "f7ebd85fb66e8ba8",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "B1 Timestamp checker",
        "func": "msg.datesStartEnd = msg.dates;\nvar TLETimestampSec = msg.timestampMillisecond/1000;\n// convert the timestamp of the new TLE in sec\nvar endDateSec=msg.datesStartEnd[1];\n// extrqct the enddate\nvar aDayinSec=86400;\n// store number of sec in a day\nvar dayBeforeStartSec=msg.datesStartEnd[0]-aDayinSec;\n// compute the time stamp of a day before the startdate\nif(TLETimestampSec>endDateSec){\n    msg.errorMessage=\"TLE date greater than end of sim\";\n    msg.errorFlag=true;\n}\nelse if(!(Number.isInteger(TLETimestampSec))){\n    msg.errorMessage=\"TLE date is note a number\";\n    msg.errorFlag=true;\n}\nelse if(TLETimestampSec<dayBeforeStartSec){\n    msg.errorMessage=\"TLE date too old\";\n    msg.errorFlag=true;\n}\nelse{\n    msg.errorMessage=\"TLE timestamp updated \";\n    msg.errorFlag=false;\n    msg.payload=msg.payload;\n}\n\n//because of the join wait we need to move from msg.payload\n//msg.dateTLE=msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 1060,
        "wires": [
            [
                "4bbd3c0c495c20c2",
                "871fa62da5d6f2d3"
            ]
        ]
    },
    {
        "id": "4bbd3c0c495c20c2",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "error checker",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 1080,
        "wires": [
            [
                "14f42ed5aa544e59",
                "8bab780e92b8d51c"
            ],
            [
                "adef8fa7dbebb37b"
            ]
        ]
    },
    {
        "id": "871fa62da5d6f2d3",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "group": "cbb369e33298cfeb",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Date update status:",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1950,
        "y": 1040,
        "wires": []
    },
    {
        "id": "14f42ed5aa544e59",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "blue1-date-storage",
        "filename": "blue1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2190,
        "y": 1000,
        "wires": [
            [
                "ee2ae64ebe3a9600"
            ]
        ]
    },
    {
        "id": "85cd4e1c9d9c1da6",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2570,
        "y": 1180,
        "wires": [
            [
                "8bab780e92b8d51c"
            ]
        ]
    },
    {
        "id": "adef8fa7dbebb37b",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "blue1-date-storage-out",
        "filename": "blue1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2360,
        "y": 1180,
        "wires": [
            [
                "85cd4e1c9d9c1da6"
            ]
        ]
    },
    {
        "id": "8bab780e92b8d51c",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 1060,
        "wires": [
            [
                "e129837eb4ccaf57"
            ]
        ]
    },
    {
        "id": "2a3a2826f85ab105",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Date updated go",
        "scope": [
            "14f42ed5aa544e59"
        ],
        "uncaught": false,
        "x": 1580,
        "y": 1200,
        "wires": [
            [
                "ea3e20f1e27896c4"
            ]
        ]
    },
    {
        "id": "6af08d975548cc25",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2140,
        "y": 1200,
        "wires": [
            [
                "adef8fa7dbebb37b"
            ]
        ]
    },
    {
        "id": "c72f4568fae52ea3",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1960,
        "y": 1200,
        "wires": [
            [
                "6af08d975548cc25"
            ]
        ]
    },
    {
        "id": "ea3e20f1e27896c4",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1200,
        "wires": [
            [
                "c72f4568fae52ea3"
            ]
        ]
    },
    {
        "id": "b25b73d8412b6ddc",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 1240,
        "wires": [
            [
                "c72f4568fae52ea3"
            ]
        ]
    },
    {
        "id": "e1da563798b90ae6",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 1160,
        "wires": [
            [
                "c72f4568fae52ea3"
            ]
        ]
    },
    {
        "id": "cc6d05c65118620c",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "dateb1",
        "mode": "link",
        "links": [
            "fc7b43f896ea0de4"
        ],
        "x": 1325,
        "y": 1100,
        "wires": []
    },
    {
        "id": "23676e5567207271",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "dateb1",
        "mode": "link",
        "links": [
            "fc7b43f896ea0de4"
        ],
        "x": 1185,
        "y": 960,
        "wires": []
    },
    {
        "id": "fc7b43f896ea0de4",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "dateb1 in",
        "links": [
            "23676e5567207271",
            "cc6d05c65118620c",
            "ae79887d2de014b8"
        ],
        "x": 1635,
        "y": 1240,
        "wires": [
            [
                "b25b73d8412b6ddc"
            ]
        ]
    },
    {
        "id": "e129837eb4ccaf57",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2430,
        "y": 1060,
        "wires": [
            [
                "cb9310778af334ad"
            ]
        ]
    },
    {
        "id": "1843d3ddde194a97",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1085,
        "y": 960,
        "wires": []
    },
    {
        "id": "d1724687d9c4c3ec",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 615,
        "y": 1100,
        "wires": [
            [
                "af796903ae846c21",
                "e3144d94fa7f4289"
            ]
        ]
    },
    {
        "id": "7de2968a8e624b25",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 1320,
        "wires": []
    },
    {
        "id": "13569978a3569fd7",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 1320,
        "wires": [
            [
                "adc095e9c8bedc11"
            ]
        ]
    },
    {
        "id": "e3144d94fa7f4289",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1320,
        "wires": [
            [
                "13569978a3569fd7"
            ]
        ]
    },
    {
        "id": "0591ba7c899f79a7",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1055,
        "y": 1260,
        "wires": []
    },
    {
        "id": "adc095e9c8bedc11",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Prep string for visu",
        "func": "// Récupérer le timestamp timepicker à partir de l'objet msg.payload\nvar timePicker = msg.payload.timepicker;\n\n// Créer un objet Date à partir du timestamp timepicker\nvar timestampMillisecond = new Date(timePicker);\n\n// Vérifier si la conversion est valide\nif (isNaN(timestampMillisecond)) {\n    node.error(\"Invalid Date: Le timestamp timepicker est invalide\", msg);\n} else {\n    // Convertir le timestamp en une chaîne UTC\n    var dateString = timestampMillisecond.toUTCString();\n\n    // Stocker la chaîne de date dans msg.dateString\n    msg.dateString = dateString;\n\n    // Si vous voulez aussi les startdate et enddate\n    var startDate = new Date(msg.payload.dates.startdate);\n    var endDate = new Date(msg.payload.dates.enddate);\n\n    // Ajouter les chaînes de date UTC dans le msg\n    msg.startDateString = startDate.toUTCString();\n    msg.endDateString = endDate.toUTCString();\n\n    // Optionnel : Conserver le payload d'origine\n    msg.dateString = dateString;\n    msg.payload = timePicker;\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1320,
        "wires": [
            [
                "0f1749dffdc1aa6d",
                "9958904edb2cfd1b",
                "7fd80d52bd58de06"
            ]
        ]
    },
    {
        "id": "6de4b497a2c76f7c",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 1410,
        "y": 1340,
        "wires": []
    },
    {
        "id": "619d8ca9a29bae31",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 960,
        "wires": []
    },
    {
        "id": "a0eed9fa1f75ff19",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 940,
        "wires": []
    },
    {
        "id": "93c897bf15c62e48",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Prep string for visu",
        "func": "// Récupérer les données du payload\ndates = msg.payload.dates;  // Objet contenant les dates\nstartDate = new Date(dates.startdate); // Convertir en objet Date\nendDate = new Date(dates.enddate);     // Convertir en objet Date\ntimePicker = msg.payload.timepicker;\n\nvar timestampMillisecond = new Date(timePicker);\n\ndateString = (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =timePicker;\nmsg.dates = dates;\nmsg.timestampMillisecond = timestampMillisecond;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1000,
        "wires": [
            [
                "a0eed9fa1f75ff19",
                "efefb3362e012b40",
                "f7ebd85fb66e8ba8"
            ]
        ]
    },
    {
        "id": "5a64d2f541f39ed9",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1120,
        "wires": []
    },
    {
        "id": "c4f96236ac8e8b07",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 1080,
        "wires": []
    },
    {
        "id": "819abd6e6e58c2fa",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "group": "cbb369e33298cfeb",
        "name": "Datetime Picker with Seconds (Flatpickr)",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        /* Supprimer toute possibilité de scroll */\n        height: 100%;\n        /* Prendre toute la hauteur de la fenêtre */\n        width: 100vw;\n        /* Utiliser la largeur de la fenêtre */\n    }\n\n    /* Conteneur principal centré verticalement, mais avec marge à gauche restaurée */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        /* Centrage vertical */\n        height: 100%;\n        /* Le conteneur prend toute la hauteur disponible */\n        width: 100%;\n        /* Prend toute la largeur */\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        /* Centrage vertical des éléments à l'intérieur */\n        margin-left: 8px;\n        /* Rétablissement de la marge à gauche */\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker {\n        flex-shrink: 1;\n        width: 190px;\n        /* Limiter la largeur à 190px */\n        max-width: 100%;\n        /* Empêcher que l'input dépasse du conteneur */\n        min-width: 100px;\n        /* Largeur minimale pour une bonne lisibilité */\n        background-color: inherit;\n        border: 4px solid #00008B;\n        /* Bordure bleu foncé */\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        /* Prendre en compte la bordure dans la largeur */\n        padding: 5px;\n        /* Espacement interne pour le texte */\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn {\n        padding: 5px 10px;\n        margin-left: 10px;\n        /* Espacement entre le champ et le bouton */\n        background-color: #00008B;\n        /* Couleur du bouton */\n        color: white;\n        /* Couleur du texte du bouton */\n        border: none;\n        /* Supprimer les bordures par défaut */\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n        /* Bordure arrondie */\n    }\n\n    .submit-btn:hover {\n        background-color: #00005B;\n        /* Couleur plus foncée au survol */\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">B1 Time TLE</label>\n        <input type=\"text\" id=\"datetimepicker\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn\" id=\"submit-btn\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            flatpickr(\"#datetimepicker\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    // Optionnel : Vous pouvez envoyer la date automatiquement si nécessaire\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Ajouter l'événement de clic pour le bouton \"Submit\"\n        document.getElementById(\"submit-btn\").addEventListener(\"click\", function() {\n            // Récupérer la valeur actuelle du champ datetimepicker\n            var datetimeValue = document.getElementById(\"datetimepicker\").value;\n\n            // Envoyer la valeur sélectionnée à Node-RED via scope.send()\n            scope.send({ payload: datetimeValue });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 960,
        "wires": [
            [
                "1c04481a216a0e83",
                "89eb7796196f4e0e"
            ]
        ]
    },
    {
        "id": "1c04481a216a0e83",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 960,
        "wires": [
            [
                "1843d3ddde194a97",
                "f58b20b85a2b8c78"
            ]
        ]
    },
    {
        "id": "84463b8ecc8b11f3",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1160,
        "wires": [
            [
                "2bf663a53ca7f644",
                "5a64d2f541f39ed9",
                "08371a8e834ed3fa",
                "0591ba7c899f79a7",
                "7de2968a8e624b25",
                "13569978a3569fd7"
            ]
        ]
    },
    {
        "id": "6c6b2cfc044519e8",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "group": "5a7810372552815e",
        "name": "B1 Time Maneuver",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        height: 100%;\n        width: 100vw;\n    }\n\n    /* Conteneur principal centré verticalement */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        margin-left: 8px;\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker-unique {\n        flex-shrink: 1;\n        width: 190px;\n        max-width: 100%;\n        min-width: 100px;\n        background-color: inherit;\n        border: 4px solid #00008B;\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        padding: 5px;\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn-unique {\n        padding: 5px 10px;\n        margin-left: 10px;\n        background-color: #00008B;\n        color: white;\n        border: none;\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n    }\n\n    .submit-btn-unique:hover {\n        background-color: #00005B;\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">B1 Time Maneuver</label>\n        <input type=\"text\" id=\"datetimepicker-unique\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn-unique\" id=\"submit-btn-unique\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        console.log(\"Node-RED context initialized\");\n\n        // Charger la librairie Flatpickr\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            // Initialiser le sélecteur de date\n            flatpickr(\"#datetimepicker-unique\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    console.log(\"Date sélectionnée:\", dateStr);\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Événement de clic pour envoyer la date\n        document.getElementById(\"submit-btn-unique\").addEventListener(\"click\", function() {\n            var datetimeValue = document.getElementById(\"datetimepicker-unique\").value;\n            console.log(\"Date sélectionnée pour envoi:\", datetimeValue);\n            if (datetimeValue) {\n                scope.send({ payload: datetimeValue });\n            } else {\n                console.error(\"Aucune date sélectionnée.\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 430,
        "y": 1160,
        "wires": [
            [
                "84463b8ecc8b11f3"
            ]
        ]
    },
    {
        "id": "f36ccfbd745103f5",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "setpath1-B1",
        "mode": "link",
        "links": [
            "d0db2a049689d1eb",
            "df435a8c7ac861f9",
            "14d1b68b8578a168",
            "df5326d15dc9e51a",
            "7f9af1aa3c1eff6d",
            "23bfb339e40ab72d",
            "9072d4ecfd2ab573",
            "026c0f42bb89c4ac"
        ],
        "x": 2135,
        "y": 4820,
        "wires": []
    },
    {
        "id": "ba7954e6d6c8a950",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 945,
        "y": 4440,
        "wires": []
    },
    {
        "id": "8bc1efd3554ad211",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "Time visi",
        "func": "var timePicker = msg.payload;\n\nif (typeof timePicker === 'number') {\n    // Créer un objet Date à partir du timestamp en millisecondes\n    var timestampMillisecond = new Date(timePicker);\n\n    // Vérifier si la date est valide\n    if (isNaN(timestampMillisecond)) {\n        node.error(\"Invalid Date: Le timestamp donné est invalide\", msg);\n    } else {\n        // Convertir en une chaîne de caractères UTC\n        var dateString = timestampMillisecond.toUTCString();\n        msg.dateString = dateString;\n        msg.payload = timePicker;\n        return msg;\n    }\n} else {\n    node.error(\"Le payload n'est pas un nombre valide\", msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 4600,
        "wires": [
            [
                "36fd8c5659d7f957",
                "e91677f207467ea6",
                "0d06357e4bf73064",
                "3887cd5b1290a0e9"
            ]
        ]
    },
    {
        "id": "36fd8c5659d7f957",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "group": "8da1955ffecc49fe",
        "order": 5,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Ordre de maneuvre",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1350,
        "y": 4580,
        "wires": []
    },
    {
        "id": "e91677f207467ea6",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "b1 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "8671293235efd906",
            "d96813c8d3d9d7b7"
        ],
        "x": 1275,
        "y": 4720,
        "wires": []
    },
    {
        "id": "dcbf39312a7fec83",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "Time setter blue 1",
        "info": "",
        "x": 2050,
        "y": 4380,
        "wires": []
    },
    {
        "id": "d7d9ed7307b05596",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "B1 time-time-tle-request",
        "links": [
            "27e3cd807b7dd36f",
            "7a1a4db24be58879"
        ],
        "x": 1435,
        "y": 4540,
        "wires": [
            [
                "69e31ad706e88836"
            ]
        ]
    },
    {
        "id": "75228381d3df4f38",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1750,
        "y": 4760,
        "wires": [
            [
                "299f1adf53be1cfc"
            ]
        ]
    },
    {
        "id": "eca8d80e6051ea18",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "blue1-date-storage-out",
        "filename": "blue1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1800,
        "y": 4700,
        "wires": [
            [
                "75228381d3df4f38"
            ]
        ]
    },
    {
        "id": "299f1adf53be1cfc",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 4820,
        "wires": [
            [
                "5517bc6d0ab76312"
            ]
        ]
    },
    {
        "id": "c9a4002ef99be5b8",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "Date updated go",
        "scope": [
            "c65b6a2eef1590f6"
        ],
        "uncaught": false,
        "x": 1370,
        "y": 4380,
        "wires": [
            [
                "61f11a943164d927"
            ]
        ]
    },
    {
        "id": "16cad8bf6ddf98bd",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1780,
        "y": 4640,
        "wires": [
            [
                "eca8d80e6051ea18"
            ]
        ]
    },
    {
        "id": "8250577b4ee60fa1",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 4580,
        "wires": [
            [
                "16cad8bf6ddf98bd"
            ]
        ]
    },
    {
        "id": "61f11a943164d927",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 4620,
        "wires": [
            [
                "8250577b4ee60fa1"
            ]
        ]
    },
    {
        "id": "94d4c1cc0102d76c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 4660,
        "wires": [
            [
                "8250577b4ee60fa1"
            ]
        ]
    },
    {
        "id": "69e31ad706e88836",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 4580,
        "wires": [
            [
                "8250577b4ee60fa1"
            ]
        ]
    },
    {
        "id": "bf2650056330258a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "dateb1",
        "mode": "link",
        "links": [
            "c6e4ab2dacba3336"
        ],
        "x": 1135,
        "y": 4460,
        "wires": []
    },
    {
        "id": "c6e4ab2dacba3336",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "dateb1 in",
        "links": [
            "bf2650056330258a"
        ],
        "x": 1435,
        "y": 4660,
        "wires": [
            [
                "94d4c1cc0102d76c"
            ]
        ]
    },
    {
        "id": "5517bc6d0ab76312",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 4820,
        "wires": [
            [
                "f36ccfbd745103f5"
            ]
        ]
    },
    {
        "id": "c86d6d3f7c6f4964",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 585,
        "y": 4460,
        "wires": [
            [
                "1dec613788c744b6"
            ]
        ]
    },
    {
        "id": "33432c494fa582ce",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 4780,
        "wires": []
    },
    {
        "id": "2fd9d5cda8a004e8",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 920,
        "y": 4780,
        "wires": [
            [
                "858cca2d56cc8ada"
            ]
        ]
    },
    {
        "id": "1dec613788c744b6",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 4780,
        "wires": [
            [
                "2fd9d5cda8a004e8"
            ]
        ]
    },
    {
        "id": "223edc875ebde99b",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 885,
        "y": 4720,
        "wires": []
    },
    {
        "id": "858cca2d56cc8ada",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "Prep string for visu",
        "func": "// Récupérer le timestamp timepicker à partir de l'objet msg.payload\nvar timePicker = msg.payload.timepicker;\n\n// Créer un objet Date à partir du timestamp timepicker\nvar timestampMillisecond = new Date(timePicker);\n\n// Vérifier si la conversion est valide\nif (isNaN(timestampMillisecond)) {\n    node.error(\"Invalid Date: Le timestamp timepicker est invalide\", msg);\n} else {\n    // Convertir le timestamp en une chaîne UTC\n    var dateString = timestampMillisecond.toUTCString();\n\n    // Stocker la chaîne de date dans msg.dateString\n    msg.dateString = dateString;\n\n    // Si vous voulez aussi les startdate et enddate\n    var startDate = new Date(msg.payload.dates.startdate);\n    var endDate = new Date(msg.payload.dates.enddate);\n\n    // Ajouter les chaînes de date UTC dans le msg\n    msg.startDateString = startDate.toUTCString();\n    msg.endDateString = endDate.toUTCString();\n\n    // Optionnel : Conserver le payload d'origine\n    msg.dateString = dateString;\n    msg.payload = timePicker;\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 4780,
        "wires": [
            [
                "36fd8c5659d7f957",
                "e91677f207467ea6",
                "6e1d2c156e598fcc"
            ]
        ]
    },
    {
        "id": "dc68e14ef65a084c",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 1120,
        "y": 4680,
        "wires": []
    },
    {
        "id": "ce4a854dd05fb35b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 4500,
        "wires": []
    },
    {
        "id": "0d06357e4bf73064",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 4480,
        "wires": []
    },
    {
        "id": "b6dd515973fab26f",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 4620,
        "wires": [
            [
                "ba7954e6d6c8a950",
                "ce4a854dd05fb35b",
                "8bc1efd3554ad211",
                "223edc875ebde99b",
                "33432c494fa582ce",
                "2fd9d5cda8a004e8",
                "6571f614c1d6f5bb",
                "c67119cea7b967d2"
            ]
        ]
    },
    {
        "id": "721e8d65f215d28a",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "group": "8da1955ffecc49fe",
        "name": "B1 Time Maneuver",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        height: 100%;\n        width: 100vw;\n    }\n\n    /* Conteneur principal centré verticalement */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        margin-left: 8px;\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker-unique-1 {\n        flex-shrink: 1;\n        width: 190px;\n        max-width: 100%;\n        min-width: 100px;\n        background-color: inherit;\n        border: 4px solid #00008B;\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        padding: 5px;\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn-unique {\n        padding: 5px 10px;\n        margin-left: 10px;\n        background-color: #00008B;\n        color: white;\n        border: none;\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n    }\n\n    .submit-btn-unique:hover {\n        background-color: #00005B;\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">B1 Time Maneuver</label>\n        <input type=\"text\" id=\"datetimepicker-unique-1\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn-unique\" id=\"submit-btn-unique-1\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        console.log(\"Node-RED context initialized\");\n\n        // Charger la librairie Flatpickr\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            // Initialiser le sélecteur de date\n            flatpickr(\"#datetimepicker-unique-1\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    console.log(\"Date sélectionnée:\", dateStr);\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Événement de clic pour envoyer la date\n        document.getElementById(\"submit-btn-unique-1\").addEventListener(\"click\", function() {\n            var datetimeValue = document.getElementById(\"datetimepicker-unique-1\").value;\n            console.log(\"Date sélectionnée pour envoi:\", datetimeValue);\n            if (datetimeValue) {\n                scope.send({ payload: datetimeValue });\n            } else {\n                console.error(\"Aucune date sélectionnée.\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 230,
        "y": 4620,
        "wires": [
            [
                "b6dd515973fab26f",
                "2a4f42941e2b799c",
                "fd1c932b1e74837d"
            ]
        ]
    },
    {
        "id": "6e1d2c156e598fcc",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 4880,
        "wires": []
    },
    {
        "id": "a290b360e6a7c589",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "name": "Affichage TimeSetter",
        "mode": "link",
        "links": [
            "fb20bf89f9a8900b"
        ],
        "x": 245,
        "y": 920,
        "wires": []
    },
    {
        "id": "fb20bf89f9a8900b",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "6207162a83e4a4d1",
        "name": "",
        "links": [
            "a290b360e6a7c589"
        ],
        "x": 3865,
        "y": 4900,
        "wires": [
            [
                "4f58bdb6277957c9"
            ]
        ]
    },
    {
        "id": "94bc3f6dbc8d780f",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "Max slider HOME",
        "func": "\nstart = Date.parse(msg.payload.startdate);\nend = Date.parse(msg.payload.enddate);\nmsg.body = [start/1000, end/1000];\nmsg.payload = msg.body;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "1a2b3c4d5e6f7g8h"
            ]
        ]
    },
    {
        "id": "1a2b3c4d5e6f7g8h",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "Formater les dates",
        "func": "// Function Node: Handle Different Payload Structures for Date Conversion\n\n// Check if payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least two elements\n    if (msg.payload.length >= 2) {\n        // Assume the first two elements are Unix timestamps in seconds\n        let startTimestamp = msg.payload[0] * 1000; // Convert to milliseconds\n        let endTimestamp = msg.payload[1] * 1000;   // Convert to milliseconds\n\n        // Create Date objects\n        let startDate = new Date(startTimestamp);\n        let endDate = new Date(endTimestamp);\n\n        // Verify if dates are valid\n        if (isNaN(startDate) || isNaN(endDate)) {\n            node.error(\"Invalid timestamp values in payload\", msg);\n            return null;\n        }\n\n        // Format dates to UTC strings\n        msg.payload = {\n            \"debut\": startDate.toUTCString(), // e.g., \"Sat, 31 Jan 2025 00:00:00 GMT\"\n            \"fin\": endDate.toUTCString()      // e.g., \"Sun, 01 Feb 2025 00:00:00 GMT\"\n        };\n    } else {\n        node.error(\"Payload array does not contain enough elements\", msg);\n        return null;\n    }\n}\n// Check if payload is an object with startdate and enddate\nelse if (typeof msg.payload === 'object' && msg.payload.startdate && msg.payload.enddate) {\n    // Parse the ISO date strings\n    let startDate = new Date(msg.payload.startdate);\n    let endDate = new Date(msg.payload.enddate);\n\n    // Verify if dates are valid\n    if (isNaN(startDate) || isNaN(endDate)) {\n        node.error(\"Invalid date format in payload\", msg);\n        return null;\n    }\n\n    // Format dates to UTC strings\n    msg.payload = {\n        \"debut\": startDate.toUTCString(), // e.g., \"Sat, 31 Jan 2025 00:00:00 GMT\"\n        \"fin\": endDate.toUTCString()      // e.g., \"Sun, 01 Feb 2025 00:00:00 GMT\"\n    };\n}\nelse {\n    // Handle unexpected payload formats\n    node.error(\"Unsupported payload format\", msg);\n    return null;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 140,
        "wires": [
            [
                "2b3c4d5e6f7g8h9i",
                "fa071f3c0b39c4f8"
            ]
        ]
    },
    {
        "id": "2b3c4d5e6f7g8h9i",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "group": "3dabe8df.a10df8",
        "name": "Affichage des dates",
        "order": 2,
        "width": 6,
        "height": 3,
        "format": "<div>\n    <br> <!-- Saut de ligne supplémentaire pour plus de lisibilité -->\n    <p>Début de la Simulation :<br> <strong>{{msg.payload.debut}}</strong></p>\n    <br> <!-- Saut de ligne supplémentaire pour plus de lisibilité -->\n    <p>Fin de la Simulation :<br> <strong>{{msg.payload.fin}}</strong></p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "eae52224ec3faa16",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 170,
        "y": 120,
        "wires": []
    },
    {
        "id": "430bd02865c2e9a4",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 520,
        "wires": []
    },
    {
        "id": "c086f8d07bff1f6a",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "cbb369e33298cfeb",
        "name": "Dynamic Form",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <style>\n        /* Ensure full size from root */\n        html,\n        body {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n        }\n\n        /* Make the root container fill available space */\n        #tleSetter_container {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n        }\n\n        /* Make the button fill its container */\n        #tleSetter_openModal {\n            width: 100%;\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            background-color: #0377c4;\n            color: white;\n            border: none;\n            cursor: pointer;\n            font-size: 16px;\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n        }\n\n        #tleSetter_openModal:hover {\n            background-color: #0389dd;\n        }\n\n        /* Modal styling */\n        #tleSetter_myModal {\n            display: none;\n            position: fixed;\n            z-index: 1000;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.7);\n            overflow: auto;\n            opacity: 0;\n            transition: opacity 0.3s ease-in-out;\n        }\n\n        #tleSetter_myModal.show {\n            display: block;\n            opacity: 1;\n        }\n\n        #tleSetter_myModal .modal-content {\n            background-color: #fefefe;\n            margin: 5% auto;\n            padding: 20px;\n            border: 1px solid #888;\n            width: 50%;\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),\n                0 6px 20px 0 rgba(0, 0, 0, 0.19);\n            z-index: 1001;\n            position: relative;\n            max-width: 800px;\n        }\n\n        #tleSetter_myModal .modal-content h2 {\n            text-align: center;\n            margin-top: 0;\n        }\n\n        .tleSetter_close {\n            color: red;\n            font-size: 28px;\n            font-weight: bold;\n            position: absolute;\n            top: 10px;\n            right: 20px;\n            cursor: pointer;\n        }\n\n        .tleSetter_close:hover,\n        .tleSetter_close:focus {\n            color: darkred;\n            text-decoration: none;\n            transform: scale(1.1);\n        }\n\n        #tleSetter_myModal .form-row {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 15px;\n        }\n\n        #tleSetter_myModal .form-row .form-group {\n            width: 48%;\n        }\n\n        #tleSetter_myModal .form-group label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            color: #333;\n        }\n\n        #tleSetter_myModal .form-group input {\n            width: 100%;\n            padding: 8px;\n            box-sizing: border-box;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            color: black;\n            background-color: white;\n        }\n\n        #tleSetter_myModal .form-group input::placeholder {\n            color: #666;\n            opacity: 1;\n        }\n\n        #tleSetter_submitButton {\n            display: block;\n            width: 100%;\n            padding: 10px;\n            background-color: #5cb85c;\n            color: white;\n            font-size: 16px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            margin-top: 20px;\n        }\n\n        #tleSetter_submitButton:hover {\n            background-color: #4cae4c;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"tleSetter_container\">\n        <button id=\"tleSetter_openModal\">Initialisation des Paramètres</button>\n\n        <div id=\"tleSetter_myModal\" class=\"modal\">\n            <div class=\"modal-content\">\n                <span class=\"tleSetter_close\">&#10006;</span>\n                <h2 id=\"tleSetter_modalTitle\">TLE Setter</h2>\n                <form id=\"tleSetter_dynamicForm\">\n                    <div id=\"tleSetter_inputField\"></div>\n                    <button type=\"button\" id=\"tleSetter_submitButton\">Valider les paramètres</button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        (function(scope) {\n        const MU = 398600.4418;\n        const modal = document.getElementById(\"tleSetter_myModal\");\n        const btn = document.getElementById(\"tleSetter_openModal\");\n        const span = document.getElementsByClassName(\"tleSetter_close\")[0];\n        const inputField = document.getElementById('tleSetter_inputField');\n        const modalTitle = document.getElementById('tleSetter_modalTitle');\n        let isFormSubmitted = false;\n\n        btn.onclick = function() {\n            modal.classList.add('show');\n            generateForm();\n        };\n\n        function closeModal() {\n            modal.classList.remove('show');\n        }\n\n        span.onclick = closeModal;\n\n        window.onclick = function(event) {\n            if (event.target === modal) {\n                closeModal();\n            }\n        };\n\n        function generateForm() {\n            inputField.innerHTML = `\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"incli\">Inclination i (°) [2,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_incli\" name=\"incli\" placeholder=\"e.g., 98.7\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"raan\">RAAN Ω (°) [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_raan\" name=\"raan\" placeholder=\"e.g., 123.45\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"ecc\">Eccentricity e [7] :</label>\n                        <input type=\"text\" id=\"tleSetter_ecc\" name=\"ecc\" placeholder=\"e.g., 0.0001234\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"aop\">AoP ω (°) [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_aop\" name=\"aop\" placeholder=\"e.g., 45.67\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"meana\">Mean Anomaly M [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_meana\" name=\"meana\" placeholder=\"e.g., 10.89\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"mean\">Semi-Major Axis (km) [>6600 km] :</label>\n                        <input type=\"text\" id=\"tleSetter_mean\" name=\"mean\" placeholder=\"e.g., 7000\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"dry_mass\">Dry Mass (kg) :</label>\n                        <input type=\"text\" id=\"tleSetter_dry_mass\" name=\"dry_mass\" placeholder=\"e.g., 500\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"ergol_mass\">Initial Ergol Mass (kg) :</label>\n                        <input type=\"text\" id=\"tleSetter_ergol_mass\" name=\"ergol_mass\" placeholder=\"e.g., 300\" />\n                    </div>\n                </div>\n            `;\n        }\n\n        function sendData() {\n            const formData = {};\n            const elements = document.querySelectorAll('#tleSetter_dynamicForm input');\n            elements.forEach(input => {\n                if (input.name && input.value.trim() !== \"\") {\n                    formData[input.name] = input.value.trim();\n                }\n            });\n\n            const requiredFields = ['incli', 'raan', 'ecc', 'aop', 'meana', 'mean', 'dry_mass', 'ergol_mass'];\n            if (!requiredFields.every(field => formData[field])) {\n                alert(\"Veuillez remplir tous les champs requis avant de soumettre.\");\n                return;\n            }\n\n            const a = parseFloat(formData.mean);\n            if (isNaN(a) || a <= 6600) {\n                alert(\"Veuillez entrer une Semi-Major Axis valide supérieure à 6600 km.\");\n                return;\n            }\n\n            const meanMotion = ((86400 / (2 * Math.PI)) * Math.sqrt(MU / Math.pow(a, 3))).toFixed(5);\n            formData.mean = meanMotion;\n\n            scope.send({ payload: formData });\n            isFormSubmitted = false;\n            closeModal();\n        }\n\n        document.getElementById('tleSetter_submitButton').onclick = function() {\n            isFormSubmitted = true;\n            if (inputField.innerHTML.trim() !== \"\") {\n                sendData();\n            } else {\n                alert(\"Veuillez remplir tous les champs requis avant de soumettre.\");\n            }\n        };\n\n        scope.on('input', function(msg) {\n            if (isFormSubmitted) {\n                isFormSubmitted = false;\n            }\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 420,
        "wires": [
            [
                "02d6f47bfaedd5f8",
                "430bd02865c2e9a4",
                "afdb2c309e47c2e8"
            ]
        ]
    },
    {
        "id": "6571f614c1d6f5bb",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "ManeuverOrder.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar date = msg.payload;\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"Ordre de Maneuvre\",\n    date\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 4760,
        "wires": [
            [
                "8786be0e275d6e81",
                "d8fce67289934963"
            ]
        ]
    },
    {
        "id": "8786be0e275d6e81",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/ManeuverOrder.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 4840,
        "wires": [
            [
                "51d2dc2eafb646f9"
            ]
        ]
    },
    {
        "id": "51d2dc2eafb646f9",
        "type": "csv",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 530,
        "y": 4920,
        "wires": [
            [
                "5914bf4f89b55c6e"
            ]
        ]
    },
    {
        "id": "5914bf4f89b55c6e",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 740,
        "y": 4920,
        "wires": [
            [
                "9f31f83050ba6492"
            ]
        ]
    },
    {
        "id": "9f31f83050ba6492",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 940,
        "y": 4920,
        "wires": [
            [
                "ea89cffe40a7a0bf"
            ]
        ]
    },
    {
        "id": "d8fce67289934963",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "TEST Ordre de Maneuvre",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 4920,
        "wires": []
    },
    {
        "id": "2a4f42941e2b799c",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "Date de prise de l'orbite",
        "mode": "link",
        "links": [],
        "x": 385,
        "y": 4660,
        "wires": []
    },
    {
        "id": "fbad01eea828e089",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "group": "8da1955ffecc49fe",
        "order": 6,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Horaire de prise de l'orbite",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1320,
        "y": 1400,
        "wires": []
    },
    {
        "id": "47a36946d8fa8d38",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "filename": "/app/maneuver-manager/ApsideDates.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 1500,
        "wires": [
            [
                "403f9e81930ee6f1",
                "cde744f1434e51f7"
            ]
        ]
    },
    {
        "id": "403f9e81930ee6f1",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "APSIDE DATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1420,
        "wires": []
    },
    {
        "id": "cde744f1434e51f7",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 1440,
        "wires": [
            [
                "4e60340b857ace41"
            ]
        ]
    },
    {
        "id": "4e60340b857ace41",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1440,
        "wires": [
            [
                "ab94451737d6da33"
            ]
        ]
    },
    {
        "id": "37d1d3b60374a9c2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TEMPS PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ab94451737d6da33",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar n = msg.payload.length\n\n //From the GS\ngs.dateString = msg.payload[n - 2]\n\ntab.push(gs)\n\nmsg.payload = tab\nmsg.dateString = gs.dateString\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1440,
        "wires": [
            [
                "37d1d3b60374a9c2",
                "fbad01eea828e089"
            ]
        ]
    },
    {
        "id": "6555ad21c517f1f4",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "DATE PRISE ORBITE",
        "links": [
            "afb4880d82f0fe9c"
        ],
        "x": 315,
        "y": 1500,
        "wires": [
            [
                "47a36946d8fa8d38"
            ]
        ]
    },
    {
        "id": "ea89cffe40a7a0bf",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "TimeManeuverTrigger",
        "mode": "link",
        "links": [
            "587b221ea8971329"
        ],
        "x": 1085,
        "y": 4920,
        "wires": []
    },
    {
        "id": "89eb7796196f4e0e",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fd1c932b1e74837d",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 4560,
        "wires": []
    },
    {
        "id": "c67119cea7b967d2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 4460,
        "wires": []
    },
    {
        "id": "506fdc76a278e70d",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "links": [
            "ab789119f5160206"
        ],
        "x": 145,
        "y": 280,
        "wires": [
            [
                "4be84d73.e987b4",
                "d2005c55.4ffd3",
                "4e7e4910d10cdea2"
            ]
        ]
    },
    {
        "id": "1a06e978399d2636",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "links": [
            "33a991df40520ce7"
        ],
        "x": 185,
        "y": 60,
        "wires": [
            [
                "8d74ca2b.7c5e38",
                "94bc3f6dbc8d780f"
            ]
        ]
    },
    {
        "id": "ee2ae64ebe3a9600",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 940,
        "wires": []
    },
    {
        "id": "3a6d91b7594ed6e0",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "PAYLOAD TO WRITE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2520,
        "y": 1300,
        "wires": []
    },
    {
        "id": "930923d46a59728d",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "links": [
            "1bf8870c0a4ad28c"
        ],
        "x": 2055,
        "y": 1280,
        "wires": [
            [
                "09e536e16ab2cd53"
            ]
        ]
    },
    {
        "id": "09e536e16ab2cd53",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "blue1-date-storage-out",
        "filename": "blue1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2200,
        "y": 1280,
        "wires": [
            [
                "01570b32eadc74b5"
            ]
        ]
    },
    {
        "id": "b796d1d91d81d545",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2000,
        "y": 1240,
        "wires": [
            [
                "09e536e16ab2cd53"
            ]
        ]
    },
    {
        "id": "01570b32eadc74b5",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "Write to LastManeuverDate.txt",
        "func": "msg.filename = '/app/maneuver-manager/LastManeuverDate.txt';\nmsg.payload = `\\nDate post - maneuvre\\n${new Date(parseInt(msg.payload)).toISOString()}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1240,
        "wires": [
            [
                "1bd545764fadfa73"
            ]
        ]
    },
    {
        "id": "1bd545764fadfa73",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2280,
        "y": 1340,
        "wires": [
            [
                "3a6d91b7594ed6e0",
                "0bef75afd2c63159"
            ]
        ]
    },
    {
        "id": "06aa0314f45d36ea",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "group": "cbb369e33298cfeb",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Last orbit reached",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2630,
        "y": 1400,
        "wires": []
    },
    {
        "id": "0bef75afd2c63159",
        "type": "exec",
        "z": "dd1202fd.a2e23",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate.txt | tr -d '\\n'",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2000,
        "y": 1420,
        "wires": [
            [
                "c0e5cb53396cc1e3",
                "f5dccb54d9d1d3fe",
                "fbdb011073919931",
                "b590bc0b99dd06bf",
                "a90f363fd7d343b6"
            ],
            [],
            []
        ]
    },
    {
        "id": "ba46eb9b87200062",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "8b136dbdc6b60ec6",
            "c65be597104be6e8"
        ],
        "x": 1595,
        "y": 1440,
        "wires": [
            [
                "0bef75afd2c63159"
            ]
        ]
    },
    {
        "id": "4fc70d1464dd6d37",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 1440,
        "wires": []
    },
    {
        "id": "771cfe56a1c47e40",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1540,
        "y": 1360,
        "wires": [
            [
                "0bef75afd2c63159"
            ]
        ]
    },
    {
        "id": "d1bb1f02cfef5c21",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "4b103d40d80f122d",
            "6a11f73df8b38639"
        ],
        "x": 1335,
        "y": 1500,
        "wires": [
            [
                "f797e69b2e304a30"
            ]
        ]
    },
    {
        "id": "c0e5cb53396cc1e3",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "if (typeof msg.payload === 'string') {\n    // 1) Remove any leading/trailing whitespace\n    msg.payload = msg.payload.trim();\n    \n    // 2) Parse the date string into a Date object\n    let date = new Date(msg.payload);\n    \n    // Check if the date is valid\n    if (!isNaN(date)) {\n        // 3) Round to the nearest second\n        // Add 500 milliseconds and then truncate to remove milliseconds\n        date = new Date(Math.round(date.getTime() / 1000) * 1000);\n        \n        // 4) Convert back to ISO string without fractional seconds\n        // The toISOString method returns the date in ISO format with milliseconds, so we remove them\n        msg.payload = date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n        \n        node.warn(\"Modified payload: \" + msg.payload);\n    } else {\n        node.warn(\"Invalid date format: \" + msg.payload);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 1400,
        "wires": [
            [
                "06aa0314f45d36ea",
                "4fc70d1464dd6d37"
            ]
        ]
    },
    {
        "id": "f5dccb54d9d1d3fe",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2270,
        "y": 1520,
        "wires": []
    },
    {
        "id": "fbdb011073919931",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 1740,
        "wires": [
            [
                "285437c6d59c2ea8",
                "ccfd9e5b5ca42da2"
            ]
        ]
    },
    {
        "id": "b590bc0b99dd06bf",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2420,
        "y": 1480,
        "wires": [
            [
                "307f722b2c92c4a0"
            ]
        ]
    },
    {
        "id": "307f722b2c92c4a0",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2630,
        "y": 1480,
        "wires": [
            [
                "7c49103930e4b1a3"
            ]
        ]
    },
    {
        "id": "7c49103930e4b1a3",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 1580,
        "wires": [
            [
                "285437c6d59c2ea8",
                "c235fd50b2e7a3d1"
            ]
        ]
    },
    {
        "id": "285437c6d59c2ea8",
        "type": "join-wait",
        "z": "dd1202fd.a2e23",
        "name": "",
        "paths": "[\"path_1\",\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2480,
        "y": 1580,
        "wires": [
            [
                "e8bed46b9b8c337c",
                "c54dde06ac42855b"
            ],
            []
        ]
    },
    {
        "id": "e8bed46b9b8c337c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "// Extract the required values from the incoming message\nlet startdate = msg.paths && msg.paths.path_2;\nlet enddate = msg.paths && msg.paths.path_1 && msg.paths.path_1.enddate;\n\n// Construct a new JSON object with the desired properties\nmsg.payload = {\n    startdate: startdate,\n    enddate: enddate\n};\n\n// Return the modified message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 1540,
        "wires": [
            [
                "1690abf04e2572f6",
                "3c4edf1e6aa6aa29"
            ]
        ]
    },
    {
        "id": "1690abf04e2572f6",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2840,
        "y": 1580,
        "wires": [
            [
                "4136e12bc6224969",
                "df4b588ccd8e2006"
            ]
        ]
    },
    {
        "id": "4136e12bc6224969",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TIME INTERMEDIATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3100,
        "y": 1520,
        "wires": []
    },
    {
        "id": "9cd07aae0d11d2f7",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time intermediate",
        "links": [
            "df4b588ccd8e2006",
            "f6be6b655aa4887a",
            "993abaec7339de3a",
            "5f8f9e30ae379ebd"
        ],
        "x": 575,
        "y": 180,
        "wires": [
            [
                "d2005c55.4ffd3",
                "93a38b06d3837bcb"
            ]
        ]
    },
    {
        "id": "df4b588ccd8e2006",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "name": "",
        "mode": "link",
        "links": [
            "9cd07aae0d11d2f7"
        ],
        "x": 3035,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3c4edf1e6aa6aa29",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2910,
        "y": 1480,
        "wires": []
    },
    {
        "id": "ccfd9e5b5ca42da2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c235fd50b2e7a3d1",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2470,
        "y": 1500,
        "wires": []
    },
    {
        "id": "c54dde06ac42855b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 1620,
        "wires": []
    },
    {
        "id": "afacbd0581029ecf",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "if (typeof msg.payload === 'string') {\n    // 1) Remove any leading/trailing whitespace\n    msg.payload = msg.payload.trim();\n    \n    // 2) Parse the date string into a Date object\n    let date = new Date(msg.payload);\n    \n    // Check if the date is valid\n    if (!isNaN(date)) {\n        // 3) Round to the nearest second\n        // Add 500 milliseconds and then truncate to remove milliseconds\n        date = new Date(Math.round(date.getTime() / 1000) * 1000);\n        \n        // 4) Convert back to ISO string without fractional seconds\n        // The toISOString method returns the date in ISO format with milliseconds, so we remove them\n        msg.payload = date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n        \n        node.warn(\"Modified payload: \" + msg.payload);\n    } else {\n        node.warn(\"Invalid date format: \" + msg.payload);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1480,
        "wires": [
            [
                "06aa0314f45d36ea",
                "4bc3258ac383ed5d"
            ]
        ]
    },
    {
        "id": "5fcb4e512a728761",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "Intermediate Tle builder mqtt",
        "links": [
            "83b2c798a4750a91",
            "726a2df07191f13a",
            "43e744b82393b7e1",
            "0b18c2274661f461"
        ],
        "x": 575,
        "y": 240,
        "wires": [
            [
                "d2005c55.4ffd3",
                "4be84d73.e987b4",
                "1fc13cdde47f8d4b"
            ]
        ]
    },
    {
        "id": "f797e69b2e304a30",
        "type": "exec",
        "z": "dd1202fd.a2e23",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate.txt | tr -d '\\n'",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1640,
        "y": 1500,
        "wires": [
            [
                "afacbd0581029ecf"
            ],
            [],
            []
        ]
    },
    {
        "id": "bc02ddec49e8d73e",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "20e12284ea245aef"
            ]
        ]
    },
    {
        "id": "226b4aed47e88abc",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 820,
        "y": 180,
        "wires": [
            [
                "4513c0b1ade846e5",
                "1b2cf425d09ce06d"
            ]
        ]
    },
    {
        "id": "4513c0b1ade846e5",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 220,
        "wires": [
            [
                "d1e40a289c9d9a8e",
                "fefb65a231fede9d"
            ]
        ]
    },
    {
        "id": "7304714e7d848586",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "links": [
            "06ba5363a0f7099a",
            "d165eee2ac368261",
            "1fd7a16efed76f51",
            "bf758146121476b5",
            "2ff65edf259c1b31",
            "4822920230bbc2fa",
            "f42cdd7860bc61c1",
            "814400e6cdb2c422"
        ],
        "x": 675,
        "y": 180,
        "wires": [
            [
                "226b4aed47e88abc",
                "f61b867de535a450"
            ]
        ]
    },
    {
        "id": "c5aabe122c6fde32",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "links": [
            "d6346f234ae10484",
            "0937321bdbbdabf7",
            "85b1c29dbf523bfd",
            "e3a5f4219101c9e1"
        ],
        "x": 255,
        "y": 320,
        "wires": [
            [
                "20e12284ea245aef",
                "66c99a82ce0f1ac8"
            ]
        ]
    },
    {
        "id": "1b2cf425d09ce06d",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 180,
        "wires": []
    },
    {
        "id": "d1e40a289c9d9a8e",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "3887cd5b1290a0e9",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "mode": "link",
        "links": [
            "3bc6564d0e924c7c"
        ],
        "x": 1185,
        "y": 4640,
        "wires": []
    },
    {
        "id": "aabb98fe3ab1ba7f",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "Simulation End Date",
        "mode": "link",
        "links": [
            "a3bb8e61957c2ae6",
            "4c8ec09dd0f91905",
            "4609410af2641697",
            "4662bfc6a9b47168"
        ],
        "x": 915,
        "y": 320,
        "wires": []
    },
    {
        "id": "4bc3258ac383ed5d",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 1540,
        "wires": []
    },
    {
        "id": "a90f363fd7d343b6",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2390,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4a5ca91dc65b319c",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 100,
        "wires": []
    },
    {
        "id": "fa071f3c0b39c4f8",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "df203c13b4c0e703",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "links": [
            "3fce6b41b55467bd",
            "b29a300d2011e18f"
        ],
        "x": 405,
        "y": 100,
        "wires": [
            [
                "3cd463b18e414c52"
            ]
        ]
    },
    {
        "id": "d74666bf5fa201e2",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "group": "ef71537c5ac2b5d9",
        "order": 6,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Horaire de prise de l'orbite",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1320,
        "y": 2280,
        "wires": []
    },
    {
        "id": "ecb913c80d9b3dc9",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "filename": "/app/maneuver-manager/ApsideDates2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 720,
        "y": 2380,
        "wires": [
            [
                "593416a6ce942c37",
                "e4cff31c2fcd5992"
            ]
        ]
    },
    {
        "id": "593416a6ce942c37",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "APSIDE DATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 2300,
        "wires": []
    },
    {
        "id": "e4cff31c2fcd5992",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 2320,
        "wires": [
            [
                "d0a8119666eae41e"
            ]
        ]
    },
    {
        "id": "d0a8119666eae41e",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2320,
        "wires": [
            [
                "247fa08878554f46"
            ]
        ]
    },
    {
        "id": "4279fea0c5e69f16",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TEMPS PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 2320,
        "wires": []
    },
    {
        "id": "247fa08878554f46",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar n = msg.payload.length\n\n //From the GS\ngs.dateString = msg.payload[n - 2]\n\ntab.push(gs)\n\nmsg.payload = tab\nmsg.dateString = gs.dateString\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2320,
        "wires": [
            [
                "4279fea0c5e69f16",
                "d74666bf5fa201e2"
            ]
        ]
    },
    {
        "id": "d859079b3352ffc7",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "DATE PRISE ORBITE",
        "links": [
            "88480c7c91af9c83"
        ],
        "x": 465,
        "y": 2380,
        "wires": [
            [
                "ecb913c80d9b3dc9"
            ]
        ]
    },
    {
        "id": "b00a2e59f2727124",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "group": "81d0e5ee7c52f38a",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Last orbit reached",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2630,
        "y": 2280,
        "wires": []
    },
    {
        "id": "b9887902d08160e1",
        "type": "exec",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate2.txt | tr -d '\\n'",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1960,
        "y": 2300,
        "wires": [
            [
                "0284bdd0726c15bb",
                "6abecaa8dee3297c",
                "48fc9a9a18520bef",
                "ab26eacf4285fad7",
                "4bafac2a94b4848a"
            ],
            [],
            []
        ]
    },
    {
        "id": "785447d40b10d8aa",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "31845fadbf4e115a",
            "b31e3dda5e3cdd67"
        ],
        "x": 1585,
        "y": 2320,
        "wires": [
            [
                "b9887902d08160e1"
            ]
        ]
    },
    {
        "id": "67c6b503aaf7b3a2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 2320,
        "wires": []
    },
    {
        "id": "bc0101c6fcfb2c7b",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1600,
        "y": 2260,
        "wires": [
            [
                "b9887902d08160e1"
            ]
        ]
    },
    {
        "id": "9c9b0d6a4f3be736",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "4b103d40d80f122d",
            "6a11f73df8b38639"
        ],
        "x": 1335,
        "y": 2380,
        "wires": [
            [
                "d033348944aa4d77"
            ]
        ]
    },
    {
        "id": "0284bdd0726c15bb",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "if (typeof msg.payload === 'string') {\n    // 1) Remove any leading/trailing whitespace\n    msg.payload = msg.payload.trim();\n    \n    // 2) Parse the date string into a Date object\n    let date = new Date(msg.payload);\n    \n    // Check if the date is valid\n    if (!isNaN(date)) {\n        // 3) Round to the nearest second\n        // Add 500 milliseconds and then truncate to remove milliseconds\n        date = new Date(Math.round(date.getTime() / 1000) * 1000);\n        \n        // 4) Convert back to ISO string without fractional seconds\n        // The toISOString method returns the date in ISO format with milliseconds, so we remove them\n        msg.payload = date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n        \n        node.warn(\"Modified payload: \" + msg.payload);\n    } else {\n        node.warn(\"Invalid date format: \" + msg.payload);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 2280,
        "wires": [
            [
                "b00a2e59f2727124",
                "67c6b503aaf7b3a2"
            ]
        ]
    },
    {
        "id": "6abecaa8dee3297c",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2270,
        "y": 2400,
        "wires": []
    },
    {
        "id": "48fc9a9a18520bef",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 2620,
        "wires": [
            [
                "6aeefdd6412419e3",
                "9fa1731a81f3416b"
            ]
        ]
    },
    {
        "id": "ab26eacf4285fad7",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2420,
        "y": 2360,
        "wires": [
            [
                "4801be9f40a1c46e"
            ]
        ]
    },
    {
        "id": "4801be9f40a1c46e",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2630,
        "y": 2360,
        "wires": [
            [
                "3c1564eff3b4ef0d"
            ]
        ]
    },
    {
        "id": "3c1564eff3b4ef0d",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2290,
        "y": 2460,
        "wires": [
            [
                "6aeefdd6412419e3",
                "644da48195d64ee8"
            ]
        ]
    },
    {
        "id": "6aeefdd6412419e3",
        "type": "join-wait",
        "z": "dd1202fd.a2e23",
        "name": "",
        "paths": "[\"path_1\",\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2480,
        "y": 2460,
        "wires": [
            [
                "fd572db4710d3fae",
                "0078cf15bd750b65"
            ],
            []
        ]
    },
    {
        "id": "fd572db4710d3fae",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "// Extract the required values from the incoming message\nlet startdate = msg.paths && msg.paths.path_2;\nlet enddate = msg.paths && msg.paths.path_1 && msg.paths.path_1.enddate;\n\n// Construct a new JSON object with the desired properties\nmsg.payload = {\n    startdate: startdate,\n    enddate: enddate\n};\n\n// Return the modified message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 2420,
        "wires": [
            [
                "2cc64c08c54ee977",
                "89de15b635a1d70f"
            ]
        ]
    },
    {
        "id": "2cc64c08c54ee977",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2840,
        "y": 2460,
        "wires": [
            [
                "99146cf5ad425d51",
                "f6be6b655aa4887a"
            ]
        ]
    },
    {
        "id": "99146cf5ad425d51",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TIME INTERMEDIATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3100,
        "y": 2400,
        "wires": []
    },
    {
        "id": "f6be6b655aa4887a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "name": "",
        "mode": "link",
        "links": [
            "9cd07aae0d11d2f7"
        ],
        "x": 3035,
        "y": 2460,
        "wires": []
    },
    {
        "id": "89de15b635a1d70f",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2910,
        "y": 2360,
        "wires": []
    },
    {
        "id": "9fa1731a81f3416b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 2560,
        "wires": []
    },
    {
        "id": "644da48195d64ee8",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2470,
        "y": 2380,
        "wires": []
    },
    {
        "id": "0078cf15bd750b65",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 2500,
        "wires": []
    },
    {
        "id": "3dae25cd12edc211",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "if (typeof msg.payload === 'string') {\n    // 1) Remove any leading/trailing whitespace\n    msg.payload = msg.payload.trim();\n    \n    // 2) Parse the date string into a Date object\n    let date = new Date(msg.payload);\n    \n    // Check if the date is valid\n    if (!isNaN(date)) {\n        // 3) Round to the nearest second\n        // Add 500 milliseconds and then truncate to remove milliseconds\n        date = new Date(Math.round(date.getTime() / 1000) * 1000);\n        \n        // 4) Convert back to ISO string without fractional seconds\n        // The toISOString method returns the date in ISO format with milliseconds, so we remove them\n        msg.payload = date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n        \n        node.warn(\"Modified payload: \" + msg.payload);\n    } else {\n        node.warn(\"Invalid date format: \" + msg.payload);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 2360,
        "wires": [
            [
                "b00a2e59f2727124",
                "625ae289503e1187"
            ]
        ]
    },
    {
        "id": "d033348944aa4d77",
        "type": "exec",
        "z": "dd1202fd.a2e23",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate2.txt | tr -d '\\n'",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1640,
        "y": 2380,
        "wires": [
            [
                "3dae25cd12edc211"
            ],
            [],
            []
        ]
    },
    {
        "id": "625ae289503e1187",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 2420,
        "wires": []
    },
    {
        "id": "4bafac2a94b4848a",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2390,
        "y": 2320,
        "wires": []
    },
    {
        "id": "aac9f2b4b3e16c95",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "group": "81d0e5ee7c52f38a",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "New TLE date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1740,
        "y": 1880,
        "wires": []
    },
    {
        "id": "15446c60ce8e71a7",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1035,
        "y": 1960,
        "wires": []
    },
    {
        "id": "0a17ffd890892d08",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Time visi",
        "func": "var timePicker = msg.payload;\n\nif (typeof timePicker === 'number') {\n    // Créer un objet Date à partir du timestamp en millisecondes\n    var timestampMillisecond = new Date(timePicker);\n\n    // Vérifier si la date est valide\n    if (isNaN(timestampMillisecond)) {\n        node.error(\"Invalid Date: Le timestamp donné est invalide\", msg);\n    } else {\n        // Convertir en une chaîne de caractères UTC\n        var dateString = timestampMillisecond.toUTCString();\n        msg.dateString = dateString;\n        msg.payload = timePicker;\n        return msg;\n    }\n} else {\n    node.error(\"Le payload n'est pas un nombre valide\", msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 2060,
        "wires": [
            [
                "3022606e93580293",
                "b96a2a9905ad72f7",
                "8e8f8899a93adf9a",
                "154a20df1edaaaa0"
            ]
        ]
    },
    {
        "id": "3022606e93580293",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "group": "1756cdc52869c611",
        "order": 4,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Ordre de maneuvre",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1510,
        "y": 2020,
        "wires": []
    },
    {
        "id": "715b43ae29d18a52",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Time setter blue 1",
        "info": "",
        "x": 2370,
        "y": 1840,
        "wires": []
    },
    {
        "id": "18b75cc4a171a86d",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1285,
        "y": 1900,
        "wires": []
    },
    {
        "id": "e649d74438988f7e",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1110,
        "y": 1880,
        "wires": [
            [
                "18b75cc4a171a86d",
                "9f9b1cb337a442a7",
                "5b72e223675bc38e",
                "8d0e179b1a444dc3",
                "2b27aedfed4e3353"
            ]
        ]
    },
    {
        "id": "e367bf2d7b82058e",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 1900,
        "wires": [
            [
                "e649d74438988f7e"
            ]
        ]
    },
    {
        "id": "8019ab3b9dfa90e3",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "B1 Timestamp checker",
        "func": "msg.datesStartEnd = msg.dates;\nvar TLETimestampSec = msg.timestampMillisecond/1000;\n// convert the timestamp of the new TLE in sec\nvar endDateSec=msg.datesStartEnd[1];\n// extrqct the enddate\nvar aDayinSec=86400;\n// store number of sec in a day\nvar dayBeforeStartSec=msg.datesStartEnd[0]-aDayinSec;\n// compute the time stamp of a day before the startdate\nif(TLETimestampSec>endDateSec){\n    msg.errorMessage=\"TLE date greater than end of sim\";\n    msg.errorFlag=true;\n}\nelse if(!(Number.isInteger(TLETimestampSec))){\n    msg.errorMessage=\"TLE date is note a number\";\n    msg.errorFlag=true;\n}\nelse if(TLETimestampSec<dayBeforeStartSec){\n    msg.errorMessage=\"TLE date too old\";\n    msg.errorFlag=true;\n}\nelse{\n    msg.errorMessage=\"TLE timestamp updated \";\n    msg.errorFlag=false;\n    msg.payload=msg.payload;\n}\n\n//because of the join wait we need to move from msg.payload\n//msg.dateTLE=msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 1940,
        "wires": [
            [
                "4b69798dd8837d35",
                "1ddf539febf76838"
            ]
        ]
    },
    {
        "id": "4b69798dd8837d35",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "error checker",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 1960,
        "wires": [
            [
                "45d5e904efbae470",
                "da937326edc90e88"
            ],
            [
                "bebd743467ad9915"
            ]
        ]
    },
    {
        "id": "1ddf539febf76838",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "group": "81d0e5ee7c52f38a",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Date update status:",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1950,
        "y": 1920,
        "wires": []
    },
    {
        "id": "45d5e904efbae470",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "blue2-date-storage",
        "filename": "blue2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2190,
        "y": 1880,
        "wires": [
            [
                "79169477c396d864"
            ]
        ]
    },
    {
        "id": "b1aa7e4a31c421bc",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2570,
        "y": 2060,
        "wires": [
            [
                "da937326edc90e88"
            ]
        ]
    },
    {
        "id": "bebd743467ad9915",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "blue2-date-storage-out",
        "filename": "blue2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2360,
        "y": 2060,
        "wires": [
            [
                "b1aa7e4a31c421bc"
            ]
        ]
    },
    {
        "id": "da937326edc90e88",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 1940,
        "wires": [
            [
                "e0a218aae75f203b"
            ]
        ]
    },
    {
        "id": "9289ab8432b846ad",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Date updated go",
        "scope": [
            "45d5e904efbae470"
        ],
        "uncaught": false,
        "x": 1580,
        "y": 2080,
        "wires": [
            [
                "8db6cf11b5a2e55a"
            ]
        ]
    },
    {
        "id": "3a8f39aa0a6f52d3",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2140,
        "y": 2080,
        "wires": [
            [
                "bebd743467ad9915"
            ]
        ]
    },
    {
        "id": "6ffbad4981bc9a1c",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1960,
        "y": 2080,
        "wires": [
            [
                "3a8f39aa0a6f52d3"
            ]
        ]
    },
    {
        "id": "8db6cf11b5a2e55a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 2080,
        "wires": [
            [
                "6ffbad4981bc9a1c"
            ]
        ]
    },
    {
        "id": "b56bfe22a7c91122",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 2120,
        "wires": [
            [
                "6ffbad4981bc9a1c"
            ]
        ]
    },
    {
        "id": "abe9f26357e63c21",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 2040,
        "wires": [
            [
                "6ffbad4981bc9a1c"
            ]
        ]
    },
    {
        "id": "e0a218aae75f203b",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2430,
        "y": 1940,
        "wires": [
            [
                "5f1c8a85d379e58f"
            ]
        ]
    },
    {
        "id": "f9fb2903687ea247",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1085,
        "y": 1840,
        "wires": []
    },
    {
        "id": "e82205a5aae61ab3",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 615,
        "y": 1980,
        "wires": [
            [
                "e367bf2d7b82058e",
                "6dffdaeaa16f28c6"
            ]
        ]
    },
    {
        "id": "f8d5c49c2e69a64b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 2200,
        "wires": []
    },
    {
        "id": "7426085b6d8c1a32",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 2200,
        "wires": [
            [
                "f0a18df19d06f472"
            ]
        ]
    },
    {
        "id": "6dffdaeaa16f28c6",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 2200,
        "wires": [
            [
                "7426085b6d8c1a32"
            ]
        ]
    },
    {
        "id": "d1880e76f7f48021",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1055,
        "y": 2140,
        "wires": []
    },
    {
        "id": "f0a18df19d06f472",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Prep string for visu",
        "func": "// Récupérer le timestamp timepicker à partir de l'objet msg.payload\nvar timePicker = msg.payload.timepicker;\n\n// Créer un objet Date à partir du timestamp timepicker\nvar timestampMillisecond = new Date(timePicker);\n\n// Vérifier si la conversion est valide\nif (isNaN(timestampMillisecond)) {\n    node.error(\"Invalid Date: Le timestamp timepicker est invalide\", msg);\n} else {\n    // Convertir le timestamp en une chaîne UTC\n    var dateString = timestampMillisecond.toUTCString();\n\n    // Stocker la chaîne de date dans msg.dateString\n    msg.dateString = dateString;\n\n    // Si vous voulez aussi les startdate et enddate\n    var startDate = new Date(msg.payload.dates.startdate);\n    var endDate = new Date(msg.payload.dates.enddate);\n\n    // Ajouter les chaînes de date UTC dans le msg\n    msg.startDateString = startDate.toUTCString();\n    msg.endDateString = endDate.toUTCString();\n\n    // Optionnel : Conserver le payload d'origine\n    msg.dateString = dateString;\n    msg.payload = timePicker;\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2200,
        "wires": [
            [
                "3022606e93580293",
                "8e8f8899a93adf9a",
                "154a20df1edaaaa0"
            ]
        ]
    },
    {
        "id": "2d216db028c8bee9",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 1410,
        "y": 2220,
        "wires": []
    },
    {
        "id": "9f9b1cb337a442a7",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1840,
        "wires": []
    },
    {
        "id": "835dc99c25c81eea",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 1820,
        "wires": []
    },
    {
        "id": "5b72e223675bc38e",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Prep string for visu",
        "func": "// Récupérer les données du payload\ndates = msg.payload.dates;  // Objet contenant les dates\nstartDate = new Date(dates.startdate); // Convertir en objet Date\nendDate = new Date(dates.enddate);     // Convertir en objet Date\ntimePicker = msg.payload.timepicker;\n\nvar timestampMillisecond = new Date(timePicker);\n\ndateString = (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =timePicker;\nmsg.dates = dates;\nmsg.timestampMillisecond = timestampMillisecond;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1880,
        "wires": [
            [
                "835dc99c25c81eea",
                "aac9f2b4b3e16c95",
                "8019ab3b9dfa90e3"
            ]
        ]
    },
    {
        "id": "354c0da5b699e478",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 2000,
        "wires": []
    },
    {
        "id": "b96a2a9905ad72f7",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 1960,
        "wires": []
    },
    {
        "id": "04377986da1da156",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "group": "81d0e5ee7c52f38a",
        "name": "Datetime Picker with Seconds (Flatpickr)",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        /* Supprimer toute possibilité de scroll */\n        height: 100%;\n        /* Prendre toute la hauteur de la fenêtre */\n        width: 100vw;\n        /* Utiliser la largeur de la fenêtre */\n    }\n\n    /* Conteneur principal centré verticalement, mais avec marge à gauche restaurée */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        /* Centrage vertical */\n        height: 100%;\n        /* Le conteneur prend toute la hauteur disponible */\n        width: 100%;\n        /* Prend toute la largeur */\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        /* Centrage vertical des éléments à l'intérieur */\n        margin-left: 8px;\n        /* Rétablissement de la marge à gauche */\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker {\n        flex-shrink: 1;\n        width: 190px;\n        /* Limiter la largeur à 190px */\n        max-width: 100%;\n        /* Empêcher que l'input dépasse du conteneur */\n        min-width: 100px;\n        /* Largeur minimale pour une bonne lisibilité */\n        background-color: inherit;\n        border: 4px solid #00008B;\n        /* Bordure bleu foncé */\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        /* Prendre en compte la bordure dans la largeur */\n        padding: 5px;\n        /* Espacement interne pour le texte */\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn {\n        padding: 5px 10px;\n        margin-left: 10px;\n        /* Espacement entre le champ et le bouton */\n        background-color: #00008B;\n        /* Couleur du bouton */\n        color: white;\n        /* Couleur du texte du bouton */\n        border: none;\n        /* Supprimer les bordures par défaut */\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n        /* Bordure arrondie */\n    }\n\n    .submit-btn:hover {\n        background-color: #00005B;\n        /* Couleur plus foncée au survol */\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">B2 Time TLE</label>\n        <input type=\"text\" id=\"datetimepicker\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn\" id=\"submit-btn\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            flatpickr(\"#datetimepicker\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    // Optionnel : Vous pouvez envoyer la date automatiquement si nécessaire\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Ajouter l'événement de clic pour le bouton \"Submit\"\n        document.getElementById(\"submit-btn\").addEventListener(\"click\", function() {\n            // Récupérer la valeur actuelle du champ datetimepicker\n            var datetimeValue = document.getElementById(\"datetimepicker\").value;\n\n            // Envoyer la valeur sélectionnée à Node-RED via scope.send()\n            scope.send({ payload: datetimeValue });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 1840,
        "wires": [
            [
                "e8be8ef5192d0766",
                "e6cc6cc909c5a329"
            ]
        ]
    },
    {
        "id": "e8be8ef5192d0766",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1840,
        "wires": [
            [
                "f9fb2903687ea247",
                "e649d74438988f7e"
            ]
        ]
    },
    {
        "id": "a2104e1b56b1810f",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "15446c60ce8e71a7",
                "354c0da5b699e478",
                "0a17ffd890892d08",
                "d1880e76f7f48021",
                "f8d5c49c2e69a64b",
                "7426085b6d8c1a32"
            ]
        ]
    },
    {
        "id": "e2d51eb59360143a",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "group": "1756cdc52869c611",
        "name": "B2 Time Maneuver",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        height: 100%;\n        width: 100vw;\n    }\n\n    /* Conteneur principal centré verticalement */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        margin-left: 8px;\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker-unique {\n        flex-shrink: 1;\n        width: 190px;\n        max-width: 100%;\n        min-width: 100px;\n        background-color: inherit;\n        border: 4px solid #00008B;\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        padding: 5px;\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn-unique {\n        padding: 5px 10px;\n        margin-left: 10px;\n        background-color: #00008B;\n        color: white;\n        border: none;\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n    }\n\n    .submit-btn-unique:hover {\n        background-color: #00005B;\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">B2 Time Maneuver</label>\n        <input type=\"text\" id=\"datetimepicker-unique\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn-unique\" id=\"submit-btn-unique\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        console.log(\"Node-RED context initialized\");\n\n        // Charger la librairie Flatpickr\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            // Initialiser le sélecteur de date\n            flatpickr(\"#datetimepicker-unique\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    console.log(\"Date sélectionnée:\", dateStr);\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Événement de clic pour envoyer la date\n        document.getElementById(\"submit-btn-unique\").addEventListener(\"click\", function() {\n            var datetimeValue = document.getElementById(\"datetimepicker-unique\").value;\n            console.log(\"Date sélectionnée pour envoi:\", datetimeValue);\n            if (datetimeValue) {\n                scope.send({ payload: datetimeValue });\n            } else {\n                console.error(\"Aucune date sélectionnée.\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 430,
        "y": 2040,
        "wires": [
            [
                "a2104e1b56b1810f"
            ]
        ]
    },
    {
        "id": "23df947a3782cb79",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "removed after json up left",
        "info": "",
        "x": 1870,
        "y": 2200,
        "wires": []
    },
    {
        "id": "e54bed644b0ee197",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Move to dateTLE",
        "info": "It seems that the parser ignores the object field name that i set earlier in B1 Timestamp checker nameingly \"dateTLE\" it is a problem becquse the date stays in payload and after because of the \"join-wait\" it will be erased",
        "x": 2100,
        "y": 2200,
        "wires": []
    },
    {
        "id": "e6cc6cc909c5a329",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1920,
        "wires": []
    },
    {
        "id": "79169477c396d864",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 1820,
        "wires": []
    },
    {
        "id": "645fdf9cf67bc345",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "PAYLOAD TO WRITE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2520,
        "y": 2180,
        "wires": []
    },
    {
        "id": "a546de5223b9759c",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "links": [
            "0ea883e06682caf1"
        ],
        "x": 2055,
        "y": 2160,
        "wires": [
            [
                "6c2653bd679e124c"
            ]
        ]
    },
    {
        "id": "6c2653bd679e124c",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "blue2-date-storage-out",
        "filename": "blue2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2200,
        "y": 2160,
        "wires": [
            [
                "f6d99cc60f866189"
            ]
        ]
    },
    {
        "id": "3f2c1be570301771",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2000,
        "y": 2120,
        "wires": [
            [
                "6c2653bd679e124c"
            ]
        ]
    },
    {
        "id": "f6d99cc60f866189",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "Write to LastManeuverDate2.txt",
        "func": "msg.filename = '/app/maneuver-manager/LastManeuverDate2.txt';\nmsg.payload = `\\nDate post - maneuvre\\n${new Date(parseInt(msg.payload)).toISOString()}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2120,
        "wires": [
            [
                "d7f25667f92ea044"
            ]
        ]
    },
    {
        "id": "d7f25667f92ea044",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2280,
        "y": 2220,
        "wires": [
            [
                "645fdf9cf67bc345",
                "b9887902d08160e1"
            ]
        ]
    },
    {
        "id": "8d0e179b1a444dc3",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "dateb2",
        "mode": "link",
        "links": [
            "a73e597c386ed559",
            "9c64e3e2d4199701",
            "f236a58258d1d3e8"
        ],
        "x": 1165,
        "y": 1840,
        "wires": []
    },
    {
        "id": "2b27aedfed4e3353",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "dateb2",
        "mode": "link",
        "links": [
            "a73e597c386ed559",
            "9c64e3e2d4199701",
            "f236a58258d1d3e8"
        ],
        "x": 1285,
        "y": 1940,
        "wires": []
    },
    {
        "id": "8e8f8899a93adf9a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "b2 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "53b64fcd0162168d",
            "da9fec62962b275b"
        ],
        "x": 1405,
        "y": 2100,
        "wires": []
    },
    {
        "id": "9c64e3e2d4199701",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "dateb2 in",
        "links": [
            "ee322054c8b52c91",
            "f80fbb75ac931adb",
            "8d0e179b1a444dc3",
            "61c7c43d64cfae1c",
            "2b27aedfed4e3353",
            "9d74af614b33aeb8"
        ],
        "x": 1645,
        "y": 2120,
        "wires": [
            [
                "b56bfe22a7c91122"
            ]
        ]
    },
    {
        "id": "98ab430c39565261",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "B2  time-time-tle-request",
        "links": [
            "5bf00d0b73be675b"
        ],
        "x": 1645,
        "y": 2040,
        "wires": [
            [
                "abe9f26357e63c21"
            ]
        ]
    },
    {
        "id": "5f1c8a85d379e58f",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "setpath1-B2",
        "mode": "link",
        "links": [
            "440df756d3e898f2",
            "e98a01a47f23395e",
            "5b78836a816f993b"
        ],
        "x": 2575,
        "y": 1940,
        "wires": []
    },
    {
        "id": "516dd7feb70cf99a",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "group": "3befc064653e026e",
        "order": 6,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Horaire de prise de l'orbite",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1260,
        "y": 3180,
        "wires": []
    },
    {
        "id": "b857bd5ef1a16b38",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "filename": "/app/maneuver-manager/ApsideDates3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 3280,
        "wires": [
            [
                "afa026de6a17df6d",
                "cc0a741d72c40794"
            ]
        ]
    },
    {
        "id": "afa026de6a17df6d",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "APSIDE DATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 3200,
        "wires": []
    },
    {
        "id": "cc0a741d72c40794",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 3220,
        "wires": [
            [
                "f1d10e13712cd1df"
            ]
        ]
    },
    {
        "id": "f1d10e13712cd1df",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 3220,
        "wires": [
            [
                "ae02133eb32d766a"
            ]
        ]
    },
    {
        "id": "b5f2b9346e281e01",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TEMPS PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 3220,
        "wires": []
    },
    {
        "id": "ae02133eb32d766a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar n = msg.payload.length\n\n //From the GS\ngs.dateString = msg.payload[n - 2]\n\ntab.push(gs)\n\nmsg.payload = tab\nmsg.dateString = gs.dateString\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 3220,
        "wires": [
            [
                "b5f2b9346e281e01",
                "516dd7feb70cf99a"
            ]
        ]
    },
    {
        "id": "01dc28fdb7452259",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "DATE PRISE ORBITE",
        "links": [
            "8270e30c8cfd84b5"
        ],
        "x": 215,
        "y": 3280,
        "wires": [
            [
                "b857bd5ef1a16b38"
            ]
        ]
    },
    {
        "id": "4eac7a6164d021e2",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "group": "c02dcce485dfb187",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Last orbit reached",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2570,
        "y": 3180,
        "wires": []
    },
    {
        "id": "52dd06c84416432a",
        "type": "exec",
        "z": "dd1202fd.a2e23",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate3.txt | tr -d '\\n'",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1940,
        "y": 3200,
        "wires": [
            [
                "97a1b7f5b8cab98c",
                "f8f5ba3b7641cdac",
                "ad246b233eda4926",
                "77d756045a6f6a36",
                "5fee51662b1a7d8c"
            ],
            [],
            []
        ]
    },
    {
        "id": "e1f765a663a80a9e",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "ca9db7a635b99391",
            "da5f890444221252"
        ],
        "x": 1515,
        "y": 3220,
        "wires": [
            [
                "52dd06c84416432a"
            ]
        ]
    },
    {
        "id": "de4d5d51722d2eed",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 3220,
        "wires": []
    },
    {
        "id": "f9bde01f35fb10a2",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1540,
        "y": 3180,
        "wires": [
            [
                "52dd06c84416432a"
            ]
        ]
    },
    {
        "id": "614c0a9e70da8fda",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "4b103d40d80f122d",
            "6a11f73df8b38639"
        ],
        "x": 1275,
        "y": 3260,
        "wires": [
            [
                "14b54f6bf3ab673e"
            ]
        ]
    },
    {
        "id": "97a1b7f5b8cab98c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "if (typeof msg.payload === 'string') {\n    // 1) Remove any leading/trailing whitespace\n    msg.payload = msg.payload.trim();\n    \n    // 2) Parse the date string into a Date object\n    let date = new Date(msg.payload);\n    \n    // Check if the date is valid\n    if (!isNaN(date)) {\n        // 3) Round to the nearest second\n        // Add 500 milliseconds and then truncate to remove milliseconds\n        date = new Date(Math.round(date.getTime() / 1000) * 1000);\n        \n        // 4) Convert back to ISO string without fractional seconds\n        // The toISOString method returns the date in ISO format with milliseconds, so we remove them\n        msg.payload = date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n        \n        node.warn(\"Modified payload: \" + msg.payload);\n    } else {\n        node.warn(\"Invalid date format: \" + msg.payload);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 3180,
        "wires": [
            [
                "4eac7a6164d021e2",
                "de4d5d51722d2eed"
            ]
        ]
    },
    {
        "id": "f8f5ba3b7641cdac",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 3300,
        "wires": []
    },
    {
        "id": "ad246b233eda4926",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2230,
        "y": 3480,
        "wires": [
            [
                "3c4b492389264de4",
                "ff64fae1f73ee46e"
            ]
        ]
    },
    {
        "id": "77d756045a6f6a36",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2360,
        "y": 3260,
        "wires": [
            [
                "138adc5031c17a71"
            ]
        ]
    },
    {
        "id": "138adc5031c17a71",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2570,
        "y": 3260,
        "wires": [
            [
                "7ad71902b91197fb"
            ]
        ]
    },
    {
        "id": "7ad71902b91197fb",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2230,
        "y": 3360,
        "wires": [
            [
                "3c4b492389264de4",
                "1998ddaaa4ad384b"
            ]
        ]
    },
    {
        "id": "3c4b492389264de4",
        "type": "join-wait",
        "z": "dd1202fd.a2e23",
        "name": "",
        "paths": "[\"path_1\",\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2420,
        "y": 3360,
        "wires": [
            [
                "8b01e5f2cd8ea596",
                "38a3b8ef1f4de32b"
            ],
            []
        ]
    },
    {
        "id": "8b01e5f2cd8ea596",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "// Extract the required values from the incoming message\nlet startdate = msg.paths && msg.paths.path_2;\nlet enddate = msg.paths && msg.paths.path_1 && msg.paths.path_1.enddate;\n\n// Construct a new JSON object with the desired properties\nmsg.payload = {\n    startdate: startdate,\n    enddate: enddate\n};\n\n// Return the modified message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 3320,
        "wires": [
            [
                "15184844de5dc8b5",
                "c7a4eec408ca75a3"
            ]
        ]
    },
    {
        "id": "15184844de5dc8b5",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2780,
        "y": 3360,
        "wires": [
            [
                "68403917ebb1070b",
                "993abaec7339de3a"
            ]
        ]
    },
    {
        "id": "68403917ebb1070b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TIME INTERMEDIATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 3300,
        "wires": []
    },
    {
        "id": "993abaec7339de3a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "name": "",
        "mode": "link",
        "links": [
            "9cd07aae0d11d2f7"
        ],
        "x": 2975,
        "y": 3360,
        "wires": []
    },
    {
        "id": "c7a4eec408ca75a3",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2850,
        "y": 3260,
        "wires": []
    },
    {
        "id": "ff64fae1f73ee46e",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2490,
        "y": 3480,
        "wires": []
    },
    {
        "id": "1998ddaaa4ad384b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 3280,
        "wires": []
    },
    {
        "id": "38a3b8ef1f4de32b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 3400,
        "wires": []
    },
    {
        "id": "8a3b8986cdc3f16d",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "if (typeof msg.payload === 'string') {\n    // 1) Remove any leading/trailing whitespace\n    msg.payload = msg.payload.trim();\n    \n    // 2) Parse the date string into a Date object\n    let date = new Date(msg.payload);\n    \n    // Check if the date is valid\n    if (!isNaN(date)) {\n        // 3) Round to the nearest second\n        // Add 500 milliseconds and then truncate to remove milliseconds\n        date = new Date(Math.round(date.getTime() / 1000) * 1000);\n        \n        // 4) Convert back to ISO string without fractional seconds\n        // The toISOString method returns the date in ISO format with milliseconds, so we remove them\n        msg.payload = date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n        \n        node.warn(\"Modified payload: \" + msg.payload);\n    } else {\n        node.warn(\"Invalid date format: \" + msg.payload);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 3260,
        "wires": [
            [
                "4eac7a6164d021e2",
                "68bf5b61192a96c2"
            ]
        ]
    },
    {
        "id": "14b54f6bf3ab673e",
        "type": "exec",
        "z": "dd1202fd.a2e23",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate3.txt | tr -d '\\n'",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1580,
        "y": 3260,
        "wires": [
            [
                "8a3b8986cdc3f16d"
            ],
            [],
            []
        ]
    },
    {
        "id": "68bf5b61192a96c2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 3320,
        "wires": []
    },
    {
        "id": "5fee51662b1a7d8c",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2330,
        "y": 3220,
        "wires": []
    },
    {
        "id": "ae388cf01aa4e8e9",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "group": "c02dcce485dfb187",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "New TLE date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1680,
        "y": 2780,
        "wires": []
    },
    {
        "id": "9214dfcfbcf5216a",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 975,
        "y": 2860,
        "wires": []
    },
    {
        "id": "516bc613f00a1598",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Time visi",
        "func": "var timePicker = msg.payload;\n\nif (typeof timePicker === 'number') {\n    // Créer un objet Date à partir du timestamp en millisecondes\n    var timestampMillisecond = new Date(timePicker);\n\n    // Vérifier si la date est valide\n    if (isNaN(timestampMillisecond)) {\n        node.error(\"Invalid Date: Le timestamp donné est invalide\", msg);\n    } else {\n        // Convertir en une chaîne de caractères UTC\n        var dateString = timestampMillisecond.toUTCString();\n        msg.dateString = dateString;\n        msg.payload = timePicker;\n        return msg;\n    }\n} else {\n    node.error(\"Le payload n'est pas un nombre valide\", msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 2960,
        "wires": [
            [
                "6edb35c4457c68ae",
                "45fd00d3a788c605",
                "f53aa6e3c64b4915",
                "61ef53ff1dd0638a"
            ]
        ]
    },
    {
        "id": "6edb35c4457c68ae",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "group": "c8a7959a4b0f55f9",
        "order": 4,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Ordre de maneuvre",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1410,
        "y": 2920,
        "wires": []
    },
    {
        "id": "1ba51aed995a8093",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Time setter blue 1",
        "info": "",
        "x": 2310,
        "y": 2740,
        "wires": []
    },
    {
        "id": "71b301128c12bf6f",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1265,
        "y": 2820,
        "wires": []
    },
    {
        "id": "b7a97cefb8c69e43",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1050,
        "y": 2780,
        "wires": [
            [
                "71b301128c12bf6f",
                "f2a6292369d2c459",
                "3202176001f545e3",
                "c8f41b216960f33f",
                "fab49aa74223aafc"
            ]
        ]
    },
    {
        "id": "c253f6f2c802f039",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 2800,
        "wires": [
            [
                "b7a97cefb8c69e43"
            ]
        ]
    },
    {
        "id": "7711e56fa6d9b1ae",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "B1 Timestamp checker",
        "func": "msg.datesStartEnd = msg.dates;\nvar TLETimestampSec = msg.timestampMillisecond/1000;\n// convert the timestamp of the new TLE in sec\nvar endDateSec=msg.datesStartEnd[1];\n// extrqct the enddate\nvar aDayinSec=86400;\n// store number of sec in a day\nvar dayBeforeStartSec=msg.datesStartEnd[0]-aDayinSec;\n// compute the time stamp of a day before the startdate\nif(TLETimestampSec>endDateSec){\n    msg.errorMessage=\"TLE date greater than end of sim\";\n    msg.errorFlag=true;\n}\nelse if(!(Number.isInteger(TLETimestampSec))){\n    msg.errorMessage=\"TLE date is note a number\";\n    msg.errorFlag=true;\n}\nelse if(TLETimestampSec<dayBeforeStartSec){\n    msg.errorMessage=\"TLE date too old\";\n    msg.errorFlag=true;\n}\nelse{\n    msg.errorMessage=\"TLE timestamp updated \";\n    msg.errorFlag=false;\n    msg.payload=msg.payload;\n}\n\n//because of the join wait we need to move from msg.payload\n//msg.dateTLE=msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2840,
        "wires": [
            [
                "a54006e86ba0ff37",
                "14739741409c8eae"
            ]
        ]
    },
    {
        "id": "a54006e86ba0ff37",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "error checker",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1890,
        "y": 2860,
        "wires": [
            [
                "b16eeb2c396d8602",
                "c180665ffb2da7b1"
            ],
            [
                "d2990b715077937d"
            ]
        ]
    },
    {
        "id": "14739741409c8eae",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "group": "c02dcce485dfb187",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Date update status:",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1890,
        "y": 2820,
        "wires": []
    },
    {
        "id": "b16eeb2c396d8602",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "red1-date-storage",
        "filename": "red1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2130,
        "y": 2780,
        "wires": [
            [
                "38db18c1660a9bb4"
            ]
        ]
    },
    {
        "id": "39ba1923491e247c",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2510,
        "y": 2960,
        "wires": [
            [
                "c180665ffb2da7b1"
            ]
        ]
    },
    {
        "id": "d2990b715077937d",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "red1-date-storage-out",
        "filename": "red1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2300,
        "y": 2960,
        "wires": [
            [
                "39ba1923491e247c"
            ]
        ]
    },
    {
        "id": "c180665ffb2da7b1",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 2840,
        "wires": [
            [
                "4f236e133f9b9428"
            ]
        ]
    },
    {
        "id": "7c79bec0e626d0db",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Date updated go",
        "scope": [
            "b16eeb2c396d8602"
        ],
        "uncaught": false,
        "x": 1520,
        "y": 2980,
        "wires": [
            [
                "ca23ba6ae2974b6d"
            ]
        ]
    },
    {
        "id": "525916b1bd65a20b",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2080,
        "y": 2980,
        "wires": [
            [
                "d2990b715077937d"
            ]
        ]
    },
    {
        "id": "96bf81354e796178",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1900,
        "y": 2980,
        "wires": [
            [
                "525916b1bd65a20b"
            ]
        ]
    },
    {
        "id": "ca23ba6ae2974b6d",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 2980,
        "wires": [
            [
                "96bf81354e796178"
            ]
        ]
    },
    {
        "id": "41503b440f8109b6",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 3020,
        "wires": [
            [
                "96bf81354e796178"
            ]
        ]
    },
    {
        "id": "89a6d3fc48c6ca48",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 2940,
        "wires": [
            [
                "96bf81354e796178"
            ]
        ]
    },
    {
        "id": "4f236e133f9b9428",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2370,
        "y": 2840,
        "wires": [
            [
                "988f55311686fee2"
            ]
        ]
    },
    {
        "id": "c293b71996891517",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1025,
        "y": 2740,
        "wires": []
    },
    {
        "id": "cdeba71014e483b2",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 555,
        "y": 2880,
        "wires": [
            [
                "c253f6f2c802f039",
                "2734d90c93b0942e"
            ]
        ]
    },
    {
        "id": "bfc37d4a4b596c2c",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 3100,
        "wires": []
    },
    {
        "id": "525ca060312d3dcc",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 3100,
        "wires": [
            [
                "8eb281cccd239681"
            ]
        ]
    },
    {
        "id": "2734d90c93b0942e",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 3100,
        "wires": [
            [
                "525ca060312d3dcc"
            ]
        ]
    },
    {
        "id": "4b1a25d0abb90e78",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 995,
        "y": 3040,
        "wires": []
    },
    {
        "id": "8eb281cccd239681",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Prep string for visu",
        "func": "// Récupérer le timestamp timepicker à partir de l'objet msg.payload\nvar timePicker = msg.payload.timepicker;\n\n// Créer un objet Date à partir du timestamp timepicker\nvar timestampMillisecond = new Date(timePicker);\n\n// Vérifier si la conversion est valide\nif (isNaN(timestampMillisecond)) {\n    node.error(\"Invalid Date: Le timestamp timepicker est invalide\", msg);\n} else {\n    // Convertir le timestamp en une chaîne UTC\n    var dateString = timestampMillisecond.toUTCString();\n\n    // Stocker la chaîne de date dans msg.dateString\n    msg.dateString = dateString;\n\n    // Si vous voulez aussi les startdate et enddate\n    var startDate = new Date(msg.payload.dates.startdate);\n    var endDate = new Date(msg.payload.dates.enddate);\n\n    // Ajouter les chaînes de date UTC dans le msg\n    msg.startDateString = startDate.toUTCString();\n    msg.endDateString = endDate.toUTCString();\n\n    // Optionnel : Conserver le payload d'origine\n    msg.dateString = dateString;\n    msg.payload = timePicker;\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 3100,
        "wires": [
            [
                "6edb35c4457c68ae",
                "f53aa6e3c64b4915",
                "61ef53ff1dd0638a"
            ]
        ]
    },
    {
        "id": "83a04daeefef037e",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 1350,
        "y": 3120,
        "wires": []
    },
    {
        "id": "f2a6292369d2c459",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 2740,
        "wires": []
    },
    {
        "id": "66e5d2a2c7c35d9e",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 2720,
        "wires": []
    },
    {
        "id": "3202176001f545e3",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Prep string for visu",
        "func": "// Récupérer les données du payload\ndates = msg.payload.dates;  // Objet contenant les dates\nstartDate = new Date(dates.startdate); // Convertir en objet Date\nendDate = new Date(dates.enddate);     // Convertir en objet Date\ntimePicker = msg.payload.timepicker;\n\nvar timestampMillisecond = new Date(timePicker);\n\ndateString = (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =timePicker;\nmsg.dates = dates;\nmsg.timestampMillisecond = timestampMillisecond;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2780,
        "wires": [
            [
                "66e5d2a2c7c35d9e",
                "ae388cf01aa4e8e9",
                "7711e56fa6d9b1ae"
            ]
        ]
    },
    {
        "id": "0d40ea7ec73427ca",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2900,
        "wires": []
    },
    {
        "id": "45fd00d3a788c605",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 2860,
        "wires": []
    },
    {
        "id": "6818f14ce70e5af9",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "group": "c02dcce485dfb187",
        "name": "Datetime Picker with Seconds (Flatpickr)",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        /* Supprimer toute possibilité de scroll */\n        height: 100%;\n        /* Prendre toute la hauteur de la fenêtre */\n        width: 100vw;\n        /* Utiliser la largeur de la fenêtre */\n    }\n\n    /* Conteneur principal centré verticalement, mais avec marge à gauche restaurée */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        /* Centrage vertical */\n        height: 100%;\n        /* Le conteneur prend toute la hauteur disponible */\n        width: 100%;\n        /* Prend toute la largeur */\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        /* Centrage vertical des éléments à l'intérieur */\n        margin-left: 8px;\n        /* Rétablissement de la marge à gauche */\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker {\n        flex-shrink: 1;\n        width: 190px;\n        /* Limiter la largeur à 190px */\n        max-width: 100%;\n        /* Empêcher que l'input dépasse du conteneur */\n        min-width: 100px;\n        /* Largeur minimale pour une bonne lisibilité */\n        background-color: inherit;\n        border: 4px solid red;\n        /* Bordure bleu foncé */\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        /* Prendre en compte la bordure dans la largeur */\n        padding: 5px;\n        /* Espacement interne pour le texte */\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn {\n        padding: 5px 10px;\n        margin-left: 10px;\n        /* Espacement entre le champ et le bouton */\n        background-color: darkred;\n        /* Couleur du bouton */\n        color: white;\n        /* Couleur du texte du bouton */\n        border: none;\n        /* Supprimer les bordures par défaut */\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n        /* Bordure arrondie */\n    }\n\n    .submit-btn:hover {\n        background-color: red;\n        /* Couleur plus foncée au survol */\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">R1 Time TLE</label>\n        <input type=\"text\" id=\"datetimepicker\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn\" id=\"submit-btn\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            flatpickr(\"#datetimepicker\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    // Optionnel : Vous pouvez envoyer la date automatiquement si nécessaire\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Ajouter l'événement de clic pour le bouton \"Submit\"\n        document.getElementById(\"submit-btn\").addEventListener(\"click\", function() {\n            // Récupérer la valeur actuelle du champ datetimepicker\n            var datetimeValue = document.getElementById(\"datetimepicker\").value;\n\n            // Envoyer la valeur sélectionnée à Node-RED via scope.send()\n            scope.send({ payload: datetimeValue });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 2740,
        "wires": [
            [
                "147175e57c8407ad",
                "20bfd6e6cad5aa72"
            ]
        ]
    },
    {
        "id": "147175e57c8407ad",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2740,
        "wires": [
            [
                "c293b71996891517",
                "b7a97cefb8c69e43"
            ]
        ]
    },
    {
        "id": "7d6a6cf1c578033f",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2940,
        "wires": [
            [
                "9214dfcfbcf5216a",
                "0d40ea7ec73427ca",
                "516bc613f00a1598",
                "4b1a25d0abb90e78",
                "bfc37d4a4b596c2c",
                "525ca060312d3dcc"
            ]
        ]
    },
    {
        "id": "b4281a00c6ba58ce",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "group": "c8a7959a4b0f55f9",
        "name": "R1 Time Maneuver",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        height: 100%;\n        width: 100vw;\n    }\n\n    /* Conteneur principal centré verticalement */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        margin-left: 8px;\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker-unique {\n        flex-shrink: 1;\n        width: 190px;\n        max-width: 100%;\n        min-width: 100px;\n        background-color: inherit;\n        border: 4px solid red;\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        padding: 5px;\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn-unique {\n        padding: 5px 10px;\n        margin-left: 10px;\n        background-color: darkred;\n        color: white;\n        border: none;\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n    }\n\n    .submit-btn-unique:hover {\n        background-color: red;\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">R1 Time Maneuver</label>\n        <input type=\"text\" id=\"datetimepicker-unique\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn-unique\" id=\"submit-btn-unique\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        console.log(\"Node-RED context initialized\");\n\n        // Charger la librairie Flatpickr\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            // Initialiser le sélecteur de date\n            flatpickr(\"#datetimepicker-unique\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    console.log(\"Date sélectionnée:\", dateStr);\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Événement de clic pour envoyer la date\n        document.getElementById(\"submit-btn-unique\").addEventListener(\"click\", function() {\n            var datetimeValue = document.getElementById(\"datetimepicker-unique\").value;\n            console.log(\"Date sélectionnée pour envoi:\", datetimeValue);\n            if (datetimeValue) {\n                scope.send({ payload: datetimeValue });\n            } else {\n                console.error(\"Aucune date sélectionnée.\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 370,
        "y": 2940,
        "wires": [
            [
                "7d6a6cf1c578033f"
            ]
        ]
    },
    {
        "id": "3c7109e081ef0932",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "removed after json up left",
        "info": "",
        "x": 1810,
        "y": 3100,
        "wires": []
    },
    {
        "id": "056c9fd8255b301a",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Move to dateTLE",
        "info": "It seems that the parser ignores the object field name that i set earlier in B1 Timestamp checker nameingly \"dateTLE\" it is a problem becquse the date stays in payload and after because of the \"join-wait\" it will be erased",
        "x": 2040,
        "y": 3100,
        "wires": []
    },
    {
        "id": "20bfd6e6cad5aa72",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 2820,
        "wires": []
    },
    {
        "id": "38db18c1660a9bb4",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 2720,
        "wires": []
    },
    {
        "id": "5265e337e5f53049",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "PAYLOAD TO WRITE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2460,
        "y": 3080,
        "wires": []
    },
    {
        "id": "27796799ac6bfafb",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "links": [
            "0718e4c2391326ba"
        ],
        "x": 1995,
        "y": 3060,
        "wires": [
            [
                "2e4ad6300807eb30"
            ]
        ]
    },
    {
        "id": "2e4ad6300807eb30",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "red1-date-storage-out",
        "filename": "red1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2140,
        "y": 3060,
        "wires": [
            [
                "0f159d20a2e40c8c"
            ]
        ]
    },
    {
        "id": "4c32f2067847b762",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1940,
        "y": 3020,
        "wires": [
            [
                "2e4ad6300807eb30"
            ]
        ]
    },
    {
        "id": "0f159d20a2e40c8c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "Write to LastManeuverDate3.txt",
        "func": "msg.filename = '/app/maneuver-manager/LastManeuverDate3.txt';\nmsg.payload = `\\nDate post - maneuvre\\n${new Date(parseInt(msg.payload)).toISOString()}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 3020,
        "wires": [
            [
                "37c6fa70421943e4"
            ]
        ]
    },
    {
        "id": "37c6fa70421943e4",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2220,
        "y": 3120,
        "wires": [
            [
                "5265e337e5f53049",
                "52dd06c84416432a"
            ]
        ]
    },
    {
        "id": "f53aa6e3c64b4915",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "r1 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "9a32e760c91d0c76",
            "dcc01ab55b50a36f"
        ],
        "x": 1335,
        "y": 3000,
        "wires": []
    },
    {
        "id": "c8f41b216960f33f",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "dater1",
        "mode": "link",
        "links": [
            "ac05d363e8776ec0",
            "4b98603cc7a35d9f",
            "cb162edb83270045"
        ],
        "x": 1245,
        "y": 2860,
        "wires": []
    },
    {
        "id": "4b98603cc7a35d9f",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "dater1 in",
        "links": [
            "37344c7ff017b179",
            "ea518f9a0cf28767",
            "c8f41b216960f33f",
            "fab49aa74223aafc"
        ],
        "x": 1575,
        "y": 3020,
        "wires": [
            [
                "41503b440f8109b6"
            ]
        ]
    },
    {
        "id": "1c0e0057ba763a87",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "R1  time-time-tle-request",
        "links": [
            "bd8de8502f02c463"
        ],
        "x": 1575,
        "y": 2940,
        "wires": [
            [
                "89a6d3fc48c6ca48"
            ]
        ]
    },
    {
        "id": "988f55311686fee2",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "setpath1-R1",
        "mode": "link",
        "links": [
            "a58b1046b5db4021",
            "b5baeda070b9f6c8",
            "92dfc759b1f5275e"
        ],
        "x": 2505,
        "y": 2840,
        "wires": []
    },
    {
        "id": "f346772f25d986c5",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "81d0e5ee7c52f38a",
        "name": "Dynamic Form",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <style>\n        /* Ensure full size from root */\n        html,\n        body {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n        }\n\n        /* Make the root container fill available space */\n        #tleSetter_container {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n        }\n\n        /* Make the button fill its container */\n        #tleSetter_openModal {\n            width: 100%;\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            background-color: #0377c4;\n            color: white;\n            border: none;\n            cursor: pointer;\n            font-size: 16px;\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n        }\n\n        #tleSetter_openModal:hover {\n            background-color: #0389dd;\n        }\n\n        /* Modal styling */\n        #tleSetter_myModal {\n            display: none;\n            position: fixed;\n            z-index: 1000;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.7);\n            overflow: auto;\n            opacity: 0;\n            transition: opacity 0.3s ease-in-out;\n        }\n\n        #tleSetter_myModal.show {\n            display: block;\n            opacity: 1;\n        }\n\n        #tleSetter_myModal .modal-content {\n            background-color: #fefefe;\n            margin: 5% auto;\n            padding: 20px;\n            border: 1px solid #888;\n            width: 50%;\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),\n                0 6px 20px 0 rgba(0, 0, 0, 0.19);\n            z-index: 1001;\n            position: relative;\n            max-width: 800px;\n        }\n\n        #tleSetter_myModal .modal-content h2 {\n            text-align: center;\n            margin-top: 0;\n        }\n\n        .tleSetter_close {\n            color: red;\n            font-size: 28px;\n            font-weight: bold;\n            position: absolute;\n            top: 10px;\n            right: 20px;\n            cursor: pointer;\n        }\n\n        .tleSetter_close:hover,\n        .tleSetter_close:focus {\n            color: darkred;\n            text-decoration: none;\n            transform: scale(1.1);\n        }\n\n        #tleSetter_myModal .form-row {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 15px;\n        }\n\n        #tleSetter_myModal .form-row .form-group {\n            width: 48%;\n        }\n\n        #tleSetter_myModal .form-group label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            color: #333;\n        }\n\n        #tleSetter_myModal .form-group input {\n            width: 100%;\n            padding: 8px;\n            box-sizing: border-box;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            color: black;\n            background-color: white;\n        }\n\n        #tleSetter_myModal .form-group input::placeholder {\n            color: #666;\n            opacity: 1;\n        }\n\n        #tleSetter_submitButton {\n            display: block;\n            width: 100%;\n            padding: 10px;\n            background-color: #5cb85c;\n            color: white;\n            font-size: 16px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            margin-top: 20px;\n        }\n\n        #tleSetter_submitButton:hover {\n            background-color: #4cae4c;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"tleSetter_container\">\n        <button id=\"tleSetter_openModal\">Initialisation des Paramètres</button>\n\n        <div id=\"tleSetter_myModal\" class=\"modal\">\n            <div class=\"modal-content\">\n                <span class=\"tleSetter_close\">&#10006;</span>\n                <h2 id=\"tleSetter_modalTitle\">TLE Setter</h2>\n                <form id=\"tleSetter_dynamicForm\">\n                    <div id=\"tleSetter_inputField\"></div>\n                    <button type=\"button\" id=\"tleSetter_submitButton\">Valider les paramètres</button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        (function(scope) {\n        const MU = 398600.4418;\n        const modal = document.getElementById(\"tleSetter_myModal\");\n        const btn = document.getElementById(\"tleSetter_openModal\");\n        const span = document.getElementsByClassName(\"tleSetter_close\")[0];\n        const inputField = document.getElementById('tleSetter_inputField');\n        const modalTitle = document.getElementById('tleSetter_modalTitle');\n        let isFormSubmitted = false;\n\n        btn.onclick = function() {\n            modal.classList.add('show');\n            generateForm();\n        };\n\n        function closeModal() {\n            modal.classList.remove('show');\n        }\n\n        span.onclick = closeModal;\n\n        window.onclick = function(event) {\n            if (event.target === modal) {\n                closeModal();\n            }\n        };\n\n        function generateForm() {\n            inputField.innerHTML = `\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"incli\">Inclination i (°) [2,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_incli\" name=\"incli\" placeholder=\"e.g., 98.7\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"raan\">RAAN Ω (°) [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_raan\" name=\"raan\" placeholder=\"e.g., 123.45\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"ecc\">Eccentricity e [7] :</label>\n                        <input type=\"text\" id=\"tleSetter_ecc\" name=\"ecc\" placeholder=\"e.g., 0.0001234\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"aop\">AoP ω (°) [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_aop\" name=\"aop\" placeholder=\"e.g., 45.67\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"meana\">Mean Anomaly M [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_meana\" name=\"meana\" placeholder=\"e.g., 10.89\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"mean\">Semi-Major Axis (km) [>6600 km] :</label>\n                        <input type=\"text\" id=\"tleSetter_mean\" name=\"mean\" placeholder=\"e.g., 7000\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"dry_mass\">Dry Mass (kg) :</label>\n                        <input type=\"text\" id=\"tleSetter_dry_mass\" name=\"dry_mass\" placeholder=\"e.g., 500\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"ergol_mass\">Initial Ergol Mass (kg) :</label>\n                        <input type=\"text\" id=\"tleSetter_ergol_mass\" name=\"ergol_mass\" placeholder=\"e.g., 300\" />\n                    </div>\n                </div>\n            `;\n        }\n\n        function sendData() {\n            const formData = {};\n            const elements = document.querySelectorAll('#tleSetter_dynamicForm input');\n            elements.forEach(input => {\n                if (input.name && input.value.trim() !== \"\") {\n                    formData[input.name] = input.value.trim();\n                }\n            });\n\n            const requiredFields = ['incli', 'raan', 'ecc', 'aop', 'meana', 'mean', 'dry_mass', 'ergol_mass'];\n            if (!requiredFields.every(field => formData[field])) {\n                alert(\"Veuillez remplir tous les champs requis avant de soumettre.\");\n                return;\n            }\n\n            const a = parseFloat(formData.mean);\n            if (isNaN(a) || a <= 6600) {\n                alert(\"Veuillez entrer une Semi-Major Axis valide supérieure à 6600 km.\");\n                return;\n            }\n\n            const meanMotion = ((86400 / (2 * Math.PI)) * Math.sqrt(MU / Math.pow(a, 3))).toFixed(5);\n            formData.mean = meanMotion;\n\n            scope.send({ payload: formData });\n            isFormSubmitted = false;\n            closeModal();\n        }\n\n        document.getElementById('tleSetter_submitButton').onclick = function() {\n            isFormSubmitted = true;\n            if (inputField.innerHTML.trim() !== \"\") {\n                sendData();\n            } else {\n                alert(\"Veuillez remplir tous les champs requis avant de soumettre.\");\n            }\n        };\n\n        scope.on('input', function(msg) {\n            if (isFormSubmitted) {\n                isFormSubmitted = false;\n            }\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 560,
        "wires": [
            [
                "9e725e8354818392"
            ]
        ]
    },
    {
        "id": "83edd962647bfb7c",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "c02dcce485dfb187",
        "name": "Dynamic Form",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <style>\n        /* Ensure full size from root */\n        html,\n        body {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n        }\n\n        /* Make the root container fill available space */\n        #tleSetter_container {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n        }\n\n      #tleSetter_openModal {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    background-color: firebrick; /* A shade between red and darkred */\n    color: white;\n    border: none;\n    cursor: pointer;\n    font-size: 16px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n#tleSetter_openModal:hover {\n    background-color: #FF0000; /* Optionally adjust the hover shade */\n}\n\n\n\n        /* Modal styling */\n        #tleSetter_myModal {\n            display: none;\n            position: fixed;\n            z-index: 1000;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.7);\n            overflow: auto;\n            opacity: 0;\n            transition: opacity 0.3s ease-in-out;\n        }\n\n        #tleSetter_myModal.show {\n            display: block;\n            opacity: 1;\n        }\n\n        #tleSetter_myModal .modal-content {\n            background-color: #fefefe;\n            margin: 5% auto;\n            padding: 20px;\n            border: 1px solid #888;\n            width: 50%;\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),\n                0 6px 20px 0 rgba(0, 0, 0, 0.19);\n            z-index: 1001;\n            position: relative;\n            max-width: 800px;\n        }\n\n        #tleSetter_myModal .modal-content h2 {\n            text-align: center;\n            margin-top: 0;\n        }\n\n        .tleSetter_close {\n            color: red;\n            font-size: 28px;\n            font-weight: bold;\n            position: absolute;\n            top: 10px;\n            right: 20px;\n            cursor: pointer;\n        }\n\n        .tleSetter_close:hover,\n        .tleSetter_close:focus {\n            color: darkred;\n            text-decoration: none;\n            transform: scale(1.1);\n        }\n\n        #tleSetter_myModal .form-row {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 15px;\n        }\n\n        #tleSetter_myModal .form-row .form-group {\n            width: 48%;\n        }\n\n        #tleSetter_myModal .form-group label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            color: #333;\n        }\n\n        #tleSetter_myModal .form-group input {\n            width: 100%;\n            padding: 8px;\n            box-sizing: border-box;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            color: black;\n            background-color: white;\n        }\n\n        #tleSetter_myModal .form-group input::placeholder {\n            color: #666;\n            opacity: 1;\n        }\n\n        #tleSetter_submitButton {\n            display: block;\n            width: 100%;\n            padding: 10px;\n            background-color: #5cb85c;\n            color: white;\n            font-size: 16px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            margin-top: 20px;\n        }\n\n        #tleSetter_submitButton:hover {\n            background-color: #4cae4c;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"tleSetter_container\">\n        <button id=\"tleSetter_openModal\">Initialisation des Paramètres</button>\n\n        <div id=\"tleSetter_myModal\" class=\"modal\">\n            <div class=\"modal-content\">\n                <span class=\"tleSetter_close\">&#10006;</span>\n                <h2 id=\"tleSetter_modalTitle\">TLE Setter</h2>\n                <form id=\"tleSetter_dynamicForm\">\n                    <div id=\"tleSetter_inputField\"></div>\n                    <button type=\"button\" id=\"tleSetter_submitButton\">Valider les paramètres</button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        (function(scope) {\n        const MU = 398600.4418;\n        const modal = document.getElementById(\"tleSetter_myModal\");\n        const btn = document.getElementById(\"tleSetter_openModal\");\n        const span = document.getElementsByClassName(\"tleSetter_close\")[0];\n        const inputField = document.getElementById('tleSetter_inputField');\n        const modalTitle = document.getElementById('tleSetter_modalTitle');\n        let isFormSubmitted = false;\n\n        btn.onclick = function() {\n            modal.classList.add('show');\n            generateForm();\n        };\n\n        function closeModal() {\n            modal.classList.remove('show');\n        }\n\n        span.onclick = closeModal;\n\n        window.onclick = function(event) {\n            if (event.target === modal) {\n                closeModal();\n            }\n        };\n\n        function generateForm() {\n            inputField.innerHTML = `\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"incli\">Inclination i (°) [2,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_incli\" name=\"incli\" placeholder=\"e.g., 98.7\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"raan\">RAAN Ω (°) [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_raan\" name=\"raan\" placeholder=\"e.g., 123.45\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"ecc\">Eccentricity e [7] :</label>\n                        <input type=\"text\" id=\"tleSetter_ecc\" name=\"ecc\" placeholder=\"e.g., 0.0001234\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"aop\">AoP ω (°) [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_aop\" name=\"aop\" placeholder=\"e.g., 45.67\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"meana\">Mean Anomaly M [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_meana\" name=\"meana\" placeholder=\"e.g., 10.89\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"mean\">Semi-Major Axis (km) [>6600 km] :</label>\n                        <input type=\"text\" id=\"tleSetter_mean\" name=\"mean\" placeholder=\"e.g., 7000\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"dry_mass\">Dry Mass (kg) :</label>\n                        <input type=\"text\" id=\"tleSetter_dry_mass\" name=\"dry_mass\" placeholder=\"e.g., 500\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"ergol_mass\">Initial Ergol Mass (kg) :</label>\n                        <input type=\"text\" id=\"tleSetter_ergol_mass\" name=\"ergol_mass\" placeholder=\"e.g., 300\" />\n                    </div>\n                </div>\n            `;\n        }\n\n        function sendData() {\n            const formData = {};\n            const elements = document.querySelectorAll('#tleSetter_dynamicForm input');\n            elements.forEach(input => {\n                if (input.name && input.value.trim() !== \"\") {\n                    formData[input.name] = input.value.trim();\n                }\n            });\n\n            const requiredFields = ['incli', 'raan', 'ecc', 'aop', 'meana', 'mean', 'dry_mass', 'ergol_mass'];\n            if (!requiredFields.every(field => formData[field])) {\n                alert(\"Veuillez remplir tous les champs requis avant de soumettre.\");\n                return;\n            }\n\n            const a = parseFloat(formData.mean);\n            if (isNaN(a) || a <= 6600) {\n                alert(\"Veuillez entrer une Semi-Major Axis valide supérieure à 6600 km.\");\n                return;\n            }\n\n            const meanMotion = ((86400 / (2 * Math.PI)) * Math.sqrt(MU / Math.pow(a, 3))).toFixed(5);\n            formData.mean = meanMotion;\n\n            scope.send({ payload: formData });\n            isFormSubmitted = false;\n            closeModal();\n        }\n\n        document.getElementById('tleSetter_submitButton').onclick = function() {\n            isFormSubmitted = true;\n            if (inputField.innerHTML.trim() !== \"\") {\n                sendData();\n            } else {\n                alert(\"Veuillez remplir tous les champs requis avant de soumettre.\");\n            }\n        };\n\n        scope.on('input', function(msg) {\n            if (isFormSubmitted) {\n                isFormSubmitted = false;\n            }\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 660,
        "wires": [
            [
                "6f971656ab9c634d"
            ]
        ]
    },
    {
        "id": "4558f81b5b176dfb",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "group": "d4e830c4b00daeae",
        "name": "Dynamic Form",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <style>\n        /* Ensure full size from root */\n        html,\n        body {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n        }\n\n        /* Make the root container fill available space */\n        #tleSetter_container {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n        }\n\n        /* Make the button fill its container */\n#tleSetter_openModal {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    background-color: darkred; /* Changed from #0377c4 to red */\n    color: white;\n    border: none;\n    cursor: pointer;\n    font-size: 16px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n#tleSetter_openModal:hover {\n    background-color: red; /* Change the hover color if desired */\n}\n\n        /* Modal styling */\n        #tleSetter_myModal {\n            display: none;\n            position: fixed;\n            z-index: 1000;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.7);\n            overflow: auto;\n            opacity: 0;\n            transition: opacity 0.3s ease-in-out;\n        }\n\n        #tleSetter_myModal.show {\n            display: block;\n            opacity: 1;\n        }\n\n        #tleSetter_myModal .modal-content {\n            background-color: #fefefe;\n            margin: 5% auto;\n            padding: 20px;\n            border: 1px solid #888;\n            width: 50%;\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),\n                0 6px 20px 0 rgba(0, 0, 0, 0.19);\n            z-index: 1001;\n            position: relative;\n            max-width: 800px;\n        }\n\n        #tleSetter_myModal .modal-content h2 {\n            text-align: center;\n            margin-top: 0;\n        }\n\n        .tleSetter_close {\n            color: red;\n            font-size: 28px;\n            font-weight: bold;\n            position: absolute;\n            top: 10px;\n            right: 20px;\n            cursor: pointer;\n        }\n\n        .tleSetter_close:hover,\n        .tleSetter_close:focus {\n            color: darkred;\n            text-decoration: none;\n            transform: scale(1.1);\n        }\n\n        #tleSetter_myModal .form-row {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 15px;\n        }\n\n        #tleSetter_myModal .form-row .form-group {\n            width: 48%;\n        }\n\n        #tleSetter_myModal .form-group label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            color: #333;\n        }\n\n        #tleSetter_myModal .form-group input {\n            width: 100%;\n            padding: 8px;\n            box-sizing: border-box;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            color: black;\n            background-color: white;\n        }\n\n        #tleSetter_myModal .form-group input::placeholder {\n            color: #666;\n            opacity: 1;\n        }\n\n        #tleSetter_submitButton {\n            display: block;\n            width: 100%;\n            padding: 10px;\n            background-color: #5cb85c;\n            color: white;\n            font-size: 16px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            margin-top: 20px;\n        }\n\n        #tleSetter_submitButton:hover {\n            background-color: #4cae4c;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"tleSetter_container\">\n        <button id=\"tleSetter_openModal\">Initialisation des Paramètres</button>\n\n        <div id=\"tleSetter_myModal\" class=\"modal\">\n            <div class=\"modal-content\">\n                <span class=\"tleSetter_close\">&#10006;</span>\n                <h2 id=\"tleSetter_modalTitle\">TLE Setter</h2>\n                <form id=\"tleSetter_dynamicForm\">\n                    <div id=\"tleSetter_inputField\"></div>\n                    <button type=\"button\" id=\"tleSetter_submitButton\">Valider les paramètres</button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        (function(scope) {\n        const MU = 398600.4418;\n        const modal = document.getElementById(\"tleSetter_myModal\");\n        const btn = document.getElementById(\"tleSetter_openModal\");\n        const span = document.getElementsByClassName(\"tleSetter_close\")[0];\n        const inputField = document.getElementById('tleSetter_inputField');\n        const modalTitle = document.getElementById('tleSetter_modalTitle');\n        let isFormSubmitted = false;\n\n        btn.onclick = function() {\n            modal.classList.add('show');\n            generateForm();\n        };\n\n        function closeModal() {\n            modal.classList.remove('show');\n        }\n\n        span.onclick = closeModal;\n\n        window.onclick = function(event) {\n            if (event.target === modal) {\n                closeModal();\n            }\n        };\n\n        function generateForm() {\n            inputField.innerHTML = `\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"incli\">Inclination i (°) [2,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_incli\" name=\"incli\" placeholder=\"e.g., 98.7\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"raan\">RAAN Ω (°) [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_raan\" name=\"raan\" placeholder=\"e.g., 123.45\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"ecc\">Eccentricity e [7] :</label>\n                        <input type=\"text\" id=\"tleSetter_ecc\" name=\"ecc\" placeholder=\"e.g., 0.0001234\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"aop\">AoP ω (°) [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_aop\" name=\"aop\" placeholder=\"e.g., 45.67\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"meana\">Mean Anomaly M [3,4] :</label>\n                        <input type=\"text\" id=\"tleSetter_meana\" name=\"meana\" placeholder=\"e.g., 10.89\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"mean\">Semi-Major Axis (km) [>6600 km] :</label>\n                        <input type=\"text\" id=\"tleSetter_mean\" name=\"mean\" placeholder=\"e.g., 7000\" />\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"dry_mass\">Dry Mass (kg) :</label>\n                        <input type=\"text\" id=\"tleSetter_dry_mass\" name=\"dry_mass\" placeholder=\"e.g., 500\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"ergol_mass\">Initial Ergol Mass (kg) :</label>\n                        <input type=\"text\" id=\"tleSetter_ergol_mass\" name=\"ergol_mass\" placeholder=\"e.g., 300\" />\n                    </div>\n                </div>\n            `;\n        }\n\n        function sendData() {\n            const formData = {};\n            const elements = document.querySelectorAll('#tleSetter_dynamicForm input');\n            elements.forEach(input => {\n                if (input.name && input.value.trim() !== \"\") {\n                    formData[input.name] = input.value.trim();\n                }\n            });\n\n            const requiredFields = ['incli', 'raan', 'ecc', 'aop', 'meana', 'mean', 'dry_mass', 'ergol_mass'];\n            if (!requiredFields.every(field => formData[field])) {\n                alert(\"Veuillez remplir tous les champs requis avant de soumettre.\");\n                return;\n            }\n\n            const a = parseFloat(formData.mean);\n            if (isNaN(a) || a <= 6600) {\n                alert(\"Veuillez entrer une Semi-Major Axis valide supérieure à 6600 km.\");\n                return;\n            }\n\n            const meanMotion = ((86400 / (2 * Math.PI)) * Math.sqrt(MU / Math.pow(a, 3))).toFixed(5);\n            formData.mean = meanMotion;\n\n            scope.send({ payload: formData });\n            isFormSubmitted = false;\n            closeModal();\n        }\n\n        document.getElementById('tleSetter_submitButton').onclick = function() {\n            isFormSubmitted = true;\n            if (inputField.innerHTML.trim() !== \"\") {\n                sendData();\n            } else {\n                alert(\"Veuillez remplir tous les champs requis avant de soumettre.\");\n            }\n        };\n\n        scope.on('input', function(msg) {\n            if (isFormSubmitted) {\n                isFormSubmitted = false;\n            }\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 780,
        "wires": [
            [
                "c3e09b44ec2d22bd"
            ]
        ]
    },
    {
        "id": "9e725e8354818392",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "test TLE sanity",
        "func": "if(msg.payload.incli>180 || msg.payload.incli<0){\n    msg.errorMessage=\"Error inclination out of bounds i E [0;180]\"}\n    \nelse if (msg.payload.raan>360 || msg.payload.raan<0){\n    msg.errorMessage=\"Error RAAN out of bounds RAAN E [0;180]\"}\n    \nelse if (msg.payload.aop>360 || msg.payload.aop<0){\n    msg.errorMessage=\"Error Argument of perigee out of bounds AoP E [0;360]\"}\n    \nelse if (msg.payload.meana>360 || msg.payload.meana<0){\n    msg.errorMessage=\"Error mean anomaly out of bounds M E [0;360]\"}\n    \nelse if (msg.payload.ecc>1 || msg.payload.ecc<0){\n    msg.errorMessage=\"Error eccentricity out of bounds e E [0;1]\"}\nelse if (msg.payload.mean>16.42 || msg.payload.mean<0){\n    msg.errorMessage=\"Error Mean motion out of bounds N E [0;16.42]\"}\nelse if (msg.payload.dry_mass <= 0 ) {\n    msg.errorMessage = \"Error Negative Dry Mass\"\n}\nelse if (msg.payload.ergol_mass <= 0) {\n    msg.errorMessage = \"Error Negative Ergol Mass\"\n}\n    else{msg.errorMessage=\"TLE Accepted\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 540,
        "wires": [
            [
                "91bbf87c386483b5"
            ]
        ]
    },
    {
        "id": "91bbf87c386483b5",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "insure the tle format is respected",
        "func": "\n//msg.payload.incli=msg.payload.incli.toLocaleString('fr-FR',{minimumSignificantDigits: 6, maximumSignificantDigits: 7, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.incli = Intl.NumberFormat(undefined, {minimumSignificantDigits: 2, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.incli);\n//msg.payload.raan= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.raan);\n//msg.payload.raan=msg.payload.raan.toLocaleString('fr-FR',{minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.ecc=Intl.NumberFormat(undefined,{minimumSignificantDigits: 7, maximumFractionDigits: 0}).format(msg.payload.ecc);\n//msg.payload.aop= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.aop);\n//msg.payload.meana= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.meana);\n//msg.payload.mean=Intl.NumberFormat(undefined,{minimumSignificantDigits: 2, maximumSignificantDigits: 2, minimumFractionDigits: 14, maximumFractionDigits: 14}).format(msg.payload.mean)\nvar minimalEcc =0.0000001;\nvar eccFormat =10000000;\nmsg.payload.incli=Number(msg.payload.incli).toFixed(4);\nmsg.payload.incli=msg.payload.incli.padStart(8,'0');\nmsg.payload.raan=Number(msg.payload.raan).toFixed(4);\nmsg.payload.raan=msg.payload.raan.padStart(8,'0');\nmsg.payload.ecc=Number(msg.payload.ecc);\nif(msg.payload.ecc<minimalEcc){\n    msg.payload.ecc=msg.payload.ecc+minimalEcc;\n}\n//150523 Ajout des Numb() et String() pour l ecc\nmsg.payload.ecc=(msg.payload.ecc*eccFormat)\nmsg.payload.ecc=(msg.payload.ecc).toFixed(0);\n//150523 supression de la parti decimal par securité\nmsg.payload.ecc=String(msg.payload.ecc).padStart(7,'0');\n//150523 We erased the test in TLE 2 edit so we need to have\n//inc at a fixed 8 char for that reason we changed the pad 7->8\nmsg.payload.aop= Number(msg.payload.aop).toFixed(4);\nmsg.payload.aop= msg.payload.aop.padStart(8,'0');\nmsg.payload.meana= Number(msg.payload.meana).toFixed(4);\nmsg.payload.meana= msg.payload.meana.padStart(8,'0');\nmsg.payload.mean= Number(msg.payload.mean).toFixed(14);\nmsg.payload.mean= msg.payload.mean.padStart(17,'0');\nmsg.payload.dry_mass = Number(msg.payload.dry_mass).toFixed(5);\nmsg.payload.ergol_mass = Number(msg.payload.ergol_mass).toFixed(5);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 540,
        "wires": [
            [
                "ede8891b57271a85",
                "c14e2956fb7324a5",
                "40a6d644acf51561"
            ]
        ]
    },
    {
        "id": "6f971656ab9c634d",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "test TLE sanity",
        "func": "if(msg.payload.incli>180 || msg.payload.incli<0){\n    msg.errorMessage=\"Error inclination out of bounds i E [0;180]\"}\n    \nelse if (msg.payload.raan>360 || msg.payload.raan<0){\n    msg.errorMessage=\"Error RAAN out of bounds RAAN E [0;180]\"}\n    \nelse if (msg.payload.aop>360 || msg.payload.aop<0){\n    msg.errorMessage=\"Error Argument of perigee out of bounds AoP E [0;360]\"}\n    \nelse if (msg.payload.meana>360 || msg.payload.meana<0){\n    msg.errorMessage=\"Error mean anomaly out of bounds M E [0;360]\"}\n    \nelse if (msg.payload.ecc>1 || msg.payload.ecc<0){\n    msg.errorMessage=\"Error eccentricity out of bounds e E [0;1]\"}\nelse if (msg.payload.mean>16.42 || msg.payload.mean<0){\n    msg.errorMessage=\"Error Mean motion out of bounds N E [0;16.42]\"}\nelse if (msg.payload.dry_mass <= 0 ) {\n    msg.errorMessage = \"Error Negative Dry Mass\"\n}\nelse if (msg.payload.ergol_mass <= 0) {\n    msg.errorMessage = \"Error Negative Ergol Mass\"\n}\n    else{msg.errorMessage=\"TLE Accepted\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 660,
        "wires": [
            [
                "6d09a57478bc20f8"
            ]
        ]
    },
    {
        "id": "6d09a57478bc20f8",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "insure the tle format is respected",
        "func": "\n//msg.payload.incli=msg.payload.incli.toLocaleString('fr-FR',{minimumSignificantDigits: 6, maximumSignificantDigits: 7, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.incli = Intl.NumberFormat(undefined, {minimumSignificantDigits: 2, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.incli);\n//msg.payload.raan= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.raan);\n//msg.payload.raan=msg.payload.raan.toLocaleString('fr-FR',{minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.ecc=Intl.NumberFormat(undefined,{minimumSignificantDigits: 7, maximumFractionDigits: 0}).format(msg.payload.ecc);\n//msg.payload.aop= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.aop);\n//msg.payload.meana= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.meana);\n//msg.payload.mean=Intl.NumberFormat(undefined,{minimumSignificantDigits: 2, maximumSignificantDigits: 2, minimumFractionDigits: 14, maximumFractionDigits: 14}).format(msg.payload.mean)\nvar minimalEcc =0.0000001;\nvar eccFormat =10000000;\nmsg.payload.incli=Number(msg.payload.incli).toFixed(4);\nmsg.payload.incli=msg.payload.incli.padStart(8,'0');\nmsg.payload.raan=Number(msg.payload.raan).toFixed(4);\nmsg.payload.raan=msg.payload.raan.padStart(8,'0');\nmsg.payload.ecc=Number(msg.payload.ecc);\nif(msg.payload.ecc<minimalEcc){\n    msg.payload.ecc=msg.payload.ecc+minimalEcc;\n}\n//150523 Ajout des Numb() et String() pour l ecc\nmsg.payload.ecc=(msg.payload.ecc*eccFormat)\nmsg.payload.ecc=(msg.payload.ecc).toFixed(0);\n//150523 supression de la parti decimal par securité\nmsg.payload.ecc=String(msg.payload.ecc).padStart(7,'0');\n//150523 We erased the test in TLE 2 edit so we need to have\n//inc at a fixed 8 char for that reason we changed the pad 7->8\nmsg.payload.aop= Number(msg.payload.aop).toFixed(4);\nmsg.payload.aop= msg.payload.aop.padStart(8,'0');\nmsg.payload.meana= Number(msg.payload.meana).toFixed(4);\nmsg.payload.meana= msg.payload.meana.padStart(8,'0');\nmsg.payload.mean= Number(msg.payload.mean).toFixed(14);\nmsg.payload.mean= msg.payload.mean.padStart(17,'0');\nmsg.payload.dry_mass = Number(msg.payload.dry_mass).toFixed(5);\nmsg.payload.ergol_mass = Number(msg.payload.ergol_mass).toFixed(5);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 660,
        "wires": [
            [
                "8faff6b8783bf065",
                "46b03384f7d40a32",
                "4c61af07d5440b24"
            ]
        ]
    },
    {
        "id": "c3e09b44ec2d22bd",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "test TLE sanity",
        "func": "if(msg.payload.incli>180 || msg.payload.incli<0){\n    msg.errorMessage=\"Error inclination out of bounds i E [0;180]\"}\n    \nelse if (msg.payload.raan>360 || msg.payload.raan<0){\n    msg.errorMessage=\"Error RAAN out of bounds RAAN E [0;180]\"}\n    \nelse if (msg.payload.aop>360 || msg.payload.aop<0){\n    msg.errorMessage=\"Error Argument of perigee out of bounds AoP E [0;360]\"}\n    \nelse if (msg.payload.meana>360 || msg.payload.meana<0){\n    msg.errorMessage=\"Error mean anomaly out of bounds M E [0;360]\"}\n    \nelse if (msg.payload.ecc>1 || msg.payload.ecc<0){\n    msg.errorMessage=\"Error eccentricity out of bounds e E [0;1]\"}\nelse if (msg.payload.mean>16.42 || msg.payload.mean<0){\n    msg.errorMessage=\"Error Mean motion out of bounds N E [0;16.42]\"}\nelse if (msg.payload.dry_mass <= 0 ) {\n    msg.errorMessage = \"Error Negative Dry Mass\"\n}\nelse if (msg.payload.ergol_mass <= 0) {\n    msg.errorMessage = \"Error Negative Ergol Mass\"\n}\n    else{msg.errorMessage=\"TLE Accepted\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 780,
        "wires": [
            [
                "cf98a8820678c4e9"
            ]
        ]
    },
    {
        "id": "cf98a8820678c4e9",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "insure the tle format is respected",
        "func": "\n//msg.payload.incli=msg.payload.incli.toLocaleString('fr-FR',{minimumSignificantDigits: 6, maximumSignificantDigits: 7, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.incli = Intl.NumberFormat(undefined, {minimumSignificantDigits: 2, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.incli);\n//msg.payload.raan= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.raan);\n//msg.payload.raan=msg.payload.raan.toLocaleString('fr-FR',{minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4});\n//msg.payload.ecc=Intl.NumberFormat(undefined,{minimumSignificantDigits: 7, maximumFractionDigits: 0}).format(msg.payload.ecc);\n//msg.payload.aop= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.aop);\n//msg.payload.meana= Intl.NumberFormat(undefined, {minimumSignificantDigits: 3, maximumSignificantDigits: 3, minimumFractionDigits: 4, maximumFractionDigits: 4}).format(msg.payload.meana);\n//msg.payload.mean=Intl.NumberFormat(undefined,{minimumSignificantDigits: 2, maximumSignificantDigits: 2, minimumFractionDigits: 14, maximumFractionDigits: 14}).format(msg.payload.mean)\nvar minimalEcc =0.0000001;\nvar eccFormat =10000000;\nmsg.payload.incli=Number(msg.payload.incli).toFixed(4);\nmsg.payload.incli=msg.payload.incli.padStart(8,'0');\nmsg.payload.raan=Number(msg.payload.raan).toFixed(4);\nmsg.payload.raan=msg.payload.raan.padStart(8,'0');\nmsg.payload.ecc=Number(msg.payload.ecc);\nif(msg.payload.ecc<minimalEcc){\n    msg.payload.ecc=msg.payload.ecc+minimalEcc;\n}\n//150523 Ajout des Numb() et String() pour l ecc\nmsg.payload.ecc=(msg.payload.ecc*eccFormat)\nmsg.payload.ecc=(msg.payload.ecc).toFixed(0);\n//150523 supression de la parti decimal par securité\nmsg.payload.ecc=String(msg.payload.ecc).padStart(7,'0');\n//150523 We erased the test in TLE 2 edit so we need to have\n//inc at a fixed 8 char for that reason we changed the pad 7->8\nmsg.payload.aop= Number(msg.payload.aop).toFixed(4);\nmsg.payload.aop= msg.payload.aop.padStart(8,'0');\nmsg.payload.meana= Number(msg.payload.meana).toFixed(4);\nmsg.payload.meana= msg.payload.meana.padStart(8,'0');\nmsg.payload.mean= Number(msg.payload.mean).toFixed(14);\nmsg.payload.mean= msg.payload.mean.padStart(17,'0');\nmsg.payload.dry_mass = Number(msg.payload.dry_mass).toFixed(5);\nmsg.payload.ergol_mass = Number(msg.payload.ergol_mass).toFixed(5);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 780,
        "wires": [
            [
                "8187c89370bdbf5a",
                "eade1819e9df8266",
                "5077a8cd215dacf8",
                "557bea9ff93ac180"
            ]
        ]
    },
    {
        "id": "fab49aa74223aafc",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "dater1",
        "mode": "link",
        "links": [
            "ac05d363e8776ec0",
            "4b98603cc7a35d9f",
            "cb162edb83270045"
        ],
        "x": 1115,
        "y": 2740,
        "wires": []
    },
    {
        "id": "06b79e2e4ff399aa",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "group": "a1e2900e2867cd47",
        "order": 6,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Horaire de prise de l'orbite",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1280,
        "y": 3940,
        "wires": []
    },
    {
        "id": "9e3101aa43573eda",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "filename": "/app/maneuver-manager/ApsideDates4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 480,
        "y": 4040,
        "wires": [
            [
                "8000a6abce474e5e",
                "5219749bd9782677"
            ]
        ]
    },
    {
        "id": "8000a6abce474e5e",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "APSIDE DATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 3980,
        "wires": []
    },
    {
        "id": "5219749bd9782677",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 650,
        "y": 3980,
        "wires": [
            [
                "b1308b71c82b2f7a"
            ]
        ]
    },
    {
        "id": "b1308b71c82b2f7a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 3980,
        "wires": [
            [
                "59ee1da6f8942fe0"
            ]
        ]
    },
    {
        "id": "cab973ec017f54d0",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TEMPS PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 3980,
        "wires": []
    },
    {
        "id": "59ee1da6f8942fe0",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar n = msg.payload.length\n\n //From the GS\ngs.dateString = msg.payload[n - 2]\n\ntab.push(gs)\n\nmsg.payload = tab\nmsg.dateString = gs.dateString\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3980,
        "wires": [
            [
                "cab973ec017f54d0",
                "06b79e2e4ff399aa"
            ]
        ]
    },
    {
        "id": "db31ea2b2b4da4a2",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "DATE PRISE ORBITE",
        "links": [
            "cb3db85bc08fcc43"
        ],
        "x": 225,
        "y": 4040,
        "wires": [
            [
                "9e3101aa43573eda"
            ]
        ]
    },
    {
        "id": "61eef9877dc2f75e",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "group": "d4e830c4b00daeae",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Last orbit reached",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2590,
        "y": 3940,
        "wires": []
    },
    {
        "id": "bb19dd32bab2f7b1",
        "type": "exec",
        "z": "dd1202fd.a2e23",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate4.txt | tr -d '\\n'",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1960,
        "y": 3960,
        "wires": [
            [
                "b4ee27b7f1243aa0",
                "dec0a1d161e1ec78",
                "6f9e0d2383422581",
                "3a9cf31f605be19a",
                "88ce1575de44f696"
            ],
            [],
            []
        ]
    },
    {
        "id": "be1f3f44481fcb31",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "08bce8f52ec84f7a",
            "bf34a4dc8fd58fdb"
        ],
        "x": 1595,
        "y": 3980,
        "wires": [
            [
                "bb19dd32bab2f7b1"
            ]
        ]
    },
    {
        "id": "7d9eda6dadbec6ee",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 3980,
        "wires": []
    },
    {
        "id": "2303ac15072e1028",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1560,
        "y": 3920,
        "wires": [
            [
                "bb19dd32bab2f7b1"
            ]
        ]
    },
    {
        "id": "7ecf593b17dd6d6d",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "4b103d40d80f122d",
            "6a11f73df8b38639"
        ],
        "x": 1295,
        "y": 4020,
        "wires": [
            [
                "63ab672dd9cdba3a"
            ]
        ]
    },
    {
        "id": "b4ee27b7f1243aa0",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "if (typeof msg.payload === 'string') {\n    // 1) Remove any leading/trailing whitespace\n    msg.payload = msg.payload.trim();\n    \n    // 2) Parse the date string into a Date object\n    let date = new Date(msg.payload);\n    \n    // Check if the date is valid\n    if (!isNaN(date)) {\n        // 3) Round to the nearest second\n        // Add 500 milliseconds and then truncate to remove milliseconds\n        date = new Date(Math.round(date.getTime() / 1000) * 1000);\n        \n        // 4) Convert back to ISO string without fractional seconds\n        // The toISOString method returns the date in ISO format with milliseconds, so we remove them\n        msg.payload = date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n        \n        node.warn(\"Modified payload: \" + msg.payload);\n    } else {\n        node.warn(\"Invalid date format: \" + msg.payload);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 3940,
        "wires": [
            [
                "61eef9877dc2f75e",
                "7d9eda6dadbec6ee"
            ]
        ]
    },
    {
        "id": "dec0a1d161e1ec78",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 4060,
        "wires": []
    },
    {
        "id": "6f9e0d2383422581",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2250,
        "y": 4280,
        "wires": [
            [
                "f1337696df7607f9",
                "7673cb8ebb887c12"
            ]
        ]
    },
    {
        "id": "3a9cf31f605be19a",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2380,
        "y": 4020,
        "wires": [
            [
                "c026a70f90ca7e8e"
            ]
        ]
    },
    {
        "id": "c026a70f90ca7e8e",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2590,
        "y": 4020,
        "wires": [
            [
                "a8bde665caf716ed"
            ]
        ]
    },
    {
        "id": "a8bde665caf716ed",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2250,
        "y": 4120,
        "wires": [
            [
                "f1337696df7607f9",
                "6037c55c8694ab0b"
            ]
        ]
    },
    {
        "id": "f1337696df7607f9",
        "type": "join-wait",
        "z": "dd1202fd.a2e23",
        "name": "",
        "paths": "[\"path_1\",\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2440,
        "y": 4120,
        "wires": [
            [
                "78a8899498fbbaa9",
                "2ec1bee71a785f47"
            ],
            []
        ]
    },
    {
        "id": "78a8899498fbbaa9",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "// Extract the required values from the incoming message\nlet startdate = msg.paths && msg.paths.path_2;\nlet enddate = msg.paths && msg.paths.path_1 && msg.paths.path_1.enddate;\n\n// Construct a new JSON object with the desired properties\nmsg.payload = {\n    startdate: startdate,\n    enddate: enddate\n};\n\n// Return the modified message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 4080,
        "wires": [
            [
                "f55d11a5ba594dbc",
                "68367dd1f499a84d"
            ]
        ]
    },
    {
        "id": "f55d11a5ba594dbc",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2800,
        "y": 4120,
        "wires": [
            [
                "cce005eebf0b86c0",
                "5f8f9e30ae379ebd"
            ]
        ]
    },
    {
        "id": "cce005eebf0b86c0",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TIME INTERMEDIATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3060,
        "y": 4060,
        "wires": []
    },
    {
        "id": "5f8f9e30ae379ebd",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "name": "",
        "mode": "link",
        "links": [
            "9cd07aae0d11d2f7"
        ],
        "x": 2995,
        "y": 4120,
        "wires": []
    },
    {
        "id": "68367dd1f499a84d",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 4020,
        "wires": []
    },
    {
        "id": "7673cb8ebb887c12",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2510,
        "y": 4220,
        "wires": []
    },
    {
        "id": "6037c55c8694ab0b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2430,
        "y": 4040,
        "wires": []
    },
    {
        "id": "2ec1bee71a785f47",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 4160,
        "wires": []
    },
    {
        "id": "43cf85c78c631a14",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "if (typeof msg.payload === 'string') {\n    // 1) Remove any leading/trailing whitespace\n    msg.payload = msg.payload.trim();\n    \n    // 2) Parse the date string into a Date object\n    let date = new Date(msg.payload);\n    \n    // Check if the date is valid\n    if (!isNaN(date)) {\n        // 3) Round to the nearest second\n        // Add 500 milliseconds and then truncate to remove milliseconds\n        date = new Date(Math.round(date.getTime() / 1000) * 1000);\n        \n        // 4) Convert back to ISO string without fractional seconds\n        // The toISOString method returns the date in ISO format with milliseconds, so we remove them\n        msg.payload = date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n        \n        node.warn(\"Modified payload: \" + msg.payload);\n    } else {\n        node.warn(\"Invalid date format: \" + msg.payload);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 4020,
        "wires": [
            [
                "61eef9877dc2f75e",
                "6ae9028ff2b60f2f"
            ]
        ]
    },
    {
        "id": "63ab672dd9cdba3a",
        "type": "exec",
        "z": "dd1202fd.a2e23",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate4.txt | tr -d '\\n'",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1600,
        "y": 4020,
        "wires": [
            [
                "43cf85c78c631a14"
            ],
            [],
            []
        ]
    },
    {
        "id": "6ae9028ff2b60f2f",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 4080,
        "wires": []
    },
    {
        "id": "88ce1575de44f696",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 3980,
        "wires": []
    },
    {
        "id": "d5860bdb5e58b16c",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "group": "d4e830c4b00daeae",
        "order": 6,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "New TLE date",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1440,
        "y": 3540,
        "wires": []
    },
    {
        "id": "9373b38afd7442be",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 735,
        "y": 3620,
        "wires": []
    },
    {
        "id": "e8388f8fcf8ccbf0",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Time visi",
        "func": "var timePicker = msg.payload;\n\nif (typeof timePicker === 'number') {\n    // Créer un objet Date à partir du timestamp en millisecondes\n    var timestampMillisecond = new Date(timePicker);\n\n    // Vérifier si la date est valide\n    if (isNaN(timestampMillisecond)) {\n        node.error(\"Invalid Date: Le timestamp donné est invalide\", msg);\n    } else {\n        // Convertir en une chaîne de caractères UTC\n        var dateString = timestampMillisecond.toUTCString();\n        msg.dateString = dateString;\n        msg.payload = timePicker;\n        return msg;\n    }\n} else {\n    node.error(\"Le payload n'est pas un nombre valide\", msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 3720,
        "wires": [
            [
                "00f0f576a14d8c28",
                "fc99fac77e7d772c",
                "00f5602bb540900e",
                "3922d1c1e0bffec1"
            ]
        ]
    },
    {
        "id": "00f0f576a14d8c28",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "group": "7465a3d35f5541d7",
        "order": 4,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Ordre de maneuvre",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 1170,
        "y": 3680,
        "wires": []
    },
    {
        "id": "857f5529109245ed",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Time setter blue 1",
        "info": "",
        "x": 1690,
        "y": 3480,
        "wires": []
    },
    {
        "id": "0731cb6f95d98a23",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 1025,
        "y": 3580,
        "wires": []
    },
    {
        "id": "eb3044e672f83415",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 810,
        "y": 3540,
        "wires": [
            [
                "0731cb6f95d98a23",
                "98237a88da47bf38",
                "bc1d3ed7c64a13e6",
                "3cdb2f5d424c2d7c",
                "99a5694d21a78d3d"
            ]
        ]
    },
    {
        "id": "a08275200f4c608e",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 3560,
        "wires": [
            [
                "eb3044e672f83415"
            ]
        ]
    },
    {
        "id": "40824f7641eb3253",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "B1 Timestamp checker",
        "func": "msg.datesStartEnd = msg.dates;\nvar TLETimestampSec = msg.timestampMillisecond/1000;\n// convert the timestamp of the new TLE in sec\nvar endDateSec=msg.datesStartEnd[1];\n// extrqct the enddate\nvar aDayinSec=86400;\n// store number of sec in a day\nvar dayBeforeStartSec=msg.datesStartEnd[0]-aDayinSec;\n// compute the time stamp of a day before the startdate\nif(TLETimestampSec>endDateSec){\n    msg.errorMessage=\"TLE date greater than end of sim\";\n    msg.errorFlag=true;\n}\nelse if(!(Number.isInteger(TLETimestampSec))){\n    msg.errorMessage=\"TLE date is note a number\";\n    msg.errorFlag=true;\n}\nelse if(TLETimestampSec<dayBeforeStartSec){\n    msg.errorMessage=\"TLE date too old\";\n    msg.errorFlag=true;\n}\nelse{\n    msg.errorMessage=\"TLE timestamp updated \";\n    msg.errorFlag=false;\n    msg.payload=msg.payload;\n}\n\n//because of the join wait we need to move from msg.payload\n//msg.dateTLE=msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 3600,
        "wires": [
            [
                "4b60566a75f1a103",
                "e1d5d31682a0f2e5"
            ]
        ]
    },
    {
        "id": "4b60566a75f1a103",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "error checker",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 3620,
        "wires": [
            [
                "66faaea235906f07",
                "1832bcc54a88675f"
            ],
            [
                "4101c92312de19ea"
            ]
        ]
    },
    {
        "id": "e1d5d31682a0f2e5",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "group": "d4e830c4b00daeae",
        "order": 7,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Date update status:",
        "format": "{{msg.errorMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1650,
        "y": 3580,
        "wires": []
    },
    {
        "id": "66faaea235906f07",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "red2-date-storage",
        "filename": "red2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1890,
        "y": 3540,
        "wires": [
            [
                "0c60dad20b14cfe3"
            ]
        ]
    },
    {
        "id": "b007df6c04ba0528",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2270,
        "y": 3720,
        "wires": [
            [
                "1832bcc54a88675f"
            ]
        ]
    },
    {
        "id": "4101c92312de19ea",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "red2-date-storage-out",
        "filename": "red2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2060,
        "y": 3720,
        "wires": [
            [
                "b007df6c04ba0528"
            ]
        ]
    },
    {
        "id": "1832bcc54a88675f",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 3600,
        "wires": [
            [
                "06cb7d2df5e53ab8"
            ]
        ]
    },
    {
        "id": "5b295aefc71329e9",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Date updated go",
        "scope": [
            "66faaea235906f07"
        ],
        "uncaught": false,
        "x": 1280,
        "y": 3740,
        "wires": [
            [
                "e9d817efb0ff68bc"
            ]
        ]
    },
    {
        "id": "9223e517a6e6ce85",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1840,
        "y": 3740,
        "wires": [
            [
                "4101c92312de19ea"
            ]
        ]
    },
    {
        "id": "35cab29ef44c90ae",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1660,
        "y": 3740,
        "wires": [
            [
                "9223e517a6e6ce85"
            ]
        ]
    },
    {
        "id": "e9d817efb0ff68bc",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 3740,
        "wires": [
            [
                "35cab29ef44c90ae"
            ]
        ]
    },
    {
        "id": "5fd1d483d2a8be5c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 3780,
        "wires": [
            [
                "35cab29ef44c90ae"
            ]
        ]
    },
    {
        "id": "0fd8e1b6c2a3d328",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 3700,
        "wires": [
            [
                "35cab29ef44c90ae"
            ]
        ]
    },
    {
        "id": "06cb7d2df5e53ab8",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 3600,
        "wires": [
            [
                "03886b7dd58107ae"
            ]
        ]
    },
    {
        "id": "c1f31360b5f6f4f9",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 785,
        "y": 3500,
        "wires": []
    },
    {
        "id": "b3c7ef724ca3cec5",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 195,
        "y": 3620,
        "wires": [
            [
                "a08275200f4c608e",
                "3e6876fe02908378"
            ]
        ]
    },
    {
        "id": "fc92b0695af75bea",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 3860,
        "wires": []
    },
    {
        "id": "865ea8a3eb3fd206",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 3860,
        "wires": [
            [
                "4c6f7119c7852b5d"
            ]
        ]
    },
    {
        "id": "3e6876fe02908378",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 3860,
        "wires": [
            [
                "865ea8a3eb3fd206"
            ]
        ]
    },
    {
        "id": "eeca63e3cf156549",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 755,
        "y": 3800,
        "wires": []
    },
    {
        "id": "4c6f7119c7852b5d",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Prep string for visu",
        "func": "// Récupérer le timestamp timepicker à partir de l'objet msg.payload\nvar timePicker = msg.payload.timepicker;\n\n// Créer un objet Date à partir du timestamp timepicker\nvar timestampMillisecond = new Date(timePicker);\n\n// Vérifier si la conversion est valide\nif (isNaN(timestampMillisecond)) {\n    node.error(\"Invalid Date: Le timestamp timepicker est invalide\", msg);\n} else {\n    // Convertir le timestamp en une chaîne UTC\n    var dateString = timestampMillisecond.toUTCString();\n\n    // Stocker la chaîne de date dans msg.dateString\n    msg.dateString = dateString;\n\n    // Si vous voulez aussi les startdate et enddate\n    var startDate = new Date(msg.payload.dates.startdate);\n    var endDate = new Date(msg.payload.dates.enddate);\n\n    // Ajouter les chaînes de date UTC dans le msg\n    msg.startDateString = startDate.toUTCString();\n    msg.endDateString = endDate.toUTCString();\n\n    // Optionnel : Conserver le payload d'origine\n    msg.dateString = dateString;\n    msg.payload = timePicker;\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 3860,
        "wires": [
            [
                "00f0f576a14d8c28",
                "00f5602bb540900e",
                "3922d1c1e0bffec1"
            ]
        ]
    },
    {
        "id": "aa8e57b3a7e054a5",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 1110,
        "y": 3880,
        "wires": []
    },
    {
        "id": "98237a88da47bf38",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 3500,
        "wires": []
    },
    {
        "id": "f988662966ad46a4",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 3480,
        "wires": []
    },
    {
        "id": "bc1d3ed7c64a13e6",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Prep string for visu",
        "func": "// Récupérer les données du payload\ndates = msg.payload.dates;  // Objet contenant les dates\nstartDate = new Date(dates.startdate); // Convertir en objet Date\nendDate = new Date(dates.enddate);     // Convertir en objet Date\ntimePicker = msg.payload.timepicker;\n\nvar timestampMillisecond = new Date(timePicker);\n\ndateString = (timestampMillisecond.toUTCString());\n\nmsg.dateString = dateString;\nmsg.payload =timePicker;\nmsg.dates = dates;\nmsg.timestampMillisecond = timestampMillisecond;\n//msg.datesStartEnd=msg.datesStartEnd;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3540,
        "wires": [
            [
                "f988662966ad46a4",
                "d5860bdb5e58b16c",
                "40824f7641eb3253"
            ]
        ]
    },
    {
        "id": "5667894cedba9285",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 3660,
        "wires": []
    },
    {
        "id": "fc99fac77e7d772c",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 3620,
        "wires": []
    },
    {
        "id": "8ff7614a38bba3a6",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "group": "d4e830c4b00daeae",
        "name": "Datetime Picker with Seconds (Flatpickr)",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        /* Supprimer toute possibilité de scroll */\n        height: 100%;\n        /* Prendre toute la hauteur de la fenêtre */\n        width: 100vw;\n        /* Utiliser la largeur de la fenêtre */\n    }\n\n    /* Conteneur principal centré verticalement, mais avec marge à gauche restaurée */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        /* Centrage vertical */\n        height: 100%;\n        /* Le conteneur prend toute la hauteur disponible */\n        width: 100%;\n        /* Prend toute la largeur */\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        /* Centrage vertical des éléments à l'intérieur */\n        margin-left: 8px;\n        /* Rétablissement de la marge à gauche */\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker {\n        flex-shrink: 1;\n        width: 190px;\n        /* Limiter la largeur à 190px */\n        max-width: 100%;\n        /* Empêcher que l'input dépasse du conteneur */\n        min-width: 100px;\n        /* Largeur minimale pour une bonne lisibilité */\n        background-color: inherit;\n        border: 4px solid red;\n        /* Bordure bleu foncé */\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        /* Prendre en compte la bordure dans la largeur */\n        padding: 5px;\n        /* Espacement interne pour le texte */\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn {\n        padding: 5px 10px;\n        margin-left: 10px;\n        /* Espacement entre le champ et le bouton */\n        background-color: darkred;\n        /* Couleur du bouton */\n        color: white;\n        /* Couleur du texte du bouton */\n        border: none;\n        /* Supprimer les bordures par défaut */\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n        /* Bordure arrondie */\n    }\n\n    .submit-btn:hover {\n        background-color: red;\n        /* Couleur plus foncée au survol */\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">R2 Time TLE</label>\n        <input type=\"text\" id=\"datetimepicker\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn\" id=\"submit-btn\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            flatpickr(\"#datetimepicker\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    // Optionnel : Vous pouvez envoyer la date automatiquement si nécessaire\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Ajouter l'événement de clic pour le bouton \"Submit\"\n        document.getElementById(\"submit-btn\").addEventListener(\"click\", function() {\n            // Récupérer la valeur actuelle du champ datetimepicker\n            var datetimeValue = document.getElementById(\"datetimepicker\").value;\n\n            // Envoyer la valeur sélectionnée à Node-RED via scope.send()\n            scope.send({ payload: datetimeValue });\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 200,
        "y": 3500,
        "wires": [
            [
                "aa7ef83185d1fb70",
                "6cf9f775aece5134"
            ]
        ]
    },
    {
        "id": "aa7ef83185d1fb70",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3500,
        "wires": [
            [
                "c1f31360b5f6f4f9",
                "eb3044e672f83415"
            ]
        ]
    },
    {
        "id": "ffa01e0a31c79a05",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3700,
        "wires": [
            [
                "9373b38afd7442be",
                "5667894cedba9285",
                "e8388f8fcf8ccbf0",
                "eeca63e3cf156549",
                "fc92b0695af75bea",
                "865ea8a3eb3fd206"
            ]
        ]
    },
    {
        "id": "74cbcd6391b27e7c",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "group": "7465a3d35f5541d7",
        "name": "R2 Time Maneuver",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        height: 100%;\n        width: 100vw;\n    }\n\n    /* Conteneur principal centré verticalement */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        margin-left: 8px;\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker-unique {\n        flex-shrink: 1;\n        width: 190px;\n        max-width: 100%;\n        min-width: 100px;\n        background-color: inherit;\n        border: 4px solid red;\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        padding: 5px;\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn-unique {\n        padding: 5px 10px;\n        margin-left: 10px;\n        background-color: darkred;\n        color: white;\n        border: none;\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n    }\n\n    .submit-btn-unique:hover {\n        background-color: red;\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">R2 Time Maneuver</label>\n        <input type=\"text\" id=\"datetimepicker-unique\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn-unique\" id=\"submit-btn-unique\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        console.log(\"Node-RED context initialized\");\n\n        // Charger la librairie Flatpickr\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            // Initialiser le sélecteur de date\n            flatpickr(\"#datetimepicker-unique\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    console.log(\"Date sélectionnée:\", dateStr);\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Événement de clic pour envoyer la date\n        document.getElementById(\"submit-btn-unique\").addEventListener(\"click\", function() {\n            var datetimeValue = document.getElementById(\"datetimepicker-unique\").value;\n            console.log(\"Date sélectionnée pour envoi:\", datetimeValue);\n            if (datetimeValue) {\n                scope.send({ payload: datetimeValue });\n            } else {\n                console.error(\"Aucune date sélectionnée.\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 3700,
        "wires": [
            [
                "ffa01e0a31c79a05"
            ]
        ]
    },
    {
        "id": "a08afee85c06d1df",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "removed after json up left",
        "info": "",
        "x": 1570,
        "y": 3860,
        "wires": []
    },
    {
        "id": "77a53f1235f21956",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Move to dateTLE",
        "info": "It seems that the parser ignores the object field name that i set earlier in B1 Timestamp checker nameingly \"dateTLE\" it is a problem becquse the date stays in payload and after because of the \"join-wait\" it will be erased",
        "x": 1800,
        "y": 3860,
        "wires": []
    },
    {
        "id": "6cf9f775aece5134",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 3580,
        "wires": []
    },
    {
        "id": "0c60dad20b14cfe3",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 3480,
        "wires": []
    },
    {
        "id": "22917689fb699bcb",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "PAYLOAD TO WRITE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2220,
        "y": 3840,
        "wires": []
    },
    {
        "id": "42e5130569abfefa",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "links": [
            "446b73bab1a8b9b9"
        ],
        "x": 1755,
        "y": 3820,
        "wires": [
            [
                "2e73ba5da7ceaf4c"
            ]
        ]
    },
    {
        "id": "2e73ba5da7ceaf4c",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "red2-date-storage-out",
        "filename": "red2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1900,
        "y": 3820,
        "wires": [
            [
                "10c9b968b7fd10a0"
            ]
        ]
    },
    {
        "id": "9fef70ebe3eb607e",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1700,
        "y": 3780,
        "wires": [
            [
                "2e73ba5da7ceaf4c"
            ]
        ]
    },
    {
        "id": "10c9b968b7fd10a0",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "Write to LastManeuverDate4.txt",
        "func": "msg.filename = '/app/maneuver-manager/LastManeuverDate4.txt';\nmsg.payload = `\\nDate post - maneuvre\\n${new Date(parseInt(msg.payload)).toISOString()}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 3780,
        "wires": [
            [
                "36171fc69003ce5f"
            ]
        ]
    },
    {
        "id": "36171fc69003ce5f",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1980,
        "y": 3880,
        "wires": [
            [
                "22917689fb699bcb",
                "bb19dd32bab2f7b1"
            ]
        ]
    },
    {
        "id": "3cdb2f5d424c2d7c",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "dater2",
        "mode": "link",
        "links": [
            "6fbc52778806a647",
            "6f5bdc0f3b958912",
            "df3fc25706bd6610"
        ],
        "x": 885,
        "y": 3500,
        "wires": []
    },
    {
        "id": "99a5694d21a78d3d",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "dater2",
        "mode": "link",
        "links": [
            "6fbc52778806a647",
            "6f5bdc0f3b958912",
            "df3fc25706bd6610"
        ],
        "x": 1015,
        "y": 3620,
        "wires": []
    },
    {
        "id": "00f5602bb540900e",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "r2 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "060d1d76f651e072",
            "e70d55513db45087"
        ],
        "x": 1085,
        "y": 3760,
        "wires": []
    },
    {
        "id": "1b16a3f69fdc9eee",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "R2  time-time-tle-request",
        "links": [
            "db7e42c1aee637bd"
        ],
        "x": 1335,
        "y": 3700,
        "wires": [
            [
                "0fd8e1b6c2a3d328"
            ]
        ]
    },
    {
        "id": "6f5bdc0f3b958912",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "dater2 in",
        "links": [
            "1e796b63f590ed7a",
            "26768359472e0a6a",
            "3cdb2f5d424c2d7c",
            "99a5694d21a78d3d"
        ],
        "x": 1335,
        "y": 3780,
        "wires": [
            [
                "5fd1d483d2a8be5c"
            ]
        ]
    },
    {
        "id": "03886b7dd58107ae",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "setpath1-R2",
        "mode": "link",
        "links": [
            "29a4edb4fa25f4b5",
            "45bd63e8db2df122"
        ],
        "x": 2275,
        "y": 3600,
        "wires": []
    },
    {
        "id": "2e820658ee276e33",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 3745,
        "y": 1740,
        "wires": []
    },
    {
        "id": "2c6daa4677f1d853",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "Time visi",
        "func": "var timePicker = msg.payload;\n\nif (typeof timePicker === 'number') {\n    // Créer un objet Date à partir du timestamp en millisecondes\n    var timestampMillisecond = new Date(timePicker);\n\n    // Vérifier si la date est valide\n    if (isNaN(timestampMillisecond)) {\n        node.error(\"Invalid Date: Le timestamp donné est invalide\", msg);\n    } else {\n        // Convertir en une chaîne de caractères UTC\n        var dateString = timestampMillisecond.toUTCString();\n        msg.dateString = dateString;\n        msg.payload = timePicker;\n        return msg;\n    }\n} else {\n    node.error(\"Le payload n'est pas un nombre valide\", msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 1900,
        "wires": [
            [
                "13a98bb8c23a33f9",
                "3583508622c413ba",
                "8eb48b695f0ef2ac",
                "37ba85f0b8ed5e1b"
            ]
        ]
    },
    {
        "id": "13a98bb8c23a33f9",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "group": "ef71537c5ac2b5d9",
        "order": 5,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Ordre de maneuvre",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 4180,
        "y": 1880,
        "wires": []
    },
    {
        "id": "884581efc58f89cb",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "Time setter blue 1",
        "info": "",
        "x": 4880,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c00c55e2e49f6552",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4580,
        "y": 2060,
        "wires": [
            [
                "068ef94aa2e346ac"
            ]
        ]
    },
    {
        "id": "172a533dedc384e6",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "blue2-date-storage-out",
        "filename": "blue2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4630,
        "y": 2000,
        "wires": [
            [
                "c00c55e2e49f6552"
            ]
        ]
    },
    {
        "id": "068ef94aa2e346ac",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4600,
        "y": 2120,
        "wires": [
            [
                "9cf830c1d254ec76"
            ]
        ]
    },
    {
        "id": "7ed3f3b067e5f7eb",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "Date updated go",
        "scope": [
            "c65b6a2eef1590f6"
        ],
        "uncaught": false,
        "x": 4200,
        "y": 1680,
        "wires": [
            [
                "b29e9ea803711716"
            ]
        ]
    },
    {
        "id": "5e9af48991803e08",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4610,
        "y": 1940,
        "wires": [
            [
                "172a533dedc384e6"
            ]
        ]
    },
    {
        "id": "21c01d131b76853f",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4570,
        "y": 1880,
        "wires": [
            [
                "5e9af48991803e08"
            ]
        ]
    },
    {
        "id": "b29e9ea803711716",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4390,
        "y": 1920,
        "wires": [
            [
                "21c01d131b76853f"
            ]
        ]
    },
    {
        "id": "09cbc993ce36d354",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 1960,
        "wires": [
            [
                "21c01d131b76853f"
            ]
        ]
    },
    {
        "id": "dd8358d9a21ae1f2",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 1880,
        "wires": [
            [
                "21c01d131b76853f"
            ]
        ]
    },
    {
        "id": "9cf830c1d254ec76",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4800,
        "y": 2120,
        "wires": [
            [
                "7d3983b21c77d3ae"
            ]
        ]
    },
    {
        "id": "7df29d4c8ea76192",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 3455,
        "y": 1740,
        "wires": [
            [
                "b467b5c63020432a"
            ]
        ]
    },
    {
        "id": "191e284f35cc3661",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4210,
        "y": 2080,
        "wires": []
    },
    {
        "id": "22fb3a22a7358219",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3750,
        "y": 2080,
        "wires": [
            [
                "ecddba91702dbd84"
            ]
        ]
    },
    {
        "id": "b467b5c63020432a",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3580,
        "y": 2080,
        "wires": [
            [
                "22fb3a22a7358219"
            ]
        ]
    },
    {
        "id": "b92f875a36700294",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 3715,
        "y": 2020,
        "wires": []
    },
    {
        "id": "ecddba91702dbd84",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "Prep string for visu",
        "func": "// Récupérer le timestamp timepicker à partir de l'objet msg.payload\nvar timePicker = msg.payload.timepicker;\n\n// Créer un objet Date à partir du timestamp timepicker\nvar timestampMillisecond = new Date(timePicker);\n\n// Vérifier si la conversion est valide\nif (isNaN(timestampMillisecond)) {\n    node.error(\"Invalid Date: Le timestamp timepicker est invalide\", msg);\n} else {\n    // Convertir le timestamp en une chaîne UTC\n    var dateString = timestampMillisecond.toUTCString();\n\n    // Stocker la chaîne de date dans msg.dateString\n    msg.dateString = dateString;\n\n    // Si vous voulez aussi les startdate et enddate\n    var startDate = new Date(msg.payload.dates.startdate);\n    var endDate = new Date(msg.payload.dates.enddate);\n\n    // Ajouter les chaînes de date UTC dans le msg\n    msg.startDateString = startDate.toUTCString();\n    msg.endDateString = endDate.toUTCString();\n\n    // Optionnel : Conserver le payload d'origine\n    msg.dateString = dateString;\n    msg.payload = timePicker;\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3930,
        "y": 2080,
        "wires": [
            [
                "13a98bb8c23a33f9",
                "ea260fd177aff2fc",
                "37ba85f0b8ed5e1b"
            ]
        ]
    },
    {
        "id": "13cc93881c767a29",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 3950,
        "y": 1980,
        "wires": []
    },
    {
        "id": "c762df3d88d0f431",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3830,
        "y": 1800,
        "wires": []
    },
    {
        "id": "3583508622c413ba",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4190,
        "y": 1780,
        "wires": []
    },
    {
        "id": "f4ed52d9c1f0adda",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 1920,
        "wires": [
            [
                "2e820658ee276e33",
                "c762df3d88d0f431",
                "2c6daa4677f1d853",
                "b92f875a36700294",
                "191e284f35cc3661",
                "22fb3a22a7358219",
                "3390e701c894d490",
                "1308e9f2e1b485a8"
            ]
        ]
    },
    {
        "id": "b4b11c04604f1922",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "group": "ef71537c5ac2b5d9",
        "name": "B2 Time Maneuver",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        height: 100%;\n        width: 100vw;\n    }\n\n    /* Conteneur principal centré verticalement */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        margin-left: 8px;\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker-unique-1 {\n        flex-shrink: 1;\n        width: 190px;\n        max-width: 100%;\n        min-width: 100px;\n        background-color: inherit;\n        border: 4px solid #00008B;\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        padding: 5px;\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn-unique {\n        padding: 5px 10px;\n        margin-left: 10px;\n        background-color: #00008B;\n        color: white;\n        border: none;\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n    }\n\n    .submit-btn-unique:hover {\n        background-color: #00005B;\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">B2 Time Maneuver</label>\n        <input type=\"text\" id=\"datetimepicker-unique-1\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn-unique\" id=\"submit-btn-unique-1\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        console.log(\"Node-RED context initialized\");\n\n        // Charger la librairie Flatpickr\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            // Initialiser le sélecteur de date\n            flatpickr(\"#datetimepicker-unique-1\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    console.log(\"Date sélectionnée:\", dateStr);\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Événement de clic pour envoyer la date\n        document.getElementById(\"submit-btn-unique-1\").addEventListener(\"click\", function() {\n            var datetimeValue = document.getElementById(\"datetimepicker-unique-1\").value;\n            console.log(\"Date sélectionnée pour envoi:\", datetimeValue);\n            if (datetimeValue) {\n                scope.send({ payload: datetimeValue });\n            } else {\n                console.error(\"Aucune date sélectionnée.\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3060,
        "y": 1920,
        "wires": [
            [
                "f4ed52d9c1f0adda",
                "6a44db828f499ca8",
                "1c32c91c6792c1c4"
            ]
        ]
    },
    {
        "id": "ea260fd177aff2fc",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4210,
        "y": 2180,
        "wires": []
    },
    {
        "id": "3390e701c894d490",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "ManeuverOrder2.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar date = msg.payload;\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"Ordre de Maneuvre\",\n    date\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3200,
        "y": 2060,
        "wires": [
            [
                "f2ccfbb50a20915f",
                "81c86b2fd11dbe36"
            ]
        ]
    },
    {
        "id": "9be27c0a87b968c9",
        "type": "csv",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 3390,
        "y": 2220,
        "wires": [
            [
                "abda37d270bed670"
            ]
        ]
    },
    {
        "id": "abda37d270bed670",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3570,
        "y": 2220,
        "wires": [
            [
                "ac0f615322f41f8f"
            ]
        ]
    },
    {
        "id": "ac0f615322f41f8f",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3770,
        "y": 2220,
        "wires": [
            [
                "edafeb893ef71613"
            ]
        ]
    },
    {
        "id": "f2ccfbb50a20915f",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/ManeuverOrder2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3390,
        "y": 2160,
        "wires": [
            [
                "9be27c0a87b968c9"
            ]
        ]
    },
    {
        "id": "81c86b2fd11dbe36",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "TEST Ordre de Maneuvre",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 2220,
        "wires": []
    },
    {
        "id": "6a44db828f499ca8",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "Date de prise de l'orbite",
        "mode": "link",
        "links": [
            "e55332e59a3c4a59"
        ],
        "x": 3215,
        "y": 1960,
        "wires": []
    },
    {
        "id": "edafeb893ef71613",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "TimeManeuverTrigger b2",
        "mode": "link",
        "links": [
            "2a9f357bf345a84b"
        ],
        "x": 3915,
        "y": 2220,
        "wires": []
    },
    {
        "id": "1c32c91c6792c1c4",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3270,
        "y": 1800,
        "wires": []
    },
    {
        "id": "1308e9f2e1b485a8",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3590,
        "y": 1760,
        "wires": []
    },
    {
        "id": "8eb48b695f0ef2ac",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "mode": "link",
        "links": [
            "ee5cc50bab78c83d"
        ],
        "x": 4115,
        "y": 1940,
        "wires": []
    },
    {
        "id": "dfc82496d16bba5b",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 3735,
        "y": 2640,
        "wires": []
    },
    {
        "id": "fbe1e6acf1702ed6",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "Time visi",
        "func": "var timePicker = msg.payload;\n\nif (typeof timePicker === 'number') {\n    // Créer un objet Date à partir du timestamp en millisecondes\n    var timestampMillisecond = new Date(timePicker);\n\n    // Vérifier si la date est valide\n    if (isNaN(timestampMillisecond)) {\n        node.error(\"Invalid Date: Le timestamp donné est invalide\", msg);\n    } else {\n        // Convertir en une chaîne de caractères UTC\n        var dateString = timestampMillisecond.toUTCString();\n        msg.dateString = dateString;\n        msg.payload = timePicker;\n        return msg;\n    }\n} else {\n    node.error(\"Le payload n'est pas un nombre valide\", msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 2800,
        "wires": [
            [
                "ee792ecc39ab3c0e",
                "f2933fa8dba20ac9",
                "fa43f5e2b1625581",
                "f1854b905263a150"
            ]
        ]
    },
    {
        "id": "ee792ecc39ab3c0e",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "group": "3befc064653e026e",
        "order": 5,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Ordre de maneuvre",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 4170,
        "y": 2780,
        "wires": []
    },
    {
        "id": "f2933fa8dba20ac9",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "r1 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "9a32e760c91d0c76",
            "dcc01ab55b50a36f"
        ],
        "x": 4145,
        "y": 2920,
        "wires": []
    },
    {
        "id": "8b998f4bb30a8137",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "Time setter blue 1",
        "info": "",
        "x": 4870,
        "y": 2580,
        "wires": []
    },
    {
        "id": "0a1f855a756a6ec6",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4570,
        "y": 2960,
        "wires": [
            [
                "5be70837ef67e8a1"
            ]
        ]
    },
    {
        "id": "eb159faf45da2c1a",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "red1-date-storage-out",
        "filename": "red1-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4620,
        "y": 2900,
        "wires": [
            [
                "0a1f855a756a6ec6"
            ]
        ]
    },
    {
        "id": "5be70837ef67e8a1",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4590,
        "y": 3020,
        "wires": [
            [
                "c4eb18b851314ab9"
            ]
        ]
    },
    {
        "id": "9a31f5668f14f85f",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "Date updated go",
        "scope": [
            "c65b6a2eef1590f6"
        ],
        "uncaught": false,
        "x": 4190,
        "y": 2580,
        "wires": [
            [
                "0127908595c8ec7c"
            ]
        ]
    },
    {
        "id": "4e330eaf61640db8",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4600,
        "y": 2840,
        "wires": [
            [
                "eb159faf45da2c1a"
            ]
        ]
    },
    {
        "id": "5d5986ae1a0799fc",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4560,
        "y": 2780,
        "wires": [
            [
                "4e330eaf61640db8"
            ]
        ]
    },
    {
        "id": "0127908595c8ec7c",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 2820,
        "wires": [
            [
                "5d5986ae1a0799fc"
            ]
        ]
    },
    {
        "id": "f9b8a6e71c118e7a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4370,
        "y": 2860,
        "wires": [
            [
                "5d5986ae1a0799fc"
            ]
        ]
    },
    {
        "id": "327d7c7f8c7cc39b",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4370,
        "y": 2780,
        "wires": [
            [
                "5d5986ae1a0799fc"
            ]
        ]
    },
    {
        "id": "e4aa1402d72f97fe",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "dater1",
        "mode": "link",
        "links": [],
        "x": 3965,
        "y": 2680,
        "wires": []
    },
    {
        "id": "c4eb18b851314ab9",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4790,
        "y": 3020,
        "wires": [
            [
                "60e5dd2d9c99726d"
            ]
        ]
    },
    {
        "id": "e5b7ee6ba3cc3b12",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 3445,
        "y": 2640,
        "wires": [
            [
                "405f5a2608704778"
            ]
        ]
    },
    {
        "id": "f0d24a3d9489ec18",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4200,
        "y": 2980,
        "wires": []
    },
    {
        "id": "9163739765e2e057",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3740,
        "y": 2980,
        "wires": [
            [
                "253922d9fa9d4020"
            ]
        ]
    },
    {
        "id": "405f5a2608704778",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3570,
        "y": 2980,
        "wires": [
            [
                "9163739765e2e057"
            ]
        ]
    },
    {
        "id": "433532f24271fc1d",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 3735,
        "y": 2940,
        "wires": []
    },
    {
        "id": "253922d9fa9d4020",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "Prep string for visu",
        "func": "// Récupérer le timestamp timepicker à partir de l'objet msg.payload\nvar timePicker = msg.payload.timepicker;\n\n// Créer un objet Date à partir du timestamp timepicker\nvar timestampMillisecond = new Date(timePicker);\n\n// Vérifier si la conversion est valide\nif (isNaN(timestampMillisecond)) {\n    node.error(\"Invalid Date: Le timestamp timepicker est invalide\", msg);\n} else {\n    // Convertir le timestamp en une chaîne UTC\n    var dateString = timestampMillisecond.toUTCString();\n\n    // Stocker la chaîne de date dans msg.dateString\n    msg.dateString = dateString;\n\n    // Si vous voulez aussi les startdate et enddate\n    var startDate = new Date(msg.payload.dates.startdate);\n    var endDate = new Date(msg.payload.dates.enddate);\n\n    // Ajouter les chaînes de date UTC dans le msg\n    msg.startDateString = startDate.toUTCString();\n    msg.endDateString = endDate.toUTCString();\n\n    // Optionnel : Conserver le payload d'origine\n    msg.dateString = dateString;\n    msg.payload = timePicker;\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3920,
        "y": 2980,
        "wires": [
            [
                "ee792ecc39ab3c0e",
                "f2933fa8dba20ac9",
                "9d2aba5d76a11619"
            ]
        ]
    },
    {
        "id": "cd264db07f71d58f",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 3940,
        "y": 2880,
        "wires": []
    },
    {
        "id": "303b1cf9b79ec65e",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3820,
        "y": 2700,
        "wires": []
    },
    {
        "id": "fa43f5e2b1625581",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4180,
        "y": 2680,
        "wires": []
    },
    {
        "id": "635877e11461471b",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3310,
        "y": 2820,
        "wires": [
            [
                "dfc82496d16bba5b",
                "303b1cf9b79ec65e",
                "fbe1e6acf1702ed6",
                "433532f24271fc1d",
                "f0d24a3d9489ec18",
                "9163739765e2e057",
                "e32dd95642710f14",
                "e3a677b2d9b279e5"
            ]
        ]
    },
    {
        "id": "81cd2dbb0fa4394b",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "group": "3befc064653e026e",
        "name": "R1 Time Maneuver",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        height: 100%;\n        width: 100vw;\n    }\n\n    /* Conteneur principal centré verticalement */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        margin-left: 8px;\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker-unique-1 {\n        flex-shrink: 1;\n        width: 190px;\n        max-width: 100%;\n        min-width: 100px;\n        background-color: inherit;\n        border: 4px solid red;\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        padding: 5px;\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn-unique {\n        padding: 5px 10px;\n        margin-left: 10px;\n        background-color: darkred;\n        color: white;\n        border: none;\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n    }\n\n    .submit-btn-unique:hover {\n        background-color: red;\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">R1 Time Maneuver</label>\n        <input type=\"text\" id=\"datetimepicker-unique-1\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn-unique\" id=\"submit-btn-unique-1\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        console.log(\"Node-RED context initialized\");\n\n        // Charger la librairie Flatpickr\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            // Initialiser le sélecteur de date\n            flatpickr(\"#datetimepicker-unique-1\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    console.log(\"Date sélectionnée:\", dateStr);\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Événement de clic pour envoyer la date\n        document.getElementById(\"submit-btn-unique-1\").addEventListener(\"click\", function() {\n            var datetimeValue = document.getElementById(\"datetimepicker-unique-1\").value;\n            console.log(\"Date sélectionnée pour envoi:\", datetimeValue);\n            if (datetimeValue) {\n                scope.send({ payload: datetimeValue });\n            } else {\n                console.error(\"Aucune date sélectionnée.\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3050,
        "y": 2820,
        "wires": [
            [
                "635877e11461471b",
                "1baf63f029fa0aaa",
                "15b4e7cd3c2ebd3a"
            ]
        ]
    },
    {
        "id": "9d2aba5d76a11619",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4200,
        "y": 3080,
        "wires": []
    },
    {
        "id": "e32dd95642710f14",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "ManeuverOrder3.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar date = msg.payload;\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"Ordre de Maneuvre\",\n    date\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3190,
        "y": 2960,
        "wires": [
            [
                "1eb4474c3c3175e5",
                "a510db9110382af1"
            ]
        ]
    },
    {
        "id": "7bb1e94bb718c9a6",
        "type": "csv",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 3380,
        "y": 3120,
        "wires": [
            [
                "bc45460e86e59d50"
            ]
        ]
    },
    {
        "id": "bc45460e86e59d50",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3560,
        "y": 3120,
        "wires": [
            [
                "7e2b4cd77e9b3a95"
            ]
        ]
    },
    {
        "id": "7e2b4cd77e9b3a95",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3760,
        "y": 3120,
        "wires": [
            [
                "3eeb63580a19ce99"
            ]
        ]
    },
    {
        "id": "1eb4474c3c3175e5",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/ManeuverOrder3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3380,
        "y": 3060,
        "wires": [
            [
                "7bb1e94bb718c9a6"
            ]
        ]
    },
    {
        "id": "a510db9110382af1",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "TEST Ordre de Maneuvre",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3100,
        "y": 3120,
        "wires": []
    },
    {
        "id": "1baf63f029fa0aaa",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "Date de prise de l'orbite",
        "mode": "link",
        "links": [
            "e55332e59a3c4a59"
        ],
        "x": 3205,
        "y": 2860,
        "wires": []
    },
    {
        "id": "3eeb63580a19ce99",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "TimeManeuverTrigger r1",
        "mode": "link",
        "links": [
            "0cbb9426de836acf"
        ],
        "x": 3905,
        "y": 3120,
        "wires": []
    },
    {
        "id": "15b4e7cd3c2ebd3a",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3260,
        "y": 2700,
        "wires": []
    },
    {
        "id": "e3a677b2d9b279e5",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3580,
        "y": 2660,
        "wires": []
    },
    {
        "id": "f1854b905263a150",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "mode": "link",
        "links": [
            "a1586487c2a8cf30"
        ],
        "x": 4125,
        "y": 2840,
        "wires": []
    },
    {
        "id": "39255f4fd8e3f58f",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 3775,
        "y": 3480,
        "wires": []
    },
    {
        "id": "30e6b09f07fece24",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "Time visi",
        "func": "var timePicker = msg.payload;\n\nif (typeof timePicker === 'number') {\n    // Créer un objet Date à partir du timestamp en millisecondes\n    var timestampMillisecond = new Date(timePicker);\n\n    // Vérifier si la date est valide\n    if (isNaN(timestampMillisecond)) {\n        node.error(\"Invalid Date: Le timestamp donné est invalide\", msg);\n    } else {\n        // Convertir en une chaîne de caractères UTC\n        var dateString = timestampMillisecond.toUTCString();\n        msg.dateString = dateString;\n        msg.payload = timePicker;\n        return msg;\n    }\n} else {\n    node.error(\"Le payload n'est pas un nombre valide\", msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 3640,
        "wires": [
            [
                "5237ef219dc70383",
                "51ecbdb6f445d9e7",
                "8aa9f74f42671fe8",
                "bbe0593381268527"
            ]
        ]
    },
    {
        "id": "5237ef219dc70383",
        "type": "ui_text",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "group": "a1e2900e2867cd47",
        "order": 5,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Ordre de maneuvre",
        "format": "{{msg.dateString}}",
        "layout": "row-spread",
        "className": "",
        "x": 4180,
        "y": 3620,
        "wires": []
    },
    {
        "id": "51ecbdb6f445d9e7",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "r2 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "060d1d76f651e072",
            "e70d55513db45087"
        ],
        "x": 4115,
        "y": 3760,
        "wires": []
    },
    {
        "id": "b8fc192a8d2c400d",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "Time setter blue 1",
        "info": "",
        "x": 4880,
        "y": 3420,
        "wires": []
    },
    {
        "id": "7e1dd46b203b2813",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4580,
        "y": 3800,
        "wires": [
            [
                "055e17eb5b4c91b1"
            ]
        ]
    },
    {
        "id": "9d7492b20a68bb88",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "red2-date-storage-out",
        "filename": "red2-date-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4630,
        "y": 3740,
        "wires": [
            [
                "7e1dd46b203b2813"
            ]
        ]
    },
    {
        "id": "055e17eb5b4c91b1",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4600,
        "y": 3860,
        "wires": [
            [
                "2210cba7edee45ab"
            ]
        ]
    },
    {
        "id": "e81b5d17439596a2",
        "type": "complete",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "Date updated go",
        "scope": [
            "c65b6a2eef1590f6"
        ],
        "uncaught": false,
        "x": 4200,
        "y": 3420,
        "wires": [
            [
                "39348cbc84d3e5c6"
            ]
        ]
    },
    {
        "id": "e36c27d6b931e3da",
        "type": "switch",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "is from button",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4610,
        "y": 3680,
        "wires": [
            [
                "9d7492b20a68bb88"
            ]
        ]
    },
    {
        "id": "bfb528a1ef404ab3",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "pauseType": "delayv",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4570,
        "y": 3620,
        "wires": [
            [
                "e36c27d6b931e3da"
            ]
        ]
    },
    {
        "id": "39348cbc84d3e5c6",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "delay=0",
        "func": "msg.delay=0;\nmsg.flush=true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4390,
        "y": 3660,
        "wires": [
            [
                "bfb528a1ef404ab3"
            ]
        ]
    },
    {
        "id": "7eea3e4027517074",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "delay5",
        "func": "msg.delay=5000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 3700,
        "wires": [
            [
                "bfb528a1ef404ab3"
            ]
        ]
    },
    {
        "id": "6252438d880c57fb",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "button",
        "func": "msg.payload=\"button\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 3620,
        "wires": [
            [
                "bfb528a1ef404ab3"
            ]
        ]
    },
    {
        "id": "8ad2ee59e45127f8",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "dateR2",
        "mode": "link",
        "links": [
            "12a965edab8effed"
        ],
        "x": 3865,
        "y": 3480,
        "wires": []
    },
    {
        "id": "2210cba7edee45ab",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4800,
        "y": 3860,
        "wires": [
            [
                "9ba76c61789ca5df"
            ]
        ]
    },
    {
        "id": "990127d040e04202",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "FROM TIME PERSISTENCE IN",
        "links": [
            "770a98795c591195"
        ],
        "x": 3435,
        "y": 3480,
        "wires": [
            [
                "27fe3ce229b62bdd"
            ]
        ]
    },
    {
        "id": "fe180d9ff4dc9914",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "test time setterb2 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4210,
        "y": 3820,
        "wires": []
    },
    {
        "id": "6e575da5cdd1a80d",
        "type": "join",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3750,
        "y": 3820,
        "wires": [
            [
                "9de46581ba12b54f"
            ]
        ]
    },
    {
        "id": "27fe3ce229b62bdd",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "add topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "dates",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3580,
        "y": 3820,
        "wires": [
            [
                "6e575da5cdd1a80d"
            ]
        ]
    },
    {
        "id": "2a59cd588865a4fa",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "timeout",
        "mode": "link",
        "links": [
            "152823c72351c9fd"
        ],
        "x": 3785,
        "y": 3780,
        "wires": []
    },
    {
        "id": "9de46581ba12b54f",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "Prep string for visu",
        "func": "// Récupérer le timestamp timepicker à partir de l'objet msg.payload\nvar timePicker = msg.payload.timepicker;\n\n// Créer un objet Date à partir du timestamp timepicker\nvar timestampMillisecond = new Date(timePicker);\n\n// Vérifier si la conversion est valide\nif (isNaN(timestampMillisecond)) {\n    node.error(\"Invalid Date: Le timestamp timepicker est invalide\", msg);\n} else {\n    // Convertir le timestamp en une chaîne UTC\n    var dateString = timestampMillisecond.toUTCString();\n\n    // Stocker la chaîne de date dans msg.dateString\n    msg.dateString = dateString;\n\n    // Si vous voulez aussi les startdate et enddate\n    var startDate = new Date(msg.payload.dates.startdate);\n    var endDate = new Date(msg.payload.dates.enddate);\n\n    // Ajouter les chaînes de date UTC dans le msg\n    msg.startDateString = startDate.toUTCString();\n    msg.endDateString = endDate.toUTCString();\n\n    // Optionnel : Conserver le payload d'origine\n    msg.dateString = dateString;\n    msg.payload = timePicker;\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3930,
        "y": 3820,
        "wires": [
            [
                "5237ef219dc70383",
                "51ecbdb6f445d9e7",
                "914ff5e8cd57b3d4"
            ]
        ]
    },
    {
        "id": "fbc2ee8e49a222e0",
        "type": "comment",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 3950,
        "y": 3720,
        "wires": []
    },
    {
        "id": "05579a55f37edfd2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3830,
        "y": 3540,
        "wires": []
    },
    {
        "id": "8aa9f74f42671fe8",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4190,
        "y": 3520,
        "wires": []
    },
    {
        "id": "fbb54bf42803e56a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "Process DateTime with Seconds",
        "func": "var dateTime = new Date(msg.payload);\n\n// Récupérer le timestamp en millisecondes\nvar timestamp = dateTime.getTime();\n\n// Assigner le timestamp à msg.payload et définir le topic\nmsg.payload = timestamp;\nmsg.topic = \"timepicker\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 3660,
        "wires": [
            [
                "39255f4fd8e3f58f",
                "05579a55f37edfd2",
                "30e6b09f07fece24",
                "2a59cd588865a4fa",
                "fe180d9ff4dc9914",
                "6e575da5cdd1a80d",
                "0c7a2482962d2125",
                "2a034505da84e0f2"
            ]
        ]
    },
    {
        "id": "add7531a537d1459",
        "type": "ui_template",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "group": "a1e2900e2867cd47",
        "name": "R2 Time Maneuver",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /* Empêcher le défilement vertical */\n    html,\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        height: 100%;\n        width: 100vw;\n    }\n\n    /* Conteneur principal centré verticalement */\n    .page-wrapper {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    /* Conteneur du formulaire avec la marge à gauche restaurée */\n    .container {\n        display: flex;\n        align-items: center;\n        margin-left: 8px;\n        margin-right: 10px;\n        background-color: transparent;\n        box-sizing: border-box;\n    }\n\n    /* Style du champ de saisie */\n    #datetimepicker-unique-1 {\n        flex-shrink: 1;\n        width: 190px;\n        max-width: 100%;\n        min-width: 100px;\n        background-color: inherit;\n        border: 4px solid red;\n        color: white;\n        font-weight: normal;\n        box-sizing: border-box;\n        padding: 5px;\n    }\n\n    /* Style du bouton Submit */\n    .submit-btn-unique {\n        padding: 5px 10px;\n        margin-left: 10px;\n        background-color: darkred;\n        color: white;\n        border: none;\n        cursor: pointer;\n        font-size: 14px;\n        border-radius: 4px;\n    }\n\n    .submit-btn-unique:hover {\n        background-color: red;\n    }\n</style>\n\n<div class=\"page-wrapper\">\n    <div class=\"container\">\n        <label style=\"margin-right: 10px; font-weight: normal;\">R2 Time Maneuver</label>\n        <input type=\"text\" id=\"datetimepicker-unique-1\" name=\"datetime\" placeholder=\"Select date and time\">\n        <button class=\"submit-btn-unique\" id=\"submit-btn-unique-1\">Entrer</button>\n    </div>\n</div>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n\n<script>\n    (function(scope) {\n        console.log(\"Node-RED context initialized\");\n\n        // Charger la librairie Flatpickr\n        var script = document.createElement('script');\n        script.src = \"https://cdn.jsdelivr.net/npm/flatpickr\";\n        script.onload = function() {\n            // Initialiser le sélecteur de date\n            flatpickr(\"#datetimepicker-unique-1\", {\n                enableTime: true,\n                time_24hr: true,\n                enableSeconds: true,\n                dateFormat: \"Y-m-d H:i:S\",\n                defaultDate: new Date(),\n                onChange: function(selectedDates, dateStr, instance) {\n                    console.log(\"Date sélectionnée:\", dateStr);\n                }\n            });\n        };\n        document.head.appendChild(script);\n\n        // Événement de clic pour envoyer la date\n        document.getElementById(\"submit-btn-unique-1\").addEventListener(\"click\", function() {\n            var datetimeValue = document.getElementById(\"datetimepicker-unique-1\").value;\n            console.log(\"Date sélectionnée pour envoi:\", datetimeValue);\n            if (datetimeValue) {\n                scope.send({ payload: datetimeValue });\n            } else {\n                console.error(\"Aucune date sélectionnée.\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3060,
        "y": 3660,
        "wires": [
            [
                "fbb54bf42803e56a",
                "b7cde209cf0821cf",
                "1f3365369dea503f"
            ]
        ]
    },
    {
        "id": "914ff5e8cd57b3d4",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4210,
        "y": 3920,
        "wires": []
    },
    {
        "id": "0c7a2482962d2125",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "ManeuverOrder4.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar date = msg.payload;\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"Ordre de Maneuvre\",\n    date\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3200,
        "y": 3800,
        "wires": [
            [
                "c9944c5515257d8e",
                "a113feb367079574"
            ]
        ]
    },
    {
        "id": "6dae6255a97c7b83",
        "type": "csv",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 3390,
        "y": 3960,
        "wires": [
            [
                "236c48ded576a687"
            ]
        ]
    },
    {
        "id": "236c48ded576a687",
        "type": "json",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3570,
        "y": 3960,
        "wires": [
            [
                "0533d0c887b20983"
            ]
        ]
    },
    {
        "id": "0533d0c887b20983",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3770,
        "y": 3960,
        "wires": [
            [
                "e96b1dc68bc775f5"
            ]
        ]
    },
    {
        "id": "c9944c5515257d8e",
        "type": "change",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/ManeuverOrder4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3390,
        "y": 3900,
        "wires": [
            [
                "6dae6255a97c7b83"
            ]
        ]
    },
    {
        "id": "a113feb367079574",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "TEST Ordre de Maneuvre",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 3960,
        "wires": []
    },
    {
        "id": "b7cde209cf0821cf",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "Date de prise de l'orbite",
        "mode": "link",
        "links": [
            "e55332e59a3c4a59"
        ],
        "x": 3215,
        "y": 3700,
        "wires": []
    },
    {
        "id": "e96b1dc68bc775f5",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "TimeManeuverTrigger r2",
        "mode": "link",
        "links": [
            "f8dfcc63acd7a27f"
        ],
        "x": 3915,
        "y": 3960,
        "wires": []
    },
    {
        "id": "1f3365369dea503f",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3270,
        "y": 3600,
        "wires": []
    },
    {
        "id": "2a034505da84e0f2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3590,
        "y": 3500,
        "wires": []
    },
    {
        "id": "bbe0593381268527",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "mode": "link",
        "links": [
            "e02233293ac18921"
        ],
        "x": 4115,
        "y": 3680,
        "wires": []
    },
    {
        "id": "7d3983b21c77d3ae",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "setpath1-B2",
        "mode": "link",
        "links": [
            "440df756d3e898f2",
            "e98a01a47f23395e",
            "5b78836a816f993b"
        ],
        "x": 4785,
        "y": 2180,
        "wires": []
    },
    {
        "id": "60e5dd2d9c99726d",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "setpath1-R1",
        "mode": "link",
        "links": [
            "a58b1046b5db4021",
            "b5baeda070b9f6c8",
            "92dfc759b1f5275e"
        ],
        "x": 4935,
        "y": 3020,
        "wires": []
    },
    {
        "id": "9ba76c61789ca5df",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "setpath1-R2",
        "mode": "link",
        "links": [
            "29a4edb4fa25f4b5",
            "45bd63e8db2df122"
        ],
        "x": 4745,
        "y": 3900,
        "wires": []
    },
    {
        "id": "9d74af614b33aeb8",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "dateb2",
        "mode": "link",
        "links": [
            "a73e597c386ed559",
            "9c64e3e2d4199701",
            "f236a58258d1d3e8"
        ],
        "x": 4045,
        "y": 1760,
        "wires": []
    },
    {
        "id": "f236a58258d1d3e8",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "dateb2 in",
        "links": [
            "ee322054c8b52c91",
            "f80fbb75ac931adb",
            "8d0e179b1a444dc3",
            "61c7c43d64cfae1c",
            "2b27aedfed4e3353",
            "9d74af614b33aeb8"
        ],
        "x": 4265,
        "y": 1960,
        "wires": [
            [
                "09cbc993ce36d354"
            ]
        ]
    },
    {
        "id": "6b038ded92837454",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "B2  time-time-tle-request",
        "links": [
            "5bf00d0b73be675b"
        ],
        "x": 4265,
        "y": 1840,
        "wires": [
            [
                "dd8358d9a21ae1f2"
            ]
        ]
    },
    {
        "id": "37ba85f0b8ed5e1b",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "b2 time setter maneuver OUT",
        "mode": "link",
        "links": [
            "53b64fcd0162168d",
            "da9fec62962b275b"
        ],
        "x": 4145,
        "y": 2020,
        "wires": []
    },
    {
        "id": "cb162edb83270045",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "dater1 in",
        "links": [
            "37344c7ff017b179",
            "ea518f9a0cf28767",
            "c8f41b216960f33f",
            "fab49aa74223aafc"
        ],
        "x": 4255,
        "y": 2860,
        "wires": [
            [
                "f9b8a6e71c118e7a"
            ]
        ]
    },
    {
        "id": "3b798a93160868b2",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "R1  time-time-tle-request",
        "links": [
            "bd8de8502f02c463"
        ],
        "x": 4255,
        "y": 2800,
        "wires": [
            [
                "327d7c7f8c7cc39b"
            ]
        ]
    },
    {
        "id": "2b7bb211054aab28",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "R2  time-time-tle-request",
        "links": [
            "db7e42c1aee637bd"
        ],
        "x": 4265,
        "y": 3640,
        "wires": [
            [
                "6252438d880c57fb"
            ]
        ]
    },
    {
        "id": "df3fc25706bd6610",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "dater2 in",
        "links": [
            "1e796b63f590ed7a",
            "26768359472e0a6a",
            "3cdb2f5d424c2d7c",
            "99a5694d21a78d3d"
        ],
        "x": 4265,
        "y": 3740,
        "wires": [
            [
                "7eea3e4027517074"
            ]
        ]
    },
    {
        "id": "b2131cb807c168eb",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 660,
        "wires": []
    },
    {
        "id": "557bea9ff93ac180",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 760,
        "wires": []
    },
    {
        "id": "2aeb85d6fbd53629",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 460,
        "wires": []
    },
    {
        "id": "6adf4dd2967876e5",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 780,
        "wires": []
    },
    {
        "id": "93a38b06d3837bcb",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "TEST1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "1fc13cdde47f8d4b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "TEST2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 220,
        "wires": []
    },
    {
        "id": "4e7e4910d10cdea2",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "TEST3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 260,
        "wires": []
    },
    {
        "id": "66c99a82ce0f1ac8",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "TEST4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 120,
        "y": 320,
        "wires": []
    },
    {
        "id": "912057b9dc600470",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "TEST5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 480,
        "wires": []
    },
    {
        "id": "efab8412a903f83b",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "TEST6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 200,
        "wires": []
    },
    {
        "id": "f61b867de535a450",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "TEST8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 320,
        "wires": []
    },
    {
        "id": "fefb65a231fede9d",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "4c6998b4.6db838",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 240,
        "wires": [
            [
                "d2005c55.4ffd3"
            ]
        ]
    },
    {
        "id": "95c8614d78c3473f",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "fab3d3fdff892299",
            "90f5e0b845f5fefc",
            "7383493e1cff74cc",
            "f8e19c46a949c689"
        ],
        "x": 1335,
        "y": 1540,
        "wires": [
            [
                "f797e69b2e304a30"
            ]
        ]
    },
    {
        "id": "2ef28ed3db4d0231",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "fab3d3fdff892299",
            "90f5e0b845f5fefc",
            "7383493e1cff74cc",
            "f8e19c46a949c689"
        ],
        "x": 1335,
        "y": 2420,
        "wires": [
            [
                "d033348944aa4d77"
            ]
        ]
    },
    {
        "id": "a8d8e2d370892589",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "fab3d3fdff892299",
            "90f5e0b845f5fefc",
            "7383493e1cff74cc",
            "f8e19c46a949c689"
        ],
        "x": 1275,
        "y": 3300,
        "wires": [
            [
                "14b54f6bf3ab673e"
            ]
        ]
    },
    {
        "id": "7d465a2c88228a3f",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "fab3d3fdff892299",
            "90f5e0b845f5fefc",
            "7383493e1cff74cc",
            "f8e19c46a949c689"
        ],
        "x": 1295,
        "y": 4060,
        "wires": [
            [
                "63ab672dd9cdba3a"
            ]
        ]
    },
    {
        "id": "113dc4819dacaba8",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1175,
        "y": 500,
        "wires": [
            [
                "060259ab7d13bac7"
            ]
        ]
    },
    {
        "id": "e65a24fb13407c7d",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1085,
        "y": 520,
        "wires": [
            [
                "c14e2956fb7324a5"
            ]
        ]
    },
    {
        "id": "bfa87efc6be614d9",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1145,
        "y": 740,
        "wires": [
            [
                "4c61af07d5440b24"
            ]
        ]
    },
    {
        "id": "4aaba9ca01ff7754",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1095,
        "y": 840,
        "wires": [
            [
                "5077a8cd215dacf8"
            ]
        ]
    },
    {
        "id": "f11b0ae6e6010670",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1559,
        "y": 955,
        "wires": [
            [
                "efefb3362e012b40"
            ]
        ]
    },
    {
        "id": "9f2d1fefb0051b17",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1865,
        "y": 980,
        "wires": [
            [
                "871fa62da5d6f2d3"
            ]
        ]
    },
    {
        "id": "6a61307b89f50431",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1385,
        "y": 1180,
        "wires": [
            [
                "0f1749dffdc1aa6d"
            ]
        ]
    },
    {
        "id": "3fa49594c489011f",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1137,
        "y": 1360,
        "wires": [
            [
                "fbad01eea828e089"
            ]
        ]
    },
    {
        "id": "8f4a9a4f3a9fa16d",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1567,
        "y": 1833,
        "wires": [
            [
                "aac9f2b4b3e16c95"
            ]
        ]
    },
    {
        "id": "ba0c1219bbaa679f",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1853,
        "y": 1866,
        "wires": [
            [
                "1ddf539febf76838"
            ]
        ]
    },
    {
        "id": "4794edf754bb9065",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1415,
        "y": 2060,
        "wires": [
            [
                "3022606e93580293"
            ]
        ]
    },
    {
        "id": "916b55a638cf7c99",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "27871d2b6bf827cb",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1155,
        "y": 2240,
        "wires": [
            [
                "d74666bf5fa201e2"
            ]
        ]
    },
    {
        "id": "cfa3fdd1f0a1b306",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1545,
        "y": 2720,
        "wires": [
            [
                "ae388cf01aa4e8e9"
            ]
        ]
    },
    {
        "id": "f0ad0faffec1b561",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1805,
        "y": 2760,
        "wires": [
            [
                "14739741409c8eae"
            ]
        ]
    },
    {
        "id": "d3c13e4720f89c84",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "6d4a082917553328",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1335,
        "y": 2960,
        "wires": [
            [
                "6edb35c4457c68ae"
            ]
        ]
    },
    {
        "id": "ae12ab0033fb8f47",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1045,
        "y": 3180,
        "wires": [
            [
                "516dd7feb70cf99a"
            ]
        ]
    },
    {
        "id": "0fae0716899fc918",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1295,
        "y": 3480,
        "wires": [
            [
                "d5860bdb5e58b16c"
            ]
        ]
    },
    {
        "id": "429e2c5002cf4825",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1565,
        "y": 3520,
        "wires": [
            [
                "e1d5d31682a0f2e5"
            ]
        ]
    },
    {
        "id": "bb7c2a8b25cd7a65",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1069,
        "y": 3719,
        "wires": [
            [
                "00f0f576a14d8c28"
            ]
        ]
    },
    {
        "id": "b6a12c03d340a3ec",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1045,
        "y": 3934,
        "wires": [
            [
                "06b79e2e4ff399aa"
            ]
        ]
    },
    {
        "id": "49bd7febb544d5f8",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "1be479826e16e852",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 1235,
        "y": 4540,
        "wires": [
            [
                "36fd8c5659d7f957"
            ]
        ]
    },
    {
        "id": "3bc6f9cf7e990b1b",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "4f07d8c8c9c6686d",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 4045,
        "y": 3580,
        "wires": [
            [
                "5237ef219dc70383"
            ]
        ]
    },
    {
        "id": "92644bfcab44272b",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "bfca5620f3441e3c",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 4045,
        "y": 2740,
        "wires": [
            [
                "ee792ecc39ab3c0e"
            ]
        ]
    },
    {
        "id": "a6e3cc68d873929a",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "g": "b8d269524faf802b",
        "name": "",
        "links": [
            "c66596163a9051ad",
            "dde5d8b5922080f8",
            "b6c5caf5a433eeb2",
            "e3143333380b0887"
        ],
        "x": 4065,
        "y": 1840,
        "wires": [
            [
                "13a98bb8c23a33f9"
            ]
        ]
    },
    {
        "id": "7fd80d52bd58de06",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "cc681a6adf75def8",
        "name": "ManeuverOrderManual.txt",
        "filename": "/app/maneuver-manager/ManeuverOrderManual.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1490,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "b25dceac00104924",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1240,
        "y": 1660,
        "wires": [
            [
                "c4d6d90fb1b8ab7d"
            ]
        ]
    },
    {
        "id": "c4d6d90fb1b8ab7d",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "ManeuverOrderManual.txt",
        "filename": "/app/maneuver-manager/ManeuverOrderManual.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1450,
        "y": 1660,
        "wires": [
            [
                "0a2af1da1c2685f4"
            ]
        ]
    },
    {
        "id": "65c1205ce8e4c7c4",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 1660,
        "wires": []
    },
    {
        "id": "0a2af1da1c2685f4",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "// Convert string payload to number\nmsg.payload = parseInt(msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1660,
        "wires": [
            [
                "65c1205ce8e4c7c4",
                "9958904edb2cfd1b"
            ]
        ]
    },
    {
        "id": "5cce2a0876911472",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "0727ec67d0063253",
            "cb2f7bdbc8771077",
            "e0e75c23364452bd"
        ],
        "x": 1245,
        "y": 1620,
        "wires": [
            [
                "c4d6d90fb1b8ab7d"
            ]
        ]
    },
    {
        "id": "8a6840af83626f25",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1220,
        "y": 2500,
        "wires": [
            [
                "5861f150c5829034"
            ]
        ]
    },
    {
        "id": "5861f150c5829034",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "ManeuverOrderManual2.txt",
        "filename": "/app/maneuver-manager/ManeuverOrderManual2.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1440,
        "y": 2500,
        "wires": [
            [
                "0e0328c8db9da29a"
            ]
        ]
    },
    {
        "id": "0e0328c8db9da29a",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "// Convert string payload to number\nmsg.payload = parseInt(msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2500,
        "wires": [
            [
                "faf31fdac5163c0f",
                "8e8f8899a93adf9a"
            ]
        ]
    },
    {
        "id": "faf31fdac5163c0f",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 2500,
        "wires": []
    },
    {
        "id": "6239778d8dccb647",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1180,
        "y": 3380,
        "wires": [
            [
                "e23dd3af74b17860"
            ]
        ]
    },
    {
        "id": "e23dd3af74b17860",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "ManeuverOrderManual3.txt",
        "filename": "/app/maneuver-manager/ManeuverOrderManual3.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1400,
        "y": 3380,
        "wires": [
            [
                "de635449cc5e5934"
            ]
        ]
    },
    {
        "id": "de635449cc5e5934",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "// Convert string payload to number\nmsg.payload = parseInt(msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 3380,
        "wires": [
            [
                "b1ca97d59b129d29",
                "f53aa6e3c64b4915"
            ]
        ]
    },
    {
        "id": "b1ca97d59b129d29",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 3380,
        "wires": []
    },
    {
        "id": "24340df4c2e4245b",
        "type": "inject",
        "z": "dd1202fd.a2e23",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1180,
        "y": 4160,
        "wires": [
            [
                "63bbfdc1d66719a2"
            ]
        ]
    },
    {
        "id": "63bbfdc1d66719a2",
        "type": "file in",
        "z": "dd1202fd.a2e23",
        "name": "ManeuverOrderManual4.txt",
        "filename": "/app/maneuver-manager/ManeuverOrderManual4.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1400,
        "y": 4160,
        "wires": [
            [
                "7b2497650da81ea9"
            ]
        ]
    },
    {
        "id": "7b2497650da81ea9",
        "type": "function",
        "z": "dd1202fd.a2e23",
        "name": "",
        "func": "// Convert string payload to number\nmsg.payload = parseInt(msg.payload.trim());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 4160,
        "wires": [
            [
                "0b0322dde466e3c1",
                "00f5602bb540900e"
            ]
        ]
    },
    {
        "id": "0b0322dde466e3c1",
        "type": "debug",
        "z": "dd1202fd.a2e23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 4160,
        "wires": []
    },
    {
        "id": "154a20df1edaaaa0",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "name": "ManeuverOrderManual2.txt",
        "filename": "/app/maneuver-manager/ManeuverOrderManual2.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1477,
        "y": 2146,
        "wires": [
            []
        ]
    },
    {
        "id": "61ef53ff1dd0638a",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "name": "ManeuverOrderManual3.txt",
        "filename": "/app/maneuver-manager/ManeuverOrderManual3.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1417,
        "y": 3047,
        "wires": [
            []
        ]
    },
    {
        "id": "3922d1c1e0bffec1",
        "type": "file",
        "z": "dd1202fd.a2e23",
        "g": "638d2899cc047f09",
        "name": "ManeuverOrderManual4.txt",
        "filename": "/app/maneuver-manager/ManeuverOrderManual4.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1180,
        "y": 3800,
        "wires": [
            []
        ]
    },
    {
        "id": "0f501dc84ae381f0",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "2b8436cea4ab2e73",
            "7cedab42bc8283e3",
            "9306af734a5ae241"
        ],
        "x": 1194,
        "y": 2445,
        "wires": [
            [
                "5861f150c5829034"
            ]
        ]
    },
    {
        "id": "9306581339269433",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "9dbdbed51647f0b1",
            "dd666ed4e8e7046a",
            "ef488a750c5c550e"
        ],
        "x": 1118,
        "y": 3328,
        "wires": [
            [
                "e23dd3af74b17860"
            ]
        ]
    },
    {
        "id": "d4581263b71a62f1",
        "type": "link in",
        "z": "dd1202fd.a2e23",
        "name": "",
        "links": [
            "25fdc93f73b53a43",
            "9c8eb75d9cc569d4",
            "a9e21c8a1fcc5c4f"
        ],
        "x": 1135,
        "y": 4100,
        "wires": [
            [
                "63bbfdc1d66719a2"
            ]
        ]
    },
    {
        "id": "d18125d14af7aeeb",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 405,
        "y": 600,
        "wires": []
    },
    {
        "id": "f141f3208025a9d3",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 405,
        "y": 700,
        "wires": []
    },
    {
        "id": "478bef3a5a7bfe17",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 405,
        "y": 820,
        "wires": []
    },
    {
        "id": "afdb2c309e47c2e8",
        "type": "link out",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 385,
        "y": 460,
        "wires": []
    },
    {
        "id": "e5b31c42abafcef9",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "pauseType": "delay",
        "timeout": "3500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 460,
        "wires": [
            [
                "d32b325c8b1fc9af"
            ]
        ]
    },
    {
        "id": "752f7d159c486c4c",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "pauseType": "delay",
        "timeout": "3500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 700,
        "wires": [
            [
                "1ad21657b2842d69"
            ]
        ]
    },
    {
        "id": "e4a4f149f10e643f",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "pauseType": "delay",
        "timeout": "3500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 580,
        "wires": [
            [
                "93d678661c5d817a"
            ]
        ]
    },
    {
        "id": "8720958ccb6f1d96",
        "type": "delay",
        "z": "dd1202fd.a2e23",
        "g": "bde6ea157d76a8b0",
        "name": "",
        "pauseType": "delay",
        "timeout": "3500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 820,
        "wires": [
            [
                "68f8a4538f23291d"
            ]
        ]
    },
    {
        "id": "e3ccf0456fcafedf",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "On start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "b4c30d74303d3fda",
                "0a13adeab708b2b4",
                "c76818d13ef10a3c",
                "1beb1794d7479693",
                "4589f3046d66a2df",
                "0ed58f9d1d869b82",
                "f8e19c46a949c689",
                "17abfbb1e4f9a504",
                "75cb995d16c382a3",
                "c19cef245773fdda",
                "cc193fb94f7f3622",
                "bf612374bb57d8f8",
                "a53d2ffec0f3c8c1"
            ]
        ]
    },
    {
        "id": "d71f38be32964178",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Test the TLEs age",
        "func": "var time = Date.now();\nvar acceptableTLEAge=1;\n// 150523 How old should the tle be in days\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\nvar TLE1 = msg.payload[1];\nvar epochLastUpdate = Number(TLE1.substring(18,32));\nvar timeSinceUpdate = epoch-epochLastUpdate;\nif(timeSinceUpdate>acceptableTLEAge){\n    msg.updateRequiredFlag=true;\n}\n\nelse{\n    msg.updateRequiredFlag=false;\n}\nmsg.payload={lastupdate:epochLastUpdate,today:epoch};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 260,
        "wires": [
            [
                "af6690aaa1d5506e",
                "b21dfa55a8be32b8"
            ]
        ]
    },
    {
        "id": "af6690aaa1d5506e",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "test update",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 140,
        "wires": []
    },
    {
        "id": "b21dfa55a8be32b8",
        "type": "switch",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "property": "updateRequiredFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1290,
        "y": 340,
        "wires": [
            [
                "7faa69c7a8fb5867",
                "37ad0f5db69a0a92"
            ],
            [
                "8bb69708b193a7da"
            ]
        ]
    },
    {
        "id": "37ad0f5db69a0a92",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "mode": "link",
        "links": [
            "b9a6ef87.24de3"
        ],
        "x": 1625,
        "y": 240,
        "wires": []
    },
    {
        "id": "6254fed12b6d11e0",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "links": [
            "1df6f4783011c9ba"
        ],
        "x": 225,
        "y": 260,
        "wires": [
            [
                "b4c30d74303d3fda"
            ]
        ]
    },
    {
        "id": "b4c30d74303d3fda",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "35aa96592eb7f377"
            ]
        ]
    },
    {
        "id": "35aa96592eb7f377",
        "type": "split",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 220,
        "wires": [
            [
                "0b4745eab2465a5c"
            ]
        ]
    },
    {
        "id": "0b4745eab2465a5c",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 400,
        "wires": [
            [
                "ddb2c2c3841de05a",
                "41aac3be63183d90"
            ]
        ]
    },
    {
        "id": "ddb2c2c3841de05a",
        "type": "join",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 470,
        "y": 380,
        "wires": [
            [
                "66fe466045cd8ec4"
            ]
        ]
    },
    {
        "id": "66fe466045cd8ec4",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 260,
        "wires": [
            [
                "bccd3a1ae1354ea5"
            ]
        ]
    },
    {
        "id": "bccd3a1ae1354ea5",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 260,
        "wires": [
            [
                "d71f38be32964178"
            ]
        ]
    },
    {
        "id": "66ac162682cb0dca",
        "type": "catch",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Read file error ",
        "scope": [
            "b4c30d74303d3fda"
        ],
        "uncaught": false,
        "x": 670,
        "y": 120,
        "wires": [
            [
                "9cf0270e24f5e7d2"
            ]
        ]
    },
    {
        "id": "9cf0270e24f5e7d2",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Update required",
        "func": "msg.updateRequiredFlag=true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 120,
        "wires": [
            [
                "b21dfa55a8be32b8",
                "af6690aaa1d5506e"
            ]
        ]
    },
    {
        "id": "bd44410470f18aea",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890",
            "0eafb7b263d0ee63",
            "e69743906051c56e"
        ],
        "x": 1715,
        "y": 400,
        "wires": []
    },
    {
        "id": "7faa69c7a8fb5867",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "TLE outdated",
        "func": "msg.payload=\"Tle outdated ! Requesting update from celestrak...\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 340,
        "wires": [
            [
                "bd44410470f18aea"
            ]
        ]
    },
    {
        "id": "8bb69708b193a7da",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Mission Ready",
        "func": "msg.payload=\"Mission Ready !\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 420,
        "wires": [
            [
                "bd44410470f18aea",
                "105cf8995e9907cd"
            ]
        ]
    },
    {
        "id": "0a13adeab708b2b4",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "FLUSH MEM ON START",
        "mode": "link",
        "links": [
            "c6e9ed348bf2c443"
        ],
        "x": 445,
        "y": 140,
        "wires": []
    },
    {
        "id": "c5123fa5946ce9f8",
        "type": "join-wait",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "paths": "[\"path_1\",\"path_2\",\"path_3\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "undefined",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "false",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1020,
        "y": 400,
        "wires": [
            [
                "90fb241377880fb6"
            ],
            []
        ]
    },
    {
        "id": "c3d85f2f1e1374d7",
        "type": "change",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 360,
        "wires": [
            [
                "c5123fa5946ce9f8"
            ]
        ]
    },
    {
        "id": "d81801e66dd0e3e2",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "PATH1 ONSTART MEM",
        "links": [
            "105cf8995e9907cd",
            "adebc33415b96346"
        ],
        "x": 625,
        "y": 360,
        "wires": [
            [
                "c3d85f2f1e1374d7",
                "b6bfe9d256813cc5",
                "60708c380b4d96f0"
            ]
        ]
    },
    {
        "id": "105cf8995e9907cd",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "MISSION READY",
        "mode": "link",
        "links": [
            "d81801e66dd0e3e2"
        ],
        "x": 1715,
        "y": 480,
        "wires": []
    },
    {
        "id": "5b28ae6e8ef675ca",
        "type": "change",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 400,
        "wires": [
            [
                "c5123fa5946ce9f8"
            ]
        ]
    },
    {
        "id": "d1a214987ab144c3",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "PATH2 ON START MEM",
        "links": [
            "1e6c927613bb91ab"
        ],
        "x": 625,
        "y": 400,
        "wires": [
            [
                "5b28ae6e8ef675ca",
                "04ed1738e951fc7c"
            ]
        ]
    },
    {
        "id": "90fb241377880fb6",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "mode": "link",
        "links": [
            "04828409f3c8eb98",
            "118f0f492f55ac0a",
            "1e9676e414d32f76",
            "220556fdf5358e27",
            "32528e58bc954e44",
            "34c17ae1e756d864",
            "af9822fbee098e88",
            "c9235065a31da113",
            "ccf9f6d431ed64cc",
            "e7a2222d78b89f73",
            "7daad49aae2cb4c9",
            "49f892e386cd7bc4",
            "ae9d48d18afea4b4",
            "8848916d67bd346f",
            "d01efb9685ef2237",
            "9037da81e08c3a42",
            "2ff88da90f572ddb",
            "56f3f4f3e065b6b1",
            "95b08878e2f5f3c9",
            "da60363e18c79508"
        ],
        "x": 1145,
        "y": 400,
        "wires": []
    },
    {
        "id": "997bd118e9898efa",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "On start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 660,
        "wires": [
            [
                "2db28dd3c2868aaf"
            ]
        ]
    },
    {
        "id": "74ffb890146508df",
        "type": "file",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "time-persistence.json",
        "filename": "/app/maneuver-manager/time-persistence.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 820,
        "y": 680,
        "wires": [
            [
                "2eb94a5f6b339506",
                "ab789119f5160206"
            ]
        ]
    },
    {
        "id": "2db28dd3c2868aaf",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "Find morning and midnight",
        "func": "function getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0)); // save the timestamp of Jan the 1st of this year\n  var diff = date - start;// computes the difference between the date in arg and Jan the 1st at 00h00 in milliseconds\n  var oneDay = 1000 * 60 * 60 * 24;// milliseconds in a day\n  var dayOfYear = Math.floor(diff / oneDay);// compute and round the days since beginning of year\n  \n  return dayOfYear;\n}\n\nvar now=new Date(Date.now());/* Init a var that stores the instant timestamps using static method Date.now()*/\nconsole.log(now);\n\n\n\n\n\nvar dayOfYear=getDayOfYear(now);\nconsole.log(dayOfYear);\nvar dateStartSim=new Date( Date.UTC(now.getUTCFullYear(), 0, dayOfYear)); // get the timestamp of today 00h00\nconsole.log(dateStartSim);\nvar dateEndSim= new Date( Date.UTC(now.getUTCFullYear(), 0, dayOfYear+1));// get the timestamp of tomorow 00h00\nconsole.log(dateEndSim);\n\n\nvar dateStartSimString = (dateStartSim.toISOString() ); // Convert the timestamps in ISO strings \n // Otherwise JSATORB can't read it \nvar dateEndSimString = (dateEndSim.toISOString());\n\n\n\nmsg.payload = {startdate:dateStartSimString, enddate: dateEndSimString};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 680,
        "wires": [
            [
                "74ffb890146508df",
                "33a991df40520ce7"
            ]
        ]
    },
    {
        "id": "2eb94a5f6b339506",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "Time persistent was reset by start",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 680,
        "wires": []
    },
    {
        "id": "ef392ad28cd90a7b",
        "type": "comment",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "Modif 12/05/23",
        "info": "\nI deleted a test that was checking for existing dates in the storage file because on a deploy we want to start with a fresh set-up",
        "x": 280,
        "y": 620,
        "wires": []
    },
    {
        "id": "8e0b25ba91d60a62",
        "type": "ui_button",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Simulation time reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "#477500",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 720,
        "wires": [
            [
                "2db28dd3c2868aaf"
            ]
        ]
    },
    {
        "id": "c76818d13ef10a3c",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "START",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 180,
        "wires": []
    },
    {
        "id": "c48f161fd1a57e8b",
        "type": "change",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 440,
        "wires": [
            [
                "c5123fa5946ce9f8"
            ]
        ]
    },
    {
        "id": "3853f0aecc249b02",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "REFRESH DB",
        "links": [
            "1dd663aebe5da599",
            "32b53bf9aadd2c46",
            "38d34e66ed011043",
            "8b873cf2d5df3d31",
            "cd1ed893e6624d07",
            "baac13cdfab9d582",
            "b140aec4696a4357",
            "59bbc733dc336010",
            "060e841045916da8",
            "84026e65f03a57a4",
            "a483b0d05c354756",
            "37e8d219d3b4447d",
            "60fca16c6bd61f0c",
            "6b95dc6703f177a9",
            "54eef4c6e8c45f49",
            "a704076d86a5a588",
            "0f17885412d9c542"
        ],
        "x": 625,
        "y": 440,
        "wires": [
            [
                "c48f161fd1a57e8b",
                "1126c89aab66fa84"
            ]
        ]
    },
    {
        "id": "60708c380b4d96f0",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "REFRESH DBS ON START",
        "mode": "link",
        "links": [
            "c26754142d9a49d1",
            "2573f33ae7988d13",
            "25ed4088555ee925",
            "3662a68a2f0620ca",
            "89b6ea0fc78d903a"
        ],
        "x": 735,
        "y": 320,
        "wires": []
    },
    {
        "id": "1126c89aab66fa84",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "ON START DB REFRESHED",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 480,
        "wires": []
    },
    {
        "id": "04ed1738e951fc7c",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "OEM DELETED",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 520,
        "wires": []
    },
    {
        "id": "b6bfe9d256813cc5",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "TLE AGE OK",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 560,
        "wires": []
    },
    {
        "id": "1beb1794d7479693",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "MCS refresh tiny gs",
        "mode": "link",
        "links": [
            "e2657a5bea29945e",
            "ac59043c8dfb5729"
        ],
        "x": 445,
        "y": 100,
        "wires": []
    },
    {
        "id": "063d6204bbca5ae5",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "RESTART",
        "links": [
            "5981caa54d0d3dda",
            "d76fa8b5c3113960",
            "2dcbc3576659a9e6",
            "c0e4bdf0ec9824d9",
            "35e8abafd04bc0e4",
            "c041ddbc77fed555",
            "3c09eff2c7fa3a9a",
            "60cf32f4c3489a17",
            "748abe6393f24763",
            "981ef6d87054de71",
            "cbf52896e447280f",
            "c9eeca2b41395219",
            "dd74082fe75ea6b8",
            "59cd0631d8f81a14",
            "06e77edeb13a9968"
        ],
        "x": 225,
        "y": 80,
        "wires": [
            [
                "1beb1794d7479693",
                "0a13adeab708b2b4",
                "b4c30d74303d3fda"
            ]
        ]
    },
    {
        "id": "394d5104c916b73d",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1460,
        "y": 100,
        "wires": [
            [
                "37ad0f5db69a0a92"
            ]
        ]
    },
    {
        "id": "2825416bc2bb7a40",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "Convertir en base64",
        "func": "if (Buffer.isBuffer(msg.payload)) {\n    msg.payload = \"data:image/png;base64,\" + msg.payload.toString('base64').replace(/\\r?\\n|\\r/g, \"\");\n} else {\n    msg.payload = \"Le fichier n'a pas pu être lu correctement\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 820,
        "wires": [
            [
                "20defc373517e4b4"
            ]
        ]
    },
    {
        "id": "b60ba44a77f95e5a",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "Lire fichier image",
        "filename": "/app/logo/CSUG-logo.png",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 530,
        "y": 820,
        "wires": [
            [
                "2825416bc2bb7a40"
            ]
        ]
    },
    {
        "id": "0501b2db6f374950",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "Lire fichier image",
        "filename": "/app/logo/UGA-logo.jpg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 530,
        "y": 860,
        "wires": [
            [
                "1cf4d22ebeed5446"
            ]
        ]
    },
    {
        "id": "1cf4d22ebeed5446",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "Convertir en base64",
        "func": "if (Buffer.isBuffer(msg.payload)) {\n    msg.payload = \"data:image/png;base64,\" + msg.payload.toString('base64').replace(/\\r?\\n|\\r/g, \"\");\n} else {\n    msg.payload = \"Le fichier n'a pas pu être lu correctement\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 860,
        "wires": [
            [
                "6ece3940560dc4fa"
            ]
        ]
    },
    {
        "id": "c30177438b624e7b",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "Lire fichier image",
        "filename": "/app/logo/LOGO-ECOLE-DE-LAIR-carre-v8-bis.jpg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 530,
        "y": 900,
        "wires": [
            [
                "a07d94b55ebcd37b"
            ]
        ]
    },
    {
        "id": "a07d94b55ebcd37b",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "Convertir en base64",
        "func": "if (Buffer.isBuffer(msg.payload)) {\n    msg.payload = \"data:image/png;base64,\" + msg.payload.toString('base64').replace(/\\r?\\n|\\r/g, \"\");\n} else {\n    msg.payload = \"Le fichier n'a pas pu être lu correctement\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 900,
        "wires": [
            [
                "cf4a07ff693c2ef8"
            ]
        ]
    },
    {
        "id": "5169308f9616e32c",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "Lire fichier image",
        "filename": "/app/logo/LOGO-ECOLE-DE-LAIR-carre-v8-bis.jpg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 530,
        "y": 940,
        "wires": [
            [
                "93875810af58d518"
            ]
        ]
    },
    {
        "id": "93875810af58d518",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "Convertir en base64",
        "func": "if (Buffer.isBuffer(msg.payload)) {\n    msg.payload = \"data:image/png;base64,\" + msg.payload.toString('base64').replace(/\\r?\\n|\\r/g, \"\");\n} else {\n    msg.payload = \"Le fichier n'a pas pu être lu correctement\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 940,
        "wires": [
            [
                "4ef7eaa75d3249a0"
            ]
        ]
    },
    {
        "id": "4ef7eaa75d3249a0",
        "type": "ui_template",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "group": "b10e0a54.7b0198",
        "name": "EAE Logo",
        "order": 2,
        "width": 6,
        "height": 5,
        "format": "<div style=\"overflow-y: scroll; scrollbar-width: none; -ms-overflow-style: none; height: 100vh;\">\n    <img src=\"{{msg.payload}}\" alt=\"Image\" style=\"width: 100%; height: auto;\"/>\n</div>\n\n<style>\n    /* Masquer la barre de défilement sur les navigateurs WebKit */\n    div::-webkit-scrollbar {\n        display: none;\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1000,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "20defc373517e4b4",
        "type": "ui_template",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "group": "11fb2a90.bdba15",
        "name": "CSUG Logo",
        "order": 1,
        "width": "4",
        "height": 4,
        "format": "<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n<img src=\"{{msg.payload}}\" alt=\"Image\" style=\"width: 100%; height: auto;\"/>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "6ece3940560dc4fa",
        "type": "ui_template",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "group": "11fb2a90.bdba15",
        "name": "UGA Logo",
        "order": 1,
        "width": "4",
        "height": 4,
        "format": "<img src=\"{{msg.payload}}\" alt=\"Image\" style=\"width: 100%; height: auto;\"/>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "cf4a07ff693c2ef8",
        "type": "ui_template",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "group": "11fb2a90.bdba15",
        "name": "EAE Logo",
        "order": 1,
        "width": "4",
        "height": 4,
        "format": "<img src=\"{{msg.payload}}\" alt=\"Image\" style=\"width: 100%; height: auto;\"/>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1000,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "f74a4b622c3f515a",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "g": "434126eb1a383e14",
        "name": "On start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 880,
        "wires": [
            [
                "b60ba44a77f95e5a",
                "0501b2db6f374950",
                "c30177438b624e7b",
                "5169308f9616e32c"
            ]
        ]
    },
    {
        "id": "4589f3046d66a2df",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "START PROPAGATION",
        "mode": "link",
        "links": [
            "f8f5d3641612976a"
        ],
        "x": 395,
        "y": 220,
        "wires": []
    },
    {
        "id": "ab789119f5160206",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "Set Time Reset",
        "mode": "link",
        "links": [
            "506fdc76a278e70d"
        ],
        "x": 1045,
        "y": 620,
        "wires": []
    },
    {
        "id": "33a991df40520ce7",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "6011c97c4327735d",
        "name": "Display Time Reset",
        "mode": "link",
        "links": [
            "1a06e978399d2636"
        ],
        "x": 755,
        "y": 620,
        "wires": []
    },
    {
        "id": "ui_control",
        "type": "ui_ui_control",
        "z": "a37cc3392dfe3850",
        "name": "Tab Watcher",
        "events": "all",
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "template_scrollTop",
                "cf76781143012d1b",
                "9be5e0c8a8926b20",
                "9fc0a4d5bb136400",
                "1448a6ad3cc37513",
                "d3a41ae54fc78ff6"
            ]
        ]
    },
    {
        "id": "template_scrollTop",
        "type": "ui_template",
        "z": "a37cc3392dfe3850",
        "group": "8da1955ffecc49fe",
        "name": "Scroll Top on Tab Change",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        // If the ui_control message says we changed tabs...\n        if (msg && msg.tab !== undefined) {\n            setTimeout(function() {\n                // Force the top of the actual scrolling container\n                var scrollers = document.querySelectorAll('md-content, .md-content');\n                scrollers.forEach(function(el) {\n                    el.scrollTop = 0;\n                });\n\n                // Also attempt the window itself\n                window.scrollTo(0, 0);\n                document.documentElement.scrollTop = 0;\n                document.body.scrollTop = 0;\n            }, 50);\n        }\n    });\n\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "cf76781143012d1b",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7ee83bfa9012128b",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "acf389df7e18b753",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 540,
        "wires": []
    },
    {
        "id": "41aac3be63183d90",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 460,
        "wires": []
    },
    {
        "id": "43b5b85c781ed6ef",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Activate Button ",
        "mode": "link",
        "links": [
            "09a97cf7ca5252b9",
            "38208a861ba52b6e",
            "582b20c3fb7fcbdc",
            "4aa96be32ec24727"
        ],
        "x": 235,
        "y": 220,
        "wires": []
    },
    {
        "id": "0ed58f9d1d869b82",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 220,
        "wires": [
            [
                "43b5b85c781ed6ef"
            ]
        ]
    },
    {
        "id": "cc193fb94f7f3622",
        "type": "exec",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "command": "cd /app/maneuver-manager && rm -rf Result.txt && rm -rf PostManeuverDate.txt && rm -rf LastManeuverDate.txt && rm -rf Result2.txt && rm -rf PostManeuverDate2.txt && rm -rf LastManeuverDate2.txt && rm -rf Result3.txt && rm -rf PostManeuverDate3.txt && rm -rf LastManeuverDate3.txt && rm -rf Result4.txt && rm -rf PostManeuverDate4.txt && rm -rf LastManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 455,
        "y": 60,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "9be5e0c8a8926b20",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "name": "blue1-tle-storage-out",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 300,
        "y": 1080,
        "wires": [
            [
                "64cae6fd9d50e627",
                "4a22a5ed611f68dc"
            ]
        ]
    },
    {
        "id": "9fc0a4d5bb136400",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "name": "blue2-tle-storage-out",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 300,
        "y": 1180,
        "wires": [
            [
                "6d165dc0e52724fb"
            ]
        ]
    },
    {
        "id": "1448a6ad3cc37513",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "name": "red1-tle-storage-out",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 290,
        "y": 1240,
        "wires": [
            [
                "11e2c7ca3bbf4496"
            ]
        ]
    },
    {
        "id": "d3a41ae54fc78ff6",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "name": "red2-tle-storage-out",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 290,
        "y": 1320,
        "wires": [
            [
                "369b67d681cf9256"
            ]
        ]
    },
    {
        "id": "64cae6fd9d50e627",
        "type": "json",
        "z": "a37cc3392dfe3850",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "78c7cc923b1f1197",
                "0defa67ba3b2048f"
            ]
        ]
    },
    {
        "id": "78c7cc923b1f1197",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6d165dc0e52724fb",
        "type": "json",
        "z": "a37cc3392dfe3850",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "3ea51ec05fe8f3c7",
                "59e357beac8b7c39"
            ]
        ]
    },
    {
        "id": "3ea51ec05fe8f3c7",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1160,
        "wires": []
    },
    {
        "id": "11e2c7ca3bbf4496",
        "type": "json",
        "z": "a37cc3392dfe3850",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 1240,
        "wires": [
            [
                "39d1a8ff52af4d8b",
                "d4a6188de460da18"
            ]
        ]
    },
    {
        "id": "39d1a8ff52af4d8b",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1240,
        "wires": []
    },
    {
        "id": "369b67d681cf9256",
        "type": "json",
        "z": "a37cc3392dfe3850",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1320,
        "wires": [
            [
                "50b5b7ed4ae1599b",
                "547550ba00a8d340"
            ]
        ]
    },
    {
        "id": "50b5b7ed4ae1599b",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 1320,
        "wires": []
    },
    {
        "id": "0defa67ba3b2048f",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = \"0.0\" || \"0.0\";\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // ------------------------------------------------------\n    // If msg.payload is NOT an array, handle it here instead.\n    // ------------------------------------------------------\n    // For instance, we might assume TLE lines are in different fields, or\n    // that you just want to take the object’s existing fields directly:\n    \n    // This is just an example of how you might parse them. \n    // Adjust according to your actual field names or needed logic:\n    newPayload.tle1 = msg.payload.tle1 || \"\";\n    newPayload.tle2 = msg.payload.tle2 || \"\";\n\n    // Example: if your object has separate orbital elements,\n    // you might build TLE1/TLE2 from them. For instance:\n    // newPayload.tle1 = \"Incli:\" + msg.payload.incli + \" RAAN:\" + msg.payload.raan;\n    // newPayload.tle2 = \"ECC:\" + msg.payload.ecc + \" AOP:\" + msg.payload.aop;\n\n    newPayload.dry_mass = msg.payload.dry_mass || \"0.0\";\n    newPayload.ergol_mass = msg.payload.ergol_mass || \"0.0\";\n    \n    // If `ergol_consumption` is not part of the object,\n    // define a default:\n    newPayload.ergol_consumption = \"0.0\" || \"0.0\";\n\n    // Assign a static status value\n    newPayload.status = 1;\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1120,
        "wires": [
            [
                "229a6d1ea92f3ed7",
                "1824f7038bbf6a78",
                "db7d22182f4bd7fa"
            ]
        ]
    },
    {
        "id": "229a6d1ea92f3ed7",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1020,
        "wires": []
    },
    {
        "id": "59e357beac8b7c39",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = \"0.0\" || \"0.0\";\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // ------------------------------------------------------\n    // If msg.payload is NOT an array, handle it here instead.\n    // ------------------------------------------------------\n    // For instance, we might assume TLE lines are in different fields, or\n    // that you just want to take the object’s existing fields directly:\n    \n    // This is just an example of how you might parse them. \n    // Adjust according to your actual field names or needed logic:\n    newPayload.tle1 = msg.payload.tle1 || \"\";\n    newPayload.tle2 = msg.payload.tle2 || \"\";\n\n    // Example: if your object has separate orbital elements,\n    // you might build TLE1/TLE2 from them. For instance:\n    // newPayload.tle1 = \"Incli:\" + msg.payload.incli + \" RAAN:\" + msg.payload.raan;\n    // newPayload.tle2 = \"ECC:\" + msg.payload.ecc + \" AOP:\" + msg.payload.aop;\n\n    newPayload.dry_mass = msg.payload.dry_mass || \"0.0\";\n    newPayload.ergol_mass = msg.payload.ergol_mass || \"0.0\";\n    \n    // If `ergol_consumption` is not part of the object,\n    // define a default:\n    newPayload.ergol_consumption = \"0.0\" || \"0.0\";\n\n    // Assign a static status value\n    newPayload.status = 1;\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 628,
        "y": 1205,
        "wires": [
            [
                "af978def1729bb6b",
                "c05667073f962a99",
                "fa1e1ba9b76a52ce"
            ]
        ]
    },
    {
        "id": "af978def1729bb6b",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ef5a698ad533efae",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1240,
        "wires": []
    },
    {
        "id": "fedfa0ec5e6e1b08",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1360,
        "wires": []
    },
    {
        "id": "547550ba00a8d340",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = \"0.0\" || \"0.0\";\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // ------------------------------------------------------\n    // If msg.payload is NOT an array, handle it here instead.\n    // ------------------------------------------------------\n    // For instance, we might assume TLE lines are in different fields, or\n    // that you just want to take the object’s existing fields directly:\n    \n    // This is just an example of how you might parse them. \n    // Adjust according to your actual field names or needed logic:\n    newPayload.tle1 = msg.payload.tle1 || \"\";\n    newPayload.tle2 = msg.payload.tle2 || \"\";\n\n    // Example: if your object has separate orbital elements,\n    // you might build TLE1/TLE2 from them. For instance:\n    // newPayload.tle1 = \"Incli:\" + msg.payload.incli + \" RAAN:\" + msg.payload.raan;\n    // newPayload.tle2 = \"ECC:\" + msg.payload.ecc + \" AOP:\" + msg.payload.aop;\n\n    newPayload.dry_mass = msg.payload.dry_mass || \"0.0\";\n    newPayload.ergol_mass = msg.payload.ergol_mass || \"0.0\";\n    \n    // If `ergol_consumption` is not part of the object,\n    // define a default:\n    newPayload.ergol_consumption = \"0.0\" || \"0.0\";\n\n    // Assign a static status value\n    newPayload.status = 1;\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1360,
        "wires": [
            [
                "d902f30b26a89e9a",
                "025258c5de761da0",
                "fedfa0ec5e6e1b08"
            ]
        ]
    },
    {
        "id": "d4a6188de460da18",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "name": "",
        "func": "// Initialize a new object to hold the transformed data\nlet newPayload = {};\n\n// Check if msg.payload is an array\nif (Array.isArray(msg.payload)) {\n    // Ensure the array has at least 5 elements\n    if (msg.payload.length >= 5) {\n        // Map each array element to the corresponding property\n        newPayload.tle1 = msg.payload[0].col1 || \"\";\n        newPayload.tle2 = msg.payload[1].col1 || \"\";\n        newPayload.dry_mass = msg.payload[2].col1 || \"0.0\";\n        newPayload.ergol_mass = msg.payload[3].col1 || \"0.0\";\n        newPayload.ergol_consumption = \"0.0\" || \"0.0\";\n        // Assign a static status value\n        newPayload.status = 1;\n    } else {\n        // Handle cases where the array has fewer than 5 elements\n        node.error(\"msg.payload array does not contain enough elements.\", msg);\n        return null; // Stop further processing\n    }\n} else {\n    // ------------------------------------------------------\n    // If msg.payload is NOT an array, handle it here instead.\n    // ------------------------------------------------------\n    // For instance, we might assume TLE lines are in different fields, or\n    // that you just want to take the object’s existing fields directly:\n    \n    // This is just an example of how you might parse them. \n    // Adjust according to your actual field names or needed logic:\n    newPayload.tle1 = msg.payload.tle1 || \"\";\n    newPayload.tle2 = msg.payload.tle2 || \"\";\n\n    // Example: if your object has separate orbital elements,\n    // you might build TLE1/TLE2 from them. For instance:\n    // newPayload.tle1 = \"Incli:\" + msg.payload.incli + \" RAAN:\" + msg.payload.raan;\n    // newPayload.tle2 = \"ECC:\" + msg.payload.ecc + \" AOP:\" + msg.payload.aop;\n\n    newPayload.dry_mass = msg.payload.dry_mass || \"0.0\";\n    newPayload.ergol_mass = msg.payload.ergol_mass || \"0.0\";\n    \n    // If `ergol_consumption` is not part of the object,\n    // define a default:\n    newPayload.ergol_consumption = \"0.0\" || \"0.0\";\n\n    // Assign a static status value\n    newPayload.status = 1;\n}\n\n// Assign the transformed object back to msg.payload\nmsg.payload = newPayload;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1280,
        "wires": [
            [
                "ef5a698ad533efae",
                "a633d760f9c46055",
                "c219e7d022b02bf1"
            ]
        ]
    },
    {
        "id": "d902f30b26a89e9a",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "Payload ergol mass",
        "mode": "link",
        "links": [
            "ab80b748dde74f55"
        ],
        "x": 755,
        "y": 1400,
        "wires": []
    },
    {
        "id": "025258c5de761da0",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "Trigger path15 ergol mass",
        "mode": "link",
        "links": [
            "4205c15db8cc3252"
        ],
        "x": 755,
        "y": 1440,
        "wires": []
    },
    {
        "id": "a633d760f9c46055",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "Payload ergol mass",
        "mode": "link",
        "links": [
            "1d6a91b5bf41350a"
        ],
        "x": 825,
        "y": 1280,
        "wires": []
    },
    {
        "id": "c219e7d022b02bf1",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "Trigger path15 ergol mass",
        "mode": "link",
        "links": [
            "ba5ed5086870bb27"
        ],
        "x": 825,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c05667073f962a99",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "Payload ergol mass",
        "mode": "link",
        "links": [
            "4a6e401a8753e8c5"
        ],
        "x": 815,
        "y": 1200,
        "wires": []
    },
    {
        "id": "fa1e1ba9b76a52ce",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "Trigger path15 ergol mass",
        "mode": "link",
        "links": [
            "124c95c9f3d361e3"
        ],
        "x": 815,
        "y": 1240,
        "wires": []
    },
    {
        "id": "1824f7038bbf6a78",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "Payload ergol mass",
        "mode": "link",
        "links": [
            "7c2077bbeafd3316"
        ],
        "x": 865,
        "y": 1080,
        "wires": []
    },
    {
        "id": "db7d22182f4bd7fa",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "Trigger path15 ergol mass",
        "mode": "link",
        "links": [
            "8878ad8ef3c6a124"
        ],
        "x": 865,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f8e19c46a949c689",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Reset Display LastManeuvers",
        "mode": "link",
        "links": [
            "95c8614d78c3473f",
            "2ef28ed3db4d0231",
            "a8d8e2d370892589",
            "7d465a2c88228a3f"
        ],
        "x": 235,
        "y": 120,
        "wires": []
    },
    {
        "id": "17abfbb1e4f9a504",
        "type": "function",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "func": "msg.payload='';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 300,
        "wires": [
            [
                "e3143333380b0887"
            ]
        ]
    },
    {
        "id": "e3143333380b0887",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "Flush Displays",
        "mode": "link",
        "links": [
            "113dc4819dacaba8",
            "e65a24fb13407c7d",
            "bfa87efc6be614d9",
            "4aaba9ca01ff7754",
            "f11b0ae6e6010670",
            "9f2d1fefb0051b17",
            "6a61307b89f50431",
            "3fa49594c489011f",
            "8f4a9a4f3a9fa16d",
            "ba0c1219bbaa679f",
            "4794edf754bb9065",
            "916b55a638cf7c99",
            "cfa3fdd1f0a1b306",
            "f0ad0faffec1b561",
            "d3c13e4720f89c84",
            "ae12ab0033fb8f47",
            "0fae0716899fc918",
            "429e2c5002cf4825",
            "bb7c2a8b25cd7a65",
            "b6a12c03d340a3ec",
            "49bd7febb544d5f8",
            "3bc6f9cf7e990b1b",
            "92644bfcab44272b",
            "a6e3cc68d873929a"
        ],
        "x": 265,
        "y": 300,
        "wires": []
    },
    {
        "id": "89e0ad8d95add6d0",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 1500,
        "wires": [
            [
                "b71e9ff39d048ce6"
            ]
        ]
    },
    {
        "id": "b71e9ff39d048ce6",
        "type": "exec",
        "z": "a37cc3392dfe3850",
        "command": "rm blue1-tle-storage.json",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 610,
        "y": 1480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4a22a5ed611f68dc",
        "type": "debug",
        "z": "a37cc3392dfe3850",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ed20cce57f1ac24a",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "name": "UPDATE MASS AFTER MANOEUVER",
        "links": [
            "037a0cfd89201e02",
            "29c46eded1eeadbb",
            "2b17ae83d8e3dea7",
            "72ed8c48f6cc8021",
            "cd2795483e837e1f",
            "da0bce7be705cbc0",
            "0aa2a31b3073cb55",
            "3c49532376cd3abf",
            "993bca6c24408705"
        ],
        "x": 45,
        "y": 1180,
        "wires": [
            [
                "9be5e0c8a8926b20",
                "9fc0a4d5bb136400",
                "1448a6ad3cc37513",
                "d3a41ae54fc78ff6"
            ]
        ]
    },
    {
        "id": "047a4da7c2a5f4cd",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1480,
        "wires": [
            [
                "606c75d2a7c0db26"
            ]
        ]
    },
    {
        "id": "75cb995d16c382a3",
        "type": "exec",
        "z": "a37cc3392dfe3850",
        "command": "echo \"{}\" > blue1-tle-storage.json && echo \"{}\" > blue2-tle-storage.json && echo \"{}\" > red1-tle-storage.json && echo \"{}\" > red2-tle-storage.json",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 76,
        "y": 38,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "c19cef245773fdda",
        "type": "exec",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Reset",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 175,
        "y": 100,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "bf612374bb57d8f8",
        "type": "exec",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data && rm -rf Result.txt && rm -rf PostManeuverDate.txt && rm -rf LastManeuverDate.txt && rm -rf Result2.txt && rm -rf PostManeuverDate2.txt && rm -rf LastManeuverDate2.txt && rm -rf Result3.txt && rm -rf PostManeuverDate3.txt && rm -rf LastManeuverDate3.txt && rm -rf Result4.txt && rm -rf PostManeuverDate4.txt && rm -rf LastManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 355,
        "y": 60,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "ad75897c0bb620c6",
        "type": "inject",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 40,
        "wires": [
            [
                "bf612374bb57d8f8"
            ]
        ]
    },
    {
        "id": "a53d2ffec0f3c8c1",
        "type": "exec",
        "z": "a37cc3392dfe3850",
        "g": "741fd77f6d9b3131",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver ; rm -rf Result.txt ; rm -rf PostManeuverDate.txt ; rm -rf LastManeuverDate.txt ; rm -rf Result2.txt ; rm -rf PostManeuverDate2.txt ; rm -rf LastManeuverDate2.txt ; rm -rf Result3.txt ; rm -rf PostManeuverDate3.txt ; rm -rf LastManeuverDate3.txt ; rm -rf Result4.txt ; rm -rf PostManeuverDate4.txt ; rm -rf LastManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 135,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "2368489316f9702a",
        "type": "link out",
        "z": "a37cc3392dfe3850",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 95,
        "y": 1580,
        "wires": []
    },
    {
        "id": "606c75d2a7c0db26",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "name": "red1-tle-storage-out",
        "filename": "red1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "11e2c7ca3bbf4496"
            ]
        ]
    },
    {
        "id": "c5881e747343a8f3",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "name": "red2-tle-storage-out",
        "filename": "red2-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 290,
        "y": 1360,
        "wires": [
            [
                "369b67d681cf9256"
            ]
        ]
    },
    {
        "id": "9b0ac932bff73edd",
        "type": "link in",
        "z": "a37cc3392dfe3850",
        "name": "IN RESET MASS DISPLAY",
        "links": [
            "44d3124f635ddc60"
        ],
        "x": 65,
        "y": 1400,
        "wires": [
            [
                "c5881e747343a8f3",
                "606c75d2a7c0db26",
                "2f7ea7742be07924",
                "d498e1e5a45d17a4"
            ]
        ]
    },
    {
        "id": "2f7ea7742be07924",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "name": "blue2-tle-storage-out",
        "filename": "blue2-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 380,
        "y": 1140,
        "wires": [
            [
                "6d165dc0e52724fb"
            ]
        ]
    },
    {
        "id": "d498e1e5a45d17a4",
        "type": "file in",
        "z": "a37cc3392dfe3850",
        "name": "blue1-tle-storage-out",
        "filename": "blue1-tle-mongo.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 120,
        "y": 1040,
        "wires": [
            [
                "64cae6fd9d50e627"
            ]
        ]
    },
    {
        "id": "830078cd.5ce018",
        "type": "comment",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "name": "Remove a database content",
        "info": "",
        "x": 400,
        "y": 240,
        "wires": []
    },
    {
        "id": "80466439.be38c8",
        "type": "ui_form",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "name": "",
        "label": "Remove Ground Station",
        "group": "e85e692d.e47bb8",
        "order": 2,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "GS Name",
                "value": "Name",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Name": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 230,
        "y": 300,
        "wires": [
            [
                "95062db2.f9d1d"
            ]
        ]
    },
    {
        "id": "cc07039e.b636d",
        "type": "mongodb out",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete ground station csug@127.0.0.1",
        "collection": "ground_stations",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "95062db2.f9d1d",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "name": "Query to remove a GS",
        "func": "msg.payload = {name: msg.payload.Name};\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 300,
        "wires": [
            [
                "cc07039e.b636d",
                "883d17a2.efed38",
                "4a4284af.a91d7c"
            ]
        ]
    },
    {
        "id": "883d17a2.efed38",
        "type": "mongodb out",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete visbility windows csug@127.0.0.1",
        "collection": "visibility_windows",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 820,
        "y": 300,
        "wires": []
    },
    {
        "id": "4a4284af.a91d7c",
        "type": "mongodb out",
        "z": "3913ac76.e7a7a4",
        "g": "1fd96d24.c576c3",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete angular csug@127.0.0.1",
        "collection": "angular",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 790,
        "y": 340,
        "wires": []
    },
    {
        "id": "7f54d608.f66d18",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "select name of the station",
        "func": "//msg.topic =msg.payload;\nname = msg.payload[0].name\nnames = name.split('\"')[0]\nmsg.payload = names\nmsg.topic = [msg.var-1, name]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 540,
        "wires": [
            [
                "71548a7e.e894d4"
            ]
        ]
    },
    {
        "id": "71548a7e.e894d4",
        "type": "change",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/GS_Database/Sat_Antenna_Tracker_\" & msg.payload & \".TXT\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 540,
        "wires": [
            [
                "e6efdf13.cfcb6"
            ]
        ]
    },
    {
        "id": "725004f9.2e6f1c",
        "type": "csv",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2450,
        "y": 540,
        "wires": [
            [
                "550ae2ac.c7d07c",
                "11567371c0f67cc9"
            ]
        ]
    },
    {
        "id": "550ae2ac.c7d07c",
        "type": "json",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2610,
        "y": 540,
        "wires": [
            [
                "783d60bf.56ed4"
            ]
        ]
    },
    {
        "id": "783d60bf.56ed4",
        "type": "file",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Pursuit-file-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2810,
        "y": 540,
        "wires": [
            [
                "fcb2e5a3.0e2f78",
                "a4ff9b34.579b18",
                "6eba071.10a38f8",
                "9c64b4eb.3ee8b8"
            ]
        ]
    },
    {
        "id": "fcb2e5a3.0e2f78",
        "type": "debug",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "angular print",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3050,
        "y": 480,
        "wires": []
    },
    {
        "id": "fe49e6f5.8df938",
        "type": "link in",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "When Angular Table is filled",
        "links": [
            "320c2a31.d95b16",
            "efc64324.fb423",
            "88e679ca.dca768"
        ],
        "x": 240,
        "y": 540,
        "wires": [
            [
                "1e6e1bc5.0f5834"
            ]
        ],
        "l": true
    },
    {
        "id": "a71e2b4c.233488",
        "type": "inject",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 290,
        "y": 500,
        "wires": [
            [
                "1e6e1bc5.0f5834"
            ]
        ]
    },
    {
        "id": "9a1fe386.f5e59",
        "type": "delay",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2300,
        "y": 540,
        "wires": [
            [
                "725004f9.2e6f1c"
            ]
        ]
    },
    {
        "id": "a4ff9b34.579b18",
        "type": "link out",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "ANGULAR-out",
        "links": [
            "94c90f48.05a96",
            "a245d25.3ecc83",
            "ebf798e8.bc25e8"
        ],
        "x": 3035,
        "y": 540,
        "wires": []
    },
    {
        "id": "6eba071.10a38f8",
        "type": "link out",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "to reset VTS",
        "links": [
            "58129645.a328f8",
            "d4c14718.d055b8"
        ],
        "x": 3035,
        "y": 580,
        "wires": []
    },
    {
        "id": "efe2c69b.fd76d8",
        "type": "comment",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "MACHINE DEPENDENCE",
        "info": "Stork_Antenna_Tracker_xxxxxxx.txt",
        "x": 2770,
        "y": 480,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "9c64b4eb.3ee8b8",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "message to dashboard10",
        "func": "msg.payload = \"Antenna Tracker files completed\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3090,
        "y": 620,
        "wires": [
            [
                "601c3227.d4d72c"
            ]
        ]
    },
    {
        "id": "601c3227.d4d72c",
        "type": "link out",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Antenna files",
        "links": [
            "caf37f66.25fde",
            "6e3e89af.161808",
            "bd944618.65d4c8"
        ],
        "x": 3255,
        "y": 620,
        "wires": []
    },
    {
        "id": "1e6e1bc5.0f5834",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Query to show GS names",
        "func": "msg.payload = {}\nmsg.projection = {name:1,_id:0}\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 540,
        "wires": [
            [
                "520c3859.aa50c8"
            ]
        ]
    },
    {
        "id": "520c3859.aa50c8",
        "type": "mongodb in",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show stations name",
        "collection": "ground_stations",
        "operation": "find",
        "x": 740,
        "y": 540,
        "wires": [
            [
                "eb2aa14e.a61f4"
            ]
        ]
    },
    {
        "id": "eb2aa14e.a61f4",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Add a counter to ID",
        "func": "var count = 1\nmsg.payload.forEach(gs => {\n    gs.var = count ++\n})\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 540,
        "wires": [
            [
                "b3db7416.4787d8"
            ]
        ]
    },
    {
        "id": "b3db7416.4787d8",
        "type": "split",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1110,
        "y": 540,
        "wires": [
            [
                "dcefc108.5f804"
            ]
        ]
    },
    {
        "id": "dcefc108.5f804",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Format payload",
        "func": "msg.var = msg.payload.var\ndelete msg.payload.var\nmsg.payload = [msg.payload]\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 540,
        "wires": [
            [
                "7f54d608.f66d18"
            ]
        ]
    },
    {
        "id": "e6efdf13.cfcb6",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "query to show angular ",
        "func": "msg.payload = {name: msg.payload}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 540,
        "wires": [
            [
                "ce1d15e8.6c1078"
            ]
        ]
    },
    {
        "id": "ce1d15e8.6c1078",
        "type": "mongodb in",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of angular",
        "collection": "angular",
        "operation": "find",
        "x": 2110,
        "y": 540,
        "wires": [
            [
                "9a1fe386.f5e59"
            ]
        ]
    },
    {
        "id": "e57e953b.7cd0a8",
        "type": "comment",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "name": "Fill the database",
        "info": "",
        "x": 480,
        "y": 80,
        "wires": []
    },
    {
        "id": "edd76d7d.08bdb",
        "type": "ui_form",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "name": "",
        "label": "Add Ground Station",
        "group": "e85e692d.e47bb8",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "GS Name",
                "value": "Name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Latitude (°)",
                "value": "Lat",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Longitude (°)",
                "value": "Lon",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Altitude  (m)",
                "value": "Alt",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Elevation (°)",
                "value": "El",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "GS Frequency (MHz)",
                "value": "Freq",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Name": "",
            "Lat": "",
            "Lon": "",
            "Alt": "",
            "El": "",
            "Freq": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "507d36b2.5917f8"
            ]
        ]
    },
    {
        "id": "507d36b2.5917f8",
        "type": "function",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "name": "Query to add a GS",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.name = msg.payload.Name\ngs.latitude = msg.payload.Lat\ngs.longitude = msg.payload.Lon\ngs.altitude = msg.payload.Alt\ngs.elevation = msg.payload.El\ngs.freq = msg.payload.Freq\ngs.location = \"[\" + msg.payload.Lat + \",\" + msg.payload.Lon + \"]\"\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "90bc963d.ab5238"
            ]
        ]
    },
    {
        "id": "de5fe0c8.0d6bb",
        "type": "mongodb out",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insertGS-gsdata",
        "collection": "ground_stations",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 900,
        "y": 120,
        "wires": []
    },
    {
        "id": "90bc963d.ab5238",
        "type": "split",
        "z": "3913ac76.e7a7a4",
        "g": "b6d29b3c.89b878",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 120,
        "wires": [
            [
                "de5fe0c8.0d6bb"
            ]
        ]
    },
    {
        "id": "11567371c0f67cc9",
        "type": "debug",
        "z": "3913ac76.e7a7a4",
        "g": "312c8fe7.75cef",
        "name": "Test DEBUG",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2630,
        "y": 620,
        "wires": []
    },
    {
        "id": "68a04f6a.3ad01",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "Move the data to the override values",
        "func": "//var p = msg.payload.split(\"\\n\");\n//var p = msg.payload[0];\nmsg.satid = msg.payload[0][0]\nmsg.tle1 =  msg.payload[0].tle1;\nmsg.tle2 =  msg.payload[0].tle2;\nmsg.payload = Date.now()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 4660,
        "wires": [
            [
                "3e3626b1.c6cc4a",
                "90616c77ddc20a7b"
            ]
        ]
    },
    {
        "id": "3e3626b1.c6cc4a",
        "type": "tle",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "satid": "UWE-4",
        "tle1": "",
        "tle2": "",
        "coordsys": "latlongdeg",
        "name": "(TLE prefilled with sat data)",
        "x": 760,
        "y": 4760,
        "wires": [
            [
                "74fcd845.6038d8",
                "126451f0.88e04e"
            ]
        ]
    },
    {
        "id": "74fcd845.6038d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "Flight-data message",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\nif(!Array.isArray(msg.payload)){\n   var vel = Math.pow(Math.pow((msg.payload.velocity.x)/1000,2)+Math.pow((msg.payload.velocity.y)/1000,2)+Math.pow((msg.payload.velocity.z)/1000,2),0.5);\n    vela = vel*1000;\n    arrondi = Math.round(vela);\n    vel = arrondi/1000;\n    var alt = msg.payload.position.alt;\n    alta = alt*1\n    arrondi = Math.round(alta);\n    alt = arrondi/1;\n\nif(msg.payload.position.lat>37.0 & msg.payload.position.lat<55.0 & msg.payload.position.lon>-5.0 & msg.payload.position.lon<14.0){\n   return{\n    topic:msg.payload.name,\n    payload: vel,\n    mailing: alt/1000,\n    body: \"Satellite label : \"+msg.payload.name  + \"                                    \"\n    + \"        Sat altitude : \"+msg.payload.position.alt/1000 +\" km \"\n    + \"        Ground position link : https://www.google.com/maps/search/?api=1&query=\"+msg.payload.position.lat+\",\"+msg.payload.position.lon\n    + \"        Sat velocity : \"+vel + \" km/s \"\n    + \"        Flight position link : https://www.google.com/maps/@\"+msg.payload.position.lat+\",\"+msg.payload.position.lon+\",\"+msg.payload.position.alt+\"m/data=!3m1!1e3!4m2!10m1!1e1\"\n    } \n}\nelse {\n  return{\n  topic:msg.payload.name,\n  payload: vel,\n  mailing: alt/1000,\n  body: \"Satellite label : \"+msg.payload.name  + \"                                    \"\n  + \"        Sat altitude : \"+msg.payload.position.alt/1000 +\" km \"\n  + \"        Ground position link : https://www.google.com/maps/search/?api=1&query=\"+msg.payload.position.lat+\",\"+msg.payload.position.lon\n  + \"        Sat velocity : \"+vel + \" km/s \"\n  + \"        Flight position link : https://www.google.com/maps/@\"+msg.payload.position.lat+\",\"+msg.payload.position.lon+\",\"+msg.payload.position.alt+\"m/data=!3m1!1e3!4m2!10m1!1e1\"\n  }\n} \n}\n\n",
        "outputs": 1,
        "noerr": 11,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 4760,
        "wires": [
            [
                "68e5ba45.705be4",
                "76a24cf9.258434",
                "1e4d8792.74f5a8",
                "a8f379dc355cc865"
            ]
        ]
    },
    {
        "id": "4336a6fd.067998",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "RELOAD DASHBOARD",
        "links": [
            "931b309d.f0a88"
        ],
        "x": 185,
        "y": 4700,
        "wires": [
            [
                "5c9f53db8c9861c7",
                "eacad089ec7f2e6f"
            ]
        ]
    },
    {
        "id": "a972d547.ac2aa8",
        "type": "complete",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "Trigger when VTS is INIT",
        "scope": [],
        "uncaught": false,
        "x": 170,
        "y": 4640,
        "wires": [
            [
                "eacad089ec7f2e6f"
            ]
        ]
    },
    {
        "id": "5aa49bbf.e8b304",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Celestrak_req_NORBI",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=39446",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1140,
        "y": 720,
        "wires": [
            [
                "4538bc69.22afe4",
                "d83b568b192310f6"
            ]
        ]
    },
    {
        "id": "4538bc69.22afe4",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 800,
        "wires": [
            [
                "127ee21c.b3153e"
            ],
            []
        ]
    },
    {
        "id": "127ee21c.b3153e",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1160,
        "y": 840,
        "wires": [
            [
                "3d2822d5.9f85de",
                "4289331cabd17a6f"
            ],
            []
        ]
    },
    {
        "id": "3d2822d5.9f85de",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle-celestrak\",\n payload:msg.payload,\n //body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 880,
        "wires": [
            [
                "5927d4ed.88df2c"
            ]
        ]
    },
    {
        "id": "5927d4ed.88df2c",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1130,
        "y": 920,
        "wires": [
            [
                "4f22e057.0b261"
            ]
        ]
    },
    {
        "id": "4f22e057.0b261",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1310,
        "y": 920,
        "wires": [
            [
                "8dffd9504e4178a6",
                "0bf45204b0f771f7",
                "24f7737fe3d4b910",
                "2b2fa0a36bd2a3c4"
            ]
        ]
    },
    {
        "id": "e3a04705.5ea298",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE-CUSTOM",
        "func": "\n   return{\n topic:\"tle\",\n paths:null,\n     payload: [msg.paths.path_1, msg.paths.path_2, msg.paths.path_101.dry_mass, msg.paths.path_101.ergol_mass, msg.paths.path_101.ergol_consumption],\n body:null\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 880,
        "wires": [
            [
                "b8234c2a75bb5ae9",
                "823834c6c8859a3a",
                "09b6f94b45eb28b7",
                "7e427ae89e9fe547"
            ]
        ]
    },
    {
        "id": "806158a8.2a45d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE-1",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:msg.topic,\n payload:msg.payload[0].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 880,
        "wires": [
            [
                "292964d19c921b46"
            ]
        ]
    },
    {
        "id": "bad3f015.92d69",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE-2",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic: msg.topic,\n payload: msg.payload[1].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 920,
        "wires": [
            [
                "e946fe5a6f3b792e"
            ]
        ]
    },
    {
        "id": "c4bc0507.a5aa28",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_101",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_101",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 1040,
        "wires": [
            [
                "b3804737c3bc7442",
                "92a9cc220aee7971",
                "ef029d22.ba5f5"
            ]
        ]
    },
    {
        "id": "912d16a.67297e8",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 980,
        "wires": [
            [
                "b3804737c3bc7442"
            ]
        ]
    },
    {
        "id": "f047630c.597cf",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE-2-edit",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n// This was changed during the training of the space commandement trainees it aims at keeping the TLE format for inclination greater than 100 with 3 digits\n\n// Latest version has no more test for the inclinaison as formating is done by the tlesetter\n     return{\n topic:\"tle\",\n payload: \"2 13601 \"+msg.paths.path_101.incli+\" \"+msg.paths.path_101.raan+\" \"+msg.paths.path_101.ecc+\" \"+msg.paths.path_101.aop+\" \"+msg.paths.path_101.meana+\" \"+msg.paths.path_101.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 960,
        "wires": [
            [
                "6dcb91d.1b8e47"
            ]
        ]
    },
    {
        "id": "788aabf0.013d94",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 920,
        "wires": [
            [
                "ef029d22.ba5f5",
                "09f039e28a10270a"
            ]
        ]
    },
    {
        "id": "6dcb91d.1b8e47",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 960,
        "wires": [
            [
                "ef029d22.ba5f5",
                "2986a8ef075e6a8e"
            ]
        ]
    },
    {
        "id": "ef029d22.ba5f5",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "paths": "[\"path_2\", \"path_1\",\"path_101\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2200,
        "y": 860,
        "wires": [
            [
                "e3a04705.5ea298",
                "211ce65b221c6d6b"
            ],
            []
        ]
    },
    {
        "id": "f6ee9f4a.0abf9",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2370,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8c66adb9.78a24",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard1",
        "func": "msg.payload = \"VTS initialized\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 4460,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "ccc1c309.94261",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard2",
        "func": "msg.payload = \"Time set\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 4820,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "f4e8516e.d638a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard3",
        "func": "msg.payload = \"VTS PLAY\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 4500,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "97bf463.9b785b8",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "API REST IN",
        "links": [
            "5a569638.12c268",
            "bd9059ba.e28e78"
        ],
        "x": 2255,
        "y": 4540,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "8be87eed.6b61d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "file updated in",
        "links": [
            "5c29a6fb.e5fb08"
        ],
        "x": 2255,
        "y": 4700,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "3ebdce04.545c52",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "Color Mapping",
        "func": "switch (msg.payload) {\n\ncase \"VTS project files updated\" : \n    msg.color = \"lime\";\n    break;\n    \ncase \"VTS API ready\" : \n    msg.color = \"yellow\";\n    break;\n\ncase \"Time set\" : \n    msg.color = \"yellow\";\n    break; \n    \ncase \"VTS PLAY\" : \n    msg.color = \"lime\";\n    break;  \n\ncase \"VTS initialized\" : \n    msg.color = \"yellow\";\n    break;  \n\ncase \"VTS PAUSE\" : \n    msg.color = \"red\";\n    break;  \n    \ncase \"INIT VTS\" : \n    msg.color = \"yellow\";\n    break;  \n    \ncase \"Visi window written in DB\" : \n    msg.color = \"lime\";\n    break;\n    \ncase \"Angular data written in DB\": \n    msg.color = \"lime\";\n    break;\n    \ncase \"Antenna Tracker files completed\" : \n    msg.color = \"lime\";\n    break;\n    \ndefault : \n    msg.color = \"red\";\n    break;\n}\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2560,
        "y": 4500,
        "wires": [
            []
        ]
    },
    {
        "id": "82142810.e8ee98",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard0",
        "func": "msg.payload = \"VTS PAUSE\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 4780,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "c02b28f9.44f608",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "message to dashboard7",
        "func": "msg.payload = \"INIT VTS\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 4740,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "f48249b.dec28b8",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "angular IN",
        "links": [
            "8e88ac69.5d4e4",
            "bb2c4b73.b325b8",
            "986279ab.994688"
        ],
        "x": 2255,
        "y": 4580,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "becd8ee3.9efcd",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "visi IN",
        "links": [
            "2e62eb9d.201534",
            "48265ed.41847a",
            "918bdb58.54e5a8"
        ],
        "x": 2255,
        "y": 4620,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "bd944618.65d4c8",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d02d39d9.704b38",
        "name": "Antenna files IN",
        "links": [
            "a3dc0636.a498c8",
            "f6185593.86e148",
            "601c3227.d4d72c"
        ],
        "x": 2255,
        "y": 4660,
        "wires": [
            [
                "3ebdce04.545c52"
            ]
        ]
    },
    {
        "id": "b538102e.235bb",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "g": "1e404e3b.14ce32",
        "name": "TLE-file-storage",
        "filename": "TLE_STORK.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1580,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "eea2e68b.c73728",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "1e404e3b.14ce32",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1710,
        "y": 200,
        "wires": [
            [
                "a10e1e99.b755e",
                "86ee657f.dfff28"
            ]
        ]
    },
    {
        "id": "f9ce7744.af89a8",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "1e404e3b.14ce32",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1550,
        "y": 200,
        "wires": [
            [
                "eea2e68b.c73728"
            ]
        ]
    },
    {
        "id": "287ac47f.0441ac",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "1e404e3b.14ce32",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 1610,
        "y": 100,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "a10e1e99.b755e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "TLE1-2_STORK",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 220,
        "wires": [
            [
                "64e005a8c862bfaf",
                "6f5ae58615d925eb",
                "24e475a7e7cc30b0",
                "0fe194477cfd115a"
            ]
        ]
    },
    {
        "id": "f48c422f.86566",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "TLE injection",
        "info": "",
        "x": 2950,
        "y": 180,
        "wires": []
    },
    {
        "id": "8f9784ae.86ddc8",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Ground Stat injection",
        "info": "",
        "x": 2830,
        "y": 100,
        "wires": []
    },
    {
        "id": "b6ca8b9b.ec16d8",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Last Time Set",
        "info": "",
        "x": 2830,
        "y": 40,
        "wires": []
    },
    {
        "id": "86ee657f.dfff28",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Query to get Stations",
        "func": "msg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 140,
        "wires": [
            [
                "d25089c5.16ad98"
            ]
        ]
    },
    {
        "id": "d25089c5.16ad98",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Get stations",
        "collection": "ground_stations",
        "operation": "find",
        "x": 3030,
        "y": 100,
        "wires": [
            [
                "804d4875e2f1648a"
            ]
        ]
    },
    {
        "id": "848d6f10.6746c",
        "type": "complete",
        "z": "7c68352c.1b47bc",
        "g": "4e981e1c.9c0d",
        "name": "Trigger-Time",
        "scope": [
            "b9a6ef87.24de3"
        ],
        "uncaught": false,
        "x": 110,
        "y": 4500,
        "wires": [
            [
                "97d64ebb.eedeb"
            ]
        ]
    },
    {
        "id": "97d64ebb.eedeb",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "4e981e1c.9c0d",
        "name": "triggerout",
        "links": [
            "f10e7267.4caff",
            "ef2c826e.d9abc",
            "d3182296.0de68",
            "e308961f59c879b4",
            "3d23bd653343df8f"
        ],
        "x": 235,
        "y": 4500,
        "wires": []
    },
    {
        "id": "b4ed5b61.777588",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Celestrak_request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=43880",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "a011d9bd.cb5668",
                "be5b3468b95dc183"
            ]
        ]
    },
    {
        "id": "a011d9bd.cb5668",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 120,
        "wires": [
            [
                "2002146a.dd37ac"
            ],
            [
                "8f00d092.2ceaf"
            ]
        ]
    },
    {
        "id": "2002146a.dd37ac",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 140,
        "wires": [
            [
                "52cc4274.d51c7c",
                "b4f92e23ab3d8349"
            ],
            []
        ]
    },
    {
        "id": "8f00d092.2ceaf",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "HTTP code error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 200,
        "wires": []
    },
    {
        "id": "52cc4274.d51c7c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 140,
        "wires": [
            [
                "b538102e.235bb",
                "f9ce7744.af89a8"
            ]
        ]
    },
    {
        "id": "a29ee050.688fc",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Sub-Module TLE sourcing",
        "info": "",
        "x": 190,
        "y": 60,
        "wires": []
    },
    {
        "id": "b9a6ef87.24de3",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "CELESTRAK REQUESTS",
        "links": [
            "37ad0f5db69a0a92",
            "960b681e.848468"
        ],
        "x": 135,
        "y": 140,
        "wires": [
            [
                "b4ed5b61.777588",
                "5aa49bbf.e8b304",
                "0ddd48be7ff5da84",
                "83de099b2fa78eaa",
                "71543d1f07fc776a",
                "2c3cb7c6e5582712",
                "fdeaa62f.5f5688"
            ]
        ]
    },
    {
        "id": "a43c137e.63e62",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Select the Celestrak URL for TLE",
        "info": "",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "75ace4d0.f680ac",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "CELESTRAK DEPENDENCE",
        "info": "Adapt URL link to Celestrak",
        "x": 440,
        "y": 60,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "68e5ba45.705be4",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 1410,
        "y": 4580,
        "wires": [
            [
                "7b763b58.51ce74"
            ]
        ]
    },
    {
        "id": "7e174054.f4b3",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "Sub-Module STORK Dashboard",
        "info": "",
        "x": 1750,
        "y": 4460,
        "wires": []
    },
    {
        "id": "126451f0.88e04e",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "msg13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 4620,
        "wires": []
    },
    {
        "id": "18880b23.8d3665",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "Select the uphere.space URL with sat ID",
        "info": "",
        "x": 1420,
        "y": 4460,
        "wires": []
    },
    {
        "id": "76a24cf9.258434",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "Name to Dashboard",
        "func": "msg.payload = msg.topic\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 4680,
        "wires": [
            [
                "a026019c.78bc9"
            ]
        ]
    },
    {
        "id": "a026019c.78bc9",
        "type": "ui_text",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "group": "89c6e42c.26d338",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Sat name",
        "label": "Satellite name",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1680,
        "y": 4680,
        "wires": []
    },
    {
        "id": "1e4d8792.74f5a8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "name": "Altitude to Dashboard",
        "func": "msg.payload = msg.mailing\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 4740,
        "wires": [
            [
                "cedd76e1.9e8238"
            ]
        ]
    },
    {
        "id": "cedd76e1.9e8238",
        "type": "ui_text",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "group": "89c6e42c.26d338",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Altitude",
        "label": "Altitude (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1680,
        "y": 4740,
        "wires": []
    },
    {
        "id": "7b763b58.51ce74",
        "type": "ui_artlessgauge",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "group": "89c6e42c.26d338",
        "order": 3,
        "width": 3,
        "height": 3,
        "name": "Sat Velocity",
        "icon": "fa-rocket",
        "label": "Satellite Velocity",
        "unit": "km/s",
        "layout": "radial",
        "decimals": "3",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 7.2,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 7.8,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1690,
        "y": 4580,
        "wires": []
    },
    {
        "id": "05269e71ae136bf8",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "32829735bc4f3d16",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2210,
        "y": 2860,
        "wires": []
    },
    {
        "id": "d733ae2362598440",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "check output blue1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2150,
        "y": 720,
        "wires": []
    },
    {
        "id": "804d4875e2f1648a",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 160,
        "wires": [
            [
                "8d2d46d99b3c70d1",
                "47e714de12c6ceba",
                "8943bd9a10115aea"
            ]
        ]
    },
    {
        "id": "64e005a8c862bfaf",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3150,
        "y": 220,
        "wires": [
            [
                "f2107460f7852ca0",
                "bd4011b41b1eed28",
                "be24a5a05268a710"
            ]
        ]
    },
    {
        "id": "09b6f94b45eb28b7",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2790,
        "y": 1000,
        "wires": [
            [
                "6e46ffd229497b6c",
                "13e6783f699d391f",
                "5a99bed22b559864"
            ]
        ]
    },
    {
        "id": "e946fe5a6f3b792e",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1750,
        "y": 920,
        "wires": [
            [
                "db13b17e988b264f"
            ]
        ]
    },
    {
        "id": "db13b17e988b264f",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1750,
        "y": 960,
        "wires": [
            [
                "dd63fe1a15842d7c",
                "912d16a.67297e8"
            ]
        ]
    },
    {
        "id": "b3804737c3bc7442",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "paths": "[\"path_3\", \"path_101\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2200,
        "y": 960,
        "wires": [
            [
                "f047630c.597cf"
            ],
            []
        ]
    },
    {
        "id": "dd63fe1a15842d7c",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 940,
        "wires": [
            [
                "b3804737c3bc7442"
            ]
        ]
    },
    {
        "id": "6f5ae58615d925eb",
        "type": "ui_text",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "group": "89c6e42c.26d338",
        "order": 7,
        "width": 6,
        "height": 3,
        "name": "TLE display",
        "label": "TLE",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 3150,
        "y": 260,
        "wires": []
    },
    {
        "id": "bc58e5ec55a98be1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "tinygsdata-function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TinyGS API data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 4880,
        "wires": [
            [
                "58539589f8fcb0c9"
            ]
        ]
    },
    {
        "id": "c7eaa84961499300",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 4880,
        "wires": [
            [
                "bc58e5ec55a98be1"
            ],
            []
        ]
    },
    {
        "id": "10f3d8edfb57378f",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 4880,
        "wires": [
            [
                "c7eaa84961499300"
            ],
            []
        ]
    },
    {
        "id": "5c9f53db8c9861c7",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "tinygsapi_request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.tinygs.com/v1/packets",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 150,
        "y": 4880,
        "wires": [
            [
                "10f3d8edfb57378f"
            ]
        ]
    },
    {
        "id": "ca60a913a04c776b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "tinyGS-CHECK",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 4840,
        "wires": []
    },
    {
        "id": "58539589f8fcb0c9",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1070,
        "y": 4880,
        "wires": [
            [
                "c15b273a542fde54"
            ]
        ]
    },
    {
        "id": "c15b273a542fde54",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "loop1",
        "func": "\n//msg.payload.packets.forEach(item => {\n//    if(item.satellite = \"Norbi\"){\n//        return item\n//    }\n\n//})\n\nvar json_data = msg.payload;\nvar result = [];\n\nfor(var i in json_data)\n    result.push([i, json_data [i]]);\n\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 4880,
        "wires": [
            [
                "9f1af8dc1eb5e870"
            ]
        ]
    },
    {
        "id": "9f1af8dc1eb5e870",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "reshape",
        "func": "msg.payload = msg.payload[0][1];\nreturn msg;\n\n\n\n//msg.payload[0][1].forEach(item => {\n//    if(item.satellite = \"Norbi\"){\n//        msg.payload = item.satellite;\n//        return msg;\n//    }\n\n//})\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 4880,
        "wires": [
            [
                "502dff010f3a7547",
                "ca60a913a04c776b"
            ]
        ]
    },
    {
        "id": "502dff010f3a7547",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "loop2",
        "func": "//msg.payload.forEach(item => {\n//msg.payload = item[10];\n//    return msg;\n    //if(item.satellite == \"Norbi\"){\n    //    msg.payload = item.satellite;\n    //    return msg;\n    //}\n//})\n\nvar arraylen = msg.payload.length;\nvar result = [];\nfor(var i=0;i<arraylen;i++){\n    if(msg.payload[i].satellite==\"Norbi\"){\n        result.push(msg.payload[i].parsed.payload.tinygsMainVoltage);\n        result.push(msg.payload[i].parsed.payload.tinygsTemp);\n        result.push(msg.payload[i].parsed.payload.tinygsLoadPower);\n    }\n    \n}\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 4880,
        "wires": [
            [
                "bac813c77cbdeddf",
                "753a66a0e91c8b65",
                "dc8f652dc05f134f"
            ]
        ]
    },
    {
        "id": "1316eb234f76fca6",
        "type": "ui_artlessgauge",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "group": "89c6e42c.26d338",
        "order": 5,
        "width": 3,
        "height": 3,
        "name": "Battery Temp",
        "icon": "fa-thermometer-half",
        "label": "Battery Temp",
        "unit": "°C",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#ff0000",
                "t": "min",
                "dot": 0
            },
            {
                "val": 40,
                "col": "#ff0000",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1870,
        "y": 4920,
        "wires": []
    },
    {
        "id": "fd1e7f82277b7ef9",
        "type": "ui_artlessgauge",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "group": "89c6e42c.26d338",
        "order": 4,
        "width": 3,
        "height": 3,
        "name": "Battery Voltage",
        "icon": "fa-battery-half",
        "label": "Battery Voltage",
        "unit": "mV",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 10000,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1880,
        "y": 4880,
        "wires": []
    },
    {
        "id": "13dd1dc8e33f6fa8",
        "type": "ui_artlessgauge",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "group": "89c6e42c.26d338",
        "order": 6,
        "width": 3,
        "height": 3,
        "name": "Tx Power",
        "icon": "fa-bolt ",
        "label": "Load Power",
        "unit": "mW",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 5000,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 1860,
        "y": 4960,
        "wires": []
    },
    {
        "id": "bac813c77cbdeddf",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "battery-data",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[0];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 4880,
        "wires": [
            [
                "fd1e7f82277b7ef9"
            ]
        ]
    },
    {
        "id": "dc8f652dc05f134f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "TxPower-data",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[2];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 4960,
        "wires": [
            [
                "13dd1dc8e33f6fa8"
            ]
        ]
    },
    {
        "id": "753a66a0e91c8b65",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "3dd210d88054dfaa",
        "name": "BatTemp-data",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[1];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 4920,
        "wires": [
            [
                "1316eb234f76fca6"
            ]
        ]
    },
    {
        "id": "292964d19c921b46",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 780,
        "wires": [
            [
                "40b0f757fccedcae"
            ]
        ]
    },
    {
        "id": "d0db2a049689d1eb",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "setpath1-in",
        "links": [
            "139d87a61de8fb2d",
            "cb9310778af334ad",
            "f36ccfbd745103f5",
            "50100e3ab84081e6",
            "81b92c60b91819dd",
            "7cf410c5c94f0d79",
            "3bc841b8b507434b",
            "347cedd57f7d2614",
            "73014b76e130b5ce"
        ],
        "x": 1585,
        "y": 680,
        "wires": [
            [
                "40b0f757fccedcae"
            ]
        ]
    },
    {
        "id": "40b0f757fccedcae",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1820,
        "y": 780,
        "wires": [
            [
                "d733ae2362598440",
                "5b94fea4bc8be85c"
            ],
            []
        ]
    },
    {
        "id": "0ddd48be7ff5da84",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Celestrak_request_PHR",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=39019",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 630,
        "y": 4120,
        "wires": [
            [
                "3006319b8fdd4fb3",
                "1bb78f1585330b5c"
            ]
        ]
    },
    {
        "id": "3006319b8fdd4fb3",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 4120,
        "wires": [
            [
                "02e0e1d732f50700",
                "1dbead4c928ed8d1"
            ],
            []
        ]
    },
    {
        "id": "02e0e1d732f50700",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 4120,
        "wires": [
            [
                "70f11a2962c5200c",
                "8a57318edf3a260a"
            ],
            []
        ]
    },
    {
        "id": "70f11a2962c5200c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 4120,
        "wires": [
            [
                "30e9c44a36e2a7e3"
            ]
        ]
    },
    {
        "id": "30e9c44a36e2a7e3",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1450,
        "y": 4120,
        "wires": [
            [
                "ee267f8df3cc8adb"
            ]
        ]
    },
    {
        "id": "ee267f8df3cc8adb",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1610,
        "y": 4120,
        "wires": [
            [
                "498533a743c018ee"
            ]
        ]
    },
    {
        "id": "498533a743c018ee",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 4120,
        "wires": [
            [
                "312b74e543efb25a",
                "e8094a552d3b4227"
            ]
        ]
    },
    {
        "id": "312b74e543efb25a",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 4060,
        "wires": [
            [
                "a78ca4fbc4d9e57b",
                "24606f59b812db66"
            ]
        ]
    },
    {
        "id": "ed7680e16e20cd8b",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Set path_9",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_9",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2750,
        "y": 4280,
        "wires": [
            [
                "56cdcf6595bfaf55",
                "ac147f0729ad1810"
            ]
        ]
    },
    {
        "id": "83de099b2fa78eaa",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Celestrak_request_PHR",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=49070",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1730,
        "y": 4340,
        "wires": [
            [
                "a5c604765ba0012f",
                "a1bc0b9e16a50e7c"
            ]
        ]
    },
    {
        "id": "a5c604765ba0012f",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 4340,
        "wires": [
            [
                "5306b898760f6177",
                "9e1f5debf634ca3b"
            ],
            []
        ]
    },
    {
        "id": "5306b898760f6177",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2170,
        "y": 4340,
        "wires": [
            [
                "af694b9214904c89",
                "27fa46bdf416727e"
            ],
            []
        ]
    },
    {
        "id": "af694b9214904c89",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 4340,
        "wires": [
            [
                "22cfa6c3a9fd3b68"
            ]
        ]
    },
    {
        "id": "22cfa6c3a9fd3b68",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 2530,
        "y": 4340,
        "wires": [
            [
                "1a705817a9b1fd99"
            ]
        ]
    },
    {
        "id": "1a705817a9b1fd99",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 2690,
        "y": 4340,
        "wires": [
            [
                "55f25125e4360666"
            ]
        ]
    },
    {
        "id": "55f25125e4360666",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 4340,
        "wires": [
            [
                "ed7680e16e20cd8b",
                "c564d0a1ae3e8ebc"
            ]
        ]
    },
    {
        "id": "52ce01ac6b3556ae",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 4280,
        "wires": [
            [
                "f708c78a01711d59",
                "68c5a6850e745a21"
            ]
        ]
    },
    {
        "id": "71543d1f07fc776a",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Celestrak_request_PHR",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=48268",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 270,
        "y": 4360,
        "wires": [
            [
                "2344a2a78d98bf1d",
                "a25fb990a2d35418"
            ]
        ]
    },
    {
        "id": "2344a2a78d98bf1d",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 4360,
        "wires": [
            [
                "d35acc815acea49d",
                "efae4a1d579c52c5"
            ],
            []
        ]
    },
    {
        "id": "d35acc815acea49d",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 4360,
        "wires": [
            [
                "a387ab4ec014cdc2",
                "293a2b71264a418f"
            ],
            []
        ]
    },
    {
        "id": "a387ab4ec014cdc2",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 4360,
        "wires": [
            [
                "37f4e2f7dffac770"
            ]
        ]
    },
    {
        "id": "37f4e2f7dffac770",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1070,
        "y": 4360,
        "wires": [
            [
                "d97b6cdaaa326f22"
            ]
        ]
    },
    {
        "id": "d97b6cdaaa326f22",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1230,
        "y": 4360,
        "wires": [
            [
                "1fef9e3ba77e6407"
            ]
        ]
    },
    {
        "id": "1fef9e3ba77e6407",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 4360,
        "wires": [
            [
                "52ce01ac6b3556ae",
                "044b0506b8870c46"
            ]
        ]
    },
    {
        "id": "d9df6459a6ea96ab",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "group": "cbb369e33298cfeb",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "B1 TLE Update",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#B5FC48",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 900,
        "wires": [
            [
                "3caca984d43a0458"
            ]
        ]
    },
    {
        "id": "ec94bcaf7ccbbade",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "toB2",
        "mode": "link",
        "links": [
            "c9235065a31da113",
            "8848916d67bd346f"
        ],
        "x": 1245,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b99ef16ba1924c22",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "toR1",
        "mode": "link",
        "links": [
            "118f0f492f55ac0a",
            "da60363e18c79508"
        ],
        "x": 1245,
        "y": 1140,
        "wires": []
    },
    {
        "id": "98e2adb0a1d844fb",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "toR2",
        "mode": "link",
        "links": [
            "34c17ae1e756d864",
            "95b08878e2f5f3c9"
        ],
        "x": 1245,
        "y": 1160,
        "wires": []
    },
    {
        "id": "09590295c75c8703",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88",
            "7daad49aae2cb4c9",
            "49f892e386cd7bc4",
            "ae9d48d18afea4b4",
            "d01efb9685ef2237",
            "9037da81e08c3a42",
            "2ff88da90f572ddb",
            "56f3f4f3e065b6b1"
        ],
        "x": 355,
        "y": 2640,
        "wires": []
    },
    {
        "id": "7b44310150aad18e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB2",
        "mode": "link",
        "links": [
            "c9235065a31da113",
            "8848916d67bd346f"
        ],
        "x": 825,
        "y": 2740,
        "wires": []
    },
    {
        "id": "8e67ffcbdb4c6308",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR2",
        "mode": "link",
        "links": [
            "34c17ae1e756d864",
            "95b08878e2f5f3c9"
        ],
        "x": 665,
        "y": 2840,
        "wires": []
    },
    {
        "id": "3315d3a560dc2c89",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88"
        ],
        "x": 425,
        "y": 4040,
        "wires": []
    },
    {
        "id": "935ddb7150ce199c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB2",
        "mode": "link",
        "links": [
            "c9235065a31da113",
            "8848916d67bd346f"
        ],
        "x": 315,
        "y": 3940,
        "wires": []
    },
    {
        "id": "0e28fb103f54c09f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR1",
        "mode": "link",
        "links": [
            "118f0f492f55ac0a",
            "da60363e18c79508"
        ],
        "x": 425,
        "y": 4000,
        "wires": []
    },
    {
        "id": "af9822fbee098e88",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upB1 from DB",
        "links": [
            "09590295c75c8703",
            "3315d3a560dc2c89",
            "39bc328534852ef6",
            "90fb241377880fb6",
            "cfcab2023a094cdc",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001",
            "82d391751cc737e2",
            "3c1faa240cd412e6",
            "e2e685d9087d7ba9"
        ],
        "x": 1895,
        "y": 1120,
        "wires": [
            [
                "08298fee71f7bff1"
            ]
        ]
    },
    {
        "id": "86b56c5aafa5e5b1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "fromPHR1B",
        "links": [
            "043192e17954a39e",
            "a85d227183423e95",
            "abf049d1b139611c",
            "ea6adf23dbd1238c",
            "d244f455bfe10f22",
            "9ecfe18db3f9f91f",
            "98f9b9bd480a57e5",
            "5710528e0d1522ad",
            "49dd2f6c3aaf3180",
            "d2a47c7de305f2c9",
            "1133b467632f0c17"
        ],
        "x": 555,
        "y": 4040,
        "wires": [
            [
                "877f29714a1e351c"
            ]
        ]
    },
    {
        "id": "a5eccb78df072978",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "fromPHR4",
        "links": [
            "17f7adb98b76a495",
            "5e9981620393537d",
            "6fcdf514dbc2c5ec",
            "a9760725cef4a105",
            "e16aecd0a438fb49",
            "373a6705eaa6a284",
            "ceb9ccefb33622fc",
            "80ed89a0ab903a4e",
            "a2ee4a1313f0bd4e",
            "e1ce65ae5d71f73f",
            "006cbc921e747cbf"
        ],
        "x": 1635,
        "y": 4280,
        "wires": [
            [
                "5d65976904a23103"
            ]
        ]
    },
    {
        "id": "1d8f9124f6c023ac",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "fromPHR3",
        "links": [
            "635fcdb8c39d0787",
            "8c60ccd3e3967358",
            "ad7abde181040a3a",
            "de1b34b4051c103e",
            "398a3ecac0505347",
            "c15151844f5e0683",
            "94b4acbf7d735323",
            "66d13c989ce22fb3",
            "27f58a25c1c5b04c",
            "a9fddc5e95e1bfdd",
            "ecc9eef4ee4c3b74"
        ],
        "x": 55,
        "y": 4300,
        "wires": [
            [
                "09553c262bf1ebfe"
            ]
        ]
    },
    {
        "id": "ea6adf23dbd1238c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "d42d5caf3ff36413",
            "86b56c5aafa5e5b1"
        ],
        "x": 245,
        "y": 3840,
        "wires": []
    },
    {
        "id": "6fcdf514dbc2c5ec",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 315,
        "y": 3900,
        "wires": []
    },
    {
        "id": "635fcdb8c39d0787",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 315,
        "y": 3860,
        "wires": []
    },
    {
        "id": "a85d227183423e95",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "d42d5caf3ff36413",
            "86b56c5aafa5e5b1"
        ],
        "x": 255,
        "y": 2620,
        "wires": []
    },
    {
        "id": "17f7adb98b76a495",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 225,
        "y": 2560,
        "wires": []
    },
    {
        "id": "8c60ccd3e3967358",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 355,
        "y": 2700,
        "wires": []
    },
    {
        "id": "abf049d1b139611c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "86b56c5aafa5e5b1"
        ],
        "x": 975,
        "y": 1140,
        "wires": []
    },
    {
        "id": "5e9981620393537d",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 975,
        "y": 1160,
        "wires": []
    },
    {
        "id": "de1b34b4051c103e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 1065,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f2107460f7852ca0",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "TLE customSTORK",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3310,
        "y": 280,
        "wires": []
    },
    {
        "id": "8d2d46d99b3c70d1",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "stations output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3220,
        "y": 100,
        "wires": []
    },
    {
        "id": "bd8de8502f02c463",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "R1 to time request TLE",
        "mode": "link",
        "links": [
            "220556fdf5358e27",
            "77a8b9510ab5d91f",
            "1c0e0057ba763a87",
            "3b798a93160868b2"
        ],
        "x": 465,
        "y": 2660,
        "wires": []
    },
    {
        "id": "db7e42c1aee637bd",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": " R2 to time request TLE",
        "mode": "link",
        "links": [
            "220556fdf5358e27",
            "1b16a3f69fdc9eee",
            "2b7bb211054aab28"
        ],
        "x": 245,
        "y": 3800,
        "wires": []
    },
    {
        "id": "fe5ea50b57aa1c32",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "b1-time-tle-OUT",
        "mode": "link",
        "links": [],
        "x": 2005,
        "y": 780,
        "wires": []
    },
    {
        "id": "b8234c2a75bb5ae9",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\ngs.dry_mass  = msg.payload[2]\ngs.ergol_mass = msg.payload[3]\ngs.ergol_consumption = msg.payload[4]\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 760,
        "wires": [
            [
                "3481f1216259b66e"
            ]
        ]
    },
    {
        "id": "3481f1216259b66e",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2390,
        "y": 760,
        "wires": [
            [
                "f7ec29fc0b7587f6",
                "e6b1abc87d5a903a",
                "a82cd02c21cae659",
                "d9df7ea6bd458c2e",
                "72e5bbd76c9d7769"
            ]
        ]
    },
    {
        "id": "a82cd02c21cae659",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2700,
        "y": 760,
        "wires": []
    },
    {
        "id": "5c3232735d2e2038",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "update all for B1 IN",
        "links": [
            "52e1e45e0c77a7cb",
            "54368e43a73e888e",
            "b0fd1f59d6cae965"
        ],
        "x": 795,
        "y": 1260,
        "wires": [
            [
                "abf049d1b139611c",
                "5e9981620393537d",
                "de1b34b4051c103e",
                "cf8728c9f3d62ae1",
                "ec94bcaf7ccbbade",
                "b99ef16ba1924c22",
                "98e2adb0a1d844fb",
                "472fd34f5a4b63ee",
                "7abf459108d1bb9a",
                "06ba5363a0f7099a",
                "7a1a4db24be58879"
            ]
        ]
    },
    {
        "id": "211ce65b221c6d6b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "query to delete b1tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 840,
        "wires": [
            [
                "f5304b8a408542c8",
                "34d7536228db8c16"
            ]
        ]
    },
    {
        "id": "f5304b8a408542c8",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2890,
        "y": 820,
        "wires": []
    },
    {
        "id": "17bd6cd48b2a4ff4",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Tle b1-postMan-In",
        "links": [
            "1193b78067b14d31",
            "65421165bbc07ccd",
            "9ecd58b37c7d064f"
        ],
        "x": 1565,
        "y": 740,
        "wires": [
            [
                "40b0f757fccedcae"
            ]
        ]
    },
    {
        "id": "48fac77f27ebe694",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 280,
        "wires": [
            [
                "00e423d5cecf63ac"
            ]
        ]
    },
    {
        "id": "00e423d5cecf63ac",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2830,
        "y": 280,
        "wires": [
            [
                "cd235fc9d45bd07e"
            ]
        ]
    },
    {
        "id": "cd235fc9d45bd07e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2990,
        "y": 280,
        "wires": []
    },
    {
        "id": "1dbead4c928ed8d1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "query to delete p1btlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 4160,
        "wires": [
            [
                "8382a53a41598013"
            ]
        ]
    },
    {
        "id": "8382a53a41598013",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1130,
        "y": 4160,
        "wires": []
    },
    {
        "id": "d14cf312fe0a60e0",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 4160,
        "wires": [
            [
                "c8ba9d7bacfdb53a"
            ]
        ]
    },
    {
        "id": "c8ba9d7bacfdb53a",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1670,
        "y": 4160,
        "wires": [
            [
                "f6fcc56248f740f9"
            ]
        ]
    },
    {
        "id": "f6fcc56248f740f9",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1830,
        "y": 4160,
        "wires": []
    },
    {
        "id": "9e1f5debf634ca3b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "query to delete pneo4tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 4380,
        "wires": [
            [
                "abedf550a283a82e"
            ]
        ]
    },
    {
        "id": "abedf550a283a82e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2200,
        "y": 4380,
        "wires": []
    },
    {
        "id": "aebcd6a0a5d13023",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 4380,
        "wires": [
            [
                "ed97241f5a2c195c"
            ]
        ]
    },
    {
        "id": "ed97241f5a2c195c",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2730,
        "y": 4380,
        "wires": [
            [
                "b30d48e22e8faab5"
            ]
        ]
    },
    {
        "id": "b30d48e22e8faab5",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2920,
        "y": 4380,
        "wires": []
    },
    {
        "id": "efae4a1d579c52c5",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "query to delete pneo3tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 4400,
        "wires": [
            [
                "e980327ca9595d9e"
            ]
        ]
    },
    {
        "id": "e980327ca9595d9e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 780,
        "y": 4400,
        "wires": []
    },
    {
        "id": "dafaa8891883163a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 4400,
        "wires": [
            [
                "e79ac0bebb08ed4b"
            ]
        ]
    },
    {
        "id": "e79ac0bebb08ed4b",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1270,
        "y": 4400,
        "wires": [
            [
                "bbdd5b9313b88193"
            ]
        ]
    },
    {
        "id": "bbdd5b9313b88193",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1460,
        "y": 4400,
        "wires": []
    },
    {
        "id": "d220bc3808928eb3",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2950,
        "y": 340,
        "wires": [
            [
                "64e005a8c862bfaf"
            ]
        ]
    },
    {
        "id": "7edb0b79e9981fac",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of sattlelatest",
        "collection": "sattlelatest",
        "operation": "find",
        "x": 2780,
        "y": 340,
        "wires": [
            [
                "d220bc3808928eb3"
            ]
        ]
    },
    {
        "id": "5bfdeb3df1dc8e7e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "query for sattlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2560,
        "y": 340,
        "wires": [
            [
                "7edb0b79e9981fac",
                "86ee657f.dfff28"
            ]
        ]
    },
    {
        "id": "cf8728c9f3d62ae1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "query for b1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1020,
        "wires": [
            [
                "9218e67ae12ff56e",
                "58b79c85054ff2f6"
            ]
        ]
    },
    {
        "id": "9218e67ae12ff56e",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 1160,
        "y": 1060,
        "wires": [
            [
                "0a501f0d14245ad2",
                "02e1b04d3d6f60d5"
            ]
        ]
    },
    {
        "id": "0a501f0d14245ad2",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle-mongo\",\n    payload: [msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1060,
        "wires": [
            [
                "59d5c5d7591c060f",
                "8bbba65843f30b70"
            ]
        ]
    },
    {
        "id": "877f29714a1e351c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "query for p1btlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 4060,
        "wires": [
            [
                "ab8dbdad5d759b05"
            ]
        ]
    },
    {
        "id": "ab8dbdad5d759b05",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of p1btlelatest",
        "collection": "p1btlelatest",
        "operation": "find",
        "x": 920,
        "y": 4060,
        "wires": [
            [
                "a32f3f7732dd031e"
            ]
        ]
    },
    {
        "id": "a32f3f7732dd031e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 4060,
        "wires": [
            [
                "312b74e543efb25a"
            ]
        ]
    },
    {
        "id": "5d65976904a23103",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "query for pneo4tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 4260,
        "wires": [
            [
                "aeccafdd8fb912b6"
            ]
        ]
    },
    {
        "id": "aeccafdd8fb912b6",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "operation": "find",
        "x": 2210,
        "y": 4260,
        "wires": [
            [
                "728c9a9836560879"
            ]
        ]
    },
    {
        "id": "728c9a9836560879",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 4260,
        "wires": [
            [
                "ed7680e16e20cd8b"
            ]
        ]
    },
    {
        "id": "09553c262bf1ebfe",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "query for pneo3tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 4280,
        "wires": [
            [
                "3f5b808e91194fec"
            ]
        ]
    },
    {
        "id": "3f5b808e91194fec",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "operation": "find",
        "x": 670,
        "y": 4280,
        "wires": [
            [
                "9c9ba7d591ec63b8"
            ]
        ]
    },
    {
        "id": "9c9ba7d591ec63b8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 4280,
        "wires": [
            [
                "52ce01ac6b3556ae"
            ]
        ]
    },
    {
        "id": "59d5c5d7591c060f",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1330,
        "y": 1100,
        "wires": [
            [
                "0b382f17aa76d1e4"
            ]
        ]
    },
    {
        "id": "0b382f17aa76d1e4",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1450,
        "y": 1100,
        "wires": [
            [
                "806158a8.2a45d8",
                "bad3f015.92d69",
                "c24543b528ceac66"
            ]
        ]
    },
    {
        "id": "4aa96994a4b16522",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of sattlelatest",
        "collection": "sattlelatest",
        "operation": "find",
        "x": 400,
        "y": 4740,
        "wires": [
            [
                "68a04f6a.3ad01",
                "85bda3f55da806af"
            ]
        ]
    },
    {
        "id": "eacad089ec7f2e6f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "query for sattlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4680,
        "wires": [
            [
                "4aa96994a4b16522"
            ]
        ]
    },
    {
        "id": "90616c77ddc20a7b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "msg21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 4620,
        "wires": []
    },
    {
        "id": "85bda3f55da806af",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4be805205e728ae6",
        "name": "msg20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 4600,
        "wires": []
    },
    {
        "id": "495dc5a4cb1cef81",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "up date all for R1 IN",
        "links": [
            "2fd70f8c41ef581a",
            "b59fabe6c52f9f07"
        ],
        "x": 225,
        "y": 2880,
        "wires": [
            [
                "bd8de8502f02c463",
                "a85d227183423e95",
                "17f7adb98b76a495",
                "8c60ccd3e3967358",
                "09590295c75c8703",
                "7b44310150aad18e",
                "8e67ffcbdb4c6308",
                "607ff3a5cfe9a070",
                "b6d33c55a0d06540",
                "f7b45a19089fb81e"
            ]
        ]
    },
    {
        "id": "1cb0a1a51e9369a1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "up date all for R2 IN",
        "links": [],
        "x": 235,
        "y": 4040,
        "wires": [
            [
                "db7e42c1aee637bd",
                "ea6adf23dbd1238c",
                "6fcdf514dbc2c5ec",
                "635fcdb8c39d0787",
                "3315d3a560dc2c89",
                "935ddb7150ce199c",
                "0e28fb103f54c09f",
                "a7c69bfe050e2d25",
                "2a251f56fc02b247",
                "93bdb173925d6f0f"
            ]
        ]
    },
    {
        "id": "08298fee71f7bff1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "query for b1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 1080,
        "wires": [
            [
                "89e69845755f4c77"
            ]
        ]
    },
    {
        "id": "89e69845755f4c77",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 2280,
        "y": 1140,
        "wires": [
            [
                "6e09578b5c3977d8",
                "28604ce259be3b47"
            ]
        ]
    },
    {
        "id": "6e09578b5c3977d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "tle1-2",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload[0] && msg.payload[0].tle1 && msg.payload[0].tle2) {\n    return {\n        topic: \"tle\",\n        payload: [msg.payload[0].tle1, msg.payload[0].tle2,msg.payload[0].dry_mass,msg.payload[0].ergol_mass,msg.payload[0].ergol_consumption],\n        body: 12\n    };\n} else {\n    node.warn(\"Les propriétés 'tle1' ou 'tle2' sont manquantes ou le satellite n'est pas correctement défini.\");\n    return null; // On peut renvoyer null pour stopper le flux si les données sont manquantes\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1100,
        "wires": [
            [
                "b12b6db8e50017f8",
                "09b6f94b45eb28b7"
            ]
        ]
    },
    {
        "id": "b12b6db8e50017f8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TLE of B1 requested in the DB by an UPdate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2810,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2c3cb7c6e5582712",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "CELESTRAK REQ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 340,
        "wires": []
    },
    {
        "id": "d83b568b192310f6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 1335,
        "y": 760,
        "wires": []
    },
    {
        "id": "1bb78f1585330b5c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 805,
        "y": 4100,
        "wires": []
    },
    {
        "id": "a1bc0b9e16a50e7c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 1875,
        "y": 4300,
        "wires": []
    },
    {
        "id": "a25fb990a2d35418",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 395,
        "y": 4320,
        "wires": []
    },
    {
        "id": "be5b3468b95dc183",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 535,
        "y": 200,
        "wires": []
    },
    {
        "id": "976ed181456d5d92",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3570,
        "y": 520,
        "wires": [
            [
                "1b4cf2db17592916",
                "927793742fe2a26b"
            ]
        ]
    },
    {
        "id": "1b4cf2db17592916",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3550,
        "y": 580,
        "wires": [
            [
                "bc15dda52775a710"
            ]
        ]
    },
    {
        "id": "fdeaa62f.5f5688",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Celestrak_request_PHR",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.org/NORAD/elements/gp.php?CATNR=38012",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 670,
        "y": 340,
        "wires": [
            [
                "fed8e554.829fa8",
                "168c927c614295a8"
            ]
        ]
    },
    {
        "id": "fed8e554.829fa8",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 340,
        "wires": [
            [
                "f852b5f6.c99b98",
                "34aeb0d4c2a0550e"
            ],
            []
        ]
    },
    {
        "id": "f852b5f6.c99b98",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1220,
        "y": 340,
        "wires": [
            [
                "28c8f85d.5c8e08",
                "80f76c3294a23ba0"
            ],
            []
        ]
    },
    {
        "id": "28c8f85d.5c8e08",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"TLE data\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 420,
        "wires": [
            [
                "58575d12.429a94"
            ]
        ]
    },
    {
        "id": "58575d12.429a94",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1510,
        "y": 420,
        "wires": [
            [
                "ff820ff.bf83af"
            ]
        ]
    },
    {
        "id": "ff820ff.bf83af",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1670,
        "y": 420,
        "wires": [
            [
                "2678f85d.20ec28"
            ]
        ]
    },
    {
        "id": "2678f85d.20ec28",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 420,
        "wires": [
            [
                "28d0dbe164b06cd6",
                "279cfe02df54c94f"
            ]
        ]
    },
    {
        "id": "34aeb0d4c2a0550e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 500,
        "wires": [
            [
                "ed46efe0511874af"
            ]
        ]
    },
    {
        "id": "ed46efe0511874af",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1310,
        "y": 500,
        "wires": []
    },
    {
        "id": "d3529a4d4ad201b1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 460,
        "wires": [
            [
                "070901a887bb28c2"
            ]
        ]
    },
    {
        "id": "070901a887bb28c2",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1690,
        "y": 460,
        "wires": [
            [
                "57bf8da0f9e70613"
            ]
        ]
    },
    {
        "id": "28d0dbe164b06cd6",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 420,
        "wires": [
            [
                "6046a606f291a411",
                "f7f9c11d1f2382ae"
            ]
        ]
    },
    {
        "id": "225f7a9616f10423",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "query for p1atlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 560,
        "wires": [
            [
                "dd1d078a375fef72"
            ]
        ]
    },
    {
        "id": "dd1d078a375fef72",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of p1atlelatest",
        "collection": "p1atlelatest",
        "operation": "find",
        "x": 1780,
        "y": 560,
        "wires": [
            [
                "521bf868aa8d0de1"
            ]
        ]
    },
    {
        "id": "521bf868aa8d0de1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "tle2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 560,
        "wires": [
            [
                "28d0dbe164b06cd6"
            ]
        ]
    },
    {
        "id": "57bf8da0f9e70613",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1890,
        "y": 460,
        "wires": []
    },
    {
        "id": "168c927c614295a8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "TLE customPHR",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "bc15dda52775a710",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3560,
        "y": 620,
        "wires": [
            [
                "8063232e20158d5a"
            ]
        ]
    },
    {
        "id": "8063232e20158d5a",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3550,
        "y": 660,
        "wires": [
            [
                "19a75b7b1a234d67",
                "4aaa72e66efc6e22"
            ]
        ]
    },
    {
        "id": "f30d12dd2058bef2",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 540,
        "wires": [
            [
                "beaf0a11e85d749d"
            ]
        ]
    },
    {
        "id": "19a75b7b1a234d67",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3562,
        "y": 740,
        "wires": [
            [
                "f30d12dd2058bef2",
                "c06408fdecb6945d",
                "5a7f69a63e04e750",
                "82adf290f9b9473d",
                "ebe80588c2cea7ea",
                "1f87636507e0aa01",
                "4fc4cfd68a0b6570",
                "90ab2f29db897acf",
                "bbd8d175663cbb34",
                "1a85a8622aac2584"
            ]
        ]
    },
    {
        "id": "c06408fdecb6945d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 600,
        "wires": [
            [
                "877350886188357e"
            ]
        ]
    },
    {
        "id": "5a7f69a63e04e750",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 660,
        "wires": [
            [
                "5adba86582d125c4"
            ]
        ]
    },
    {
        "id": "82adf290f9b9473d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 720,
        "wires": [
            [
                "11bfbb0c7f9356a8"
            ]
        ]
    },
    {
        "id": "beaf0a11e85d749d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4148,
        "y": 540,
        "wires": [
            [
                "a6585fdd8837e646"
            ]
        ]
    },
    {
        "id": "877350886188357e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4148,
        "y": 600,
        "wires": [
            [
                "5bf24823ff268871"
            ]
        ]
    },
    {
        "id": "5adba86582d125c4",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4148,
        "y": 660,
        "wires": [
            [
                "6cfe4705ace96064",
                "e926c4c14e9f850d"
            ]
        ]
    },
    {
        "id": "11bfbb0c7f9356a8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4148,
        "y": 720,
        "wires": [
            [
                "70b73ab02c552d95"
            ]
        ]
    },
    {
        "id": "ebe80588c2cea7ea",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 780,
        "wires": [
            [
                "bb6892277131a073"
            ]
        ]
    },
    {
        "id": "bb6892277131a073",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4148,
        "y": 780,
        "wires": [
            [
                "e94dd6a4d99bc2fb"
            ]
        ]
    },
    {
        "id": "1f87636507e0aa01",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 840,
        "wires": [
            [
                "05a7b7228758721a"
            ]
        ]
    },
    {
        "id": "05a7b7228758721a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4148,
        "y": 840,
        "wires": [
            [
                "8677dba8b1f81479"
            ]
        ]
    },
    {
        "id": "742c36d88c0795e6",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Repeupler les DB",
        "info": "",
        "x": 3680,
        "y": 460,
        "wires": []
    },
    {
        "id": "a6585fdd8837e646",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4490,
        "y": 540,
        "wires": []
    },
    {
        "id": "5bf24823ff268871",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4490,
        "y": 600,
        "wires": []
    },
    {
        "id": "6cfe4705ace96064",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4490,
        "y": 660,
        "wires": []
    },
    {
        "id": "70b73ab02c552d95",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4490,
        "y": 720,
        "wires": []
    },
    {
        "id": "e94dd6a4d99bc2fb",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4500,
        "y": 780,
        "wires": []
    },
    {
        "id": "8677dba8b1f81479",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 4500,
        "y": 840,
        "wires": []
    },
    {
        "id": "7216a78efe87f871",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete rob1blelatest",
        "collection": "rob1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 480,
        "wires": []
    },
    {
        "id": "402dd68eef637e28",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 540,
        "wires": []
    },
    {
        "id": "81503c71337a55a1",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest",
        "collection": "sattlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 600,
        "wires": []
    },
    {
        "id": "321b54bc830393f5",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 660,
        "wires": []
    },
    {
        "id": "d787aa78e7f7c69f",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4860,
        "y": 720,
        "wires": []
    },
    {
        "id": "0616c975f506d2ad",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4860,
        "y": 780,
        "wires": []
    },
    {
        "id": "f9e0d8bfc76d2ea9",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 480,
        "wires": [
            [
                "c6a21b7e1f49e8fc",
                "698067ded04938d2",
                "5d93b6830d1ac092",
                "0616c975f506d2ad",
                "d787aa78e7f7c69f",
                "321b54bc830393f5",
                "81503c71337a55a1",
                "402dd68eef637e28",
                "7216a78efe87f871",
                "5a357a4ae6a6d5b3",
                "976ed181456d5d92"
            ]
        ]
    },
    {
        "id": "a0ea95e83db4cacd",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4380,
        "y": 420,
        "wires": [
            [
                "f9e0d8bfc76d2ea9"
            ]
        ]
    },
    {
        "id": "4fc4cfd68a0b6570",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 900,
        "wires": [
            [
                "4c44820c369f21d8"
            ]
        ]
    },
    {
        "id": "4c44820c369f21d8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 900,
        "wires": [
            [
                "cc2f6f7ecc60d930",
                "98ad1303250c48de"
            ]
        ]
    },
    {
        "id": "cc2f6f7ecc60d930",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 900,
        "wires": []
    },
    {
        "id": "5a357a4ae6a6d5b3",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 840,
        "wires": []
    },
    {
        "id": "90ab2f29db897acf",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 960,
        "wires": [
            [
                "695184832771955f"
            ]
        ]
    },
    {
        "id": "695184832771955f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 960,
        "wires": [
            [
                "cb779cec6c69d361"
            ]
        ]
    },
    {
        "id": "cb779cec6c69d361",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 960,
        "wires": []
    },
    {
        "id": "c6a21b7e1f49e8fc",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4850,
        "y": 900,
        "wires": []
    },
    {
        "id": "bbd8d175663cbb34",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 1020,
        "wires": [
            [
                "a329faec55f61f76"
            ]
        ]
    },
    {
        "id": "a329faec55f61f76",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 1020,
        "wires": [
            [
                "1cc6fcbc62a009cb"
            ]
        ]
    },
    {
        "id": "1cc6fcbc62a009cb",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 1020,
        "wires": []
    },
    {
        "id": "698067ded04938d2",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4840,
        "y": 960,
        "wires": []
    },
    {
        "id": "1a85a8622aac2584",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3832,
        "y": 1100,
        "wires": [
            [
                "243383b13419e82a"
            ]
        ]
    },
    {
        "id": "243383b13419e82a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4160,
        "y": 1080,
        "wires": [
            [
                "52dbdd123e7091c0",
                "f7f41c5df86844a6",
                "68fdbbd75259124d",
                "d06c32609ea7ce1b",
                "60bab848a6e23861"
            ]
        ]
    },
    {
        "id": "52dbdd123e7091c0",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4480,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5d93b6830d1ac092",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4840,
        "y": 1020,
        "wires": []
    },
    {
        "id": "6e46ffd229497b6c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2980,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6046a606f291a411",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2300,
        "y": 460,
        "wires": []
    },
    {
        "id": "47e714de12c6ceba",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3080,
        "y": 20,
        "wires": []
    },
    {
        "id": "bd4011b41b1eed28",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "Set path1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3200,
        "y": 340,
        "wires": []
    },
    {
        "id": "a78ca4fbc4d9e57b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Set path11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 4040,
        "wires": []
    },
    {
        "id": "56cdcf6595bfaf55",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Set path9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2960,
        "y": 4280,
        "wires": []
    },
    {
        "id": "f708c78a01711d59",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Set path10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 4280,
        "wires": []
    },
    {
        "id": "6d364e3e0869fe41",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Rescue TLE databases",
        "tooltip": "",
        "color": "",
        "bgcolor": "#104900",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4070,
        "y": 460,
        "wires": [
            [
                "5ab99c0c9192c682"
            ]
        ]
    },
    {
        "id": "c24543b528ceac66",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "blue1-tle-storage-out",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1740,
        "y": 1180,
        "wires": [
            [
                "c940a9398f89f223",
                "d7a414cbb17adc76"
            ]
        ]
    },
    {
        "id": "c940a9398f89f223",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1770,
        "y": 1100,
        "wires": [
            [
                "c4bc0507.a5aa28"
            ]
        ]
    },
    {
        "id": "24e475a7e7cc30b0",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "query to delete sattlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 80,
        "wires": [
            [
                "d80b430a49c5bc67"
            ]
        ]
    },
    {
        "id": "d80b430a49c5bc67",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest",
        "collection": "sattlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2630,
        "y": 80,
        "wires": []
    },
    {
        "id": "0fe194477cfd115a",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2510,
        "y": 280,
        "wires": [
            [
                "48fac77f27ebe694"
            ]
        ]
    },
    {
        "id": "1e9676e414d32f76",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-SAT",
        "links": [
            "2a251f56fc02b247",
            "39bc328534852ef6",
            "4bedade718858642",
            "7abf459108d1bb9a",
            "b6d33c55a0d06540",
            "bc9a8d46d71b2c0a",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001",
            "8a6c18f09e8467e2",
            "709356c5a890889c",
            "5033e963d25a8747",
            "6341ea03cf096da8",
            "5d50d46153e1b697",
            "019e408d8898bc6e",
            "8ed81608c05c3320"
        ],
        "x": 1835,
        "y": 360,
        "wires": [
            [
                "5bfdeb3df1dc8e7e"
            ]
        ]
    },
    {
        "id": "ccf9f6d431ed64cc",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "trigger-P1A",
        "links": [
            "bc9a8d46d71b2c0a",
            "472fd34f5a4b63ee",
            "e65b738ac6575fd6",
            "607ff3a5cfe9a070",
            "a7c69bfe050e2d25",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001",
            "cbfe8678e36b0fa5",
            "56400b0ed6eafd39",
            "97232b9968bf051e",
            "e355bb10e7e33add",
            "86b229a91231826e",
            "0c677ddb5524d322",
            "150bcb00b4ba50cd",
            "78e44121ae2e3b08"
        ],
        "x": 1185,
        "y": 560,
        "wires": [
            [
                "225f7a9616f10423"
            ]
        ]
    },
    {
        "id": "a117569a1ea3ef31",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "trigger-B1",
        "links": [
            "bc9a8d46d71b2c0a"
        ],
        "x": 1015,
        "y": 980,
        "wires": [
            [
                "cf8728c9f3d62ae1"
            ]
        ]
    },
    {
        "id": "04828409f3c8eb98",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "trigger-P1B",
        "links": [
            "bc9a8d46d71b2c0a",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001"
        ],
        "x": 555,
        "y": 4080,
        "wires": [
            [
                "877f29714a1e351c"
            ]
        ]
    },
    {
        "id": "32528e58bc954e44",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "trigger-NEO4",
        "links": [
            "bc9a8d46d71b2c0a",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001"
        ],
        "x": 1645,
        "y": 4240,
        "wires": [
            [
                "5d65976904a23103"
            ]
        ]
    },
    {
        "id": "e7a2222d78b89f73",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "trigger-NEO3",
        "links": [
            "bc9a8d46d71b2c0a",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001"
        ],
        "x": 205,
        "y": 4240,
        "wires": [
            [
                "09553c262bf1ebfe"
            ]
        ]
    },
    {
        "id": "5b94fea4bc8be85c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Date to Epoch",
        "func": "\n// New fonction 120623\n\nfunction convertToTLEEpoch(timestamp) {\n  var date = new Date(timestamp);\n  var year = date.getUTCFullYear();\n  var dayOfYear = getDayOfYear(date);\n  // Modification made on the 5/07/23 TO increase precision of the date to the milisecond\n  //var totalSeconds = (date.getUTCHours() * 3600) + (date.getUTCMinutes() * 60) + date.getUTCSeconds();\n  //var fractionOfDay = totalSeconds / (24 * 60 * 60)\n // var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  var totalMilliseconds = (date.getUTCHours() * 3600000) + (date.getUTCMinutes() * 60000) + (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();\n  var fractionOfDay = totalMilliseconds / (24 * 60 * 60 * 1000);\n  var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  return epoch;\n}\n\nfunction getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nfunction pad(num, size) {\n  var s = num.toString();\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nvar timestamp= msg.paths.path_1;\nvar epoch = convertToTLEEpoch(timestamp);\n\n return{\n topic:\"tle\",\n payload: \"1 13601U 23001EAE \"+epoch+\"  .00030938  00000+0  12818-2 0  9996\",\n body: [timestamp, epoch]\n    } \n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 860,
        "wires": [
            [
                "788aabf0.013d94",
                "fe5ea50b57aa1c32",
                "58f4cd6a92f77065",
                "396dad2ae32bfc99"
            ]
        ]
    },
    {
        "id": "58f4cd6a92f77065",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "after join wait setpath1 b1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 1040,
        "wires": []
    },
    {
        "id": "279cfe02df54c94f",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1370,
        "y": 460,
        "wires": [
            [
                "d3529a4d4ad201b1"
            ]
        ]
    },
    {
        "id": "e8094a552d3b4227",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1350,
        "y": 4160,
        "wires": [
            [
                "d14cf312fe0a60e0"
            ]
        ]
    },
    {
        "id": "c564d0a1ae3e8ebc",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2410,
        "y": 4380,
        "wires": [
            [
                "aebcd6a0a5d13023"
            ]
        ]
    },
    {
        "id": "044b0506b8870c46",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 970,
        "y": 4400,
        "wires": [
            [
                "dafaa8891883163a"
            ]
        ]
    },
    {
        "id": "823834c6c8859a3a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "tle custpo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2780,
        "y": 920,
        "wires": []
    },
    {
        "id": "ad55ac567e7d4286",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4810,
        "y": 3320,
        "wires": [
            [
                "0f2dbd34dd8c8d1c"
            ]
        ]
    },
    {
        "id": "3c8cd23b8aa07ad9",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4820,
        "y": 3360,
        "wires": []
    },
    {
        "id": "3ea47d3224650771",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4630,
        "y": 3360,
        "wires": [
            [
                "3c8cd23b8aa07ad9"
            ]
        ]
    },
    {
        "id": "962e1373fd8386f8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4470,
        "y": 3360,
        "wires": [
            [
                "3ea47d3224650771"
            ]
        ]
    },
    {
        "id": "0f2dbd34dd8c8d1c",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4270,
        "y": 3360,
        "wires": [
            [
                "962e1373fd8386f8"
            ]
        ]
    },
    {
        "id": "9e64e7461634b119",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4000,
        "y": 3400,
        "wires": [
            [
                "e3c11e24c860be14"
            ]
        ]
    },
    {
        "id": "e3c11e24c860be14",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4250,
        "y": 3400,
        "wires": []
    },
    {
        "id": "316d50ec298861de",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "upb1db",
        "links": [
            "8dffd9504e4178a6",
            "aec709ae9a206332",
            "1c5704e9f54f8fa0",
            "9daedda5d9171bce",
            "f4069e4381f3e016",
            "900c1c5c826e76e4",
            "49ed807ab6937ff1"
        ],
        "x": 4455,
        "y": 3280,
        "wires": [
            [
                "ad55ac567e7d4286",
                "9e64e7461634b119"
            ]
        ]
    },
    {
        "id": "39003ad824e44026",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4850,
        "y": 3540,
        "wires": [
            [
                "45ee86e0b247dfe2"
            ]
        ]
    },
    {
        "id": "aa939b6e05f7588d",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4860,
        "y": 3580,
        "wires": []
    },
    {
        "id": "df82e82bf7ac3a5b",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4670,
        "y": 3580,
        "wires": [
            [
                "aa939b6e05f7588d"
            ]
        ]
    },
    {
        "id": "d7e5761a91b6312d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4510,
        "y": 3580,
        "wires": [
            [
                "df82e82bf7ac3a5b"
            ]
        ]
    },
    {
        "id": "45ee86e0b247dfe2",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4350,
        "y": 3580,
        "wires": [
            [
                "d7e5761a91b6312d"
            ]
        ]
    },
    {
        "id": "b35be834446d4aa7",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4040,
        "y": 3620,
        "wires": [
            [
                "b36a9e198f579d6f"
            ]
        ]
    },
    {
        "id": "b36a9e198f579d6f",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4290,
        "y": 3620,
        "wires": []
    },
    {
        "id": "f711fb70318c34f1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "upb2db",
        "links": [
            "3d251fb118f33dfb",
            "0bf45204b0f771f7",
            "a9fbd94ae29b95ab",
            "efa3846a3a50bb67",
            "9a9657cffa053501",
            "3cf688f3dc33b9b9",
            "6eea1e075225c513",
            "ddd747c736987279",
            "b610e09b0ae6c364"
        ],
        "x": 4495,
        "y": 3500,
        "wires": [
            [
                "39003ad824e44026",
                "b35be834446d4aa7"
            ]
        ]
    },
    {
        "id": "fa23d8f8cd010485",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4810,
        "y": 3720,
        "wires": [
            [
                "2810c1a354194b23"
            ]
        ]
    },
    {
        "id": "e24b2b4e0994443f",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4820,
        "y": 3760,
        "wires": []
    },
    {
        "id": "2a32578c6833009a",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4630,
        "y": 3760,
        "wires": [
            [
                "e24b2b4e0994443f"
            ]
        ]
    },
    {
        "id": "935ff25d886f0f1d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4470,
        "y": 3760,
        "wires": [
            [
                "2a32578c6833009a"
            ]
        ]
    },
    {
        "id": "2810c1a354194b23",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4290,
        "y": 3760,
        "wires": [
            [
                "935ff25d886f0f1d"
            ]
        ]
    },
    {
        "id": "0416658a7e68ff94",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4000,
        "y": 3800,
        "wires": [
            [
                "a3a6900ac880ed4d"
            ]
        ]
    },
    {
        "id": "a3a6900ac880ed4d",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4240,
        "y": 3800,
        "wires": []
    },
    {
        "id": "ab7c9532b74823ba",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "upr1db",
        "links": [
            "92816441e42d246e",
            "24f7737fe3d4b910",
            "35183b811b39f221",
            "481786f60850f211",
            "07f52a89e771b9b6",
            "58212e4bd62beb36",
            "9b77dd42f9547f72",
            "9faf53725f3020be",
            "0c966dd888cdfbd3"
        ],
        "x": 4455,
        "y": 3680,
        "wires": [
            [
                "fa23d8f8cd010485",
                "0416658a7e68ff94"
            ]
        ]
    },
    {
        "id": "719dfd890f629b79",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "TLE1-2_Sat",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle\",\n payload:[msg.payload[0].col1, msg.payload[1].col1],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4770,
        "y": 3920,
        "wires": [
            [
                "131185f8d180b61b"
            ]
        ]
    },
    {
        "id": "665016211d444ab6",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4780,
        "y": 3960,
        "wires": []
    },
    {
        "id": "ffdcb73d3f9fb6a0",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4590,
        "y": 3960,
        "wires": [
            [
                "665016211d444ab6"
            ]
        ]
    },
    {
        "id": "3fa042c7226d650a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\n\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4430,
        "y": 3960,
        "wires": [
            [
                "ffdcb73d3f9fb6a0"
            ]
        ]
    },
    {
        "id": "131185f8d180b61b",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4270,
        "y": 3960,
        "wires": [
            [
                "3fa042c7226d650a"
            ]
        ]
    },
    {
        "id": "6d46f5b9e54454ec",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "query to delete p1atlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3960,
        "y": 4000,
        "wires": [
            [
                "bbe011784c4e8416"
            ]
        ]
    },
    {
        "id": "bbe011784c4e8416",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4200,
        "y": 4000,
        "wires": []
    },
    {
        "id": "4f6a448fcc452112",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "1d9db200c8c462a8",
        "name": "upr2db",
        "links": [
            "bb9228be22df33c7",
            "2b2fa0a36bd2a3c4",
            "9d265d27fec93fc9",
            "f9d8feea2da589ed",
            "674e78492f04887d",
            "02f368960053118f",
            "d1a6a078b2b0dbbc",
            "e0e34ede7cab4981",
            "374cf96748949877"
        ],
        "x": 4415,
        "y": 3880,
        "wires": [
            [
                "719dfd890f629b79",
                "6d46f5b9e54454ec"
            ]
        ]
    },
    {
        "id": "8dffd9504e4178a6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upb1db out",
        "mode": "link",
        "links": [
            "316d50ec298861de"
        ],
        "x": 1475,
        "y": 940,
        "wires": []
    },
    {
        "id": "0bf45204b0f771f7",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upb2db out",
        "mode": "link",
        "links": [
            "f711fb70318c34f1"
        ],
        "x": 1475,
        "y": 980,
        "wires": []
    },
    {
        "id": "24f7737fe3d4b910",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upr1db out",
        "mode": "link",
        "links": [
            "ab7c9532b74823ba"
        ],
        "x": 1475,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2b2fa0a36bd2a3c4",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "upr2db out",
        "mode": "link",
        "links": [
            "4f6a448fcc452112"
        ],
        "x": 1465,
        "y": 1060,
        "wires": []
    },
    {
        "id": "97a158c453e2a327",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "celestrack wakeup b1",
        "links": [],
        "x": 1385,
        "y": 700,
        "wires": [
            [
                "806158a8.2a45d8",
                "bad3f015.92d69",
                "c24543b528ceac66"
            ]
        ]
    },
    {
        "id": "cbd32898497f1878",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "New version no test on inc 150523",
        "info": "",
        "x": 2500,
        "y": 920,
        "wires": []
    },
    {
        "id": "d014e76a2cb25da1",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "TLE-file-storage",
        "filename": "tle-latest.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3380,
        "y": 1200,
        "wires": [
            [
                "8c1a3dd594ede97b"
            ]
        ]
    },
    {
        "id": "dc0f2d6745c193a0",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3230,
        "y": 1200,
        "wires": [
            [
                "d014e76a2cb25da1",
                "bf5a0c7c968ace0f"
            ]
        ]
    },
    {
        "id": "e2704cd5c5caefc4",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostorep1a",
        "links": [
            "378c5b1017d00b9f"
        ],
        "x": 3025,
        "y": 1140,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "046634799b95f29c",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostorep1b",
        "links": [
            "035c0a7ed2fe3ee2"
        ],
        "x": 3025,
        "y": 1180,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "e7057fba696ff651",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostorestork1",
        "links": [
            "80b8871a94e1c476",
            "da197cc4fd7767bf",
            "9df3435e6bd4f399",
            "36426e10dfcad8b2",
            "8a9d4492ae46b371",
            "f36155529624e53c",
            "f5c95678f2673f2b",
            "83366c7ac72577ed"
        ],
        "x": 3025,
        "y": 1220,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "433296a4b830bcfb",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostoren3",
        "links": [
            "f342466cf1c63a12"
        ],
        "x": 3025,
        "y": 1260,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "711dcfce6c678eae",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostorerob1b",
        "links": [
            "4af158778ce1bf1e",
            "98fa2e79293a7058",
            "7caf6e8ea1bae293"
        ],
        "x": 3025,
        "y": 1100,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "4f3dd26d2f95cced",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "mongostoren4",
        "links": [
            "5312b82aabb220d1"
        ],
        "x": 3025,
        "y": 1300,
        "wires": [
            [
                "dc0f2d6745c193a0",
                "ec27d3d9dfde1036"
            ]
        ]
    },
    {
        "id": "e064d761f7b93a0c",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "UWE-3",
        "info": "",
        "x": 930,
        "y": 820,
        "wires": []
    },
    {
        "id": "80b8871a94e1c476",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "mongostorestork1 out",
        "mode": "link",
        "links": [
            "e7057fba696ff651"
        ],
        "x": 1345,
        "y": 840,
        "wires": []
    },
    {
        "id": "378c5b1017d00b9f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "mongostorep1a out",
        "mode": "link",
        "links": [
            "e2704cd5c5caefc4"
        ],
        "x": 1665,
        "y": 340,
        "wires": []
    },
    {
        "id": "035c0a7ed2fe3ee2",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "mongostorep1b out",
        "mode": "link",
        "links": [
            "046634799b95f29c"
        ],
        "x": 1275,
        "y": 4020,
        "wires": []
    },
    {
        "id": "f342466cf1c63a12",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "mongostoren3 out",
        "mode": "link",
        "links": [
            "433296a4b830bcfb"
        ],
        "x": 875,
        "y": 4320,
        "wires": []
    },
    {
        "id": "5312b82aabb220d1",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "mongostoren4 out",
        "mode": "link",
        "links": [
            "4f3dd26d2f95cced"
        ],
        "x": 2335,
        "y": 4300,
        "wires": []
    },
    {
        "id": "4af158778ce1bf1e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "mongostorerob1b out",
        "mode": "link",
        "links": [
            "711dcfce6c678eae"
        ],
        "x": 1295,
        "y": 60,
        "wires": []
    },
    {
        "id": "90eece077405292b",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "AUTO UPDATE OF LATEST TLE .TXT",
        "info": "",
        "x": 3270,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ec27d3d9dfde1036",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "AfterJSON",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3230,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8c1a3dd594ede97b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "storedToFile",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3390,
        "y": 1360,
        "wires": []
    },
    {
        "id": "bf5a0c7c968ace0f",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "d986a879ef5d40e6",
        "name": "after join",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3200,
        "y": 1360,
        "wires": []
    },
    {
        "id": "472fd34f5a4b63ee",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 1065,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7abf459108d1bb9a",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 1065,
        "y": 1140,
        "wires": []
    },
    {
        "id": "607ff3a5cfe9a070",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 455,
        "y": 2740,
        "wires": []
    },
    {
        "id": "b6d33c55a0d06540",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 475,
        "y": 2880,
        "wires": []
    },
    {
        "id": "a7c69bfe050e2d25",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 415,
        "y": 3920,
        "wires": []
    },
    {
        "id": "2a251f56fc02b247",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 245,
        "y": 3760,
        "wires": []
    },
    {
        "id": "13e6783f699d391f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "B1 to XSAT",
        "mode": "link",
        "links": [
            "03599ea1d2636c41",
            "8c4538d2189874b0",
            "e2f3f03425eed5dd",
            "ed6b13ca02a5a70d",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 2995,
        "y": 920,
        "wires": []
    },
    {
        "id": "24606f59b812db66",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "P1B to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d",
            "f462010c0466fdea",
            "e2f3f03425eed5dd",
            "8c4538d2189874b0",
            "50c9e4557fa523d4",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 1795,
        "y": 4080,
        "wires": []
    },
    {
        "id": "ac147f0729ad1810",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "PNEO4 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d",
            "f462010c0466fdea",
            "e2f3f03425eed5dd",
            "8c4538d2189874b0",
            "50c9e4557fa523d4",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 2885,
        "y": 4240,
        "wires": []
    },
    {
        "id": "68c5a6850e745a21",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "PNEO3 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d",
            "f462010c0466fdea",
            "e2f3f03425eed5dd",
            "8c4538d2189874b0",
            "50c9e4557fa523d4",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 1295,
        "y": 4240,
        "wires": []
    },
    {
        "id": "f7f9c11d1f2382ae",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d",
            "f462010c0466fdea",
            "e2f3f03425eed5dd",
            "8c4538d2189874b0",
            "50c9e4557fa523d4",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 2235,
        "y": 540,
        "wires": []
    },
    {
        "id": "8943bd9a10115aea",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "GS to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d",
            "f462010c0466fdea",
            "e2f3f03425eed5dd",
            "8c4538d2189874b0",
            "50c9e4557fa523d4",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 3315,
        "y": 160,
        "wires": []
    },
    {
        "id": "be24a5a05268a710",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "c6dcd18b.ea624",
        "name": "STORK1 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d",
            "f462010c0466fdea",
            "e2f3f03425eed5dd",
            "8c4538d2189874b0",
            "50c9e4557fa523d4",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 3265,
        "y": 200,
        "wires": []
    },
    {
        "id": "85b09e63c60a4677",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3000,
        "y": 460,
        "wires": [
            [
                "39bc328534852ef6"
            ]
        ]
    },
    {
        "id": "e515e1802081c007",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh VTS",
        "tooltip": "",
        "color": "",
        "bgcolor": "#104900",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2570,
        "y": 600,
        "wires": [
            [
                "545f50f9a16626ed"
            ]
        ]
    },
    {
        "id": "39bc328534852ef6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "refreshVTS",
        "mode": "link",
        "links": [
            "04828409f3c8eb98",
            "118f0f492f55ac0a",
            "1e9676e414d32f76",
            "220556fdf5358e27",
            "32528e58bc954e44",
            "34c17ae1e756d864",
            "9488d2c3c4b0ccf0",
            "af9822fbee098e88",
            "c9235065a31da113",
            "ccf9f6d431ed64cc",
            "e7a2222d78b89f73",
            "7daad49aae2cb4c9",
            "49f892e386cd7bc4",
            "ae9d48d18afea4b4",
            "8848916d67bd346f",
            "d01efb9685ef2237",
            "9037da81e08c3a42",
            "2ff88da90f572ddb",
            "56f3f4f3e065b6b1",
            "95b08878e2f5f3c9",
            "da60363e18c79508"
        ],
        "x": 3225,
        "y": 500,
        "wires": []
    },
    {
        "id": "396dad2ae32bfc99",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TimePerigee-B1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2120,
        "y": 820,
        "wires": []
    },
    {
        "id": "a57a4be5d794050d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "Celestrak requests return IN",
        "links": [
            "1bb78f1585330b5c",
            "a1bc0b9e16a50e7c",
            "a25fb990a2d35418",
            "be5b3468b95dc183",
            "d83b568b192310f6",
            "01749aef4d3299f4",
            "729b66ffbbb6d12d",
            "aa869e0adf9bfd97",
            "c55cd92a2d6a6319",
            "94ef72527d5833fc",
            "8ba7886ac2885485",
            "f6f311f2e2699fdd"
        ],
        "x": 3535,
        "y": 1260,
        "wires": [
            [
                "dcc5f3bfad012804"
            ]
        ]
    },
    {
        "id": "dcc5f3bfad012804",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "Celestrack status code analyse",
        "func": "if(msg.statusCode==403){\n    msg.payload=\"Request declined by Celestrak\";\n}\nelse if(msg.statusCode==200){\n    msg.payload=\"Request accepted by Celestrak\";\n}\nelse{\n    msg.payload=\"Unknown status for Celestrak\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 1260,
        "wires": [
            [
                "ea046aa05eff206f"
            ]
        ]
    },
    {
        "id": "041a53fbb9393209",
        "type": "ui_text",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "group": "e85e692d.e47bb8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "status of request",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 4220,
        "y": 1260,
        "wires": []
    },
    {
        "id": "f22d599e751d9314",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "audio celestrak",
        "mode": "link",
        "links": [
            "c67ec5067dc22890",
            "0eafb7b263d0ee63",
            "e69743906051c56e"
        ],
        "x": 4215,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ea046aa05eff206f",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3810,
        "y": 1300,
        "wires": [
            [
                "a90db6e1e3f13fb6",
                "eaed2112c0d57b25"
            ]
        ]
    },
    {
        "id": "a90db6e1e3f13fb6",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "Check each",
        "func": "if(msg.payload.every((element) => element==\"Request accepted by Celestrak\"))\n{msg.payload=\"Request accepted by Celestrak\";}\n\nelse if(msg.payload.some((element) => element==\"Request declined by Celestrak\"))\n{msg.payload=\"Request declined by Celestrak\";}\n\nelse{msg.payload=\"Unknown status for Celestrak\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 1300,
        "wires": [
            [
                "f22d599e751d9314",
                "041a53fbb9393209",
                "eaed2112c0d57b25",
                "c0b63df6732ea889"
            ]
        ]
    },
    {
        "id": "eaed2112c0d57b25",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "celestrak",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4030,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3803c3c602de1c33",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "show ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4650,
        "y": 1580,
        "wires": []
    },
    {
        "id": "462d42c4d9e31798",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "button: PLAY VTS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "CMD TIME PLAY",
        "payloadType": "str",
        "x": 3550,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "3b1d319d527a2296",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "button: PAUSE VTS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "CMD TIME PAUSE",
        "payloadType": "str",
        "x": 3550,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "c45c0e4863b2664e",
        "type": "tcp request",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "server": "172.17.0.1",
        "port": "8888",
        "out": "time",
        "ret": "buffer",
        "splitc": "0",
        "newline": "",
        "tls": "",
        "x": 4480,
        "y": 1580,
        "wires": [
            [
                "3803c3c602de1c33"
            ]
        ]
    },
    {
        "id": "a7cf0aedfca0d674",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://172.17.0.1:8888",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 3790,
        "y": 1820,
        "wires": [
            [
                "82988d54abc37739"
            ]
        ]
    },
    {
        "id": "f25b8cca6f8ebaf6",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "Inject message",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rouge",
        "payloadType": "str",
        "x": 3780,
        "y": 1700,
        "wires": [
            [
                "657f20487bb1e584"
            ]
        ]
    },
    {
        "id": "be977bb8c9f65ed7",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "VTS request",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3990,
        "y": 1760,
        "wires": []
    },
    {
        "id": "82988d54abc37739",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "VTS response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4000,
        "y": 1800,
        "wires": []
    },
    {
        "id": "e1e06bd20a25c472",
        "type": "catch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "scope": [
            "a7cf0aedfca0d674",
            "c45c0e4863b2664e"
        ],
        "uncaught": false,
        "x": 3810,
        "y": 1860,
        "wires": [
            [
                "82988d54abc37739"
            ]
        ]
    },
    {
        "id": "3e251285f5dc3f34",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "button: Reload VTS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "CMD SERVICE AUTORESTART",
        "payloadType": "str",
        "x": 3550,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "a9c821a33e9c5159",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "func": "var cmd1=\"FWD ALL CMD TIMELINE ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd2=\"FWD ALL CMD TIMELINE ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\nvar cmd3=\"CMD SERVICE StartApplication SurfaceView 1\\n\";\nvar cmd6=\"CMD SERVICE StopApplication 1\\n\";\nvar cmd4=\"CMD EVENT ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\nvar cmd5=\"CMD EVENT ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd7=\"CMD SERVICE StartApplication Celestia 0\\n\";\nvar cmd8=\"CMD SERVICE StopApplication 0\\n\";\nvar cmd9=\"FWD ALL CMD SERVICE InitSatellite \\\"BLUE1\\\" \\\"Sol/Earth\\\"\\n\";\nvar cmd10=\"INIT NodeRed CONSTRAINT 1.0 3\\n\";\nvar cmd11=\"FWD ALL CMD SERVICE InitCentralBody \\\"Earth\\\" \\\"Sol\\\"\\n\";\n\nmsg.payload=cmd1+cmd2+cmd6+cmd3+cmd8+cmd7;\n//msg.payload=cmd10+cmd1+cmd2+cmd9+cmd11;\n//msg.payload=cmd4+cmd5;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 1580,
        "wires": [
            [
                "c45c0e4863b2664e",
                "2207b00d6dc97dcd",
                "c94607f83c5c85fe",
                "ab94d92507df934c",
                "9aa73ae4af3274c9",
                "48581bc26394cfc1"
            ]
        ]
    },
    {
        "id": "640bcc1f704ee31a",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "AUTO RESTART VTS",
        "links": [
            "d0e791394ec64d0c",
            "5ead832e790372af",
            "2decf83c3304a112",
            "968319d5ad47d00b",
            "1a45b63f63798592",
            "a181094a780817da",
            "d2cd251a22174f61",
            "045025ed0d65cab9",
            "49a7dc96b95e1035"
        ],
        "x": 4105,
        "y": 1580,
        "wires": [
            [
                "a9c821a33e9c5159"
            ]
        ]
    },
    {
        "id": "657f20487bb1e584",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "",
        "func": "msg.payload=\"FWD 1 CMD SERVICE InitSatellite \\\"BLUE1\\\" \\\"Sol/Earth\\\"\\n\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3780,
        "y": 1760,
        "wires": [
            [
                "a7cf0aedfca0d674"
            ]
        ]
    },
    {
        "id": "68fdbbd75259124d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "DB array to JSON",
        "func": "//msg.payload = msg.payload.tle2;\nlet splitArray = msg.payload.tle2.split(\" \");\n\nfor (const element in splitArray) {\n    \n  if (isNaN(splitArray[element]) || splitArray[element].trim() == \"\") {\n    splitArray.splice(element, 1);\n  } else {\n    \n//Nothing\n  }\n}\nsplitArray.shift();\nsplitArray.shift();\nmsg.payload ={\n    incli:splitArray[0],\n    raan:splitArray[1],\n    ecc:splitArray[2],\n    aop:splitArray[3],\n    meana:splitArray[4],\n    mean:splitArray[5],\n    version:splitArray[6]}\n \nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4490,
        "y": 1240,
        "wires": [
            [
                "1e218245e4e86930",
                "32334d66117a81ba",
                "7b069795cc213854",
                "989fb8f74bf2a48d"
            ]
        ]
    },
    {
        "id": "1e218245e4e86930",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "blue1-tle-storage.json",
        "filename": "blue1-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4760,
        "y": 1240,
        "wires": [
            [
                "1a6cf7bd050f5409"
            ]
        ]
    },
    {
        "id": "5ab99c0c9192c682",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "MEM FLUSH FOR RESCUE DB",
        "mode": "link",
        "links": [
            "3186623bfab93670",
            "8703f9d5dd80ac0f",
            "46786d711e5af4e8"
        ],
        "x": 4205,
        "y": 400,
        "wires": []
    },
    {
        "id": "c0b63df6732ea889",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Request accepted by Celestrak",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4120,
        "y": 1320,
        "wires": [
            [
                "adebc33415b96346"
            ]
        ]
    },
    {
        "id": "adebc33415b96346",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "25671b51f351320d",
        "name": "ACCEPTED CELESTRAK CHECK STATUS",
        "mode": "link",
        "links": [
            "1a66111fa98df20d",
            "d81801e66dd0e3e2"
        ],
        "x": 4245,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b0cbf5198d5ebd45",
        "type": "catch",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "scope": [
            "976ed181456d5d92"
        ],
        "uncaught": false,
        "x": 3812,
        "y": 440,
        "wires": [
            [
                "1926d3943dce7523",
                "5981caa54d0d3dda"
            ]
        ]
    },
    {
        "id": "1926d3943dce7523",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4030,
        "y": 420,
        "wires": []
    },
    {
        "id": "b448f6837eae385f",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "on-start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4630,
        "y": 400,
        "wires": [
            [
                "f9e0d8bfc76d2ea9"
            ]
        ]
    },
    {
        "id": "c26754142d9a49d1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "REFRESH DB FOR START",
        "links": [
            "60708c380b4d96f0"
        ],
        "x": 4485,
        "y": 400,
        "wires": [
            [
                "b448f6837eae385f"
            ]
        ]
    },
    {
        "id": "1dd663aebe5da599",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 4755,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f7f41c5df86844a6",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4450,
        "y": 1140,
        "wires": [
            [
                "34c234d7767900b6"
            ]
        ]
    },
    {
        "id": "34c234d7767900b6",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4630,
        "y": 1140,
        "wires": [
            [
                "1dd663aebe5da599"
            ]
        ]
    },
    {
        "id": "32334d66117a81ba",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "blue2-tle-storage.json",
        "filename": "blue2-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4760,
        "y": 1380,
        "wires": [
            [
                "f36a84b97b45887e"
            ]
        ]
    },
    {
        "id": "7b069795cc213854",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "red1-tle-storage.json",
        "filename": "red1-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4460,
        "y": 1320,
        "wires": [
            [
                "d35b0bf11b4a0a05"
            ]
        ]
    },
    {
        "id": "989fb8f74bf2a48d",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "red2-tle-storage.json",
        "filename": "red2-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4400,
        "y": 1440,
        "wires": [
            [
                "96d4b30288a4bf86"
            ]
        ]
    },
    {
        "id": "4965b3bb23e935aa",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for sattlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2540,
        "y": 540,
        "wires": [
            [
                "00ccb2383f2390aa"
            ]
        ]
    },
    {
        "id": "00ccb2383f2390aa",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of sattlelatest",
        "collection": "sattlelatest",
        "operation": "find",
        "x": 2760,
        "y": 540,
        "wires": [
            [
                "110c438bf6eeb504"
            ]
        ]
    },
    {
        "id": "ac59043c8dfb5729",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "1beb1794d7479693"
        ],
        "x": 2385,
        "y": 540,
        "wires": [
            [
                "4965b3bb23e935aa"
            ]
        ]
    },
    {
        "id": "110c438bf6eeb504",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload[0] && msg.payload[0].tle1 && msg.payload[0].tle2) {\n   return {\n      topic: \"tle\",\n      payload: [msg.payload[0].tle1, msg.payload[0].tle2],\n      body: 12\n   };\n} else {\n   node.warn(\"Les propriétés 'tle1' ou 'tle2' sont manquantes, ou msg.payload est incorrect.\");\n   return null; // On renvoie null si les données sont manquantes pour arrêter le flux\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 420,
        "wires": [
            [
                "6f5ae58615d925eb"
            ]
        ]
    },
    {
        "id": "669f7c793cb1f361",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "filename": "tle-latest-aiglons.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3530,
        "y": 2080,
        "wires": [
            [
                "1e1390c3056a99d3"
            ]
        ]
    },
    {
        "id": "1e1390c3056a99d3",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3490,
        "y": 2140,
        "wires": [
            [
                "1ac3312ced400e38"
            ]
        ]
    },
    {
        "id": "1ac3312ced400e38",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 2180,
        "wires": [
            [
                "c92f4913d7957eb6"
            ]
        ]
    },
    {
        "id": "c92f4913d7957eb6",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3490,
        "y": 2220,
        "wires": [
            [
                "107784a718ca9ef6"
            ]
        ]
    },
    {
        "id": "2ad3adeeb75bc060",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2100,
        "wires": [
            [
                "4e7b101e6a063184"
            ]
        ]
    },
    {
        "id": "107784a718ca9ef6",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 2260,
        "wires": [
            [
                "2ad3adeeb75bc060",
                "21420964ad137308",
                "a28507f7e5335712",
                "06e258dfe17a0402",
                "e5d34fa4a559d564",
                "3f7725a837ec3fa5",
                "e2dcf049b87d0994",
                "38456c4c40d6ffe5",
                "fa64b86cd503310c",
                "1ff4c78d450da540",
                "ca29c23279eb8b40"
            ]
        ]
    },
    {
        "id": "21420964ad137308",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2160,
        "wires": [
            [
                "ea84c545ff576956"
            ]
        ]
    },
    {
        "id": "a28507f7e5335712",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2220,
        "wires": [
            [
                "7de122a1c34ee6cd"
            ]
        ]
    },
    {
        "id": "06e258dfe17a0402",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2280,
        "wires": [
            [
                "7d3dd6ea81ec6986"
            ]
        ]
    },
    {
        "id": "4e7b101e6a063184",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2100,
        "wires": [
            [
                "00bc7a44dbeeb900"
            ]
        ]
    },
    {
        "id": "ea84c545ff576956",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2160,
        "wires": [
            [
                "0172393bd382e44e"
            ]
        ]
    },
    {
        "id": "7de122a1c34ee6cd",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2220,
        "wires": [
            [
                "a4ac1c727df5b682",
                "c13536a31b6668c4"
            ]
        ]
    },
    {
        "id": "7d3dd6ea81ec6986",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2280,
        "wires": [
            [
                "4da12d7637cb7081"
            ]
        ]
    },
    {
        "id": "e5d34fa4a559d564",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2340,
        "wires": [
            [
                "be5d6394d45d278b"
            ]
        ]
    },
    {
        "id": "be5d6394d45d278b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2340,
        "wires": [
            [
                "58779d3ed5380d09"
            ]
        ]
    },
    {
        "id": "3f7725a837ec3fa5",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2400,
        "wires": [
            [
                "de10a582350b690c"
            ]
        ]
    },
    {
        "id": "de10a582350b690c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2400,
        "wires": [
            [
                "8fe63f5346cc63fb"
            ]
        ]
    },
    {
        "id": "29a58f23a9dd7f43",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Repeupler les DB",
        "info": "",
        "x": 3540,
        "y": 2020,
        "wires": []
    },
    {
        "id": "00bc7a44dbeeb900",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4430,
        "y": 2100,
        "wires": []
    },
    {
        "id": "0172393bd382e44e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4430,
        "y": 2160,
        "wires": []
    },
    {
        "id": "a4ac1c727df5b682",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4430,
        "y": 2220,
        "wires": []
    },
    {
        "id": "4da12d7637cb7081",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4430,
        "y": 2280,
        "wires": []
    },
    {
        "id": "58779d3ed5380d09",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4440,
        "y": 2340,
        "wires": []
    },
    {
        "id": "8fe63f5346cc63fb",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 4440,
        "y": 2400,
        "wires": []
    },
    {
        "id": "5baf71ae94414613",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete rob1blelatest",
        "collection": "rob1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4790,
        "y": 1960,
        "wires": []
    },
    {
        "id": "37b8374e051ff4b1",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4790,
        "y": 2000,
        "wires": []
    },
    {
        "id": "20d88716681df6d3",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest",
        "collection": "sattlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4790,
        "y": 2040,
        "wires": []
    },
    {
        "id": "03951c2125f4682e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4790,
        "y": 2080,
        "wires": []
    },
    {
        "id": "b2fdc67d73da2e5d",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4800,
        "y": 2120,
        "wires": []
    },
    {
        "id": "4a29c73c3af154f3",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4800,
        "y": 2160,
        "wires": []
    },
    {
        "id": "8ce9e6a65847b662",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 2040,
        "wires": [
            [
                "9710d1298f5ac0d7",
                "05cea6123c628cf7",
                "cd7a52bb4ca2d0f5",
                "4a29c73c3af154f3",
                "b2fdc67d73da2e5d",
                "03951c2125f4682e",
                "20d88716681df6d3",
                "37b8374e051ff4b1",
                "5baf71ae94414613",
                "71b42cc5cdafa1a9",
                "669f7c793cb1f361"
            ]
        ]
    },
    {
        "id": "307a0de8b92563d3",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4380,
        "y": 2000,
        "wires": [
            [
                "8ce9e6a65847b662"
            ]
        ]
    },
    {
        "id": "e2dcf049b87d0994",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"BLUE-01\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2460,
        "wires": [
            [
                "0e8372714ac3b58d"
            ]
        ]
    },
    {
        "id": "0e8372714ac3b58d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2460,
        "wires": [
            [
                "eec3eeb62c0735fd",
                "8b47488247aba0cb",
                "3a5287406c0216a2"
            ]
        ]
    },
    {
        "id": "eec3eeb62c0735fd",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4420,
        "y": 2460,
        "wires": []
    },
    {
        "id": "71b42cc5cdafa1a9",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4790,
        "y": 2200,
        "wires": []
    },
    {
        "id": "38456c4c40d6ffe5",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"BLUE-02\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2520,
        "wires": [
            [
                "0cdfaae66743bdbe"
            ]
        ]
    },
    {
        "id": "0cdfaae66743bdbe",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2520,
        "wires": [
            [
                "d2fe684fedcbb52d",
                "1abcadf0e1b5c76f"
            ]
        ]
    },
    {
        "id": "d2fe684fedcbb52d",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4420,
        "y": 2520,
        "wires": []
    },
    {
        "id": "9710d1298f5ac0d7",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4790,
        "y": 2240,
        "wires": []
    },
    {
        "id": "fa64b86cd503310c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"RED-01\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2580,
        "wires": [
            [
                "1a6d25fb27d14604"
            ]
        ]
    },
    {
        "id": "1a6d25fb27d14604",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 2580,
        "wires": [
            [
                "821dc3f50941ec6e",
                "b8b400d4272209e7"
            ]
        ]
    },
    {
        "id": "821dc3f50941ec6e",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4420,
        "y": 2580,
        "wires": []
    },
    {
        "id": "05cea6123c628cf7",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4780,
        "y": 2280,
        "wires": []
    },
    {
        "id": "1ff4c78d450da540",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"RED-02\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 2640,
        "wires": [
            [
                "d269b09495a1b845"
            ]
        ]
    },
    {
        "id": "d269b09495a1b845",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "Prepare the message for upload to DB R2",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4100,
        "y": 2640,
        "wires": [
            [
                "cbf3317bf16016f5",
                "a6856dc8edf83891",
                "9268e45c92a5e23d"
            ]
        ]
    },
    {
        "id": "cbf3317bf16016f5",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4420,
        "y": 2640,
        "wires": []
    },
    {
        "id": "cd7a52bb4ca2d0f5",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 4780,
        "y": 2320,
        "wires": []
    },
    {
        "id": "caa6a1c96c2f0961",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Rescue TLE aiglons",
        "tooltip": "",
        "color": "",
        "bgcolor": "#10FFFF",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4000,
        "y": 2020,
        "wires": [
            [
                "098b276ca212f2c4"
            ]
        ]
    },
    {
        "id": "8f24ed5b8ec995ed",
        "type": "catch",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "scope": [
            "669f7c793cb1f361"
        ],
        "uncaught": false,
        "x": 3690,
        "y": 2020,
        "wires": [
            [
                "ab02042148a5f97a"
            ]
        ]
    },
    {
        "id": "ab02042148a5f97a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3910,
        "y": 1980,
        "wires": []
    },
    {
        "id": "961ca2a2fc11d841",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "on-start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 1960,
        "wires": [
            [
                "8ce9e6a65847b662"
            ]
        ]
    },
    {
        "id": "2573f33ae7988d13",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "REFRESH DB FOR START",
        "links": [
            "60708c380b4d96f0"
        ],
        "x": 4395,
        "y": 1960,
        "wires": [
            [
                "961ca2a2fc11d841"
            ]
        ]
    },
    {
        "id": "8b873cf2d5df3d31",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 4695,
        "y": 2700,
        "wires": []
    },
    {
        "id": "a6856dc8edf83891",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4390,
        "y": 2700,
        "wires": [
            [
                "92a1f2c597e30167"
            ]
        ]
    },
    {
        "id": "92a1f2c597e30167",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4570,
        "y": 2700,
        "wires": [
            [
                "8b873cf2d5df3d31"
            ]
        ]
    },
    {
        "id": "8b47488247aba0cb",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "DB array to JSON",
        "func": "//msg.payload = msg.payload.tle2;\nlet splitArray = msg.payload.tle2.split(\" \");\n\nfor (const element in splitArray) {\n    \n  if (isNaN(splitArray[element]) || splitArray[element].trim() == \"\") {\n    splitArray.splice(element, 1);\n  } else {\n    \n//Nothing\n  }\n}\nsplitArray.shift();\nsplitArray.shift();\nmsg.payload ={\n    incli:splitArray[0],\n    raan:splitArray[1],\n    ecc:splitArray[2],\n    aop:splitArray[3],\n    meana:splitArray[4],\n    mean:splitArray[5],\n    version:splitArray[6]}\n \nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4770,
        "y": 2380,
        "wires": [
            [
                "a41aa8911a7e9a4a"
            ]
        ]
    },
    {
        "id": "a41aa8911a7e9a4a",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "blue1-tle-storage.json",
        "filename": "blue1-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4780,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "6a063d3543c6be67",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "blue2-tle-storage.json",
        "filename": "blue2-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4780,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "abe33b7dfca151eb",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "red1-tle-storage.json",
        "filename": "red1-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4780,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "c1847d93f8514dde",
        "type": "file",
        "z": "7c68352c.1b47bc",
        "name": "red2-tle-storage.json",
        "filename": "red2-tle-storage.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4780,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "1abcadf0e1b5c76f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "DB array to JSON",
        "func": "//msg.payload = msg.payload.tle2;\nlet splitArray = msg.payload.tle2.split(\" \");\n\nfor (const element in splitArray) {\n    \n  if (isNaN(splitArray[element]) || splitArray[element].trim() == \"\") {\n    splitArray.splice(element, 1);\n  } else {\n    \n//Nothing\n  }\n}\nsplitArray.shift();\nsplitArray.shift();\nmsg.payload ={\n    incli:splitArray[0],\n    raan:splitArray[1],\n    ecc:splitArray[2],\n    aop:splitArray[3],\n    meana:splitArray[4],\n    mean:splitArray[5],\n    version:splitArray[6]}\n \nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4750,
        "y": 2460,
        "wires": [
            [
                "6a063d3543c6be67"
            ]
        ]
    },
    {
        "id": "b8b400d4272209e7",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "DB array to JSON",
        "func": "//msg.payload = msg.payload.tle2;\nlet splitArray = msg.payload.tle2.split(\" \");\n\nfor (const element in splitArray) {\n    \n  if (isNaN(splitArray[element]) || splitArray[element].trim() == \"\") {\n    splitArray.splice(element, 1);\n  } else {\n    \n//Nothing\n  }\n}\nsplitArray.shift();\nsplitArray.shift();\nmsg.payload ={\n    incli:splitArray[0],\n    raan:splitArray[1],\n    ecc:splitArray[2],\n    aop:splitArray[3],\n    meana:splitArray[4],\n    mean:splitArray[5],\n    version:splitArray[6]}\n \nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4770,
        "y": 2520,
        "wires": [
            [
                "abe33b7dfca151eb"
            ]
        ]
    },
    {
        "id": "9268e45c92a5e23d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "DB array to JSON",
        "func": "//msg.payload = msg.payload.tle2;\nlet splitArray = msg.payload.tle2.split(\" \");\n\nfor (const element in splitArray) {\n    \n  if (isNaN(splitArray[element]) || splitArray[element].trim() == \"\") {\n    splitArray.splice(element, 1);\n  } else {\n    \n//Nothing\n  }\n}\nsplitArray.shift();\nsplitArray.shift();\nmsg.payload ={\n    incli:splitArray[0],\n    raan:splitArray[1],\n    ecc:splitArray[2],\n    aop:splitArray[3],\n    meana:splitArray[4],\n    mean:splitArray[5],\n    version:splitArray[6]}\n \nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4750,
        "y": 2600,
        "wires": [
            [
                "c1847d93f8514dde"
            ]
        ]
    },
    {
        "id": "92e0db73f92c1c5d",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "func": "msg.payload=\"INIT NodeRed CONSTRAINT 1.0 3\\n\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 1540,
        "wires": [
            [
                "c45c0e4863b2664e",
                "cca155df83b092e7"
            ]
        ]
    },
    {
        "id": "711bd6f73f5164ca",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "INIT NodeRed CONSTRAINT ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "INIT NodeRed CONSTRAINT 1.0 -1\\n",
        "payloadType": "str",
        "x": 4030,
        "y": 1540,
        "wires": [
            [
                "92e0db73f92c1c5d"
            ]
        ]
    },
    {
        "id": "331dd35712a62381",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "func": "var cmd1=\"CMD TIMELINE ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd2=\"CMD TIMELINE ReloadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\nvar cmd3=\"FWD ALL CMD TIMELINE LoadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd4=\"FWD ALL CMD TIMELINE LoadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\nvar cmd5=\"FWD ALL CMD TIMELINE LoadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_OEM_POSITION.TXT\\n\";\nvar cmd6=\"FWD ALL CMD TIMELINE LoadFile /home/anthony/jsatorb/jsatorb-rest-api/files/default_Sat/Data/BLUE1_AEM_ATTITUDE.TXT\\n\";\n\nvar cmd9='FWD 1 CMD SERVICE InitSatellite \\\"BLUE1\\\" \\\"Sol/Earth\\\"\\n';\nvar cmd10=\"INIT NodeRed CONSTRAINT 1.0 3\\n\";\nvar cmd11=\"FWD 1 CMD SERVICE InitCentralBody \\\"Earth\\\" \\\"Sol\\\"\\n\";\n//msg.payload=cmd1+cmd2+cmd6+cmd3+cmd8+cmd7;\nmsg.payload=cmd10+cmd1+cmd2+cmd11+cmd9;\n//msg.payload=cmd4+cmd5;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 1620,
        "wires": [
            [
                "c45c0e4863b2664e",
                "4458e9f6ba29353e"
            ]
        ]
    },
    {
        "id": "472ddc8b042b18ad",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3960,
        "y": 1620,
        "wires": [
            [
                "331dd35712a62381"
            ]
        ]
    },
    {
        "id": "927793742fe2a26b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3672,
        "y": 400,
        "wires": []
    },
    {
        "id": "4aaa72e66efc6e22",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3572,
        "y": 940,
        "wires": []
    },
    {
        "id": "5981caa54d0d3dda",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 3915,
        "y": 380,
        "wires": []
    },
    {
        "id": "d06c32609ea7ce1b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4192,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1a6cf7bd050f5409",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4890,
        "y": 1300,
        "wires": []
    },
    {
        "id": "d35b0bf11b4a0a05",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4570,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f36a84b97b45887e",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4850,
        "y": 1440,
        "wires": []
    },
    {
        "id": "96d4b30288a4bf86",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4630,
        "y": 1460,
        "wires": []
    },
    {
        "id": "eb7e570c18ebe251",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 940,
        "wires": []
    },
    {
        "id": "8bbba65843f30b70",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Test TLE1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d7a414cbb17adc76",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 1280,
        "wires": []
    },
    {
        "id": "2986a8ef075e6a8e",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 1040,
        "wires": []
    },
    {
        "id": "92a9cc220aee7971",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 1020,
        "wires": []
    },
    {
        "id": "09f039e28a10270a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 920,
        "wires": []
    },
    {
        "id": "02e1b04d3d6f60d5",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 1240,
        "wires": []
    },
    {
        "id": "28604ce259be3b47",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2470,
        "y": 1160,
        "wires": []
    },
    {
        "id": "8197137aa9aef967",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "b4f92e23ab3d8349",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "571e2c55.406334",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 60,
        "wires": [
            [
                "4af158778ce1bf1e"
            ]
        ]
    },
    {
        "id": "80f76c3294a23ba0",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "d79f942338defd7f",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 340,
        "wires": [
            [
                "378c5b1017d00b9f"
            ]
        ]
    },
    {
        "id": "8a57318edf3a260a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f47ebdbe9aa02fbc",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 4020,
        "wires": [
            [
                "035c0a7ed2fe3ee2"
            ]
        ]
    },
    {
        "id": "4289331cabd17a6f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 800,
        "wires": [
            [
                "80b8871a94e1c476"
            ]
        ]
    },
    {
        "id": "293a2b71264a418f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "69e1011093603bba",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 4320,
        "wires": [
            [
                "f342466cf1c63a12"
            ]
        ]
    },
    {
        "id": "27fa46bdf416727e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "9a5f859dacc543ae",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 4300,
        "wires": [
            [
                "5312b82aabb220d1"
            ]
        ]
    },
    {
        "id": "e6b1abc87d5a903a",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Ergol Mass Update",
        "mode": "link",
        "links": [
            "20b34b494b7565dc",
            "d0e2f32015266972"
        ],
        "x": 2705,
        "y": 700,
        "wires": []
    },
    {
        "id": "0599a22e1f0c18ca",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Set path_101",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_101",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1220,
        "wires": [
            [
                "94d0137eed1571be",
                "da7f645037c13d72"
            ]
        ]
    },
    {
        "id": "1018c17f521a78d5",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Opti",
        "mode": "link",
        "links": [
            "1d83106db0c091cd",
            "48ee54bd869b3619",
            "ee0af6fccbb5381f",
            "d39e139798401e69"
        ],
        "x": 1245,
        "y": 1320,
        "wires": []
    },
    {
        "id": "94d0137eed1571be",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "PATH OPTI",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1320,
        "wires": []
    },
    {
        "id": "a8f379dc355cc865",
        "type": "ui_template",
        "z": "7c68352c.1b47bc",
        "g": "3ccbb53f.0e92ea",
        "group": "3dabe8df.a10df8",
        "name": "iframe for Home",
        "order": 4,
        "width": 6,
        "height": 9,
        "format": "<style>\n    .iframe-container {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n.iframe-container {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\niframe {\n    width: calc(100% + 20px); /* Augmente la largeur pour masquer la scrollbar */\n    height: 100%;\n    border: none;\n    margin-right: -20px; /* Cache la scrollbar à droite */\n    \n    -ms-overflow-style: none;  /* IE et Edge */\n    scrollbar-width: none;  /* Firefox */\n}\n\niframe::-webkit-scrollbar {\n    display: none; /* Chrome, Safari et Opera */\n}\n\n</style>\n\n<div class=\"iframe-container\">\n    <iframe src=\"https://uphere.space/\"></iframe>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1400,
        "y": 4520,
        "wires": [
            []
        ]
    },
    {
        "id": "3484d4130ad4f48e",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "http request OEM/AEM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 3970,
        "y": 3000,
        "wires": [
            [
                "a99206b2292d30e2",
                "283116bae59ff3f2",
                "aa971f6aa764fedf"
            ]
        ]
    },
    {
        "id": "a99206b2292d30e2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "OEM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4190,
        "y": 2920,
        "wires": []
    },
    {
        "id": "04e1ec554f80d598",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "Sub-Module VTS files Updating",
        "info": "",
        "x": 3730,
        "y": 2800,
        "wires": []
    },
    {
        "id": "6038a62d3834191f",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "joinwait reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3960,
        "y": 2920,
        "wires": []
    },
    {
        "id": "1da74b1aa73cfd5d",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "API request preparation",
        "info": "",
        "x": 3760,
        "y": 2940,
        "wires": []
    },
    {
        "id": "ffb66edc1587c2b2",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 4210,
        "y": 3140,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "5ca63912977c5309",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"180\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        }\t    ],\t    \"groundStations\": [\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {}\t       \t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3740,
        "y": 2980,
        "wires": [
            [
                "6038a62d3834191f",
                "3484d4130ad4f48e"
            ]
        ]
    },
    {
        "id": "ea1ef4e5baf2cf49",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "paths": "[\"path_101\",\"path_12\",\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3480,
        "y": 3000,
        "wires": [
            [
                "5ca63912977c5309",
                "be831a0ec7225fda"
            ],
            []
        ]
    },
    {
        "id": "e2f3f03425eed5dd",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "JOINWAIT XSAT",
        "links": [
            "13e6783f699d391f",
            "1a19adb69a35a3a7",
            "41a32e4cc747f910",
            "d51fcddeda0e0de7",
            "24606f59b812db66",
            "ac147f0729ad1810",
            "68c5a6850e745a21",
            "f7f9c11d1f2382ae",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "2072d02e.cd2d4",
            "15d13ebb1f03b0a7",
            "c72fbcae841b3ef6",
            "540a7905183c0eee",
            "2f25edf21b8a07d4",
            "adb61069d247c406",
            "a2ee62ca6cec9904",
            "fc6400aba3c7f324",
            "cd1146af51cb6d1e",
            "83657e1af5fa276d",
            "8c360fc5911891f9",
            "3bb6463710bb46bc",
            "a3045704a76aa966",
            "bb963eb834349742",
            "23087e0890dde8be"
        ],
        "x": 3285,
        "y": 3000,
        "wires": [
            [
                "ea1ef4e5baf2cf49",
                "63cfc7eeb38277fc"
            ]
        ]
    },
    {
        "id": "be831a0ec7225fda",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "check X sat",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3770,
        "y": 3060,
        "wires": []
    },
    {
        "id": "63cfc7eeb38277fc",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "paths": "[\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3400,
        "y": 3120,
        "wires": [
            [
                "34dbd764333a80b4"
            ],
            []
        ]
    },
    {
        "id": "eee08ed120357e3c",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3490,
        "y": 3040,
        "wires": [
            [
                "ea1ef4e5baf2cf49"
            ]
        ]
    },
    {
        "id": "34dbd764333a80b4",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 3560,
        "y": 3100,
        "wires": [
            [
                "6eae650ae7241c64",
                "eee08ed120357e3c"
            ],
            [
                "14b95b6f88573bb6"
            ],
            []
        ]
    },
    {
        "id": "6eae650ae7241c64",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "COPYMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3810,
        "y": 3100,
        "wires": []
    },
    {
        "id": "14b95b6f88573bb6",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "COPYMEM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3820,
        "y": 3140,
        "wires": []
    },
    {
        "id": "283116bae59ff3f2",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "property": "headers.vtsflag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ready",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4070,
        "y": 3060,
        "wires": [
            [
                "867f27cd04e03942"
            ]
        ]
    },
    {
        "id": "867f27cd04e03942",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python concatenate.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "concatenate",
        "x": 4230,
        "y": 3080,
        "wires": [
            [
                "55bd8ee8081f4e8a",
                "952c0a11f1605d7a",
                "75a3abe65bd806d7"
            ],
            [
                "c84328b63a11cdc8"
            ],
            []
        ]
    },
    {
        "id": "952c0a11f1605d7a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "func": "msg.payload=\"situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 2980,
        "wires": [
            [
                "2decf83c3304a112",
                "d97910492e060e73",
                "ad211b157e4019ef",
                "5862c31007cdf94b"
            ]
        ]
    },
    {
        "id": "55bd8ee8081f4e8a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "CONCATENATE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4620,
        "y": 3020,
        "wires": []
    },
    {
        "id": "c84328b63a11cdc8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "CONCATENATE  ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4630,
        "y": 3060,
        "wires": []
    },
    {
        "id": "3e608b3210a3b71b",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890"
        ],
        "x": 4095,
        "y": 2820,
        "wires": []
    },
    {
        "id": "2decf83c3304a112",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "mode": "link",
        "links": [
            "640bcc1f704ee31a"
        ],
        "x": 4545,
        "y": 2980,
        "wires": []
    },
    {
        "id": "0cea5bd8b77ae6da",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"60\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {},\t        \"VISIBILITY\": {}\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3500,
        "y": 2960,
        "wires": [
            []
        ]
    },
    {
        "id": "be321a9033361f03",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "A GARDER ",
        "info": "Pour implémenter la visibilité des satellites par les stations au sol.",
        "x": 3510,
        "y": 2920,
        "wires": []
    },
    {
        "id": "4c5d356d4499b947",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_100",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_100",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3370,
        "y": 520,
        "wires": [
            [
                "ed91f7078814f403"
            ]
        ]
    },
    {
        "id": "9488d2c3c4b0ccf0",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "refreshVTSin",
        "links": [
            "39bc328534852ef6",
            "5b2a4de095e1e430"
        ],
        "x": 3245,
        "y": 440,
        "wires": [
            [
                "4c5d356d4499b947"
            ]
        ]
    },
    {
        "id": "f8f5d3641612976a",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "4589f3046d66a2df"
        ],
        "x": 3235,
        "y": 620,
        "wires": [
            [
                "4c5d356d4499b947"
            ]
        ]
    },
    {
        "id": "5030b864c5ce503d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "OPTIMISATION",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 2860,
        "wires": []
    },
    {
        "id": "1d83106db0c091cd",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "links": [
            "1018c17f521a78d5",
            "9d5ad2825aaf5257",
            "3beb235b45a5923b",
            "8122ab317ae422a1",
            "2b40adc7edb46ab0",
            "6d83d4d5db0d86dd",
            "0ee9784829f9267b",
            "72316f670c2f8081"
        ],
        "x": 3275,
        "y": 2940,
        "wires": [
            [
                "5030b864c5ce503d",
                "ea1ef4e5baf2cf49"
            ]
        ]
    },
    {
        "id": "1a7828f90ec7810d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "BLUE 1 MANEUVER",
        "links": [
            "61f4316899cdb467",
            "9a0753c9c8dd5049",
            "a3f1a7d2c9db58ee",
            "dda64c2d25df24e9",
            "24c890a304d1f771",
            "5c2e6331eeb6c67d",
            "c7b740e9c382dc1d"
        ],
        "x": 3295,
        "y": 3060,
        "wires": [
            [
                "ea1ef4e5baf2cf49"
            ]
        ]
    },
    {
        "id": "58ea7c57.11f754",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "http request OEM/AEM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 4230,
        "y": 160,
        "wires": [
            [
                "a5bc4015.3f8fa",
                "72f9a7c1e4e8ac50",
                "1df66e4e572c6e27"
            ]
        ]
    },
    {
        "id": "a5bc4015.3f8fa",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "OEM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4410,
        "y": 40,
        "wires": []
    },
    {
        "id": "3dce35b.ba5adca",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "Sub-Module VTS files Updating",
        "info": "",
        "x": 4510,
        "y": 80,
        "wires": []
    },
    {
        "id": "105fdd91.9d22d2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "joinwait reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4220,
        "y": 100,
        "wires": []
    },
    {
        "id": "e8df78b.012af88",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "API request preparation",
        "info": "",
        "x": 4000,
        "y": 100,
        "wires": []
    },
    {
        "id": "4de09aa7.179f04",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 4310,
        "y": 320,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "79a8517a3d50ba46",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"420\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {}\t       \t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3980,
        "y": 160,
        "wires": [
            [
                "105fdd91.9d22d2",
                "58ea7c57.11f754"
            ]
        ]
    },
    {
        "id": "ed91f7078814f403",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "paths": "[\"path_100\",\"path_12\",\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3720,
        "y": 160,
        "wires": [
            [
                "aeaa99f2.5cf4f8",
                "79a8517a3d50ba46"
            ],
            []
        ]
    },
    {
        "id": "ed6b13ca02a5a70d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "JOINWAIT XSAT",
        "links": [
            "13e6783f699d391f",
            "1a19adb69a35a3a7",
            "41a32e4cc747f910",
            "d51fcddeda0e0de7",
            "24606f59b812db66",
            "ac147f0729ad1810",
            "68c5a6850e745a21",
            "f7f9c11d1f2382ae",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "2072d02e.cd2d4",
            "15d13ebb1f03b0a7",
            "c72fbcae841b3ef6",
            "540a7905183c0eee",
            "2f25edf21b8a07d4",
            "adb61069d247c406",
            "a2ee62ca6cec9904",
            "fc6400aba3c7f324",
            "cd1146af51cb6d1e",
            "83657e1af5fa276d",
            "8c360fc5911891f9",
            "3bb6463710bb46bc",
            "a3045704a76aa966",
            "bb963eb834349742",
            "23087e0890dde8be"
        ],
        "x": 3515,
        "y": 140,
        "wires": [
            [
                "73f805cb802528a7",
                "ed91f7078814f403"
            ]
        ]
    },
    {
        "id": "aeaa99f2.5cf4f8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "check X sat",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3970,
        "y": 220,
        "wires": []
    },
    {
        "id": "72f9a7c1e4e8ac50",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "property": "headers.vtsflag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ready",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4430,
        "y": 120,
        "wires": [
            [
                "5a8ee579df55828c"
            ]
        ]
    },
    {
        "id": "5a8ee579df55828c",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python concatenate.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "concatenate",
        "x": 4530,
        "y": 180,
        "wires": [
            [
                "8cb6f04c9bcdf194",
                "0b6a2fcc56b1307a"
            ],
            [
                "b2241bb2a12a8f16"
            ],
            []
        ]
    },
    {
        "id": "0b6a2fcc56b1307a",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4700,
        "y": 120,
        "wires": [
            [
                "e53c4b5d7212fd87",
                "d0e791394ec64d0c",
                "2f6ca90871f27075"
            ]
        ]
    },
    {
        "id": "8cb6f04c9bcdf194",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "CONCATENATE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4780,
        "y": 160,
        "wires": []
    },
    {
        "id": "b2241bb2a12a8f16",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "CONCATENATE  ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4790,
        "y": 200,
        "wires": []
    },
    {
        "id": "ffb4c4b51344ccf8",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890",
            "0eafb7b263d0ee63",
            "e69743906051c56e"
        ],
        "x": 4895,
        "y": 80,
        "wires": []
    },
    {
        "id": "d0e791394ec64d0c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "mode": "link",
        "links": [
            "640bcc1f704ee31a"
        ],
        "x": 4895,
        "y": 120,
        "wires": []
    },
    {
        "id": "cee4def5e77bb830",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"60\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {},\t        \"VISIBILITY\": {}\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3740,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2147ad17b59aa35b",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "A GARDER ",
        "info": "Pour implémenter la visibilité des satellites par les stations au sol.",
        "x": 3750,
        "y": 80,
        "wires": []
    },
    {
        "id": "e53c4b5d7212fd87",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "SIT UPDATED",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4820,
        "y": 40,
        "wires": []
    },
    {
        "id": "104b3e91f2133bb5",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "DELETE BDD",
        "links": [
            "8e709b7b1cc9bd07",
            "59f0292ae65fb83b"
        ],
        "x": 4305,
        "y": 480,
        "wires": [
            [
                "f9e0d8bfc76d2ea9"
            ]
        ]
    },
    {
        "id": "098b276ca212f2c4",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "RESCUE TLE AIGLONS",
        "mode": "link",
        "links": [
            "64cbfe5e2bae5606"
        ],
        "x": 4155,
        "y": 2000,
        "wires": []
    },
    {
        "id": "a5ff53e5e4c198e1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "DELETE DB TLE AIGLONS",
        "links": [
            "0f41e91b50d161c6"
        ],
        "x": 4275,
        "y": 2040,
        "wires": [
            [
                "8ce9e6a65847b662"
            ]
        ]
    },
    {
        "id": "58b79c85054ff2f6",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TEST TLE1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "33dd7b2edfd43b13",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "VTS CONF BACKUP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4800,
        "y": 260,
        "wires": []
    },
    {
        "id": "d97910492e060e73",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat && rm default_Sat.vts && python copy_vts_conf_backup.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy vts_conf_backup",
        "x": 4480,
        "y": 3120,
        "wires": [
            [
                "c409a15d1ad51b59"
            ],
            [],
            []
        ]
    },
    {
        "id": "c409a15d1ad51b59",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "TEST BACKUP VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 3100,
        "wires": []
    },
    {
        "id": "2207b00d6dc97dcd",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "TEST VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4010,
        "y": 1820,
        "wires": []
    },
    {
        "id": "cca155df83b092e7",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "TEST VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4430,
        "y": 1540,
        "wires": []
    },
    {
        "id": "4458e9f6ba29353e",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "TEST VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4010,
        "y": 1860,
        "wires": []
    },
    {
        "id": "cc4ac44801069917",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "command": "ping 192.168.1.181",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4470,
        "y": 1640,
        "wires": [
            [
                "5672ee467e4d6dd7"
            ],
            [
                "f39fd29450499bc7"
            ],
            [
                "fd0c7283182a866f"
            ]
        ]
    },
    {
        "id": "5672ee467e4d6dd7",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4650,
        "y": 1620,
        "wires": []
    },
    {
        "id": "f39fd29450499bc7",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4650,
        "y": 1660,
        "wires": []
    },
    {
        "id": "fd0c7283182a866f",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4670,
        "y": 1700,
        "wires": []
    },
    {
        "id": "4ba4f9614cca635f",
        "type": "ui_template",
        "z": "7c68352c.1b47bc",
        "group": "89c6e42c.26d338",
        "name": "",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Modal Overlay with improved transitions */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n    \n    /* Modal Content with transform animation */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n    \n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button */\n    #ouiBtn5 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn5:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button */\n    #nonBtn5 {\n      background-color: #f44336;\n    }\n\n    #nonBtn5:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal5\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action rafraîchira les données de VTS en se basant sur la base de données de Celestrak.<br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn5\">Oui</button>\n        <button id=\"nonBtn5\">Non</button>\n      </div>\n    </div>\n  </div>\n  \n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal5');\n      \n      function showModal() {\n        console.log('Showing modal');\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n      \n      function hideModal() {\n        console.log('Hiding modal');\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n          }\n        });\n      }\n      \n      // Initialize modal state\n      localStorage.removeItem('modalState5');\n      \n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState5') {\n          console.log('Storage event detected, modalState5:', event.newValue);\n          if (event.newValue === 'show') {\n            showModal();\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n      \n      // Watch for incoming messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'refreshVTS') {\n          console.log('Triggering modal from msg');\n          localStorage.setItem('modalState5', 'show');\n          showModal();\n        }\n      });\n      \n      // Handle \"Oui\" button click\n      document.getElementById('ouiBtn5').addEventListener('click', function() {\n        console.log('Oui clicked');\n        scope.send({ payload: 'oui' });\n        localStorage.setItem('modalState5', 'hide');\n        hideModal();\n      });\n      \n      // Handle \"Non\" button click\n      document.getElementById('nonBtn5').addEventListener('click', function() {\n        console.log('Non clicked');\n        scope.send({ payload: 'non' });\n        localStorage.setItem('modalState5', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2940,
        "y": 600,
        "wires": [
            [
                "45da61dbd1633d5a"
            ]
        ]
    },
    {
        "id": "545f50f9a16626ed",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup5' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 600,
        "wires": [
            [
                "75731833d7ecf0e4"
            ]
        ]
    },
    {
        "id": "45da61dbd1633d5a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TEST VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3210,
        "y": 700,
        "wires": []
    },
    {
        "id": "ef0f407c2c6885b7",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3090,
        "y": 560,
        "wires": [
            [
                "85b1c29dbf523bfd",
                "b126d2dd98f02993"
            ]
        ]
    },
    {
        "id": "f7ec29fc0b7587f6",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2390,
        "y": 800,
        "wires": [
            [
                "08298fee71f7bff1"
            ]
        ]
    },
    {
        "id": "cc993d5237b4ab75",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "http request OEM/AEM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 4210,
        "y": 4380,
        "wires": [
            [
                "02246f9bacb02d0d",
                "671c0c988d6b8a93",
                "06f6b8666c6179d0"
            ]
        ]
    },
    {
        "id": "02246f9bacb02d0d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "OEM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4410,
        "y": 4260,
        "wires": []
    },
    {
        "id": "ed1f1854bfdd42df",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "Sub-Module VTS files Updating",
        "info": "",
        "x": 4490,
        "y": 4300,
        "wires": []
    },
    {
        "id": "a2f5a07a52e0702d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "joinwait reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4060,
        "y": 4280,
        "wires": []
    },
    {
        "id": "208fbaec66263871",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "API request preparation",
        "info": "",
        "x": 3980,
        "y": 4320,
        "wires": []
    },
    {
        "id": "a28638d5a72bfa40",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 4270,
        "y": 4560,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "04a939aa8d984ef1",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"420\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {}\t       \t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3960,
        "y": 4380,
        "wires": [
            [
                "a2f5a07a52e0702d",
                "cc993d5237b4ab75"
            ]
        ]
    },
    {
        "id": "e0e62f07ca4e391e",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "",
        "paths": "[\"path_106\",\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3700,
        "y": 4380,
        "wires": [
            [
                "ce8ed2997e37e803",
                "04a939aa8d984ef1"
            ],
            []
        ]
    },
    {
        "id": "8c4538d2189874b0",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "JOINWAIT XSAT",
        "links": [
            "13e6783f699d391f",
            "1a19adb69a35a3a7",
            "41a32e4cc747f910",
            "d51fcddeda0e0de7",
            "24606f59b812db66",
            "ac147f0729ad1810",
            "68c5a6850e745a21",
            "f7f9c11d1f2382ae",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "2072d02e.cd2d4",
            "15d13ebb1f03b0a7",
            "c72fbcae841b3ef6",
            "540a7905183c0eee",
            "2f25edf21b8a07d4",
            "adb61069d247c406",
            "a2ee62ca6cec9904",
            "fc6400aba3c7f324",
            "cd1146af51cb6d1e",
            "83657e1af5fa276d",
            "8c360fc5911891f9",
            "3bb6463710bb46bc",
            "a3045704a76aa966",
            "bb963eb834349742",
            "23087e0890dde8be"
        ],
        "x": 3565,
        "y": 4380,
        "wires": [
            [
                "e0e62f07ca4e391e"
            ]
        ]
    },
    {
        "id": "ce8ed2997e37e803",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "check X sat",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3930,
        "y": 4420,
        "wires": []
    },
    {
        "id": "320ea35152c4b484",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 4440,
        "wires": [
            [
                "4f742aee13de8d7c"
            ]
        ]
    },
    {
        "id": "5303c9394479ae66",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 3680,
        "y": 4520,
        "wires": [
            [
                "bd2092b1652d1ae2",
                "320ea35152c4b484"
            ],
            [
                "74280a45f33d072a"
            ],
            []
        ]
    },
    {
        "id": "bd2092b1652d1ae2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "COPYMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4030,
        "y": 4520,
        "wires": []
    },
    {
        "id": "74280a45f33d072a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "COPYMEM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4020,
        "y": 4560,
        "wires": []
    },
    {
        "id": "9ec1f63f02462117",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python concatenate.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "concatenate",
        "x": 4570,
        "y": 4420,
        "wires": [
            [
                "aa343756a6543700",
                "e52d1bcc966ff6ad"
            ],
            [
                "53268bfc77a9baaf"
            ],
            []
        ]
    },
    {
        "id": "e52d1bcc966ff6ad",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4680,
        "y": 4340,
        "wires": [
            [
                "e2d9c7d875e296cd",
                "968319d5ad47d00b"
            ]
        ]
    },
    {
        "id": "aa343756a6543700",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "CONCATENATE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 4380,
        "wires": []
    },
    {
        "id": "53268bfc77a9baaf",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "CONCATENATE  ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4770,
        "y": 4420,
        "wires": []
    },
    {
        "id": "940f14dc9b5b79d7",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890",
            "0eafb7b263d0ee63",
            "e69743906051c56e"
        ],
        "x": 4645,
        "y": 4260,
        "wires": []
    },
    {
        "id": "968319d5ad47d00b",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "",
        "mode": "link",
        "links": [
            "640bcc1f704ee31a"
        ],
        "x": 4875,
        "y": 4340,
        "wires": []
    },
    {
        "id": "0facf16a6feed06e",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"60\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {},\t        \"VISIBILITY\": {}\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3720,
        "y": 4340,
        "wires": [
            []
        ]
    },
    {
        "id": "816c1832c1b53d0d",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "A GARDER ",
        "info": "Pour implémenter la visibilité des satellites par les stations au sol.",
        "x": 3730,
        "y": 4300,
        "wires": []
    },
    {
        "id": "e2d9c7d875e296cd",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "SIT UPDATED",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4840,
        "y": 4220,
        "wires": []
    },
    {
        "id": "4f742aee13de8d7c",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "",
        "paths": "[\"path_12\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4220,
        "y": 4480,
        "wires": [
            [
                "c446f6d40a8b85e8",
                "9ec1f63f02462117",
                "5dd0b760c48ef9db"
            ],
            []
        ]
    },
    {
        "id": "c446f6d40a8b85e8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4250,
        "y": 4520,
        "wires": []
    },
    {
        "id": "671c0c988d6b8a93",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "",
        "property": "headers.vtsflag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ready",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4410,
        "y": 4380,
        "wires": [
            [
                "5303c9394479ae66"
            ]
        ]
    },
    {
        "id": "7dbcddb056ad261f",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat && python copy_vts_conf.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy vts_conf",
        "x": 4640,
        "y": 4500,
        "wires": [
            [
                "3cce69aec6550cc5"
            ],
            [
                "3cce69aec6550cc5"
            ],
            []
        ]
    },
    {
        "id": "e34b751145065be7",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "e97861653a7ba31d"
        ],
        "x": 3425,
        "y": 4220,
        "wires": [
            [
                "1f5277e3b3e49a5a"
            ]
        ]
    },
    {
        "id": "4c27ab248004bbc6",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "1f5277e3b3e49a5a"
        ],
        "x": 3495,
        "y": 4280,
        "wires": [
            [
                "2c09a6d77dc488f7"
            ]
        ]
    },
    {
        "id": "1f5277e3b3e49a5a",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "refreshAllVTS",
        "mode": "link",
        "links": [
            "04828409f3c8eb98",
            "118f0f492f55ac0a",
            "1e9676e414d32f76",
            "220556fdf5358e27",
            "32528e58bc954e44",
            "34c17ae1e756d864",
            "af9822fbee098e88",
            "c9235065a31da113",
            "ccf9f6d431ed64cc",
            "e7a2222d78b89f73",
            "4c27ab248004bbc6",
            "7daad49aae2cb4c9",
            "49f892e386cd7bc4",
            "ae9d48d18afea4b4",
            "8848916d67bd346f",
            "d01efb9685ef2237",
            "9037da81e08c3a42",
            "2ff88da90f572ddb",
            "56f3f4f3e065b6b1",
            "95b08878e2f5f3c9",
            "da60363e18c79508"
        ],
        "x": 3495,
        "y": 4220,
        "wires": []
    },
    {
        "id": "2c09a6d77dc488f7",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "Set path_106",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_106",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3610,
        "y": 4220,
        "wires": [
            [
                "e0e62f07ca4e391e"
            ]
        ]
    },
    {
        "id": "73f805cb802528a7",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "paths": "[\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3600,
        "y": 280,
        "wires": [
            [
                "f57d0b4b1087ef62"
            ],
            []
        ]
    },
    {
        "id": "f57d0b4b1087ef62",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 3800,
        "y": 280,
        "wires": [
            [
                "30940967b1dae0f5",
                "1b05298ffe278727"
            ],
            [
                "852c92e77c4ebfbb"
            ],
            []
        ]
    },
    {
        "id": "1b05298ffe278727",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 220,
        "wires": [
            [
                "ed91f7078814f403"
            ]
        ]
    },
    {
        "id": "852c92e77c4ebfbb",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "COPYMEM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4060,
        "y": 320,
        "wires": []
    },
    {
        "id": "30940967b1dae0f5",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "COPYMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4050,
        "y": 280,
        "wires": []
    },
    {
        "id": "2f6ca90871f27075",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat && rm default_Sat.vts && python copy_vts_conf_backup.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy vts_conf_backup",
        "x": 4600,
        "y": 260,
        "wires": [
            [
                "33dd7b2edfd43b13"
            ],
            [],
            []
        ]
    },
    {
        "id": "3caca984d43a0458",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup1' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 900,
        "wires": [
            [
                "6ebf82e906445aab"
            ]
        ]
    },
    {
        "id": "4d57473e9c0639bc",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "eb7e570c18ebe251",
                "cf8728c9f3d62ae1",
                "ec94bcaf7ccbbade",
                "b99ef16ba1924c22",
                "98e2adb0a1d844fb",
                "472fd34f5a4b63ee",
                "7abf459108d1bb9a",
                "de1b34b4051c103e",
                "abf049d1b139611c",
                "5e9981620393537d",
                "0599a22e1f0c18ca"
            ]
        ]
    },
    {
        "id": "3a5287406c0216a2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4270,
        "y": 2500,
        "wires": []
    },
    {
        "id": "98ad1303250c48de",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4390,
        "y": 940,
        "wires": []
    },
    {
        "id": "19d0068291be5001",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "refreshAllVTS",
        "mode": "link",
        "links": [
            "04828409f3c8eb98",
            "118f0f492f55ac0a",
            "1e9676e414d32f76",
            "220556fdf5358e27",
            "32528e58bc954e44",
            "34c17ae1e756d864",
            "af9822fbee098e88",
            "c9235065a31da113",
            "ccf9f6d431ed64cc",
            "e7a2222d78b89f73",
            "a4609eb45bb55ae6",
            "7daad49aae2cb4c9",
            "49f892e386cd7bc4",
            "ae9d48d18afea4b4",
            "8848916d67bd346f",
            "d01efb9685ef2237",
            "9037da81e08c3a42",
            "2ff88da90f572ddb",
            "56f3f4f3e065b6b1",
            "95b08878e2f5f3c9",
            "da60363e18c79508"
        ],
        "x": 2845,
        "y": 4960,
        "wires": []
    },
    {
        "id": "a4609eb45bb55ae6",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "19d0068291be5001"
        ],
        "x": 2775,
        "y": 4900,
        "wires": [
            [
                "14bdec1ef63ac29e"
            ]
        ]
    },
    {
        "id": "14bdec1ef63ac29e",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_107",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_107",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 4900,
        "wires": [
            [
                "24c5a2f6ee949206"
            ]
        ]
    },
    {
        "id": "606de10fa045a9b7",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "b10e0a54.7b0198",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "REFRESH VTS AIGLONS",
        "tooltip": "",
        "color": "",
        "bgcolor": "#10FFFF",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 4960,
        "wires": [
            [
                "bce06df9bf739291"
            ]
        ]
    },
    {
        "id": "bce06df9bf739291",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup17' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 4960,
        "wires": [
            [
                "e22a482ea33cbc88"
            ]
        ]
    },
    {
        "id": "23ee9f5457861754",
        "type": "ui_template",
        "z": "7c68352c.1b47bc",
        "group": "b10e0a54.7b0198",
        "name": "",
        "order": 17,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    md-card[node-id=\"23ee9f5457861754\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n    \n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n    \n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n    \n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button */\n    #ouiBtn17 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn17:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button */\n    #nonBtn17 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn17:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal17\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n        <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Aiglons.<br><br>\n        Êtes-vous sûr de vouloir poursuivre ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn17\">Oui</button>\n        <button id=\"nonBtn17\">Non</button>\n      </div>\n    </div>\n  </div>\n  \n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal17');\n      \n      function showModal() {\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n      \n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n          }\n        });\n      }\n      \n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState17') {\n          if (event.newValue === 'show') {\n            showModal();\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n      \n      // Watch for incoming messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState17', 'show');\n          showModal();\n        }\n      });\n      \n      document.getElementById('ouiBtn17').addEventListener('click', function() {\n        scope.send({ payload: 'oui' });\n        localStorage.setItem('modalState17', 'hide');\n        hideModal();\n      });\n      \n      document.getElementById('nonBtn17').addEventListener('click', function() {\n        scope.send({ payload: 'non' });\n        localStorage.setItem('modalState17', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2580,
        "y": 4960,
        "wires": [
            []
        ]
    },
    {
        "id": "35024d251e4ae75d",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui17",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2750,
        "y": 4960,
        "wires": [
            [
                "19d0068291be5001"
            ]
        ]
    },
    {
        "id": "60bab848a6e23861",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 4755,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d9df7ea6bd458c2e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "B1 TLE UPDATE",
        "mode": "link",
        "links": [
            "8e72ef785e5f16d0"
        ],
        "x": 2455,
        "y": 700,
        "wires": []
    },
    {
        "id": "8e72ef785e5f16d0",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "links": [
            "d9df7ea6bd458c2e"
        ],
        "x": 1925,
        "y": 1220,
        "wires": [
            [
                "734a8b5a7f270f52"
            ]
        ]
    },
    {
        "id": "734a8b5a7f270f52",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2030,
        "y": 1220,
        "wires": [
            [
                "08298fee71f7bff1"
            ]
        ]
    },
    {
        "id": "3cce69aec6550cc5",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "VTD COpy conf",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4860,
        "y": 4500,
        "wires": []
    },
    {
        "id": "e926c4c14e9f850d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "9a9dfd74ece6e34c",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4420,
        "y": 700,
        "wires": []
    },
    {
        "id": "c13536a31b6668c4",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5dd0526663d52573",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4300,
        "y": 2260,
        "wires": []
    },
    {
        "id": "ca29c23279eb8b40",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TEST_PAYLOAD_TRIM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3598.562744140625,
        "y": 2312.5556640625,
        "wires": []
    },
    {
        "id": "03599ea1d2636c41",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "JOINWAIT XSAT",
        "links": [
            "13e6783f699d391f",
            "1a19adb69a35a3a7",
            "41a32e4cc747f910",
            "d51fcddeda0e0de7",
            "24606f59b812db66",
            "ac147f0729ad1810",
            "68c5a6850e745a21",
            "f7f9c11d1f2382ae",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "2072d02e.cd2d4",
            "15d13ebb1f03b0a7",
            "c72fbcae841b3ef6",
            "540a7905183c0eee",
            "2f25edf21b8a07d4",
            "adb61069d247c406",
            "a2ee62ca6cec9904",
            "fc6400aba3c7f324",
            "cd1146af51cb6d1e",
            "83657e1af5fa276d",
            "8c360fc5911891f9",
            "3bb6463710bb46bc",
            "a3045704a76aa966",
            "bb963eb834349742",
            "23087e0890dde8be"
        ],
        "x": 2905,
        "y": 4940,
        "wires": [
            [
                "24c5a2f6ee949206",
                "d27634ae31cc7619"
            ]
        ]
    },
    {
        "id": "99a20613a808948f",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "http request OEM/AEM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 3790,
        "y": 4800,
        "wires": [
            [
                "d0ec6a14d9f3ba4c",
                "b9aa36f00ac5b959",
                "1369e3d241b0c2c6"
            ]
        ]
    },
    {
        "id": "d0ec6a14d9f3ba4c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "OEM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3990,
        "y": 4720,
        "wires": []
    },
    {
        "id": "46fd52932d1e6c56",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "Sub-Module VTS files Updating",
        "info": "",
        "x": 4010,
        "y": 4760,
        "wires": []
    },
    {
        "id": "9ca96162378e9adc",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "joinwait reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3760,
        "y": 4720,
        "wires": []
    },
    {
        "id": "027669e3657539e8",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "API request preparation",
        "info": "",
        "x": 3560,
        "y": 4740,
        "wires": []
    },
    {
        "id": "19259c30face4b46",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 4010,
        "y": 4940,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "2e38eac0b63703e7",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"420\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {}\t       \t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3540,
        "y": 4780,
        "wires": [
            [
                "9ca96162378e9adc",
                "99a20613a808948f"
            ]
        ]
    },
    {
        "id": "24c5a2f6ee949206",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "",
        "paths": "[\"path_107\",\"path_12\",\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3280,
        "y": 4800,
        "wires": [
            [
                "2e38eac0b63703e7",
                "97303e8b650de550"
            ],
            []
        ]
    },
    {
        "id": "97303e8b650de550",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "check X sat",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3570,
        "y": 4860,
        "wires": []
    },
    {
        "id": "d27634ae31cc7619",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "",
        "paths": "[\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3200,
        "y": 4920,
        "wires": [
            [
                "18071080204eb0df"
            ],
            []
        ]
    },
    {
        "id": "29b5f1f00af5523e",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3290,
        "y": 4840,
        "wires": [
            [
                "24c5a2f6ee949206"
            ]
        ]
    },
    {
        "id": "18071080204eb0df",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 3360,
        "y": 4900,
        "wires": [
            [
                "77280e4d8def2ee9",
                "29b5f1f00af5523e"
            ],
            [
                "4421ce08ebd6d5b2"
            ],
            []
        ]
    },
    {
        "id": "77280e4d8def2ee9",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "COPYMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3610,
        "y": 4900,
        "wires": []
    },
    {
        "id": "4421ce08ebd6d5b2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "COPYMEM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3620,
        "y": 4940,
        "wires": []
    },
    {
        "id": "b9aa36f00ac5b959",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "",
        "property": "headers.vtsflag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ready",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3870,
        "y": 4860,
        "wires": [
            [
                "388b327e97c54b97"
            ]
        ]
    },
    {
        "id": "388b327e97c54b97",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python concatenate.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "concatenate",
        "x": 4050,
        "y": 4800,
        "wires": [
            [
                "a4ac0a29c7b12d1b",
                "bec42d6c6bcba11b"
            ],
            [
                "a52e44981043c768"
            ],
            []
        ]
    },
    {
        "id": "bec42d6c6bcba11b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "",
        "func": "msg.payload=\"situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4320,
        "y": 4740,
        "wires": [
            [
                "a181094a780817da",
                "210e71071ff3a923"
            ]
        ]
    },
    {
        "id": "a4ac0a29c7b12d1b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "CONCATENATE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4380,
        "y": 4820,
        "wires": []
    },
    {
        "id": "a52e44981043c768",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "CONCATENATE  ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4370,
        "y": 4860,
        "wires": []
    },
    {
        "id": "08b8cc1d07b25322",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890",
            "0eafb7b263d0ee63",
            "e69743906051c56e"
        ],
        "x": 4445,
        "y": 4680,
        "wires": []
    },
    {
        "id": "a181094a780817da",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "",
        "mode": "link",
        "links": [
            "640bcc1f704ee31a"
        ],
        "x": 4455,
        "y": 4740,
        "wires": []
    },
    {
        "id": "e13b6bab661078ad",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"60\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {},\t        \"VISIBILITY\": {}\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3300,
        "y": 4760,
        "wires": [
            []
        ]
    },
    {
        "id": "b864471cc99b882f",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "A GARDER ",
        "info": "Pour implémenter la visibilité des satellites par les stations au sol.",
        "x": 3310,
        "y": 4720,
        "wires": []
    },
    {
        "id": "a85d9e3055b533de",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "OPTIMISATION",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3140,
        "y": 4660,
        "wires": []
    },
    {
        "id": "210e71071ff3a923",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat && rm default_Sat.vts && python copy_vts_conf_backup.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy vts_conf_backup",
        "x": 4120,
        "y": 4900,
        "wires": [
            [
                "ecb38185501471a6"
            ],
            [],
            []
        ]
    },
    {
        "id": "ecb38185501471a6",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "TEST BACKUP VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4360,
        "y": 4900,
        "wires": []
    },
    {
        "id": "5dd0b760c48ef9db",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "command": "cd /app/jsatorb-rest-api/files && rm default_Sat.vts",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy vts_conf",
        "x": 4440,
        "y": 4500,
        "wires": [
            [
                "7dbcddb056ad261f"
            ],
            [
                "aee8e5a24293c5b8"
            ],
            []
        ]
    },
    {
        "id": "aee8e5a24293c5b8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "DEL DEFAUlT_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4610,
        "y": 4560,
        "wires": []
    },
    {
        "id": "e457cfd254c5c098",
        "type": "ui_template",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<!-- =========================\n Node-RED ui_template Content\n========================== -->\n\n<style>\n /* Override md-content, which the Dashboard sets to overflow: auto */\n  md-content,\n  .md-content {\n    overflow: hidden !important;\n  }\n\n  /* Also override html/body if needed */\n  html,\n  body,\n  .nr-dashboard-theme {\n    overflow: hidden !important;\n    margin: 0;\n    padding: 0;\n  }\n\n  /* Hide scrollbars in WebKit browsers */\n  html::-webkit-scrollbar,\n  body::-webkit-scrollbar,\n  md-content::-webkit-scrollbar,\n  .md-content::-webkit-scrollbar {\n    display: none !important;\n  }\n\n  /* Hide scrollbars in Firefox and IE/Edge */\n  html, body {\n    scrollbar-width: none;       /* Firefox */\n    -ms-overflow-style: none;    /* IE/Edge */\n  }\n  /* ============ Modal Overlay ============ */\n  .modal {\n    position: fixed;\n    z-index: 9999;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    background-color: rgba(128, 128, 128, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease, visibility 0.3s ease;\n  }\n  \n  .modal.show {\n    opacity: 1;\n    visibility: visible;\n  }\n  \n  /* ============ Modal Content ============ */\n  .modal-content {\n    background-color: #244052;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 400px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n    color: white;\n    transform: translateY(-20px);\n    transition: transform 0.3s ease;\n  }\n  \n  .modal.show .modal-content {\n    transform: translateY(0);\n  }\n  \n  /* ============ Button Group ============ */\n  .button-group {\n    margin-top: 20px;\n  }\n  \n  /* ============ Buttons ============ */\n  .button-group button {\n    padding: 10px 20px;\n    margin: 0 15px;\n    font-size: 16px;\n    cursor: pointer;\n    border: none;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    color: white;\n  }\n  \n  /* ============ YES/NO styling for each ============ */\n  /* Modal 1 */\n  #ouiBtn1 { background-color: #4CAF50; }\n  #ouiBtn1:hover { background-color: #45a049; }\n  #nonBtn1 { background-color: #f44336; }\n  #nonBtn1:hover { background-color: #da190b; }\n\n  /* Modal 2 */\n  #ouiBtn2 { background-color: #4CAF50; }\n  #ouiBtn2:hover { background-color: #45a049; }\n  #nonBtn2 { background-color: #f44336; }\n  #nonBtn2:hover { background-color: #da190b; }\n\n  /* Modal 3 */\n  #ouiBtn3 { background-color: #4CAF50; }\n  #ouiBtn3:hover { background-color: #45a049; }\n  #nonBtn3 { background-color: #f44336; }\n  #nonBtn3:hover { background-color: #da190b; }\n\n  /* Modal 4 */\n  #ouiBtn4 { background-color: #4CAF50; }\n  #ouiBtn4:hover { background-color: #45a049; }\n  #nonBtn4 { background-color: #f44336; }\n  #nonBtn4:hover { background-color: #da190b; }\n\n  /* Modal 5 */\n  #ouiBtn5 { background-color: #4CAF50; }\n  #ouiBtn5:hover { background-color: #45a049; }\n  #nonBtn5 { background-color: #f44336; }\n  #nonBtn5:hover { background-color: #da190b; }\n\n  /* Modal 7 */\n  #ouiBtn7 { background-color: #4CAF50; }\n  #ouiBtn7:hover { background-color: #45a049; }\n  #nonBtn7 { background-color: #f44336; }\n  #nonBtn7:hover { background-color: #da190b; }\n\n  /* Modal 9 */\n  #ouiBtn9 { background-color: #4CAF50; }\n  #ouiBtn9:hover { background-color: #45a049; }\n  #nonBtn9 { background-color: #f44336; }\n  #nonBtn9:hover { background-color: #da190b; }\n  \n  /* Modal 15 */\n  #ouiBtn15 { background-color: #4CAF50; }\n  #ouiBtn15:hover { background-color: #45a049; }\n  #nonBtn15 { background-color: #f44336; }\n  #nonBtn15:hover { background-color: #da190b; }\n  \n  /* Modal 17 */\n  #ouiBtn17 { background-color: #4CAF50; }\n  #ouiBtn17:hover { background-color: #45a049; }\n  #nonBtn17 { background-color: #f44336; }\n  #nonBtn17:hover { background-color: #da190b; }\n  \n  /* Modal 18 */\n  #ouiBtn18 { background-color: #4CAF50; }\n  #ouiBtn18:hover { background-color: #45a049; }\n  #nonBtn18 { background-color: #f44336; }\n  #nonBtn18:hover { background-color: #da190b; }\n</style>\n\n<!-- =============================\n       All Your Modal Markup\n============================= -->\n\n<!-- Modal 1 -->\n<div id=\"confirmationModal1\" class=\"modal\" aria-labelledby=\"modalTitle1\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle1\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action initialisera un satellite BLUE1 (TLEs & masse) à partir des données entrées.<br><br>\n          Voulez-vous confirmer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn1\">Oui</button>\n          <button id=\"nonBtn1\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 2 -->\n<div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle2\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle2\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Cette action déclenchera une manoeuvre manuelle pour BLUE1 à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn2\">Oui</button>\n      <button id=\"nonBtn2\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 3 -->\n<div id=\"confirmationModal3\" class=\"modal\" aria-labelledby=\"modalTitle3\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle3\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rechargera et écrasera toutes les TLEs à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn3\">Oui</button>\n      <button id=\"nonBtn3\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 4 -->\n<div id=\"confirmationModal4\" class=\"modal\" aria-labelledby=\"modalTitle4\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle4\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les dernières TLEs enregistrées.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn4\">Oui</button>\n      <button id=\"nonBtn4\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 5 -->\n<div id=\"confirmationModal5\" class=\"modal\" aria-labelledby=\"modalTitle5\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle5\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira les données de VTS en se basant sur la base de données de Celestrak.<br><br>\n      Si vous souhaitez démarrer un nouvel horizon de simulation, il est recommandé de cliquer préalablement sur \"REFRESH TLE DATABASE\"<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn5\">Oui</button>\n      <button id=\"nonBtn5\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 7 -->\n<div id=\"confirmationModal7\" class=\"modal\" aria-labelledby=\"modalTitle7\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle7\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les fichiers OEMs de l'ensemble des satellites.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn7\">Oui</button>\n      <button id=\"nonBtn7\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 9 -->\n<div id=\"confirmationModal9\" class=\"modal\" aria-labelledby=\"modalTitle9\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle9\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Celestrak.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn9\">Oui</button>\n      <button id=\"nonBtn9\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 15 -->\n<div id=\"confirmationModal15\" class=\"modal\" aria-labelledby=\"modalTitle15\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle15\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Cette action déclenchera une manoeuvre prédéfinie pour BLUE1 à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn15\">Oui</button>\n      <button id=\"nonBtn15\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 17 -->\n<div id=\"confirmationModal17\" class=\"modal\" aria-labelledby=\"modalTitle17\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle17\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn17\">Oui</button>\n      <button id=\"nonBtn17\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 18 -->\n<div id=\"confirmationModal18\" class=\"modal\" aria-labelledby=\"modalTitle18\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle18\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action restaurera l'état du système avant la dernière manoeuvre réalisée.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn18\">Oui</button>\n      <button id=\"nonBtn18\">Non</button>\n    </div>\n  </div>\n</div>\n\n\n<!-- =========================\n   JavaScript Initialization\n========================= -->\n\n<script>\n(function(scope) {\n    // We use this flag so we only init once per dashboard rendering\n    let initialized = false;\n    let latestMsg = null;  // Will store the most recent input msg (for topic, etc.)\n\n    scope.$watch('msg', function(msg) {\n        if (msg) {\n          // Update our local copy so we can reference msg.topic in button callbacks\n          latestMsg = msg;\n        }\n\n        if (!initialized) {\n            initialized = true;\n            initModalLogic();\n        }\n    });\n\n    function initModalLogic() {\n      console.log(\"Initializing modal logic...\");\n\n      // 1) WebSocket connection\n      const socketUrl2 = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/modal2`;\n      console.log(\"Connecting to WebSocket at:\", socketUrl2);\n      const socket2 = new WebSocket(socketUrl2);\n\n      socket2.addEventListener('open', () => {\n        console.log(\"WebSocket connection established for modal!\");\n      });\n\n      socket2.addEventListener('error', (error) => {\n        console.error(\"WebSocket error:\", error);\n      });\n\n      // 2) Show/hide logic based on incoming messages\n      socket2.addEventListener('message', function(event) {\n        let command;\n        try {\n          const msg = JSON.parse(event.data);\n          command = msg.payload || msg;\n        } catch (e) {\n          command = event.data;\n        }\n\n        if (command.startsWith('hidePopup')) {\n          const modalId = `confirmationModal${command.replace('hidePopup', '')}`;\n          hideModal(modalId);\n        } else if (command.startsWith('showPopup')) {\n          const modalId = `confirmationModal${command.replace('showPopup', '')}`;\n          showModal(modalId);\n        } else {\n          console.warn(\"Unknown command:\", command);\n        }\n      });\n\n      // 3) Attach event listeners for each “Oui/Non” button\n      //    We'll incorporate the original msg.topic into the \"oui15\" send\n\n      document.getElementById('ouiBtn1')?.addEventListener('click', function() {\n        console.log(\"Oui button 1 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui1' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup1' }));\n        hideModal('confirmationModal1');\n      });\n\n      document.getElementById('nonBtn1')?.addEventListener('click', function() {\n        console.log(\"Non button 1 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non1' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup1' }));\n        hideModal('confirmationModal1');\n      });\n\n      document.getElementById('ouiBtn2')?.addEventListener('click', function() {\n        console.log(\"Oui button 2 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui2',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn2:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup2' }));\n        hideModal('confirmationModal2');\n      });\n\n      document.getElementById('nonBtn2')?.addEventListener('click', function() {\n        console.log(\"Non button 2 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non2' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup2' }));\n        hideModal('confirmationModal2');\n      });\n\n      document.getElementById('ouiBtn3')?.addEventListener('click', function() {\n        console.log(\"Oui button 3 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui3' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('nonBtn3')?.addEventListener('click', function() {\n        console.log(\"Non button 3 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non3' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('ouiBtn4')?.addEventListener('click', function() {\n        console.log(\"Oui button 4 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui4' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('nonBtn4')?.addEventListener('click', function() {\n        console.log(\"Non button 4 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non4' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('ouiBtn5')?.addEventListener('click', function() {\n        console.log(\"Oui button 5 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui5' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('nonBtn5')?.addEventListener('click', function() {\n        console.log(\"Non button 5 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non5' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('ouiBtn7')?.addEventListener('click', function() {\n        console.log(\"Oui button 7 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui7' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('nonBtn7')?.addEventListener('click', function() {\n        console.log(\"Non button 7 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non7' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('ouiBtn9')?.addEventListener('click', function() {\n        console.log(\"Oui button 9 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui9' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      document.getElementById('nonBtn9')?.addEventListener('click', function() {\n        console.log(\"Non button 9 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non9' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      // -- Here's the button #15 that sends msg.topic too --\n      document.getElementById('ouiBtn15')?.addEventListener('click', function() {\n        console.log(\"Oui button 15 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui15',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn15:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup15' }));\n        hideModal('confirmationModal15');\n      });\n\n      document.getElementById('nonBtn15')?.addEventListener('click', function() {\n        console.log(\"Non button 15 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non15' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup15' }));\n        hideModal('confirmationModal15');\n      });\n\n      document.getElementById('ouiBtn17')?.addEventListener('click', function() {\n        console.log(\"Oui button 17 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui17' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n\n      document.getElementById('nonBtn17')?.addEventListener('click', function() {\n        console.log(\"Non button 17 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non17' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n      \n      \n      document.getElementById('ouiBtn18')?.addEventListener('click', function() {\n        console.log(\"Oui button 18 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui18' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup18' }));\n        hideModal('confirmationModal18');\n      });\n\n      document.getElementById('nonBtn18')?.addEventListener('click', function() {\n        console.log(\"Non button 18 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non18' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup18' }));\n        hideModal('confirmationModal18');\n      });\n    }\n\n    // ====== Functions to Show / Hide a Modal ======\n    function showModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n      if (modal.classList.contains('show')) {\n        console.log(`Modal with ID: ${modalId} is already shown, skipping showModal().`);\n      }\n      modal.style.display = 'block';\n      // Force reflow to ensure transition occurs\n      void modal.offsetHeight;\n      modal.classList.add('show');\n      console.log(`Modal with ID: ${modalId} shown`);\n    }\n\n    function hideModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n\n      modal.classList.remove('show');\n      // Fallback\n      setTimeout(() => {\n        if (modal.style.display !== 'none') {\n          modal.style.display = 'none';\n          console.log(`Modal with ID: ${modalId} hidden with fallback`);\n        }\n      }, 350);\n\n      modal.addEventListener('transitionend', function handler(e) {\n        if (e.propertyName === 'opacity') {\n          modal.style.display = 'none';\n          modal.removeEventListener('transitionend', handler);\n          console.log(`Modal with ID: ${modalId} hidden via transitionend`);\n        }\n      });\n    }\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "da7f645037c13d72",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1150,
        "y": 1280,
        "wires": [
            [
                "1018c17f521a78d5"
            ]
        ]
    },
    {
        "id": "06f6b8666c6179d0",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4560,
        "y": 4220,
        "wires": [
            [
                "940f14dc9b5b79d7",
                "ee5447b8d14c1792"
            ]
        ]
    },
    {
        "id": "ee5447b8d14c1792",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "f9035d5a2a57dc75",
        "name": "TEST SIT UPDATED MAGGLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4850,
        "y": 4180,
        "wires": []
    },
    {
        "id": "1369e3d241b0c2c6",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "b99f7cb9ffe8db6c",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4280,
        "y": 4680,
        "wires": [
            [
                "08b8cc1d07b25322"
            ]
        ]
    },
    {
        "id": "aa971f6aa764fedf",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3940,
        "y": 2820,
        "wires": [
            [
                "3e608b3210a3b71b"
            ]
        ]
    },
    {
        "id": "1df66e4e572c6e27",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4620,
        "y": 40,
        "wires": [
            [
                "ffb4c4b51344ccf8"
            ]
        ]
    },
    {
        "id": "1bf8870c0a4ad28c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Overwrite LastDate b1",
        "mode": "link",
        "links": [
            "930923d46a59728d"
        ],
        "x": 595,
        "y": 1080,
        "wires": []
    },
    {
        "id": "72e5bbd76c9d7769",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "TEST DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2580,
        "y": 700,
        "wires": []
    },
    {
        "id": "c94607f83c5c85fe",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "command": "cd /app/maneuver-manager && ./relaunch_VTS_blue1.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4395,
        "y": 1700,
        "wires": [
            [
                "72d79951b45a48f6"
            ],
            [
                "72d79951b45a48f6"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "3d42eb889be4d0f0",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3960,
        "y": 1660,
        "wires": [
            [
                "c94607f83c5c85fe"
            ]
        ]
    },
    {
        "id": "72d79951b45a48f6",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4710,
        "y": 1760,
        "wires": []
    },
    {
        "id": "7e427ae89e9fe547",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_101",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_101",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2790,
        "y": 720,
        "wires": [
            [
                "a3f1a7d2c9db58ee"
            ]
        ]
    },
    {
        "id": "a3f1a7d2c9db58ee",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "BLLUE 1 PROPA",
        "mode": "link",
        "links": [
            "1a7828f90ec7810d",
            "6004149e305a064c",
            "a957d40878cb92bf",
            "b4ab69fb76722690",
            "6c6fabeae1f46e76"
        ],
        "x": 2925,
        "y": 700,
        "wires": []
    },
    {
        "id": "00e19d567c9b6a6d",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3980,
        "y": 1720,
        "wires": [
            [
                "a9c821a33e9c5159"
            ]
        ]
    },
    {
        "id": "e5b2527236fc0c04",
        "type": "websocket in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "server": "da5d425fa0dcd610",
        "client": "",
        "x": 300,
        "y": 800,
        "wires": [
            [
                "704f795a9d472a02",
                "d7232d37a9db1bec"
            ]
        ]
    },
    {
        "id": "704f795a9d472a02",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Process Message",
        "func": "if (msg.payload) {\n    let parsedPayload = null;\n    \n    // Log the full incoming message object for debugging\n    node.warn(\"INIT PARSING: \" + JSON.stringify(msg));\n\n    // 1. Check if msg.payload is a JSON string\n    if (typeof msg.payload === 'string' && msg.payload.trim().startsWith('{')) {\n        try {\n            node.warn(\"Raw msg.payload (string): \" + msg.payload);\n            parsedPayload = JSON.parse(msg.payload);\n            node.warn(\"Successfully JSON.parsed msg.payload: \" + JSON.stringify(parsedPayload));\n        } catch (err) {\n            node.warn(\"Payload parsing failed: \" + err.message);\n            // Pass the original msg forward and exit\n            node.send(msg);\n            return;\n        }\n    } \n    // 2. Or if msg.payload is already an object\n    else if (typeof msg.payload === 'object') {\n        node.warn(\"msg.payload is already an object: \" + JSON.stringify(msg.payload));\n        parsedPayload = msg.payload;\n    } \n    // 3. Otherwise, pass it through\n    else {\n        node.warn(\"Payload is neither string nor object; passing through.\");\n        node.send(msg);\n        return;\n    }\n\n    // ---- Flatten if needed ----\n    // Some upstream nodes wrap your real data under parsedPayload.payload.payload\n    // Example: { \"payload\": { \"payload\": \"oui15\", \"topic\": { \"isp\":\"300\" } } }\n    if (parsedPayload && parsedPayload.payload && parsedPayload.payload.payload) {\n        node.warn(\"Flattening nested structure...\");\n        parsedPayload = parsedPayload.payload;  \n        node.warn(\"After flattening: \" + JSON.stringify(parsedPayload));\n        // Now parsedPayload should look like: { payload: \"oui15\", topic: { ... } }\n    } else {\n        node.warn(\"No further flattening needed or structure different. Current parsedPayload: \" + JSON.stringify(parsedPayload));\n    }\n\n    // ---- Further processing: Check parsedPayload.payload ----\n    node.warn(\"Processing parsedPayload with final shape: \" + JSON.stringify(parsedPayload));\n\n    if (parsedPayload.payload === 'oui' || parsedPayload.payload === 'non') {\n        node.warn(\"Matched case: oui / non\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui1' || parsedPayload.payload === 'non1') {\n        node.warn(\"Matched case: oui1 / non1\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup1' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui2' || parsedPayload.payload === 'non2') {\n        node.warn(\"Matched case: oui2 / non2\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui2/non2: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup2' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui3' || parsedPayload.payload === 'non3') {\n        node.warn(\"Matched case: oui3 / non3\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup3' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui7' || parsedPayload.payload === 'non7') {\n        node.warn(\"Matched case: oui7 / non7\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup7' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui9' || parsedPayload.payload === 'non9') {\n        node.warn(\"Matched case: oui9 / non9\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup9' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui15' || parsedPayload.payload === 'non15') {\n        node.warn(\"Matched case: oui15 / non15\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui15/non15: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup15' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui18' || parsedPayload.payload === 'non18') {\n        node.warn(\"Matched case: oui18 / non18\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui18/non18: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup18' };\n        node.send(closeMsg);\n    }\n    else {\n        node.warn(\"UNHANDLED ACTION: \" + JSON.stringify(parsedPayload));\n        // You could either do nothing or pass the message on\n        msg.payload = parsedPayload;\n        node.send(msg);\n    }\n\n} else {\n    // If there's no payload, just pass the message through\n    node.warn(\"No msg.payload found; passing message through.\");\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 840,
        "wires": [
            [
                "c10c9701b49b24a2",
                "39dfb7984ba6d244",
                "c25b9ad7b2531e04"
            ]
        ]
    },
    {
        "id": "c10c9701b49b24a2",
        "type": "websocket out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "WebSocket Out",
        "server": "da5d425fa0dcd610",
        "client": "",
        "x": 760,
        "y": 840,
        "wires": []
    },
    {
        "id": "6ebf82e906445aab",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "36426cd5b9b3bd96"
        ],
        "x": 645,
        "y": 900,
        "wires": []
    },
    {
        "id": "36426cd5b9b3bd96",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "links": [
            "0ae3a5a6ba667d7a",
            "0fcb94c8c9cd7719",
            "6ebf82e906445aab",
            "bb4d58831852dc2a",
            "dbd4a86793f59be1"
        ],
        "x": 495,
        "y": 680,
        "wires": [
            [
                "16cb0f3e9eda3709",
                "c10c9701b49b24a2",
                "1fbbcac029dcc3d7",
                "e457cfd254c5c098"
            ]
        ]
    },
    {
        "id": "39dfb7984ba6d244",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "retrieveOUIb1",
        "mode": "link",
        "links": [
            "25e790e666584dcd",
            "4cecb2eb42b65e19",
            "6ea07daab434c5f5",
            "8ab6dad2202e7bc0",
            "96958d5564f9b6ea"
        ],
        "x": 715,
        "y": 880,
        "wires": []
    },
    {
        "id": "96958d5564f9b6ea",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "links": [
            "39dfb7984ba6d244"
        ],
        "x": 215,
        "y": 1020,
        "wires": [
            [
                "a32375cb5c832b1c",
                "5ec4f0f1b2bac771",
                "818f02fd792ae94f"
            ]
        ]
    },
    {
        "id": "75731833d7ecf0e4",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "trigger3",
        "mode": "link",
        "links": [
            "309acfd63bbd814a"
        ],
        "x": 2865,
        "y": 640,
        "wires": []
    },
    {
        "id": "18568075d6c5266c",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "5cb56295b18776c1",
            "7c125bcfd3a54595"
        ],
        "x": 2975,
        "y": 540,
        "wires": [
            [
                "ef0f407c2c6885b7"
            ]
        ]
    },
    {
        "id": "e22a482ea33cbc88",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "trigger3",
        "mode": "link",
        "links": [
            "309acfd63bbd814a"
        ],
        "x": 2485,
        "y": 4960,
        "wires": []
    },
    {
        "id": "efdf0b40af887d60",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "5cb56295b18776c1",
            "7c125bcfd3a54595"
        ],
        "x": 2485,
        "y": 4880,
        "wires": [
            [
                "e3a5f4219101c9e1",
                "f238775bd025b0d5"
            ]
        ]
    },
    {
        "id": "c25b9ad7b2531e04",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "PROCESS MESSAGE AFTER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 700,
        "wires": []
    },
    {
        "id": "d7232d37a9db1bec",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "PROCESS MESSAGE BEFORE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 720,
        "wires": []
    },
    {
        "id": "16cb0f3e9eda3709",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Before Node WS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 800,
        "wires": []
    },
    {
        "id": "0ad156ea6a621999",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"oui15\",\"topic\":{\"isp\":\"31546\"}}",
        "payloadType": "str",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "704f795a9d472a02",
                "1fbbcac029dcc3d7"
            ]
        ]
    },
    {
        "id": "1fbbcac029dcc3d7",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 880,
        "wires": []
    },
    {
        "id": "ad211b157e4019ef",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "Set path_998",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_998",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4410,
        "y": 2880,
        "wires": [
            [
                "dfafa7363ac7c565"
            ]
        ]
    },
    {
        "id": "19a84037bc7c4db2",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "links": [
            "4471d6e64aee4441"
        ],
        "x": 4245,
        "y": 2880,
        "wires": [
            [
                "6ed0f3d4500e1405",
                "dfafa7363ac7c565"
            ]
        ]
    },
    {
        "id": "6ed0f3d4500e1405",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "Set path_1000",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_998",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4400,
        "y": 2820,
        "wires": [
            [
                "be135dc47bd1fdd0"
            ]
        ]
    },
    {
        "id": "be135dc47bd1fdd0",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4570,
        "y": 2820,
        "wires": [
            [
                "dfafa7363ac7c565"
            ]
        ]
    },
    {
        "id": "dfafa7363ac7c565",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "paths": "[\"path_998\",\"path_999\"]",
        "pathsToExpire": "[\"path_1000\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "500",
        "timeoutUnits": "1",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4600,
        "y": 2860,
        "wires": [
            [
                "0478118421fba8c9",
                "b588cadfbef206ca"
            ],
            []
        ]
    },
    {
        "id": "b588cadfbef206ca",
        "type": "mqtt out",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "trigger/continuation",
        "topic": "trigger/continuation",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e688816fa768592b",
        "x": 4830,
        "y": 2900,
        "wires": []
    },
    {
        "id": "0478118421fba8c9",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "MQTT SIGNAL TEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4820,
        "y": 2940,
        "wires": []
    },
    {
        "id": "271c7910053fd9fd",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 1080,
        "wires": [
            [
                "1bf8870c0a4ad28c"
            ]
        ]
    },
    {
        "id": "06ba5363a0f7099a",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "Update time optilmized",
        "mode": "link",
        "links": [
            "7304714e7d848586"
        ],
        "x": 735,
        "y": 1180,
        "wires": []
    },
    {
        "id": "85b1c29dbf523bfd",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "trigger time persistence vts",
        "mode": "link",
        "links": [
            "c5aabe122c6fde32"
        ],
        "x": 3205,
        "y": 580,
        "wires": []
    },
    {
        "id": "b126d2dd98f02993",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3110,
        "y": 520,
        "wires": [
            [
                "39bc328534852ef6"
            ]
        ]
    },
    {
        "id": "e3a5f4219101c9e1",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "trigger time persistence vts",
        "mode": "link",
        "links": [
            "c5aabe122c6fde32"
        ],
        "x": 2655,
        "y": 4880,
        "wires": []
    },
    {
        "id": "f238775bd025b0d5",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2610,
        "y": 4920,
        "wires": [
            [
                "35024d251e4ae75d"
            ]
        ]
    },
    {
        "id": "75a3abe65bd806d7",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 4240,
        "y": 3020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "34d7536228db8c16",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "WARNING DELETE DB BLUE 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2910,
        "y": 860,
        "wires": []
    },
    {
        "id": "d81841cc861652b3",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 565,
        "y": 1160,
        "wires": []
    },
    {
        "id": "43fe9e86990cf063",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 1160,
        "wires": [
            [
                "d81841cc861652b3",
                "6caa689e1eca411a"
            ]
        ]
    },
    {
        "id": "818f02fd792ae94f",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "pauseType": "delay",
        "timeout": "350",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "4d57473e9c0639bc"
            ]
        ]
    },
    {
        "id": "a32375cb5c832b1c",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "271c7910053fd9fd"
            ]
        ]
    },
    {
        "id": "8072e9a960749636",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "command": "cd /app/maneuver-manager && rm -rf LastManeuverDate.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 565,
        "y": 1220,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "1a5b72c159058408",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "name": "Celestrak_req_NORBI",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=39446",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1140,
        "y": 1500,
        "wires": [
            [
                "af04a72d98076045",
                "aa869e0adf9bfd97"
            ]
        ]
    },
    {
        "id": "af04a72d98076045",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 1580,
        "wires": [
            [
                "1517506673a29f24"
            ],
            []
        ]
    },
    {
        "id": "1517506673a29f24",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1160,
        "y": 1620,
        "wires": [
            [
                "c1afde3716316c2b",
                "4c154e2c1b292424"
            ],
            []
        ]
    },
    {
        "id": "c1afde3716316c2b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle-celestrak\",\n payload:msg.payload,\n //body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1660,
        "wires": [
            [
                "1d341b60e5b794d4"
            ]
        ]
    },
    {
        "id": "1d341b60e5b794d4",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1130,
        "y": 1700,
        "wires": [
            [
                "9595315f6f6c5f07"
            ]
        ]
    },
    {
        "id": "9595315f6f6c5f07",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1310,
        "y": 1700,
        "wires": [
            [
                "cf047331464f2182",
                "9a9657cffa053501",
                "07f52a89e771b9b6",
                "674e78492f04887d"
            ]
        ]
    },
    {
        "id": "91ec97d09040835b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-CUSTOM",
        "func": "\n   return{\n topic:\"tle\",\n paths:null,\n     payload: [msg.paths.path_1, msg.paths.path_2, msg.paths.path_101.dry_mass, msg.paths.path_101.ergol_mass, msg.paths.path_101.ergol_consumption],\n body:null\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 1660,
        "wires": [
            [
                "2f12eaab12de4727",
                "0dbb14df4d3b76e8",
                "1efa12b39da45db8",
                "b01a6f504b6561e9"
            ]
        ]
    },
    {
        "id": "89cb16772620fe2e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-1",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:msg.topic,\n payload:msg.payload[0].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1660,
        "wires": [
            [
                "ac991daf7c7d185e"
            ]
        ]
    },
    {
        "id": "7df4fd7d3aceb576",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-2",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic: msg.topic,\n payload: msg.payload[1].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1700,
        "wires": [
            [
                "30c9a0c3bfc54abd"
            ]
        ]
    },
    {
        "id": "542516daaedc2a75",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_101",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_101",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 1820,
        "wires": [
            [
                "3b1b11e6180d4ef0",
                "60ca9279469c1be3",
                "5473201b934a1f23"
            ]
        ]
    },
    {
        "id": "b8ef6c76e5d3c172",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1760,
        "wires": [
            [
                "3b1b11e6180d4ef0"
            ]
        ]
    },
    {
        "id": "a7789d420656210c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-2-edit",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n// This was changed during the training of the space commandement trainees it aims at keeping the TLE format for inclination greater than 100 with 3 digits\n\n// Latest version has no more test for the inclinaison as formating is done by the tlesetter\n     return{\n topic:\"tle\",\n payload: \"2 13601 \"+msg.paths.path_101.incli+\" \"+msg.paths.path_101.raan+\" \"+msg.paths.path_101.ecc+\" \"+msg.paths.path_101.aop+\" \"+msg.paths.path_101.meana+\" \"+msg.paths.path_101.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 1740,
        "wires": [
            [
                "791ddf21f6ab95fb"
            ]
        ]
    },
    {
        "id": "d8e2b2dfd978841e",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 1700,
        "wires": [
            [
                "5473201b934a1f23",
                "d1100eef6bb7dbac"
            ]
        ]
    },
    {
        "id": "791ddf21f6ab95fb",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 1740,
        "wires": [
            [
                "5473201b934a1f23",
                "5b029d1b23e1a27c"
            ]
        ]
    },
    {
        "id": "5473201b934a1f23",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "paths": "[\"path_2\", \"path_1\",\"path_101\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2180,
        "y": 1660,
        "wires": [
            [
                "91ec97d09040835b",
                "5fad8bf0db418786"
            ],
            []
        ]
    },
    {
        "id": "0f581e79ef1d817f",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2370,
        "y": 1780,
        "wires": []
    },
    {
        "id": "494516c5b01e4355",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "check output blue1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2150,
        "y": 1500,
        "wires": []
    },
    {
        "id": "1efa12b39da45db8",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2790,
        "y": 1780,
        "wires": [
            [
                "25fa5ed82688db95",
                "2f25edf21b8a07d4",
                "7692eeac10d6ea69"
            ]
        ]
    },
    {
        "id": "30c9a0c3bfc54abd",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1750,
        "y": 1700,
        "wires": [
            [
                "d1e9a3f833534854"
            ]
        ]
    },
    {
        "id": "d1e9a3f833534854",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1750,
        "y": 1740,
        "wires": [
            [
                "2396c39d3abc9bde",
                "b8ef6c76e5d3c172"
            ]
        ]
    },
    {
        "id": "3b1b11e6180d4ef0",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_3\", \"path_101\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2200,
        "y": 1740,
        "wires": [
            [
                "a7789d420656210c"
            ],
            []
        ]
    },
    {
        "id": "2396c39d3abc9bde",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1720,
        "wires": [
            [
                "3b1b11e6180d4ef0"
            ]
        ]
    },
    {
        "id": "ac991daf7c7d185e",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 1560,
        "wires": [
            [
                "0791cfd1d50512e1"
            ]
        ]
    },
    {
        "id": "0791cfd1d50512e1",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1820,
        "y": 1560,
        "wires": [
            [
                "494516c5b01e4355",
                "15a3846ced013c93"
            ],
            []
        ]
    },
    {
        "id": "8ab6e758b9d99b22",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "81d0e5ee7c52f38a",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "B2 TLE Update",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#B5FC48",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1680,
        "wires": [
            [
                "e6fcb34fd6ece4f1"
            ]
        ]
    },
    {
        "id": "82d391751cc737e2",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88",
            "d01efb9685ef2237",
            "9037da81e08c3a42",
            "2ff88da90f572ddb",
            "56f3f4f3e065b6b1"
        ],
        "x": 1185,
        "y": 1900,
        "wires": []
    },
    {
        "id": "d8fa7388583ba0ae",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toR1",
        "mode": "link",
        "links": [
            "118f0f492f55ac0a",
            "da60363e18c79508"
        ],
        "x": 1275,
        "y": 1960,
        "wires": []
    },
    {
        "id": "79d946ae54145942",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toR2",
        "mode": "link",
        "links": [
            "34c17ae1e756d864",
            "95b08878e2f5f3c9"
        ],
        "x": 1115,
        "y": 1980,
        "wires": []
    },
    {
        "id": "98f9b9bd480a57e5",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "86b56c5aafa5e5b1"
        ],
        "x": 915,
        "y": 2080,
        "wires": []
    },
    {
        "id": "ceb9ccefb33622fc",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 915,
        "y": 2120,
        "wires": []
    },
    {
        "id": "94b4acbf7d735323",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "1d8f9124f6c023ac"
        ],
        "x": 1005,
        "y": 1960,
        "wires": []
    },
    {
        "id": "2f12eaab12de4727",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\ngs.dry_mass  = msg.payload[2]\ngs.ergol_mass = msg.payload[3]\ngs.ergol_consumption = msg.payload[4]\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 1540,
        "wires": [
            [
                "f1c5d19c2f826bd4"
            ]
        ]
    },
    {
        "id": "f1c5d19c2f826bd4",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2390,
        "y": 1540,
        "wires": [
            [
                "fbaa21b2bb43a666",
                "b1beae978b71e742",
                "d2d2f0d11352c7a0",
                "c0cc1cc7d6e8579e",
                "3aa1101ea2c5143a"
            ]
        ]
    },
    {
        "id": "d2d2f0d11352c7a0",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2700,
        "y": 1540,
        "wires": []
    },
    {
        "id": "57b7bbaac29962ab",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "update all for B2 IN",
        "links": [
            "437abba090ca35d6",
            "cb16e182f096a56e",
            "de7bf8b57d7f3c09"
        ],
        "x": 745,
        "y": 2080,
        "wires": [
            [
                "98f9b9bd480a57e5",
                "ceb9ccefb33622fc",
                "94b4acbf7d735323",
                "0d47e871bc6f030e",
                "82d391751cc737e2",
                "d8fa7388583ba0ae",
                "79d946ae54145942",
                "e355bb10e7e33add",
                "bf758146121476b5",
                "5033e963d25a8747"
            ]
        ]
    },
    {
        "id": "5fad8bf0db418786",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "query to delete b2tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 1620,
        "wires": [
            [
                "499cf1bab8d8f9ce",
                "1f39bd0a310e1a25"
            ]
        ]
    },
    {
        "id": "499cf1bab8d8f9ce",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2890,
        "y": 1600,
        "wires": []
    },
    {
        "id": "0d47e871bc6f030e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "query for b2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1760,
        "wires": [
            [
                "88523e958646489a",
                "b8407df9c8c782d2"
            ]
        ]
    },
    {
        "id": "88523e958646489a",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 1160,
        "y": 1840,
        "wires": [
            [
                "709f2b5aa80bc797",
                "56ef36993fea932c"
            ]
        ]
    },
    {
        "id": "709f2b5aa80bc797",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle-mongo\",\n    payload: [msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1840,
        "wires": [
            [
                "273f61d8d12af141",
                "44d590cfa3477781"
            ]
        ]
    },
    {
        "id": "273f61d8d12af141",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1330,
        "y": 1880,
        "wires": [
            [
                "8254fa2161875268"
            ]
        ]
    },
    {
        "id": "8254fa2161875268",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1450,
        "y": 1880,
        "wires": [
            [
                "89cb16772620fe2e",
                "7df4fd7d3aceb576",
                "36eeef45acc3e43e"
            ]
        ]
    },
    {
        "id": "05774950fb709500",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for b2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 1860,
        "wires": [
            [
                "cfebe4dc121099f6"
            ]
        ]
    },
    {
        "id": "cfebe4dc121099f6",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 2280,
        "y": 1920,
        "wires": [
            [
                "75540fe141840c4c",
                "1f25ca8a52be971b"
            ]
        ]
    },
    {
        "id": "75540fe141840c4c",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload[0] && msg.payload[0].tle1 && msg.payload[0].tle2) {\n    return {\n        topic: \"tle\",\n        payload: [msg.payload[0].tle1, msg.payload[0].tle2,msg.payload[0].dry_mass,msg.payload[0].ergol_mass,msg.payload[0].ergol_consumption],\n        body: 12\n    };\n} else {\n    node.warn(\"Les propriétés 'tle1' ou 'tle2' sont manquantes ou le satellite n'est pas correctement défini.\");\n    return null; // On peut renvoyer null pour stopper le flux si les données sont manquantes\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1880,
        "wires": [
            [
                "bb0f9e2c4607d043",
                "1efa12b39da45db8"
            ]
        ]
    },
    {
        "id": "bb0f9e2c4607d043",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TLE of B1 requested in the DB by an UPdate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2810,
        "y": 1940,
        "wires": []
    },
    {
        "id": "aa869e0adf9bfd97",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 1335,
        "y": 1540,
        "wires": []
    },
    {
        "id": "25fa5ed82688db95",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2980,
        "y": 1820,
        "wires": []
    },
    {
        "id": "36eeef45acc3e43e",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "name": "blue2-tle-storage-out",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1740,
        "y": 1960,
        "wires": [
            [
                "e68c52d8bd1b21f3",
                "4d370182020af79c"
            ]
        ]
    },
    {
        "id": "e68c52d8bd1b21f3",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1770,
        "y": 1880,
        "wires": [
            [
                "542516daaedc2a75"
            ]
        ]
    },
    {
        "id": "15a3846ced013c93",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Date to Epoch",
        "func": "\n// New fonction 120623\n\nfunction convertToTLEEpoch(timestamp) {\n  var date = new Date(timestamp);\n  var year = date.getUTCFullYear();\n  var dayOfYear = getDayOfYear(date);\n  // Modification made on the 5/07/23 TO increase precision of the date to the milisecond\n  //var totalSeconds = (date.getUTCHours() * 3600) + (date.getUTCMinutes() * 60) + date.getUTCSeconds();\n  //var fractionOfDay = totalSeconds / (24 * 60 * 60)\n // var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  var totalMilliseconds = (date.getUTCHours() * 3600000) + (date.getUTCMinutes() * 60000) + (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();\n  var fractionOfDay = totalMilliseconds / (24 * 60 * 60 * 1000);\n  var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  return epoch;\n}\n\nfunction getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nfunction pad(num, size) {\n  var s = num.toString();\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nvar timestamp= msg.paths.path_1;\nvar epoch = convertToTLEEpoch(timestamp);\n\n return{\n topic:\"tle\",\n payload: \"1 13601U 23001EAE \"+epoch+\"  .00030938  00000+0  12818-2 0  9996\",\n body: [timestamp, epoch]\n    } \n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1640,
        "wires": [
            [
                "d8e2b2dfd978841e",
                "e8b6fcdcb55d696b",
                "cceb1c77630a11b1",
                "f6a4ee3cc639daa0"
            ]
        ]
    },
    {
        "id": "e8b6fcdcb55d696b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "after join wait setpath1 b1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 1820,
        "wires": []
    },
    {
        "id": "0dbb14df4d3b76e8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "tle custpo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2780,
        "y": 1700,
        "wires": []
    },
    {
        "id": "cf047331464f2182",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upb1db out",
        "mode": "link",
        "links": [
            "316d50ec298861de"
        ],
        "x": 1475,
        "y": 1720,
        "wires": []
    },
    {
        "id": "9a9657cffa053501",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upb2db out",
        "mode": "link",
        "links": [
            "f711fb70318c34f1"
        ],
        "x": 1475,
        "y": 1760,
        "wires": []
    },
    {
        "id": "07f52a89e771b9b6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upr1db out",
        "mode": "link",
        "links": [
            "ab7c9532b74823ba"
        ],
        "x": 1475,
        "y": 1800,
        "wires": []
    },
    {
        "id": "674e78492f04887d",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upr2db out",
        "mode": "link",
        "links": [
            "4f6a448fcc452112"
        ],
        "x": 1465,
        "y": 1840,
        "wires": []
    },
    {
        "id": "cca3bdd96ce36d1d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "celestrack wakeup b1",
        "links": [],
        "x": 1385,
        "y": 1480,
        "wires": [
            [
                "89cb16772620fe2e",
                "7df4fd7d3aceb576",
                "36eeef45acc3e43e"
            ]
        ]
    },
    {
        "id": "c14ef75f83e7f1d7",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "New version no test on inc 150523",
        "info": "",
        "x": 2620,
        "y": 1800,
        "wires": []
    },
    {
        "id": "2c95b3df293e8461",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "name": "UWE-3",
        "info": "",
        "x": 930,
        "y": 1600,
        "wires": []
    },
    {
        "id": "36426e10dfcad8b2",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "mongostorestork1 out",
        "mode": "link",
        "links": [
            "e7057fba696ff651"
        ],
        "x": 1345,
        "y": 1620,
        "wires": []
    },
    {
        "id": "e355bb10e7e33add",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 995,
        "y": 1920,
        "wires": []
    },
    {
        "id": "cceb1c77630a11b1",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TimePerigee-B1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2120,
        "y": 1600,
        "wires": []
    },
    {
        "id": "e27fcc5a4582935d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1720,
        "wires": []
    },
    {
        "id": "44d590cfa3477781",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Test TLE1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 2060,
        "wires": []
    },
    {
        "id": "4d370182020af79c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 2060,
        "wires": []
    },
    {
        "id": "5b029d1b23e1a27c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 1820,
        "wires": []
    },
    {
        "id": "60ca9279469c1be3",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d1100eef6bb7dbac",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 1700,
        "wires": []
    },
    {
        "id": "56ef36993fea932c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 2020,
        "wires": []
    },
    {
        "id": "1f25ca8a52be971b",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2470,
        "y": 1940,
        "wires": []
    },
    {
        "id": "4c154e2c1b292424",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1580,
        "wires": [
            [
                "36426e10dfcad8b2"
            ]
        ]
    },
    {
        "id": "b1beae978b71e742",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Ergol Mass Update b2",
        "mode": "link",
        "links": [
            "20b34b494b7565dc",
            "ee6b9c05ddd20ce5",
            "f583e7b1d3f9c777"
        ],
        "x": 2705,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e9f67c2d021c7248",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Set path_121",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_121",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1880,
        "wires": [
            [
                "95c3ddd17fabe427",
                "fb1e9985b9ba9cc4"
            ]
        ]
    },
    {
        "id": "8122ab317ae422a1",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Opti",
        "mode": "link",
        "links": [
            "1d83106db0c091cd",
            "48ee54bd869b3619",
            "ee0af6fccbb5381f",
            "d39e139798401e69"
        ],
        "x": 1245,
        "y": 2100,
        "wires": []
    },
    {
        "id": "95c3ddd17fabe427",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PATH OPTI",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 2100,
        "wires": []
    },
    {
        "id": "b8407df9c8c782d2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TEST TLE1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1780,
        "wires": []
    },
    {
        "id": "fbaa21b2bb43a666",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2390,
        "y": 1580,
        "wires": [
            [
                "05774950fb709500"
            ]
        ]
    },
    {
        "id": "e6fcb34fd6ece4f1",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup21' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1680,
        "wires": [
            [
                "b65e1846cb716d49"
            ]
        ]
    },
    {
        "id": "114fba8e1dab8e82",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui21",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 1780,
        "wires": [
            [
                "e27fcc5a4582935d",
                "0d47e871bc6f030e",
                "82d391751cc737e2",
                "d8fa7388583ba0ae",
                "79d946ae54145942",
                "e355bb10e7e33add",
                "94b4acbf7d735323",
                "98f9b9bd480a57e5",
                "ceb9ccefb33622fc",
                "e9f67c2d021c7248",
                "5033e963d25a8747"
            ]
        ]
    },
    {
        "id": "c0cc1cc7d6e8579e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B1 TLE UPDATE",
        "mode": "link",
        "links": [
            "aaba84c3aef4c034"
        ],
        "x": 2455,
        "y": 1480,
        "wires": []
    },
    {
        "id": "aaba84c3aef4c034",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "c0cc1cc7d6e8579e"
        ],
        "x": 1925,
        "y": 2000,
        "wires": [
            [
                "aa360b00a4b87785"
            ]
        ]
    },
    {
        "id": "aa360b00a4b87785",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2030,
        "y": 2000,
        "wires": [
            [
                "05774950fb709500"
            ]
        ]
    },
    {
        "id": "a141d8c4ee8686e4",
        "type": "ui_template",
        "z": "7c68352c.1b47bc",
        "group": "ef71537c5ac2b5d9",
        "name": "",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<!-- =========================\n Node-RED ui_template Content\n========================== -->\n\n<style>\n /* Override md-content, which the Dashboard sets to overflow: auto */\n  md-content,\n  .md-content {\n    overflow: hidden !important;\n  }\n\n  /* Also override html/body if needed */\n  html,\n  body,\n  .nr-dashboard-theme {\n    overflow: hidden !important;\n    margin: 0;\n    padding: 0;\n  }\n\n  /* Hide scrollbars in WebKit browsers */\n  html::-webkit-scrollbar,\n  body::-webkit-scrollbar,\n  md-content::-webkit-scrollbar,\n  .md-content::-webkit-scrollbar {\n    display: none !important;\n  }\n\n  /* Hide scrollbars in Firefox and IE/Edge */\n  html, body {\n    scrollbar-width: none;       /* Firefox */\n    -ms-overflow-style: none;    /* IE/Edge */\n  }\n  /* ============ Modal Overlay ============ */\n  .modal {\n    position: fixed;\n    z-index: 9999;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    background-color: rgba(128, 128, 128, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease, visibility 0.3s ease;\n  }\n  \n  .modal.show {\n    opacity: 1;\n    visibility: visible;\n  }\n  \n  /* ============ Modal Content ============ */\n  .modal-content {\n    background-color: #244052;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 400px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n    color: white;\n    transform: translateY(-20px);\n    transition: transform 0.3s ease;\n  }\n  \n  .modal.show .modal-content {\n    transform: translateY(0);\n  }\n  \n  /* ============ Button Group ============ */\n  .button-group {\n    margin-top: 20px;\n  }\n  \n  /* ============ Buttons ============ */\n  .button-group button {\n    padding: 10px 20px;\n    margin: 0 15px;\n    font-size: 16px;\n    cursor: pointer;\n    border: none;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    color: white;\n  }\n  \n  /* ============ YES/NO styling for each ============ */\n  /* Modal 1 */\n  #ouiBtn1 { background-color: #4CAF50; }\n  #ouiBtn1:hover { background-color: #45a049; }\n  #nonBtn1 { background-color: #f44336; }\n  #nonBtn1:hover { background-color: #da190b; }\n\n  /* Modal 2 */\n  #ouiBtn2 { background-color: #4CAF50; }\n  #ouiBtn2:hover { background-color: #45a049; }\n  #nonBtn2 { background-color: #f44336; }\n  #nonBtn2:hover { background-color: #da190b; }\n\n  /* Modal 3 */\n  #ouiBtn3 { background-color: #4CAF50; }\n  #ouiBtn3:hover { background-color: #45a049; }\n  #nonBtn3 { background-color: #f44336; }\n  #nonBtn3:hover { background-color: #da190b; }\n\n  /* Modal 4 */\n  #ouiBtn4 { background-color: #4CAF50; }\n  #ouiBtn4:hover { background-color: #45a049; }\n  #nonBtn4 { background-color: #f44336; }\n  #nonBtn4:hover { background-color: #da190b; }\n\n  /* Modal 5 */\n  #ouiBtn5 { background-color: #4CAF50; }\n  #ouiBtn5:hover { background-color: #45a049; }\n  #nonBtn5 { background-color: #f44336; }\n  #nonBtn5:hover { background-color: #da190b; }\n\n  /* Modal 7 */\n  #ouiBtn7 { background-color: #4CAF50; }\n  #ouiBtn7:hover { background-color: #45a049; }\n  #nonBtn7 { background-color: #f44336; }\n  #nonBtn7:hover { background-color: #da190b; }\n\n  /* Modal 9 */\n  #ouiBtn9 { background-color: #4CAF50; }\n  #ouiBtn9:hover { background-color: #45a049; }\n  #nonBtn9 { background-color: #f44336; }\n  #nonBtn9:hover { background-color: #da190b; }\n  \n  /* Modal 15 */\n  #ouiBtn15 { background-color: #4CAF50; }\n  #ouiBtn15:hover { background-color: #45a049; }\n  #nonBtn15 { background-color: #f44336; }\n  #nonBtn15:hover { background-color: #da190b; }\n  \n  /* Modal 17 */\n  #ouiBtn17 { background-color: #4CAF50; }\n  #ouiBtn17:hover { background-color: #45a049; }\n  #nonBtn17 { background-color: #f44336; }\n  #nonBtn17:hover { background-color: #da190b; }\n  \n  /* Modal 18 */\n  #ouiBtn18 { background-color: #4CAF50; }\n  #ouiBtn18:hover { background-color: #45a049; }\n  #nonBtn18 { background-color: #f44336; }\n  #nonBtn18:hover { background-color: #da190b; }\n  \n  /* Modal 21 */\n  #ouiBtn21 { background-color: #4CAF50; }\n  #ouiBtn21:hover { background-color: #45a049; }\n  #nonBtn21 { background-color: #f44336; }\n  #nonBtn21:hover { background-color: #da190b; }\n  \n    /* Modal 15 */\n  #ouiBtn25 { background-color: #4CAF50; }\n  #ouiBtn25:hover { background-color: #45a049; }\n  #nonBtn25 { background-color: #f44336; }\n  #nonBtn25:hover { background-color: #da190b; }\n  \n    /* Modal 23 */\n  #ouiBtn23 { background-color: #4CAF50; }\n  #ouiBtn23:hover { background-color: #45a049; }\n  #nonBtn23 { background-color: #f44336; }\n  #nonBtn23:hover { background-color: #da190b; }\n  \n   /* Modal 28 */\n  #ouiBtn28 { background-color: #4CAF50; }\n  #ouiBtn28:hover { background-color: #45a049; }\n  #nonBtn28 { background-color: #f44336; }\n  #nonBtn28:hover { background-color: #da190b; }\n  \n</style>\n\n<!-- =============================\n       All Your Modal Markup\n============================= -->\n\n<!-- Modal 1 -->\n<div id=\"confirmationModal1\" class=\"modal\" aria-labelledby=\"modalTitle1\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle1\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action initialisera un satellite BLUE1 (TLEs & masse) à partir des données entrées.<br><br>\n          Voulez-vous confirmer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn1\">Oui</button>\n          <button id=\"nonBtn1\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 2 -->\n<div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle2\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle2\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Cette action déclenchera une manoeuvre manuelle pour BLUE1 à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn2\">Oui</button>\n      <button id=\"nonBtn2\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 3 -->\n<div id=\"confirmationModal3\" class=\"modal\" aria-labelledby=\"modalTitle3\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle3\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rechargera et écrasera toutes les TLEs à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn3\">Oui</button>\n      <button id=\"nonBtn3\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 4 -->\n<div id=\"confirmationModal4\" class=\"modal\" aria-labelledby=\"modalTitle4\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle4\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les dernières TLEs enregistrées.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn4\">Oui</button>\n      <button id=\"nonBtn4\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 5 -->\n<div id=\"confirmationModal5\" class=\"modal\" aria-labelledby=\"modalTitle5\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle5\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira les données de VTS en se basant sur la base de données de Celestrak.<br><br>\n      Si vous souhaitez démarrer un nouvel horizon de simulation, il est recommandé de cliquer préalablement sur \"REFRESH TLE DATABASE\"<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn5\">Oui</button>\n      <button id=\"nonBtn5\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 7 -->\n<div id=\"confirmationModal7\" class=\"modal\" aria-labelledby=\"modalTitle7\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle7\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les fichiers OEMs de l'ensemble des satellites.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn7\">Oui</button>\n      <button id=\"nonBtn7\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 9 -->\n<div id=\"confirmationModal9\" class=\"modal\" aria-labelledby=\"modalTitle9\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle9\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Celestrak.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn9\">Oui</button>\n      <button id=\"nonBtn9\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 15 -->\n<div id=\"confirmationModal15\" class=\"modal\" aria-labelledby=\"modalTitle15\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle15\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Cette action déclenchera une manoeuvre prédéfinie pour BLUE1 à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn15\">Oui</button>\n      <button id=\"nonBtn15\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 17 -->\n<div id=\"confirmationModal17\" class=\"modal\" aria-labelledby=\"modalTitle17\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle17\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn17\">Oui</button>\n      <button id=\"nonBtn17\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 18 -->\n<div id=\"confirmationModal18\" class=\"modal\" aria-labelledby=\"modalTitle18\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle18\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action restaurera l'état du système avant la dernière manoeuvre réalisée.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn18\">Oui</button>\n      <button id=\"nonBtn18\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 21 -->\n<div id=\"confirmationModal21\" class=\"modal\" aria-labelledby=\"modalTitle21\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle21\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action initialisera un satellite BLUE2 (TLEs & masse) à partir des données entrées.<br><br>\n          Voulez-vous confirmer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn21\">Oui</button>\n          <button id=\"nonBtn21\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 23 -->\n<div id=\"confirmationModal23\" class=\"modal\" aria-labelledby=\"modalTitle23\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle23\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action déclenchera une manoeuvre manuelle pour BLUE2 à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn23\">Oui</button>\n          <button id=\"nonBtn23\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 25 -->\n<div id=\"confirmationModal25\" class=\"modal\" aria-labelledby=\"modalTitle25\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle25\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action déclenchera une manoeuvre prédéfinie pour BLUE2 à partir des paramètres entrés.<br><br>\n          Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn25\">Oui</button>\n          <button id=\"nonBtn25\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 28 -->\n<div id=\"confirmationModal28\" class=\"modal\" aria-labelledby=\"modalTitle28\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle28\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action restaurera l'état du système avant la dernière manoeuvre réalisée.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn28\">Oui</button>\n      <button id=\"nonBtn28\">Non</button>\n    </div>\n  </div>\n</div>\n\n\n<!-- =========================\n   JavaScript Initialization\n========================= -->\n\n<script>\n(function(scope) {\n    // We use this flag so we only init once per dashboard rendering\n    let initialized = false;\n    let latestMsg = null;  // Will store the most recent input msg (for topic, etc.)\n\n    scope.$watch('msg', function(msg) {\n        if (msg) {\n          // Update our local copy so we can reference msg.topic in button callbacks\n          latestMsg = msg;\n        }\n\n        if (!initialized) {\n            initialized = true;\n            initModalLogic();\n        }\n    });\n\n    function initModalLogic() {\n      console.log(\"Initializing modal logic...\");\n\n      // 1) WebSocket connection\n      const socketUrl2 = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/modal3`;\n      console.log(\"Connecting to WebSocket at:\", socketUrl2);\n      const socket2 = new WebSocket(socketUrl2);\n\n      socket2.addEventListener('open', () => {\n        console.log(\"WebSocket connection established for modal!\");\n      });\n\n      socket2.addEventListener('error', (error) => {\n        console.error(\"WebSocket error:\", error);\n      });\n\n      // 2) Show/hide logic based on incoming messages\n      socket2.addEventListener('message', function(event) {\n        let command;\n        try {\n          const msg = JSON.parse(event.data);\n          command = msg.payload || msg;\n        } catch (e) {\n          command = event.data;\n        }\n\n        if (command.startsWith('hidePopup')) {\n          const modalId = `confirmationModal${command.replace('hidePopup', '')}`;\n          hideModal(modalId);\n        } else if (command.startsWith('showPopup')) {\n          const modalId = `confirmationModal${command.replace('showPopup', '')}`;\n          showModal(modalId);\n        } else {\n          console.warn(\"Unknown command:\", command);\n        }\n      });\n\n      // 3) Attach event listeners for each “Oui/Non” button\n      //    We'll incorporate the original msg.topic into the \"oui15\" send\n\n      document.getElementById('ouiBtn1')?.addEventListener('click', function() {\n        console.log(\"Oui button 1 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui1' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup1' }));\n        hideModal('confirmationModal1');\n      });\n\n      document.getElementById('nonBtn1')?.addEventListener('click', function() {\n        console.log(\"Non button 1 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non1' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup1' }));\n        hideModal('confirmationModal1');\n      });\n\n      document.getElementById('ouiBtn2')?.addEventListener('click', function() {\n        console.log(\"Oui button 2 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui2',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn2:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup2' }));\n        hideModal('confirmationModal2');\n      });\n\n      document.getElementById('nonBtn2')?.addEventListener('click', function() {\n        console.log(\"Non button 2 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non2' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup2' }));\n        hideModal('confirmationModal2');\n      });\n\n      document.getElementById('ouiBtn3')?.addEventListener('click', function() {\n        console.log(\"Oui button 3 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui3' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('nonBtn3')?.addEventListener('click', function() {\n        console.log(\"Non button 3 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non3' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('ouiBtn4')?.addEventListener('click', function() {\n        console.log(\"Oui button 4 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui4' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('nonBtn4')?.addEventListener('click', function() {\n        console.log(\"Non button 4 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non4' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('ouiBtn5')?.addEventListener('click', function() {\n        console.log(\"Oui button 5 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui5' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('nonBtn5')?.addEventListener('click', function() {\n        console.log(\"Non button 5 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non5' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('ouiBtn7')?.addEventListener('click', function() {\n        console.log(\"Oui button 7 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui7' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('nonBtn7')?.addEventListener('click', function() {\n        console.log(\"Non button 7 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non7' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('ouiBtn9')?.addEventListener('click', function() {\n        console.log(\"Oui button 9 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui9' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      document.getElementById('nonBtn9')?.addEventListener('click', function() {\n        console.log(\"Non button 9 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non9' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      // -- Here's the button #15 that sends msg.topic too --\n      document.getElementById('ouiBtn15')?.addEventListener('click', function() {\n        console.log(\"Oui button 15 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui15',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn15:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup15' }));\n        hideModal('confirmationModal15');\n      });\n\n      document.getElementById('nonBtn15')?.addEventListener('click', function() {\n        console.log(\"Non button 15 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non15' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup15' }));\n        hideModal('confirmationModal15');\n      });\n\n      document.getElementById('ouiBtn17')?.addEventListener('click', function() {\n        console.log(\"Oui button 17 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui17' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n\n      document.getElementById('nonBtn17')?.addEventListener('click', function() {\n        console.log(\"Non button 17 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non17' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n      \n      \n      document.getElementById('ouiBtn18')?.addEventListener('click', function() {\n        console.log(\"Oui button 18 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui18' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup18' }));\n        hideModal('confirmationModal18');\n      });\n\n      document.getElementById('nonBtn18')?.addEventListener('click', function() {\n        console.log(\"Non button 18 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non18' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup18' }));\n        hideModal('confirmationModal18');\n      });\n      document.getElementById('ouiBtn21')?.addEventListener('click', function() {\n        console.log(\"Oui button 21 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui21' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup21' }));\n        hideModal('confirmationModal21');\n      });\n\n      document.getElementById('nonBtn21')?.addEventListener('click', function() {\n        console.log(\"Non button 21 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non21' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup21' }));\n        hideModal('confirmationModal21');\n      });\n      \n      // -- Here's the button #25 that sends msg.topic too --\n      document.getElementById('ouiBtn25')?.addEventListener('click', function() {\n        console.log(\"Oui button 25 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui25',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn25:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup25' }));\n        hideModal('confirmationModal25');\n      });\n\n      document.getElementById('nonBtn25')?.addEventListener('click', function() {\n        console.log(\"Non button 25 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non25' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup25' }));\n        hideModal('confirmationModal25');\n      });\n      \n      document.getElementById('ouiBtn23')?.addEventListener('click', function() {\n        console.log(\"Oui button 23 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui23',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn23:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup23' }));\n        hideModal('confirmationModal23');\n      });\n\n      document.getElementById('nonBtn23')?.addEventListener('click', function() {\n        console.log(\"Non button 23 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non23' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup23' }));\n        hideModal('confirmationModal23');\n      });\n      \n      \n      document.getElementById('ouiBtn28')?.addEventListener('click', function() {\n        console.log(\"Oui button 28 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui28' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup28' }));\n        hideModal('confirmationModal28');\n      });\n\n      document.getElementById('nonBtn28')?.addEventListener('click', function() {\n        console.log(\"Non button 28 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non28' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup28' }));\n        hideModal('confirmationModal28');\n      });\n    }\n\n    // ====== Functions to Show / Hide a Modal ======\n    function showModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n      if (modal.classList.contains('show')) {\n        console.log(`Modal with ID: ${modalId} is already shown, skipping showModal().`);\n      }\n      modal.style.display = 'block';\n      // Force reflow to ensure transition occurs\n      void modal.offsetHeight;\n      modal.classList.add('show');\n      console.log(`Modal with ID: ${modalId} shown`);\n    }\n\n    function hideModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n\n      modal.classList.remove('show');\n      // Fallback\n      setTimeout(() => {\n        if (modal.style.display !== 'none') {\n          modal.style.display = 'none';\n          console.log(`Modal with ID: ${modalId} hidden with fallback`);\n        }\n      }, 350);\n\n      modal.addEventListener('transitionend', function handler(e) {\n        if (e.propertyName === 'opacity') {\n          modal.style.display = 'none';\n          modal.removeEventListener('transitionend', handler);\n          console.log(`Modal with ID: ${modalId} hidden via transitionend`);\n        }\n      });\n    }\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "fb1e9985b9ba9cc4",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1150,
        "y": 2060,
        "wires": [
            [
                "8122ab317ae422a1"
            ]
        ]
    },
    {
        "id": "0ea883e06682caf1",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Overwrite LastDate b2",
        "mode": "link",
        "links": [
            "a546de5223b9759c"
        ],
        "x": 595,
        "y": 1860,
        "wires": []
    },
    {
        "id": "3aa1101ea2c5143a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "TEST DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2580,
        "y": 1440,
        "wires": []
    },
    {
        "id": "69feaf2284cb9cf8",
        "type": "websocket in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "server": "49e8547b37a5721a",
        "client": "",
        "x": 300,
        "y": 1580,
        "wires": [
            [
                "c514ecf924470f76",
                "59e31683ce22e2d8"
            ]
        ]
    },
    {
        "id": "c514ecf924470f76",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Process Message",
        "func": "if (msg.payload) {\n    let parsedPayload = null;\n    \n    // Log the full incoming message object for debugging\n    node.warn(\"INIT PARSING: \" + JSON.stringify(msg));\n\n    // 1. Check if msg.payload is a JSON string\n    if (typeof msg.payload === 'string' && msg.payload.trim().startsWith('{')) {\n        try {\n            node.warn(\"Raw msg.payload (string): \" + msg.payload);\n            parsedPayload = JSON.parse(msg.payload);\n            node.warn(\"Successfully JSON.parsed msg.payload: \" + JSON.stringify(parsedPayload));\n        } catch (err) {\n            node.warn(\"Payload parsing failed: \" + err.message);\n            // Pass the original msg forward and exit\n            node.send(msg);\n            return;\n        }\n    } \n    // 2. Or if msg.payload is already an object\n    else if (typeof msg.payload === 'object') {\n        node.warn(\"msg.payload is already an object: \" + JSON.stringify(msg.payload));\n        parsedPayload = msg.payload;\n    } \n    // 3. Otherwise, pass it through\n    else {\n        node.warn(\"Payload is neither string nor object; passing through.\");\n        node.send(msg);\n        return;\n    }\n\n    // ---- Flatten if needed ----\n    // Some upstream nodes wrap your real data under parsedPayload.payload.payload\n    // Example: { \"payload\": { \"payload\": \"oui15\", \"topic\": { \"isp\":\"300\" } } }\n    if (parsedPayload && parsedPayload.payload && parsedPayload.payload.payload) {\n        node.warn(\"Flattening nested structure...\");\n        parsedPayload = parsedPayload.payload;  \n        node.warn(\"After flattening: \" + JSON.stringify(parsedPayload));\n        // Now parsedPayload should look like: { payload: \"oui15\", topic: { ... } }\n    } else {\n        node.warn(\"No further flattening needed or structure different. Current parsedPayload: \" + JSON.stringify(parsedPayload));\n    }\n\n    // ---- Further processing: Check parsedPayload.payload ----\n    node.warn(\"Processing parsedPayload with final shape: \" + JSON.stringify(parsedPayload));\n\n    if (parsedPayload.payload === 'oui' || parsedPayload.payload === 'non') {\n        node.warn(\"Matched case: oui / non\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui1' || parsedPayload.payload === 'non1') {\n        node.warn(\"Matched case: oui1 / non1\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup1' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui2' || parsedPayload.payload === 'non2') {\n        node.warn(\"Matched case: oui2 / non2\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui2/non2: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup2' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui3' || parsedPayload.payload === 'non3') {\n        node.warn(\"Matched case: oui3 / non3\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup3' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui7' || parsedPayload.payload === 'non7') {\n        node.warn(\"Matched case: oui7 / non7\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup7' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui9' || parsedPayload.payload === 'non9') {\n        node.warn(\"Matched case: oui9 / non9\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup9' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui15' || parsedPayload.payload === 'non15') {\n        node.warn(\"Matched case: oui15 / non15\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui15/non15: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup15' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui18' || parsedPayload.payload === 'non18') {\n        node.warn(\"Matched case: oui18 / non18\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui18/non18: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup18' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui21' || parsedPayload.payload === 'non21') {\n        node.warn(\"Matched case: oui21 / non21\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui21/non21: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup21' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui23' || parsedPayload.payload === 'non23') {\n        node.warn(\"Matched case: oui23 / non23\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui23/non23: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup23' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui25' || parsedPayload.payload === 'non25') {\n        node.warn(\"Matched case: oui25 / non25\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui25/non25: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup25' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui28' || parsedPayload.payload === 'non18') {\n        node.warn(\"Matched case: oui28 / non28\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui28/non28: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup28' };\n        node.send(closeMsg);\n    }\n    else {\n        node.warn(\"UNHANDLED ACTION: \" + JSON.stringify(parsedPayload));\n        // You could either do nothing or pass the message on\n        msg.payload = parsedPayload;\n        node.send(msg);\n    }\n\n} else {\n    // If there's no payload, just pass the message through\n    node.warn(\"No msg.payload found; passing message through.\");\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1620,
        "wires": [
            [
                "f592a434b312a056",
                "3216b872aa5f404a",
                "200d4b989a3096fc"
            ]
        ]
    },
    {
        "id": "f592a434b312a056",
        "type": "websocket out",
        "z": "7c68352c.1b47bc",
        "name": "WebSocket Out",
        "server": "49e8547b37a5721a",
        "client": "",
        "x": 760,
        "y": 1620,
        "wires": []
    },
    {
        "id": "b65e1846cb716d49",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "4b07af770e19997b"
        ],
        "x": 645,
        "y": 1700,
        "wires": []
    },
    {
        "id": "4b07af770e19997b",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "0ae3a5a6ba667d7a",
            "4f9cf62fe9967302",
            "b65e1846cb716d49",
            "bb4d58831852dc2a",
            "cf699af35f0d04a1"
        ],
        "x": 495,
        "y": 1460,
        "wires": [
            [
                "53990ba049060ab5",
                "f592a434b312a056",
                "59cb2405e51d3dae",
                "a141d8c4ee8686e4"
            ]
        ]
    },
    {
        "id": "3216b872aa5f404a",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "retrieveOUIb2",
        "mode": "link",
        "links": [
            "25e790e666584dcd",
            "6ea07daab434c5f5",
            "74e51c45c254bc96",
            "b1a80a3b9e021614",
            "e2eb4874baa1131f"
        ],
        "x": 475,
        "y": 1660,
        "wires": []
    },
    {
        "id": "74e51c45c254bc96",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "links": [
            "3216b872aa5f404a"
        ],
        "x": 295,
        "y": 1800,
        "wires": [
            [
                "993d5b6e321d4d30",
                "4356c0c7ca340718",
                "2ca822c36f234207"
            ]
        ]
    },
    {
        "id": "200d4b989a3096fc",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PROCESS MESSAGE AFTER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1480,
        "wires": []
    },
    {
        "id": "59e31683ce22e2d8",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PROCESS MESSAGE BEFORE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1500,
        "wires": []
    },
    {
        "id": "53990ba049060ab5",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Before Node WS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1580,
        "wires": []
    },
    {
        "id": "e45af290ac0e94a8",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"oui15\",\"topic\":{\"isp\":\"31546\"}}",
        "payloadType": "str",
        "x": 150,
        "y": 1620,
        "wires": [
            [
                "c514ecf924470f76",
                "59cb2405e51d3dae"
            ]
        ]
    },
    {
        "id": "59cb2405e51d3dae",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ae8939327bfde06a",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui21",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 1860,
        "wires": [
            [
                "0ea883e06682caf1"
            ]
        ]
    },
    {
        "id": "bf758146121476b5",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Update time optilmized",
        "mode": "link",
        "links": [
            "7304714e7d848586"
        ],
        "x": 665,
        "y": 1920,
        "wires": []
    },
    {
        "id": "1f39bd0a310e1a25",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "WARNING DELETE DB BLUE 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2910,
        "y": 1640,
        "wires": []
    },
    {
        "id": "298cef2bd048ef80",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 565,
        "y": 1940,
        "wires": []
    },
    {
        "id": "5c90f81d0538a5c4",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui21",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 1940,
        "wires": [
            [
                "298cef2bd048ef80",
                "07ddde75d2bed3d7"
            ]
        ]
    },
    {
        "id": "993d5b6e321d4d30",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "pauseType": "delay",
        "timeout": "350",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 1780,
        "wires": [
            [
                "114fba8e1dab8e82"
            ]
        ]
    },
    {
        "id": "4356c0c7ca340718",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 1820,
        "wires": [
            [
                "ae8939327bfde06a"
            ]
        ]
    },
    {
        "id": "12e7474561c48189",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "command": "cd /app/maneuver-manager && rm -rf LastManeuverDate2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 565,
        "y": 2000,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "2f25edf21b8a07d4",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "B2 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d",
            "f462010c0466fdea",
            "e2f3f03425eed5dd",
            "8c4538d2189874b0",
            "50c9e4557fa523d4",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 2955,
        "y": 1780,
        "wires": []
    },
    {
        "id": "54ed3a6bc8def2f5",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "up date all for B2 IN",
        "links": [],
        "x": 105,
        "y": 1860,
        "wires": [
            [
                "4bedade718858642",
                "cfcab2023a094cdc",
                "eeb7ac39abf2e2c4",
                "9fd7873df4929469",
                "cbfe8678e36b0fa5",
                "5bf00d0b73be675b",
                "043192e17954a39e",
                "a9760725cef4a105",
                "ad7abde181040a3a",
                "0d47e871bc6f030e"
            ]
        ]
    },
    {
        "id": "4bedade718858642",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 225,
        "y": 1800,
        "wires": []
    },
    {
        "id": "5033e963d25a8747",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 935,
        "y": 1800,
        "wires": []
    },
    {
        "id": "cfcab2023a094cdc",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88",
            "7daad49aae2cb4c9",
            "49f892e386cd7bc4",
            "ae9d48d18afea4b4",
            "d01efb9685ef2237",
            "9037da81e08c3a42",
            "2ff88da90f572ddb",
            "56f3f4f3e065b6b1"
        ],
        "x": 275,
        "y": 1860,
        "wires": []
    },
    {
        "id": "eeb7ac39abf2e2c4",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toR1",
        "mode": "link",
        "links": [
            "e069d0ea8de103a3",
            "118f0f492f55ac0a",
            "da60363e18c79508"
        ],
        "x": 145,
        "y": 1780,
        "wires": []
    },
    {
        "id": "9fd7873df4929469",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toR2",
        "mode": "link",
        "links": [
            "c623b545a5900465",
            "34c17ae1e756d864",
            "95b08878e2f5f3c9"
        ],
        "x": 315,
        "y": 1900,
        "wires": []
    },
    {
        "id": "cbfe8678e36b0fa5",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 285,
        "y": 1960,
        "wires": []
    },
    {
        "id": "5bf00d0b73be675b",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "B2 to time request TLE",
        "mode": "link",
        "links": [
            "220556fdf5358e27",
            "56b381ee693e862d",
            "aca2fd577b8d3530",
            "98ab430c39565261",
            "7a94e1358f35e931",
            "6b038ded92837454"
        ],
        "x": 305,
        "y": 2000,
        "wires": []
    },
    {
        "id": "043192e17954a39e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "d42d5caf3ff36413",
            "86b56c5aafa5e5b1"
        ],
        "x": 245,
        "y": 1920,
        "wires": []
    },
    {
        "id": "a9760725cef4a105",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 305,
        "y": 2040,
        "wires": []
    },
    {
        "id": "ad7abde181040a3a",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 95,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5ab7a667fbb1644d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "trigger-B2",
        "links": [
            "bc9a8d46d71b2c0a"
        ],
        "x": 975,
        "y": 1660,
        "wires": [
            [
                "0d47e871bc6f030e"
            ]
        ]
    },
    {
        "id": "0ea9525a009058f4",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "120623 New function",
        "info": "",
        "x": 1620,
        "y": 2120,
        "wires": []
    },
    {
        "id": "8848916d67bd346f",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "upB2 from DB",
        "links": [
            "7b44310150aad18e",
            "935ddb7150ce199c",
            "ec94bcaf7ccbbade",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001",
            "271b6db4a305f549",
            "db06aa4dde393500",
            "d31002f73447a938",
            "9d961c4d9c1806d4",
            "d01e537b0745b9a3",
            "cca2bfdbffecd16d"
        ],
        "x": 1915.515625,
        "y": 1935.75,
        "wires": [
            [
                "05774950fb709500"
            ]
        ]
    },
    {
        "id": "eb760ccf4d1a4504",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "name": "Celestrak_req_NORBI",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=39446",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1180,
        "y": 2220,
        "wires": [
            [
                "3358c7e45a04b793",
                "c55cd92a2d6a6319"
            ]
        ]
    },
    {
        "id": "3358c7e45a04b793",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 2280,
        "wires": [
            [
                "88adfe23edd0a0ce"
            ],
            []
        ]
    },
    {
        "id": "88adfe23edd0a0ce",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1200,
        "y": 2340,
        "wires": [
            [
                "a4b33ecee539c518",
                "918f106cfb9bb39e"
            ],
            []
        ]
    },
    {
        "id": "a4b33ecee539c518",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle-celestrak\",\n payload:msg.payload,\n //body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2380,
        "wires": [
            [
                "cf7f5b2bba2528e9"
            ]
        ]
    },
    {
        "id": "cf7f5b2bba2528e9",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1170,
        "y": 2420,
        "wires": [
            [
                "669cebb661f23e93"
            ]
        ]
    },
    {
        "id": "669cebb661f23e93",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1350,
        "y": 2420,
        "wires": [
            [
                "9daedda5d9171bce",
                "3cf688f3dc33b9b9",
                "58212e4bd62beb36",
                "02f368960053118f"
            ]
        ]
    },
    {
        "id": "1cd4a1913b83f4b4",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-CUSTOM",
        "func": "\n   return{\n topic:\"tle\",\n paths:null,\n     payload: [msg.paths.path_1, msg.paths.path_2, msg.paths.path_101.dry_mass, msg.paths.path_101.ergol_mass, msg.paths.path_101.ergol_consumption],\n body:null\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2380,
        "wires": [
            [
                "e33d7992c5300758",
                "8d641cc65277ab2a",
                "8b4ddc82553fe995",
                "4b0af0fde0de3935"
            ]
        ]
    },
    {
        "id": "ab567ae4d25b9df3",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-1",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:msg.topic,\n payload:msg.payload[0].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 2380,
        "wires": [
            [
                "4b669dc679e67804"
            ]
        ]
    },
    {
        "id": "149433fe0e60eeba",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-2",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic: msg.topic,\n payload: msg.payload[1].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 2420,
        "wires": [
            [
                "e5046b734be6f9fd"
            ]
        ]
    },
    {
        "id": "dbae91d6bca486ed",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_101",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_101",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 2540,
        "wires": [
            [
                "e215eb8542ed8057",
                "932b33f0a7308777",
                "12492aa6d45868ec"
            ]
        ]
    },
    {
        "id": "93b859f7a339e869",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2480,
        "wires": [
            [
                "e215eb8542ed8057"
            ]
        ]
    },
    {
        "id": "68d7e0ed4bbcf11e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-2-edit",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n// This was changed during the training of the space commandement trainees it aims at keeping the TLE format for inclination greater than 100 with 3 digits\n\n// Latest version has no more test for the inclinaison as formating is done by the tlesetter\n     return{\n topic:\"tle\",\n payload: \"2 13601 \"+msg.paths.path_101.incli+\" \"+msg.paths.path_101.raan+\" \"+msg.paths.path_101.ecc+\" \"+msg.paths.path_101.aop+\" \"+msg.paths.path_101.meana+\" \"+msg.paths.path_101.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 2460,
        "wires": [
            [
                "05c99e3a06c9f0b4"
            ]
        ]
    },
    {
        "id": "56ca5b08f3215c3d",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 2420,
        "wires": [
            [
                "12492aa6d45868ec",
                "9c26a48e5f48de8e"
            ]
        ]
    },
    {
        "id": "05c99e3a06c9f0b4",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2550,
        "y": 2460,
        "wires": [
            [
                "12492aa6d45868ec",
                "42e0a8ac59b7e26d"
            ]
        ]
    },
    {
        "id": "12492aa6d45868ec",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_2\", \"path_1\",\"path_101\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2240,
        "y": 2360,
        "wires": [
            [
                "1cd4a1913b83f4b4",
                "ed9ee0f0c24d3b60"
            ],
            []
        ]
    },
    {
        "id": "4ccc1734af0ccbbc",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2410,
        "y": 2500,
        "wires": []
    },
    {
        "id": "6b2ad49fcc09ea9a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "check output blue1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2190,
        "y": 2220,
        "wires": []
    },
    {
        "id": "8b4ddc82553fe995",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2830,
        "y": 2500,
        "wires": [
            [
                "a14ff2d181adafa9",
                "83657e1af5fa276d",
                "9f2a59b72a18b1de"
            ]
        ]
    },
    {
        "id": "e5046b734be6f9fd",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1790,
        "y": 2420,
        "wires": [
            [
                "32cfa388afcab3ce"
            ]
        ]
    },
    {
        "id": "32cfa388afcab3ce",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1790,
        "y": 2460,
        "wires": [
            [
                "44fd8ed5a7c1262d",
                "93b859f7a339e869"
            ]
        ]
    },
    {
        "id": "e215eb8542ed8057",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_3\", \"path_101\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2240,
        "y": 2460,
        "wires": [
            [
                "68d7e0ed4bbcf11e"
            ],
            []
        ]
    },
    {
        "id": "44fd8ed5a7c1262d",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 2440,
        "wires": [
            [
                "e215eb8542ed8057"
            ]
        ]
    },
    {
        "id": "4b669dc679e67804",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 2280,
        "wires": [
            [
                "e9220f486f4e4bee"
            ]
        ]
    },
    {
        "id": "e9220f486f4e4bee",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1860,
        "y": 2280,
        "wires": [
            [
                "6b2ad49fcc09ea9a",
                "8dc96005469d58c9"
            ],
            []
        ]
    },
    {
        "id": "f5da8e526ebc4a45",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "c02dcce485dfb187",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "R1 TLE Update",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#B5FC48",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 2400,
        "wires": [
            [
                "23a3088854f01efb"
            ]
        ]
    },
    {
        "id": "d31002f73447a938",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB2",
        "mode": "link",
        "links": [
            "c9235065a31da113",
            "8848916d67bd346f"
        ],
        "x": 1235,
        "y": 2600,
        "wires": []
    },
    {
        "id": "3c1faa240cd412e6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88"
        ],
        "x": 785,
        "y": 2400,
        "wires": []
    },
    {
        "id": "f5ab3b9e130e081c",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR2",
        "mode": "link",
        "links": [
            "34c17ae1e756d864",
            "95b08878e2f5f3c9"
        ],
        "x": 1235,
        "y": 2640,
        "wires": []
    },
    {
        "id": "5710528e0d1522ad",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "86b56c5aafa5e5b1"
        ],
        "x": 1005,
        "y": 2680,
        "wires": []
    },
    {
        "id": "80ed89a0ab903a4e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 945,
        "y": 2680,
        "wires": []
    },
    {
        "id": "66d13c989ce22fb3",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 1125,
        "y": 2700,
        "wires": []
    },
    {
        "id": "e33d7992c5300758",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\ngs.dry_mass  = msg.payload[2]\ngs.ergol_mass = msg.payload[3]\ngs.ergol_consumption = msg.payload[4]\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 2260,
        "wires": [
            [
                "ef5201bc818cadc3"
            ]
        ]
    },
    {
        "id": "ef5201bc818cadc3",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2430,
        "y": 2260,
        "wires": [
            [
                "95ff42fec3db8e20",
                "2a1e9040f57c85ee",
                "2bcddb548b66783f",
                "58bd1742ef4e3326",
                "9bb1a0b6ed495970"
            ]
        ]
    },
    {
        "id": "2bcddb548b66783f",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2740,
        "y": 2260,
        "wires": []
    },
    {
        "id": "2a754af658e107d7",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "update all for R1 IN",
        "links": [
            "0667911a85c3c1a6",
            "89f5c1c0106215dc",
            "e8ad069716b29b9a"
        ],
        "x": 845,
        "y": 2480,
        "wires": [
            [
                "5710528e0d1522ad",
                "80ed89a0ab903a4e",
                "66d13c989ce22fb3",
                "f7b45a19089fb81e",
                "d31002f73447a938",
                "3c1faa240cd412e6",
                "f5ab3b9e130e081c",
                "86b229a91231826e",
                "6341ea03cf096da8",
                "2ff65edf259c1b31"
            ]
        ]
    },
    {
        "id": "ed9ee0f0c24d3b60",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query to delete r1tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 2340,
        "wires": [
            [
                "cdca54e0137afb1a",
                "be48be044f7a15d4"
            ]
        ]
    },
    {
        "id": "cdca54e0137afb1a",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2920,
        "y": 2320,
        "wires": []
    },
    {
        "id": "f7b45a19089fb81e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for r1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2520,
        "wires": [
            [
                "92d3f241c24f5be6",
                "3fa51494634ed490"
            ]
        ]
    },
    {
        "id": "92d3f241c24f5be6",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 1200,
        "y": 2560,
        "wires": [
            [
                "d40f93aa083bbba5",
                "f325e22603c9104d"
            ]
        ]
    },
    {
        "id": "d40f93aa083bbba5",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle-mongo\",\n    payload: [msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 2560,
        "wires": [
            [
                "487f273f838e22bd",
                "a2f6766a6ad09c3e"
            ]
        ]
    },
    {
        "id": "487f273f838e22bd",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1370,
        "y": 2600,
        "wires": [
            [
                "0ff640915d0a6a10"
            ]
        ]
    },
    {
        "id": "0ff640915d0a6a10",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1490,
        "y": 2600,
        "wires": [
            [
                "ab567ae4d25b9df3",
                "149433fe0e60eeba",
                "1edde1ab5feda76a"
            ]
        ]
    },
    {
        "id": "49b55956baf75210",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for r1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 2580,
        "wires": [
            [
                "7b5dce9601bb0cd1"
            ]
        ]
    },
    {
        "id": "7b5dce9601bb0cd1",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 2320,
        "y": 2640,
        "wires": [
            [
                "4ec798160e4e9c6e",
                "c03f68570f223a58"
            ]
        ]
    },
    {
        "id": "4ec798160e4e9c6e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload[0] && msg.payload[0].tle1 && msg.payload[0].tle2) {\n    return {\n        topic: \"tle\",\n        payload: [msg.payload[0].tle1, msg.payload[0].tle2,msg.payload[0].dry_mass,msg.payload[0].ergol_mass,msg.payload[0].ergol_consumption],\n        body: 12\n    };\n} else {\n    node.warn(\"Les propriétés 'tle1' ou 'tle2' sont manquantes ou le satellite n'est pas correctement défini.\");\n    return null; // On peut renvoyer null pour stopper le flux si les données sont manquantes\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 2600,
        "wires": [
            [
                "72992b7401452619",
                "8b4ddc82553fe995"
            ]
        ]
    },
    {
        "id": "72992b7401452619",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TLE of B1 requested in the DB by an UPdate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2850,
        "y": 2660,
        "wires": []
    },
    {
        "id": "c55cd92a2d6a6319",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 1375,
        "y": 2260,
        "wires": []
    },
    {
        "id": "a14ff2d181adafa9",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3020,
        "y": 2540,
        "wires": []
    },
    {
        "id": "1edde1ab5feda76a",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "name": "red1-tle-storage-out",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1770,
        "y": 2680,
        "wires": [
            [
                "3635093fee31d441",
                "9e676613ab5df80c"
            ]
        ]
    },
    {
        "id": "3635093fee31d441",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1810,
        "y": 2600,
        "wires": [
            [
                "dbae91d6bca486ed"
            ]
        ]
    },
    {
        "id": "8dc96005469d58c9",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Date to Epoch",
        "func": "\n// New fonction 120623\n\nfunction convertToTLEEpoch(timestamp) {\n  var date = new Date(timestamp);\n  var year = date.getUTCFullYear();\n  var dayOfYear = getDayOfYear(date);\n  // Modification made on the 5/07/23 TO increase precision of the date to the milisecond\n  //var totalSeconds = (date.getUTCHours() * 3600) + (date.getUTCMinutes() * 60) + date.getUTCSeconds();\n  //var fractionOfDay = totalSeconds / (24 * 60 * 60)\n // var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  var totalMilliseconds = (date.getUTCHours() * 3600000) + (date.getUTCMinutes() * 60000) + (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();\n  var fractionOfDay = totalMilliseconds / (24 * 60 * 60 * 1000);\n  var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  return epoch;\n}\n\nfunction getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nfunction pad(num, size) {\n  var s = num.toString();\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nvar timestamp= msg.paths.path_1;\nvar epoch = convertToTLEEpoch(timestamp);\n\n return{\n topic:\"tle\",\n payload: \"1 13601U 23001EAE \"+epoch+\"  .00030938  00000+0  12818-2 0  9996\",\n body: [timestamp, epoch]\n    } \n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 2360,
        "wires": [
            [
                "56ca5b08f3215c3d",
                "39f381d03eb4d038",
                "2972c39057765417",
                "c6cb0e1e16a0f192"
            ]
        ]
    },
    {
        "id": "39f381d03eb4d038",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "after join wait setpath1 b1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 2540,
        "wires": []
    },
    {
        "id": "8d641cc65277ab2a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "tle custpo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2820,
        "y": 2420,
        "wires": []
    },
    {
        "id": "9daedda5d9171bce",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upb1db out",
        "mode": "link",
        "links": [
            "316d50ec298861de"
        ],
        "x": 1515,
        "y": 2440,
        "wires": []
    },
    {
        "id": "3cf688f3dc33b9b9",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upb2db out",
        "mode": "link",
        "links": [
            "f711fb70318c34f1"
        ],
        "x": 1515,
        "y": 2480,
        "wires": []
    },
    {
        "id": "58212e4bd62beb36",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upr1db out",
        "mode": "link",
        "links": [
            "ab7c9532b74823ba"
        ],
        "x": 1515,
        "y": 2520,
        "wires": []
    },
    {
        "id": "02f368960053118f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upr2db out",
        "mode": "link",
        "links": [
            "4f6a448fcc452112"
        ],
        "x": 1505,
        "y": 2560,
        "wires": []
    },
    {
        "id": "fcb16f39addb8165",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "celestrack wakeup r1",
        "links": [],
        "x": 1425,
        "y": 2200,
        "wires": [
            [
                "ab567ae4d25b9df3",
                "149433fe0e60eeba",
                "1edde1ab5feda76a"
            ]
        ]
    },
    {
        "id": "bc527f83dcafe530",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "name": "New version no test on inc 150523",
        "info": "",
        "x": 2540,
        "y": 2420,
        "wires": []
    },
    {
        "id": "2fb582d26cbec268",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "name": "UWE-3",
        "info": "",
        "x": 970,
        "y": 2320,
        "wires": []
    },
    {
        "id": "8a9d4492ae46b371",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "mongostorestork1 out",
        "mode": "link",
        "links": [
            "e7057fba696ff651"
        ],
        "x": 1385,
        "y": 2340,
        "wires": []
    },
    {
        "id": "86b229a91231826e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 1145,
        "y": 2660,
        "wires": []
    },
    {
        "id": "6341ea03cf096da8",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 935,
        "y": 2780,
        "wires": []
    },
    {
        "id": "2972c39057765417",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TimePerigee-B1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2160,
        "y": 2320,
        "wires": []
    },
    {
        "id": "f6dcce4ee9a7a87c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 2440,
        "wires": []
    },
    {
        "id": "a2f6766a6ad09c3e",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Test TLE1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 2780,
        "wires": []
    },
    {
        "id": "9e676613ab5df80c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 2780,
        "wires": []
    },
    {
        "id": "42e0a8ac59b7e26d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2650,
        "y": 2540,
        "wires": []
    },
    {
        "id": "932b33f0a7308777",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 2520,
        "wires": []
    },
    {
        "id": "9c26a48e5f48de8e",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 2420,
        "wires": []
    },
    {
        "id": "f325e22603c9104d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 2740,
        "wires": []
    },
    {
        "id": "c03f68570f223a58",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2510,
        "y": 2660,
        "wires": []
    },
    {
        "id": "918f106cfb9bb39e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2300,
        "wires": [
            [
                "8a9d4492ae46b371"
            ]
        ]
    },
    {
        "id": "2a1e9040f57c85ee",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Ergol Mass Update r1",
        "mode": "link",
        "links": [
            "93469e58b0cca3ed",
            "df0db872c03bcd07"
        ],
        "x": 2745,
        "y": 2200,
        "wires": []
    },
    {
        "id": "923a19f2850d39e2",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_131",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_131",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 2720,
        "wires": [
            [
                "a85d0fe306379951",
                "504bbb98c5ecf39f"
            ]
        ]
    },
    {
        "id": "2b40adc7edb46ab0",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Opti",
        "mode": "link",
        "links": [
            "1d83106db0c091cd",
            "48ee54bd869b3619",
            "ee0af6fccbb5381f",
            "d39e139798401e69"
        ],
        "x": 1285,
        "y": 2820,
        "wires": []
    },
    {
        "id": "a85d0fe306379951",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PATH OPTI",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2820,
        "wires": []
    },
    {
        "id": "3fa51494634ed490",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TEST TLE1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 2500,
        "wires": []
    },
    {
        "id": "95ff42fec3db8e20",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2430,
        "y": 2300,
        "wires": [
            [
                "49b55956baf75210"
            ]
        ]
    },
    {
        "id": "23a3088854f01efb",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup31' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 2400,
        "wires": [
            [
                "7e11a21430b7d549"
            ]
        ]
    },
    {
        "id": "ff4fc4d8700e26d2",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui31",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 2500,
        "wires": [
            [
                "f6dcce4ee9a7a87c",
                "f7b45a19089fb81e",
                "d31002f73447a938",
                "3c1faa240cd412e6",
                "f5ab3b9e130e081c",
                "86b229a91231826e",
                "6341ea03cf096da8",
                "66d13c989ce22fb3",
                "5710528e0d1522ad",
                "80ed89a0ab903a4e",
                "923a19f2850d39e2"
            ]
        ]
    },
    {
        "id": "58bd1742ef4e3326",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B1 TLE UPDATE",
        "mode": "link",
        "links": [
            "1994a5cfac7f1838"
        ],
        "x": 2495,
        "y": 2200,
        "wires": []
    },
    {
        "id": "1994a5cfac7f1838",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "58bd1742ef4e3326"
        ],
        "x": 1965,
        "y": 2720,
        "wires": [
            [
                "b01650980ae5f2b6"
            ]
        ]
    },
    {
        "id": "b01650980ae5f2b6",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2070,
        "y": 2720,
        "wires": [
            [
                "49b55956baf75210"
            ]
        ]
    },
    {
        "id": "cc7567682b8e3b38",
        "type": "ui_template",
        "z": "7c68352c.1b47bc",
        "group": "3befc064653e026e",
        "name": "",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<!-- =========================\n Node-RED ui_template Content\n========================== -->\n\n<style>\n /* Override md-content, which the Dashboard sets to overflow: auto */\n  md-content,\n  .md-content {\n    overflow: hidden !important;\n  }\n\n  /* Also override html/body if needed */\n  html,\n  body,\n  .nr-dashboard-theme {\n    overflow: hidden !important;\n    margin: 0;\n    padding: 0;\n  }\n\n  /* Hide scrollbars in WebKit browsers */\n  html::-webkit-scrollbar,\n  body::-webkit-scrollbar,\n  md-content::-webkit-scrollbar,\n  .md-content::-webkit-scrollbar {\n    display: none !important;\n  }\n\n  /* Hide scrollbars in Firefox and IE/Edge */\n  html, body {\n    scrollbar-width: none;       /* Firefox */\n    -ms-overflow-style: none;    /* IE/Edge */\n  }\n  /* ============ Modal Overlay ============ */\n  .modal {\n    position: fixed;\n    z-index: 9999;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    background-color: rgba(128, 128, 128, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease, visibility 0.3s ease;\n  }\n  \n  .modal.show {\n    opacity: 1;\n    visibility: visible;\n  }\n  \n  /* ============ Modal Content ============ */\n  .modal-content {\n    background-color: #244052;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 400px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n    color: white;\n    transform: translateY(-20px);\n    transition: transform 0.3s ease;\n  }\n  \n  .modal.show .modal-content {\n    transform: translateY(0);\n  }\n  \n  /* ============ Button Group ============ */\n  .button-group {\n    margin-top: 20px;\n  }\n  \n  /* ============ Buttons ============ */\n  .button-group button {\n    padding: 10px 20px;\n    margin: 0 15px;\n    font-size: 16px;\n    cursor: pointer;\n    border: none;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    color: white;\n  }\n  \n  /* ============ YES/NO styling for each ============ */\n  /* Modal 1 */\n  #ouiBtn1 { background-color: #4CAF50; }\n  #ouiBtn1:hover { background-color: #45a049; }\n  #nonBtn1 { background-color: #f44336; }\n  #nonBtn1:hover { background-color: #da190b; }\n\n  /* Modal 2 */\n  #ouiBtn2 { background-color: #4CAF50; }\n  #ouiBtn2:hover { background-color: #45a049; }\n  #nonBtn2 { background-color: #f44336; }\n  #nonBtn2:hover { background-color: #da190b; }\n\n  /* Modal 3 */\n  #ouiBtn3 { background-color: #4CAF50; }\n  #ouiBtn3:hover { background-color: #45a049; }\n  #nonBtn3 { background-color: #f44336; }\n  #nonBtn3:hover { background-color: #da190b; }\n\n  /* Modal 4 */\n  #ouiBtn4 { background-color: #4CAF50; }\n  #ouiBtn4:hover { background-color: #45a049; }\n  #nonBtn4 { background-color: #f44336; }\n  #nonBtn4:hover { background-color: #da190b; }\n\n  /* Modal 5 */\n  #ouiBtn5 { background-color: #4CAF50; }\n  #ouiBtn5:hover { background-color: #45a049; }\n  #nonBtn5 { background-color: #f44336; }\n  #nonBtn5:hover { background-color: #da190b; }\n\n  /* Modal 7 */\n  #ouiBtn7 { background-color: #4CAF50; }\n  #ouiBtn7:hover { background-color: #45a049; }\n  #nonBtn7 { background-color: #f44336; }\n  #nonBtn7:hover { background-color: #da190b; }\n\n  /* Modal 9 */\n  #ouiBtn9 { background-color: #4CAF50; }\n  #ouiBtn9:hover { background-color: #45a049; }\n  #nonBtn9 { background-color: #f44336; }\n  #nonBtn9:hover { background-color: #da190b; }\n  \n  /* Modal 15 */\n  #ouiBtn15 { background-color: #4CAF50; }\n  #ouiBtn15:hover { background-color: #45a049; }\n  #nonBtn15 { background-color: #f44336; }\n  #nonBtn15:hover { background-color: #da190b; }\n  \n  /* Modal 17 */\n  #ouiBtn17 { background-color: #4CAF50; }\n  #ouiBtn17:hover { background-color: #45a049; }\n  #nonBtn17 { background-color: #f44336; }\n  #nonBtn17:hover { background-color: #da190b; }\n  \n  /* Modal 18 */\n  #ouiBtn18 { background-color: #4CAF50; }\n  #ouiBtn18:hover { background-color: #45a049; }\n  #nonBtn18 { background-color: #f44336; }\n  #nonBtn18:hover { background-color: #da190b; }\n  \n  /* Modal 31 */\n  #ouiBtn31 { background-color: #4CAF50; }\n  #ouiBtn31:hover { background-color: #45a049; }\n  #nonBtn31 { background-color: #f44336; }\n  #nonBtn31:hover { background-color: #da190b; }\n  \n  /* Modal 33 */\n  #ouiBtn33 { background-color: #4CAF50; }\n  #ouiBtn33:hover { background-color: #45a049; }\n  #nonBtn33 { background-color: #f44336; }\n  #nonBtn33:hover { background-color: #da190b; }\n  \n  /* Modal 33 */\n  #ouiBtn35 { background-color: #4CAF50; }\n  #ouiBtn35:hover { background-color: #45a049; }\n  #nonBtn35 { background-color: #f44336; }\n  #nonBtn35:hover { background-color: #da190b; }\n  \n  /* Modal 38 */\n  #ouiBtn38 { background-color: #4CAF50; }\n  #ouiBtn38:hover { background-color: #45a049; }\n  #nonBtn38 { background-color: #f44336; }\n  #nonBtn38:hover { background-color: #da190b; }\n</style>\n\n<!-- =============================\n       All Your Modal Markup\n============================= -->\n\n<!-- Modal 1 -->\n<div id=\"confirmationModal1\" class=\"modal\" aria-labelledby=\"modalTitle1\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle1\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action initialisera un satellite (TLEs & masse) à partir des données entrées.<br><br>\n          Voulez-vous confirmer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn1\">Oui</button>\n          <button id=\"nonBtn1\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 2 -->\n<div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle2\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle2\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Cette action déclenchera une manoeuvre manuelle à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn2\">Oui</button>\n      <button id=\"nonBtn2\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 3 -->\n<div id=\"confirmationModal3\" class=\"modal\" aria-labelledby=\"modalTitle3\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle3\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rechargera et écrasera toutes les TLEs à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn3\">Oui</button>\n      <button id=\"nonBtn3\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 4 -->\n<div id=\"confirmationModal4\" class=\"modal\" aria-labelledby=\"modalTitle4\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle4\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les dernières TLEs enregistrées.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn4\">Oui</button>\n      <button id=\"nonBtn4\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 5 -->\n<div id=\"confirmationModal5\" class=\"modal\" aria-labelledby=\"modalTitle5\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle5\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira les données de VTS en se basant sur la base de données de Celestrak.<br><br>\n      Si vous souhaitez démarrer un nouvel horizon de simulation, il est recommandé de cliquer préalablement sur \"REFRESH TLE DATABASE\"<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn5\">Oui</button>\n      <button id=\"nonBtn5\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 7 -->\n<div id=\"confirmationModal7\" class=\"modal\" aria-labelledby=\"modalTitle7\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle7\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les fichiers OEMs de l'ensemble des satellites.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn7\">Oui</button>\n      <button id=\"nonBtn7\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 9 -->\n<div id=\"confirmationModal9\" class=\"modal\" aria-labelledby=\"modalTitle9\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle9\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Celestrak.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn9\">Oui</button>\n      <button id=\"nonBtn9\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 15 -->\n<div id=\"confirmationModal15\" class=\"modal\" aria-labelledby=\"modalTitle15\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle15\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Cette action déclenchera une manoeuvre prédéfinie à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn15\">Oui</button>\n      <button id=\"nonBtn15\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 17 -->\n<div id=\"confirmationModal17\" class=\"modal\" aria-labelledby=\"modalTitle17\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle17\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn17\">Oui</button>\n      <button id=\"nonBtn17\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 18 -->\n<div id=\"confirmationModal18\" class=\"modal\" aria-labelledby=\"modalTitle18\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle18\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action restaurera l'état du système avant la dernière manoeuvre réalisée.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn18\">Oui</button>\n      <button id=\"nonBtn18\">Non</button>\n    </div>\n  </div>\n</div>\n<!-- Modal 31 -->\n<div id=\"confirmationModal31\" class=\"modal\" aria-labelledby=\"modalTitle31\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle31\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action initialisera un satellite RED1 (TLEs & masse) à partir des données entrées.<br><br>\n          Voulez-vous confirmer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn31\">Oui</button>\n          <button id=\"nonBtn31\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 23 -->\n<div id=\"confirmationModal33\" class=\"modal\" aria-labelledby=\"modalTitle33\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle33\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action déclenchera une manoeuvre manuelle pour RED1 à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn33\">Oui</button>\n          <button id=\"nonBtn33\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 25 -->\n<div id=\"confirmationModal35\" class=\"modal\" aria-labelledby=\"modalTitle25\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle35\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action déclenchera une manoeuvre prédéfinie pour RED1 à partir des paramètres entrés.<br><br>\n          Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn35\">Oui</button>\n          <button id=\"nonBtn35\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 38 -->\n<div id=\"confirmationModal38\" class=\"modal\" aria-labelledby=\"modalTitle38\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle38\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action restaurera l'état du système avant la dernière manoeuvre réalisée.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn38\">Oui</button>\n      <button id=\"nonBtn38\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- =========================\n   JavaScript Initialization\n========================= -->\n\n<script>\n(function(scope) {\n    // We use this flag so we only init once per dashboard rendering\n    let initialized = false;\n    let latestMsg = null;  // Will store the most recent input msg (for topic, etc.)\n\n    scope.$watch('msg', function(msg) {\n        if (msg) {\n          // Update our local copy so we can reference msg.topic in button callbacks\n          latestMsg = msg;\n        }\n\n        if (!initialized) {\n            initialized = true;\n            initModalLogic();\n        }\n    });\n\n    function initModalLogic() {\n      console.log(\"Initializing modal logic...\");\n\n      // 1) WebSocket connection\n      const socketUrl2 = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/modal4`;\n      console.log(\"Connecting to WebSocket at:\", socketUrl2);\n      const socket2 = new WebSocket(socketUrl2);\n\n      socket2.addEventListener('open', () => {\n        console.log(\"WebSocket connection established for modal!\");\n      });\n\n      socket2.addEventListener('error', (error) => {\n        console.error(\"WebSocket error:\", error);\n      });\n\n      // 2) Show/hide logic based on incoming messages\n      socket2.addEventListener('message', function(event) {\n        let command;\n        try {\n          const msg = JSON.parse(event.data);\n          command = msg.payload || msg;\n        } catch (e) {\n          command = event.data;\n        }\n\n        if (command.startsWith('hidePopup')) {\n          const modalId = `confirmationModal${command.replace('hidePopup', '')}`;\n          hideModal(modalId);\n        } else if (command.startsWith('showPopup')) {\n          const modalId = `confirmationModal${command.replace('showPopup', '')}`;\n          showModal(modalId);\n        } else {\n          console.warn(\"Unknown command:\", command);\n        }\n      });\n\n      // 3) Attach event listeners for each “Oui/Non” button\n      //    We'll incorporate the original msg.topic into the \"oui15\" send\n\n      document.getElementById('ouiBtn1')?.addEventListener('click', function() {\n        console.log(\"Oui button 1 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui1' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup1' }));\n        hideModal('confirmationModal1');\n      });\n\n      document.getElementById('nonBtn1')?.addEventListener('click', function() {\n        console.log(\"Non button 1 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non1' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup1' }));\n        hideModal('confirmationModal1');\n      });\n\n      document.getElementById('ouiBtn2')?.addEventListener('click', function() {\n        console.log(\"Oui button 2 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui2',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn2:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup2' }));\n        hideModal('confirmationModal2');\n      });\n\n      document.getElementById('nonBtn2')?.addEventListener('click', function() {\n        console.log(\"Non button 2 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non2' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup2' }));\n        hideModal('confirmationModal2');\n      });\n\n      document.getElementById('ouiBtn3')?.addEventListener('click', function() {\n        console.log(\"Oui button 3 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui3' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('nonBtn3')?.addEventListener('click', function() {\n        console.log(\"Non button 3 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non3' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('ouiBtn4')?.addEventListener('click', function() {\n        console.log(\"Oui button 4 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui4' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('nonBtn4')?.addEventListener('click', function() {\n        console.log(\"Non button 4 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non4' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('ouiBtn5')?.addEventListener('click', function() {\n        console.log(\"Oui button 5 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui5' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('nonBtn5')?.addEventListener('click', function() {\n        console.log(\"Non button 5 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non5' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('ouiBtn7')?.addEventListener('click', function() {\n        console.log(\"Oui button 7 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui7' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('nonBtn7')?.addEventListener('click', function() {\n        console.log(\"Non button 7 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non7' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('ouiBtn9')?.addEventListener('click', function() {\n        console.log(\"Oui button 9 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui9' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      document.getElementById('nonBtn9')?.addEventListener('click', function() {\n        console.log(\"Non button 9 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non9' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      // -- Here's the button #15 that sends msg.topic too --\n      document.getElementById('ouiBtn15')?.addEventListener('click', function() {\n        console.log(\"Oui button 15 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui15',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn15:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup15' }));\n        hideModal('confirmationModal15');\n      });\n\n      document.getElementById('nonBtn15')?.addEventListener('click', function() {\n        console.log(\"Non button 15 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non15' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup15' }));\n        hideModal('confirmationModal15');\n      });\n\n      document.getElementById('ouiBtn17')?.addEventListener('click', function() {\n        console.log(\"Oui button 17 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui17' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n\n      document.getElementById('nonBtn17')?.addEventListener('click', function() {\n        console.log(\"Non button 17 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non17' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n      \n      \n      document.getElementById('ouiBtn18')?.addEventListener('click', function() {\n        console.log(\"Oui button 18 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui18' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup18' }));\n        hideModal('confirmationModal18');\n      });\n\n      document.getElementById('nonBtn18')?.addEventListener('click', function() {\n        console.log(\"Non button 18 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non18' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup18' }));\n        hideModal('confirmationModal18');\n      });\n      \n      document.getElementById('ouiBtn31')?.addEventListener('click', function() {\n        console.log(\"Oui button 31 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui31' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup31' }));\n        hideModal('confirmationModal31');\n      });\n\n      document.getElementById('nonBtn31')?.addEventListener('click', function() {\n        console.log(\"Non button 31 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non31' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup31' }));\n        hideModal('confirmationModal31');\n      });\n      \n      document.getElementById('ouiBtn33')?.addEventListener('click', function() {\n        console.log(\"Oui button 33 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui33',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn33:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup33' }));\n        hideModal('confirmationModal33');\n      });\n\n      document.getElementById('nonBtn33')?.addEventListener('click', function() {\n        console.log(\"Non button 33 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non33' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup33' }));\n        hideModal('confirmationModal33');\n      });\n      \n      // -- Here's the button #25 that sends msg.topic too --\n      document.getElementById('ouiBtn35')?.addEventListener('click', function() {\n        console.log(\"Oui button 35 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui35',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn35:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup35' }));\n        hideModal('confirmationModal35');\n      });\n\n      document.getElementById('nonBtn35')?.addEventListener('click', function() {\n        console.log(\"Non button 35 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non35' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup35' }));\n        hideModal('confirmationModal35');\n      });\n      \n      \n       document.getElementById('ouiBtn38')?.addEventListener('click', function() {\n        console.log(\"Oui button 38 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui38' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup38' }));\n        hideModal('confirmationModal38');\n      });\n\n      document.getElementById('nonBtn38')?.addEventListener('click', function() {\n        console.log(\"Non button 38 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non38' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup38' }));\n        hideModal('confirmationModal38');\n      });\n\n    }\n\n    // ====== Functions to Show / Hide a Modal ======\n    function showModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n      if (modal.classList.contains('show')) {\n        console.log(`Modal with ID: ${modalId} is already shown, skipping showModal().`);\n      }\n      modal.style.display = 'block';\n      // Force reflow to ensure transition occurs\n      void modal.offsetHeight;\n      modal.classList.add('show');\n      console.log(`Modal with ID: ${modalId} shown`);\n    }\n\n    function hideModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n\n      modal.classList.remove('show');\n      // Fallback\n      setTimeout(() => {\n        if (modal.style.display !== 'none') {\n          modal.style.display = 'none';\n          console.log(`Modal with ID: ${modalId} hidden with fallback`);\n        }\n      }, 350);\n\n      modal.addEventListener('transitionend', function handler(e) {\n        if (e.propertyName === 'opacity') {\n          modal.style.display = 'none';\n          modal.removeEventListener('transitionend', handler);\n          console.log(`Modal with ID: ${modalId} hidden via transitionend`);\n        }\n      });\n    }\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "504bbb98c5ecf39f",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 2780,
        "wires": [
            [
                "2b40adc7edb46ab0"
            ]
        ]
    },
    {
        "id": "0718e4c2391326ba",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Overwrite LastDate r1",
        "mode": "link",
        "links": [
            "27796799ac6bfafb"
        ],
        "x": 635,
        "y": 2580,
        "wires": []
    },
    {
        "id": "9bb1a0b6ed495970",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TEST DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2620,
        "y": 2200,
        "wires": []
    },
    {
        "id": "53cfefde9ece0a0b",
        "type": "websocket in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "server": "76b9ba0b34742c81",
        "client": "",
        "x": 240,
        "y": 2300,
        "wires": [
            [
                "66e39c2e0fc34e69",
                "1ece44e4709dcbad"
            ]
        ]
    },
    {
        "id": "66e39c2e0fc34e69",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Process Message",
        "func": "if (msg.payload) {\n    let parsedPayload = null;\n    \n    // Log the full incoming message object for debugging\n    node.warn(\"INIT PARSING: \" + JSON.stringify(msg));\n\n    // 1. Check if msg.payload is a JSON string\n    if (typeof msg.payload === 'string' && msg.payload.trim().startsWith('{')) {\n        try {\n            node.warn(\"Raw msg.payload (string): \" + msg.payload);\n            parsedPayload = JSON.parse(msg.payload);\n            node.warn(\"Successfully JSON.parsed msg.payload: \" + JSON.stringify(parsedPayload));\n        } catch (err) {\n            node.warn(\"Payload parsing failed: \" + err.message);\n            // Pass the original msg forward and exit\n            node.send(msg);\n            return;\n        }\n    } \n    // 2. Or if msg.payload is already an object\n    else if (typeof msg.payload === 'object') {\n        node.warn(\"msg.payload is already an object: \" + JSON.stringify(msg.payload));\n        parsedPayload = msg.payload;\n    } \n    // 3. Otherwise, pass it through\n    else {\n        node.warn(\"Payload is neither string nor object; passing through.\");\n        node.send(msg);\n        return;\n    }\n\n    // ---- Flatten if needed ----\n    // Some upstream nodes wrap your real data under parsedPayload.payload.payload\n    // Example: { \"payload\": { \"payload\": \"oui15\", \"topic\": { \"isp\":\"300\" } } }\n    if (parsedPayload && parsedPayload.payload && parsedPayload.payload.payload) {\n        node.warn(\"Flattening nested structure...\");\n        parsedPayload = parsedPayload.payload;  \n        node.warn(\"After flattening: \" + JSON.stringify(parsedPayload));\n        // Now parsedPayload should look like: { payload: \"oui15\", topic: { ... } }\n    } else {\n        node.warn(\"No further flattening needed or structure different. Current parsedPayload: \" + JSON.stringify(parsedPayload));\n    }\n\n    // ---- Further processing: Check parsedPayload.payload ----\n    node.warn(\"Processing parsedPayload with final shape: \" + JSON.stringify(parsedPayload));\n\n    if (parsedPayload.payload === 'oui' || parsedPayload.payload === 'non') {\n        node.warn(\"Matched case: oui / non\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui1' || parsedPayload.payload === 'non1') {\n        node.warn(\"Matched case: oui1 / non1\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup1' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui2' || parsedPayload.payload === 'non2') {\n        node.warn(\"Matched case: oui2 / non2\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui2/non2: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup2' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui3' || parsedPayload.payload === 'non3') {\n        node.warn(\"Matched case: oui3 / non3\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup3' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui7' || parsedPayload.payload === 'non7') {\n        node.warn(\"Matched case: oui7 / non7\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup7' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui9' || parsedPayload.payload === 'non9') {\n        node.warn(\"Matched case: oui9 / non9\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup9' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui15' || parsedPayload.payload === 'non15') {\n        node.warn(\"Matched case: oui15 / non15\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui15/non15: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup15' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui18' || parsedPayload.payload === 'non18') {\n        node.warn(\"Matched case: oui18 / non18\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui18/non18: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup18' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui31' || parsedPayload.payload === 'non31') {\n        node.warn(\"Matched case: oui31 / non31\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup31' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui33' || parsedPayload.payload === 'non33') {\n        node.warn(\"Matched case: oui33 / non33\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui33/non33: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup33' };\n        node.send(closeMsg);\n    }\n       else if (parsedPayload.payload === 'oui35' || parsedPayload.payload === 'non25') {\n        node.warn(\"Matched case: oui35 / non35\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui35/non35: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup35' };\n        node.send(closeMsg);\n    }\n     else if (parsedPayload.payload === 'oui38' || parsedPayload.payload === 'non38') {\n        node.warn(\"Matched case: oui38 / non38\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui38/non38: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup38' };\n        node.send(closeMsg);\n    }\n    \n    else {\n        node.warn(\"UNHANDLED ACTION: \" + JSON.stringify(parsedPayload));\n        // You could either do nothing or pass the message on\n        msg.payload = parsedPayload;\n        node.send(msg);\n    }\n\n} else {\n    // If there's no payload, just pass the message through\n    node.warn(\"No msg.payload found; passing message through.\");\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2320,
        "wires": [
            [
                "41420880d236b240",
                "94a8919ad8194b6f",
                "5120889ede718098"
            ]
        ]
    },
    {
        "id": "41420880d236b240",
        "type": "websocket out",
        "z": "7c68352c.1b47bc",
        "name": "WebSocket Out",
        "server": "76b9ba0b34742c81",
        "client": "",
        "x": 800,
        "y": 2340,
        "wires": []
    },
    {
        "id": "7e11a21430b7d549",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "6258723b1d975706"
        ],
        "x": 685,
        "y": 2420,
        "wires": []
    },
    {
        "id": "6258723b1d975706",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "01ec2e5ddc1eb73c",
            "281a8e4793b1e00c",
            "543b064cda3e254c",
            "7e11a21430b7d549",
            "f758aea01c369809"
        ],
        "x": 515,
        "y": 2180,
        "wires": [
            [
                "38b140e68a42dde2",
                "41420880d236b240",
                "af4c54b2a8126952",
                "cc7567682b8e3b38"
            ]
        ]
    },
    {
        "id": "94a8919ad8194b6f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "retrieveOUIr1",
        "mode": "link",
        "links": [
            "7b5f893bdc29d8db",
            "8777b85812710176",
            "87f2976ba754a8b9",
            "8e7b8918d8ced60d",
            "bc94d3bf8d4209a4"
        ],
        "x": 515,
        "y": 2380,
        "wires": []
    },
    {
        "id": "8777b85812710176",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "94a8919ad8194b6f"
        ],
        "x": 305,
        "y": 2520,
        "wires": [
            [
                "12dee2363aa39f4a",
                "87d7b008cc3b3112",
                "e3d6e277956a332a"
            ]
        ]
    },
    {
        "id": "5120889ede718098",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PROCESS MESSAGE AFTER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 2200,
        "wires": []
    },
    {
        "id": "1ece44e4709dcbad",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PROCESS MESSAGE BEFORE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 2220,
        "wires": []
    },
    {
        "id": "38b140e68a42dde2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Before Node WS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 2300,
        "wires": []
    },
    {
        "id": "0d1eccd2490e9395",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"oui15\",\"topic\":{\"isp\":\"31546\"}}",
        "payloadType": "str",
        "x": 150,
        "y": 2340,
        "wires": [
            [
                "66e39c2e0fc34e69",
                "af4c54b2a8126952"
            ]
        ]
    },
    {
        "id": "af4c54b2a8126952",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 2360,
        "wires": []
    },
    {
        "id": "03c706aa59d9afaa",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui31",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 2580,
        "wires": [
            [
                "0718e4c2391326ba"
            ]
        ]
    },
    {
        "id": "2ff65edf259c1b31",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Update time optilmized",
        "mode": "link",
        "links": [
            "7304714e7d848586"
        ],
        "x": 775,
        "y": 2680,
        "wires": []
    },
    {
        "id": "be48be044f7a15d4",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "WARNING DELETE DB BLUE 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2950,
        "y": 2360,
        "wires": []
    },
    {
        "id": "2a8b9d3f9b0d1194",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 665,
        "y": 2660,
        "wires": []
    },
    {
        "id": "e7a8bd8a4cd94f1b",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui31",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 2700,
        "wires": [
            [
                "2a8b9d3f9b0d1194",
                "0e2e8a01436b2a63"
            ]
        ]
    },
    {
        "id": "12dee2363aa39f4a",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "350",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 490,
        "y": 2500,
        "wires": [
            [
                "ff4fc4d8700e26d2"
            ]
        ]
    },
    {
        "id": "87d7b008cc3b3112",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 2540,
        "wires": [
            [
                "03c706aa59d9afaa"
            ]
        ]
    },
    {
        "id": "3a2ac3d6a5076d51",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "command": "cd /app/maneuver-manager && rm -rf LastManeuverDate3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 605,
        "y": 2720,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "2e572f014346a286",
        "type": "http request",
        "z": "7c68352c.1b47bc",
        "name": "Celestrak_req_NORBI",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://celestrak.com/NORAD/elements/gp.php?CATNR=39446",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1100,
        "y": 3340,
        "wires": [
            [
                "979dba6fee394920",
                "f6f311f2e2699fdd"
            ]
        ]
    },
    {
        "id": "979dba6fee394920",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 3420,
        "wires": [
            [
                "8c919507bf8306c3"
            ],
            []
        ]
    },
    {
        "id": "8c919507bf8306c3",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1120,
        "y": 3460,
        "wires": [
            [
                "238699bbb7826cf2",
                "ba98852e226b24d3"
            ],
            []
        ]
    },
    {
        "id": "238699bbb7826cf2",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "msg_tle_function",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:\"tle-celestrak\",\n payload:msg.payload,\n //body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3500,
        "wires": [
            [
                "97b19362efdc0cf1"
            ]
        ]
    },
    {
        "id": "97b19362efdc0cf1",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": ":",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1090,
        "y": 3540,
        "wires": [
            [
                "f1336c61155be39c"
            ]
        ]
    },
    {
        "id": "f1336c61155be39c",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1270,
        "y": 3540,
        "wires": [
            [
                "49ed807ab6937ff1",
                "b610e09b0ae6c364",
                "0c966dd888cdfbd3",
                "374cf96748949877"
            ]
        ]
    },
    {
        "id": "2bc79afa8d0325e4",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-CUSTOM",
        "func": "\n   return{\n topic:\"tle\",\n paths:null,\n     payload: [msg.paths.path_1, msg.paths.path_2, msg.paths.path_101.dry_mass, msg.paths.path_101.ergol_mass, msg.paths.path_101.ergol_consumption],\n body:null\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 3500,
        "wires": [
            [
                "c80b198bfd0a2ff8",
                "228128df36ba6b18",
                "b365f331758cd5c9",
                "4f1ab2571e7f47ae"
            ]
        ]
    },
    {
        "id": "79b10469de875d8e",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-1",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic:msg.topic,\n payload:msg.payload[0].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 3500,
        "wires": [
            [
                "c2d0b83811896049"
            ]
        ]
    },
    {
        "id": "a45f4ad762cecfba",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-2",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n   return{\n topic: msg.topic,\n payload: msg.payload[1].col1,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 3540,
        "wires": [
            [
                "8ce30289d2df645a"
            ]
        ]
    },
    {
        "id": "3d07fdeeb38f6d9d",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_101",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_101",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 3660,
        "wires": [
            [
                "f9622fe9c4c79ed3",
                "b47a628da9293509",
                "98099e406b5c726d"
            ]
        ]
    },
    {
        "id": "01fee51018459908",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 3600,
        "wires": [
            [
                "f9622fe9c4c79ed3"
            ]
        ]
    },
    {
        "id": "c91f7db12c96aa21",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "TLE-2-edit",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n// This was changed during the training of the space commandement trainees it aims at keeping the TLE format for inclination greater than 100 with 3 digits\n\n// Latest version has no more test for the inclinaison as formating is done by the tlesetter\n     return{\n topic:\"tle\",\n payload: \"2 13601 \"+msg.paths.path_101.incli+\" \"+msg.paths.path_101.raan+\" \"+msg.paths.path_101.ecc+\" \"+msg.paths.path_101.aop+\" \"+msg.paths.path_101.meana+\" \"+msg.paths.path_101.mean,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 3580,
        "wires": [
            [
                "b0acb0c902274484"
            ]
        ]
    },
    {
        "id": "3542e64f4a332417",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 3540,
        "wires": [
            [
                "98099e406b5c726d",
                "0edb650322d675f3"
            ]
        ]
    },
    {
        "id": "b0acb0c902274484",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2470,
        "y": 3580,
        "wires": [
            [
                "98099e406b5c726d",
                "47dce272cbb584d3"
            ]
        ]
    },
    {
        "id": "98099e406b5c726d",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_2\", \"path_1\",\"path_101\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2160,
        "y": 3480,
        "wires": [
            [
                "2bc79afa8d0325e4",
                "258ecd8fc87499cb"
            ],
            []
        ]
    },
    {
        "id": "275a4d19d2c34961",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2330,
        "y": 3620,
        "wires": []
    },
    {
        "id": "b78d4e6cc3e1fcf2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "check output blue1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2110,
        "y": 3340,
        "wires": []
    },
    {
        "id": "b365f331758cd5c9",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2750,
        "y": 3580,
        "wires": [
            [
                "095b58795ec53d2c",
                "8c360fc5911891f9",
                "b021a45d5c7da855"
            ]
        ]
    },
    {
        "id": "8ce30289d2df645a",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1710,
        "y": 3540,
        "wires": [
            [
                "400d99d9d2aa0f41"
            ]
        ]
    },
    {
        "id": "400d99d9d2aa0f41",
        "type": "join",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1710,
        "y": 3580,
        "wires": [
            [
                "66cc1020abf7a713",
                "01fee51018459908"
            ]
        ]
    },
    {
        "id": "f9622fe9c4c79ed3",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_3\", \"path_101\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2160,
        "y": 3580,
        "wires": [
            [
                "c91f7db12c96aa21"
            ],
            []
        ]
    },
    {
        "id": "66cc1020abf7a713",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 3560,
        "wires": [
            [
                "f9622fe9c4c79ed3"
            ]
        ]
    },
    {
        "id": "c2d0b83811896049",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 3400,
        "wires": [
            [
                "c13df54a5d461cf3"
            ]
        ]
    },
    {
        "id": "c13df54a5d461cf3",
        "type": "join-wait",
        "z": "7c68352c.1b47bc",
        "name": "",
        "paths": "[\"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1780,
        "y": 3400,
        "wires": [
            [
                "b78d4e6cc3e1fcf2",
                "1335f24eca12ef76"
            ],
            []
        ]
    },
    {
        "id": "79a091b353337b8c",
        "type": "ui_button",
        "z": "7c68352c.1b47bc",
        "name": "",
        "group": "d4e830c4b00daeae",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "R2 TLE Update",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#B5FC48",
        "className": "",
        "icon": "fa-globe",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 3520,
        "wires": [
            [
                "8c4e14349d520640"
            ]
        ]
    },
    {
        "id": "cca2bfdbffecd16d",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB2",
        "mode": "link",
        "links": [
            "c9235065a31da113",
            "8848916d67bd346f"
        ],
        "x": 1155,
        "y": 3720,
        "wires": []
    },
    {
        "id": "fb9087d091497cd3",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toR1",
        "mode": "link",
        "links": [
            "118f0f492f55ac0a",
            "da60363e18c79508"
        ],
        "x": 1135,
        "y": 3760,
        "wires": []
    },
    {
        "id": "e2e685d9087d7ba9",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toB1",
        "mode": "link",
        "links": [
            "af9822fbee098e88"
        ],
        "x": 1125,
        "y": 3800,
        "wires": []
    },
    {
        "id": "1133b467632f0c17",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR1B",
        "mode": "link",
        "links": [
            "86b56c5aafa5e5b1"
        ],
        "x": 885,
        "y": 3800,
        "wires": []
    },
    {
        "id": "006cbc921e747cbf",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR4",
        "mode": "link",
        "links": [
            "aefdaa7be5886b6e",
            "a5eccb78df072978"
        ],
        "x": 805,
        "y": 3780,
        "wires": []
    },
    {
        "id": "ecc9eef4ee4c3b74",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "toPHR3",
        "mode": "link",
        "links": [
            "ef70a4bf5d96cb98",
            "1d8f9124f6c023ac"
        ],
        "x": 985,
        "y": 3800,
        "wires": []
    },
    {
        "id": "c80b198bfd0a2ff8",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Query to add",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.tle1 = msg.payload[0]\ngs.tle2 = msg.payload[1]\ngs.dry_mass  = msg.payload[2]\ngs.ergol_mass = msg.payload[3]\ngs.ergol_consumption = msg.payload[4]\n//Default\ngs.status = 1\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 3380,
        "wires": [
            [
                "e1b12a27aa24f0ef"
            ]
        ]
    },
    {
        "id": "e1b12a27aa24f0ef",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2350,
        "y": 3380,
        "wires": [
            [
                "9d24fd88bce76eb0",
                "8d0aa4bce003bc30",
                "76599b86cc3c2266",
                "bea782876dfa1e77",
                "37d4f17e2b1f699d"
            ]
        ]
    },
    {
        "id": "76599b86cc3c2266",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2660,
        "y": 3380,
        "wires": []
    },
    {
        "id": "73dd4bb1ee938070",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "update all for R2 IN",
        "links": [
            "59886789b2e9b3e8",
            "c3b11c0252e10c76",
            "e3c25dd78fa7731c"
        ],
        "x": 775,
        "y": 3600,
        "wires": [
            [
                "1133b467632f0c17",
                "006cbc921e747cbf",
                "ecc9eef4ee4c3b74",
                "93bdb173925d6f0f",
                "cca2bfdbffecd16d",
                "fb9087d091497cd3",
                "e2e685d9087d7ba9",
                "78e44121ae2e3b08",
                "8ed81608c05c3320",
                "814400e6cdb2c422"
            ]
        ]
    },
    {
        "id": "258ecd8fc87499cb",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query to delete r2tlelatest",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 3460,
        "wires": [
            [
                "91e7a51718a5a64a",
                "ec3d4447e1398eec"
            ]
        ]
    },
    {
        "id": "91e7a51718a5a64a",
        "type": "mongodb out",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 2840,
        "y": 3440,
        "wires": []
    },
    {
        "id": "93bdb173925d6f0f",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for r2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 3640,
        "wires": [
            [
                "dc6209cb2f48c477",
                "9a191ea9adbb3ae2"
            ]
        ]
    },
    {
        "id": "dc6209cb2f48c477",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 1120,
        "y": 3680,
        "wires": [
            [
                "465ab2ddb6cd1555",
                "af55ccc22d476cc4"
            ]
        ]
    },
    {
        "id": "465ab2ddb6cd1555",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle-mongo\",\n    payload: [msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3680,
        "wires": [
            [
                "f5e4f7966b219936",
                "b4cdf4b655541d0a"
            ]
        ]
    },
    {
        "id": "f5e4f7966b219936",
        "type": "split",
        "z": "7c68352c.1b47bc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1290,
        "y": 3720,
        "wires": [
            [
                "18effc21c2d14f3a"
            ]
        ]
    },
    {
        "id": "18effc21c2d14f3a",
        "type": "csv",
        "z": "7c68352c.1b47bc",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "col1,col2,col3,col4,col5",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1410,
        "y": 3720,
        "wires": [
            [
                "79b10469de875d8e",
                "a45f4ad762cecfba",
                "deb71780a6dc1e17"
            ]
        ]
    },
    {
        "id": "1d2bcd38969248e6",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "query for r2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 3700,
        "wires": [
            [
                "98b0621e482bb3cf"
            ]
        ]
    },
    {
        "id": "98b0621e482bb3cf",
        "type": "mongodb in",
        "z": "7c68352c.1b47bc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 2240,
        "y": 3760,
        "wires": [
            [
                "1b1d44a1cf225dc2",
                "964033268aab088f"
            ]
        ]
    },
    {
        "id": "1b1d44a1cf225dc2",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "tle1-2",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload[0] && msg.payload[0].tle1 && msg.payload[0].tle2) {\n    return {\n        topic: \"tle\",\n        payload: [msg.payload[0].tle1, msg.payload[0].tle2,msg.payload[0].dry_mass,msg.payload[0].ergol_mass,msg.payload[0].ergol_consumption],\n        body: 12\n    };\n} else {\n    node.warn(\"Les propriétés 'tle1' ou 'tle2' sont manquantes ou le satellite n'est pas correctement défini.\");\n    return null; // On peut renvoyer null pour stopper le flux si les données sont manquantes\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 3720,
        "wires": [
            [
                "b1e5199a0cb57d09",
                "b365f331758cd5c9"
            ]
        ]
    },
    {
        "id": "b1e5199a0cb57d09",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TLE of B1 requested in the DB by an UPdate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2770,
        "y": 3780,
        "wires": []
    },
    {
        "id": "f6f311f2e2699fdd",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "To Celestrak requests return OUT",
        "mode": "link",
        "links": [
            "d3c174fe5dac8092",
            "082d3d8388a6da40",
            "9cf4d89f80284a28",
            "a57a4be5d794050d"
        ],
        "x": 1295,
        "y": 3380,
        "wires": []
    },
    {
        "id": "095b58795ec53d2c",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Set path6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2940,
        "y": 3660,
        "wires": []
    },
    {
        "id": "deb71780a6dc1e17",
        "type": "file in",
        "z": "7c68352c.1b47bc",
        "name": "red2-tle-storage-out",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1690,
        "y": 3800,
        "wires": [
            [
                "fdd3d029ddf965ec",
                "9f99bef6e9cf3828"
            ]
        ]
    },
    {
        "id": "fdd3d029ddf965ec",
        "type": "json",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1730,
        "y": 3720,
        "wires": [
            [
                "3d07fdeeb38f6d9d"
            ]
        ]
    },
    {
        "id": "1335f24eca12ef76",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Date to Epoch",
        "func": "\n// New fonction 120623\n\nfunction convertToTLEEpoch(timestamp) {\n  var date = new Date(timestamp);\n  var year = date.getUTCFullYear();\n  var dayOfYear = getDayOfYear(date);\n  // Modification made on the 5/07/23 TO increase precision of the date to the milisecond\n  //var totalSeconds = (date.getUTCHours() * 3600) + (date.getUTCMinutes() * 60) + date.getUTCSeconds();\n  //var fractionOfDay = totalSeconds / (24 * 60 * 60)\n // var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  var totalMilliseconds = (date.getUTCHours() * 3600000) + (date.getUTCMinutes() * 60000) + (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();\n  var fractionOfDay = totalMilliseconds / (24 * 60 * 60 * 1000);\n  var epoch = year.toString().slice(-2) + pad(dayOfYear, 3) + '.' + fractionOfDay.toFixed(8).slice(2);\n  return epoch;\n}\n\nfunction getDayOfYear(date) {\n  var start = new Date(Date.UTC(date.getUTCFullYear(), 0, 0));\n  var diff = date - start;\n  var oneDay = 1000 * 60 * 60 * 24;\n  var dayOfYear = Math.floor(diff / oneDay);\n  \n  return dayOfYear;\n}\n\nfunction pad(num, size) {\n  var s = num.toString();\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nvar timestamp= msg.paths.path_1;\nvar epoch = convertToTLEEpoch(timestamp);\n\n return{\n topic:\"tle\",\n payload: \"1 13601U 23001EAE \"+epoch+\"  .00030938  00000+0  12818-2 0  9996\",\n body: [timestamp, epoch]\n    } \n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 3480,
        "wires": [
            [
                "3542e64f4a332417",
                "d4b5783a398d2df5",
                "c70282e0f2019ea6",
                "3d2debeac7c493f5"
            ]
        ]
    },
    {
        "id": "d4b5783a398d2df5",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "after join wait setpath1 b1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2270,
        "y": 3660,
        "wires": []
    },
    {
        "id": "228128df36ba6b18",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "tle custpo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 3540,
        "wires": []
    },
    {
        "id": "49ed807ab6937ff1",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upb1db out",
        "mode": "link",
        "links": [
            "316d50ec298861de"
        ],
        "x": 1435,
        "y": 3560,
        "wires": []
    },
    {
        "id": "b610e09b0ae6c364",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upb2db out",
        "mode": "link",
        "links": [
            "f711fb70318c34f1"
        ],
        "x": 1435,
        "y": 3600,
        "wires": []
    },
    {
        "id": "0c966dd888cdfbd3",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upr1db out",
        "mode": "link",
        "links": [
            "ab7c9532b74823ba"
        ],
        "x": 1435,
        "y": 3640,
        "wires": []
    },
    {
        "id": "374cf96748949877",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "upr2db out",
        "mode": "link",
        "links": [
            "4f6a448fcc452112"
        ],
        "x": 1425,
        "y": 3680,
        "wires": []
    },
    {
        "id": "389442d5c5aa4cee",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "celestrack wakeup r2",
        "links": [],
        "x": 1345,
        "y": 3320,
        "wires": [
            [
                "79b10469de875d8e",
                "a45f4ad762cecfba",
                "deb71780a6dc1e17"
            ]
        ]
    },
    {
        "id": "7132550d396d1155",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "name": "New version no test on inc 150523",
        "info": "",
        "x": 2460,
        "y": 3540,
        "wires": []
    },
    {
        "id": "a795f0bd73b869d2",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "name": "UWE-3",
        "info": "",
        "x": 890,
        "y": 3440,
        "wires": []
    },
    {
        "id": "83366c7ac72577ed",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "mongostorestork1 out",
        "mode": "link",
        "links": [
            "e7057fba696ff651"
        ],
        "x": 1305,
        "y": 3460,
        "wires": []
    },
    {
        "id": "78e44121ae2e3b08",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "P1A",
        "mode": "link",
        "links": [
            "ccf9f6d431ed64cc"
        ],
        "x": 1015,
        "y": 3740,
        "wires": []
    },
    {
        "id": "8ed81608c05c3320",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "SAT",
        "mode": "link",
        "links": [
            "1e9676e414d32f76"
        ],
        "x": 1045,
        "y": 3780,
        "wires": []
    },
    {
        "id": "c70282e0f2019ea6",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TimePerigee-B1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 3440,
        "wires": []
    },
    {
        "id": "7e8de93e4bbdc09a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 3560,
        "wires": []
    },
    {
        "id": "b4cdf4b655541d0a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Test TLE1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 3900,
        "wires": []
    },
    {
        "id": "9f99bef6e9cf3828",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 3900,
        "wires": []
    },
    {
        "id": "47dce272cbb584d3",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 3660,
        "wires": []
    },
    {
        "id": "b47a628da9293509",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 3640,
        "wires": []
    },
    {
        "id": "0edb650322d675f3",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 3540,
        "wires": []
    },
    {
        "id": "af55ccc22d476cc4",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 3820,
        "wires": []
    },
    {
        "id": "964033268aab088f",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2430,
        "y": 3780,
        "wires": []
    },
    {
        "id": "ba98852e226b24d3",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Ajouter trois lignes",
        "func": "// Récupère la payload existante\nlet payload = msg.payload;\n\n// Créez les trois nouvelles lignes\nlet lignesSupplementaires = `0.0\\n0.0\\n0.0\\n`;\n\n// Ajoutez les nouvelles lignes à la payload existante\nmsg.payload = payload + lignesSupplementaires;\n\n// Retourne le message modifié\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 3420,
        "wires": [
            [
                "83366c7ac72577ed"
            ]
        ]
    },
    {
        "id": "8d0aa4bce003bc30",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Ergol Mass Update r2",
        "mode": "link",
        "links": [
            "1711c1cc796f7940",
            "72bdc1c1a6faf79f"
        ],
        "x": 2665,
        "y": 3320,
        "wires": []
    },
    {
        "id": "363f824babba34cd",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_141",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_141",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 3840,
        "wires": [
            [
                "99e4f48358088e28",
                "d64699b82290a0a5"
            ]
        ]
    },
    {
        "id": "72316f670c2f8081",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Opti",
        "mode": "link",
        "links": [
            "1d83106db0c091cd",
            "48ee54bd869b3619",
            "ee0af6fccbb5381f",
            "d39e139798401e69"
        ],
        "x": 1095,
        "y": 3900,
        "wires": []
    },
    {
        "id": "99e4f48358088e28",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PATH OPTI",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 3920,
        "wires": []
    },
    {
        "id": "9a191ea9adbb3ae2",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TEST TLE1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 3620,
        "wires": []
    },
    {
        "id": "9d24fd88bce76eb0",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2350,
        "y": 3420,
        "wires": [
            [
                "1d2bcd38969248e6"
            ]
        ]
    },
    {
        "id": "8c4e14349d520640",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup41' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 3520,
        "wires": [
            [
                "732ecf60e5a9618f"
            ]
        ]
    },
    {
        "id": "f62b87dcd722b6d5",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui41",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 3620,
        "wires": [
            [
                "7e8de93e4bbdc09a",
                "93bdb173925d6f0f",
                "cca2bfdbffecd16d",
                "fb9087d091497cd3",
                "e2e685d9087d7ba9",
                "78e44121ae2e3b08",
                "8ed81608c05c3320",
                "ecc9eef4ee4c3b74",
                "1133b467632f0c17",
                "006cbc921e747cbf",
                "363f824babba34cd"
            ]
        ]
    },
    {
        "id": "bea782876dfa1e77",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B1 TLE UPDATE",
        "mode": "link",
        "links": [
            "b0d8c5539e8759c0"
        ],
        "x": 2415,
        "y": 3320,
        "wires": []
    },
    {
        "id": "b0d8c5539e8759c0",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "bea782876dfa1e77"
        ],
        "x": 1885,
        "y": 3840,
        "wires": [
            [
                "a4e9cd2f4310da7f"
            ]
        ]
    },
    {
        "id": "a4e9cd2f4310da7f",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1990,
        "y": 3840,
        "wires": [
            [
                "1d2bcd38969248e6"
            ]
        ]
    },
    {
        "id": "9b516f233e4f4fbd",
        "type": "ui_template",
        "z": "7c68352c.1b47bc",
        "group": "a1e2900e2867cd47",
        "name": "",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<!-- =========================\n Node-RED ui_template Content\n========================== -->\n\n<style>\n /* Override md-content, which the Dashboard sets to overflow: auto */\n  md-content,\n  .md-content {\n    overflow: hidden !important;\n  }\n\n  /* Also override html/body if needed */\n  html,\n  body,\n  .nr-dashboard-theme {\n    overflow: hidden !important;\n    margin: 0;\n    padding: 0;\n  }\n\n  /* Hide scrollbars in WebKit browsers */\n  html::-webkit-scrollbar,\n  body::-webkit-scrollbar,\n  md-content::-webkit-scrollbar,\n  .md-content::-webkit-scrollbar {\n    display: none !important;\n  }\n\n  /* Hide scrollbars in Firefox and IE/Edge */\n  html, body {\n    scrollbar-width: none;       /* Firefox */\n    -ms-overflow-style: none;    /* IE/Edge */\n  }\n  /* ============ Modal Overlay ============ */\n  .modal {\n    position: fixed;\n    z-index: 9999;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    background-color: rgba(128, 128, 128, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease, visibility 0.3s ease;\n  }\n  \n  .modal.show {\n    opacity: 1;\n    visibility: visible;\n  }\n  \n  /* ============ Modal Content ============ */\n  .modal-content {\n    background-color: #244052;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 400px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n    color: white;\n    transform: translateY(-20px);\n    transition: transform 0.3s ease;\n  }\n  \n  .modal.show .modal-content {\n    transform: translateY(0);\n  }\n  \n  /* ============ Button Group ============ */\n  .button-group {\n    margin-top: 20px;\n  }\n  \n  /* ============ Buttons ============ */\n  .button-group button {\n    padding: 10px 20px;\n    margin: 0 15px;\n    font-size: 16px;\n    cursor: pointer;\n    border: none;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n    color: white;\n  }\n  \n  /* ============ YES/NO styling for each ============ */\n  /* Modal 1 */\n  #ouiBtn1 { background-color: #4CAF50; }\n  #ouiBtn1:hover { background-color: #45a049; }\n  #nonBtn1 { background-color: #f44336; }\n  #nonBtn1:hover { background-color: #da190b; }\n\n  /* Modal 2 */\n  #ouiBtn2 { background-color: #4CAF50; }\n  #ouiBtn2:hover { background-color: #45a049; }\n  #nonBtn2 { background-color: #f44336; }\n  #nonBtn2:hover { background-color: #da190b; }\n\n  /* Modal 3 */\n  #ouiBtn3 { background-color: #4CAF50; }\n  #ouiBtn3:hover { background-color: #45a049; }\n  #nonBtn3 { background-color: #f44336; }\n  #nonBtn3:hover { background-color: #da190b; }\n\n  /* Modal 4 */\n  #ouiBtn4 { background-color: #4CAF50; }\n  #ouiBtn4:hover { background-color: #45a049; }\n  #nonBtn4 { background-color: #f44336; }\n  #nonBtn4:hover { background-color: #da190b; }\n\n  /* Modal 5 */\n  #ouiBtn5 { background-color: #4CAF50; }\n  #ouiBtn5:hover { background-color: #45a049; }\n  #nonBtn5 { background-color: #f44336; }\n  #nonBtn5:hover { background-color: #da190b; }\n\n  /* Modal 7 */\n  #ouiBtn7 { background-color: #4CAF50; }\n  #ouiBtn7:hover { background-color: #45a049; }\n  #nonBtn7 { background-color: #f44336; }\n  #nonBtn7:hover { background-color: #da190b; }\n\n  /* Modal 9 */\n  #ouiBtn9 { background-color: #4CAF50; }\n  #ouiBtn9:hover { background-color: #45a049; }\n  #nonBtn9 { background-color: #f44336; }\n  #nonBtn9:hover { background-color: #da190b; }\n  \n  /* Modal 15 */\n  #ouiBtn15 { background-color: #4CAF50; }\n  #ouiBtn15:hover { background-color: #45a049; }\n  #nonBtn15 { background-color: #f44336; }\n  #nonBtn15:hover { background-color: #da190b; }\n  \n  /* Modal 17 */\n  #ouiBtn17 { background-color: #4CAF50; }\n  #ouiBtn17:hover { background-color: #45a049; }\n  #nonBtn17 { background-color: #f44336; }\n  #nonBtn17:hover { background-color: #da190b; }\n  \n  /* Modal 18 */\n  #ouiBtn18 { background-color: #4CAF50; }\n  #ouiBtn18:hover { background-color: #45a049; }\n  #nonBtn18 { background-color: #f44336; }\n  #nonBtn18:hover { background-color: #da190b; }\n  \n  /* Modal 41 */\n  #ouiBtn41 { background-color: #4CAF50; }\n  #ouiBtn41:hover { background-color: #45a049; }\n  #nonBtn41 { background-color: #f44336; }\n  #nonBtn41:hover { background-color: #da190b; }\n \n  /* Modal 43 */\n  #ouiBtn43 { background-color: #4CAF50; }\n  #ouiBtn43:hover { background-color: #45a049; }\n  #nonBtn43 { background-color: #f44336; }\n  #nonBtn43:hover { background-color: #da190b; }\n\n  /* Modal 45 */\n  #ouiBtn45 { background-color: #4CAF50; }\n  #ouiBtn45:hover { background-color: #45a049; }\n  #nonBtn45 { background-color: #f44336; }\n  #nonBtn45:hover { background-color: #da190b; }\n  \n  /* Modal 48 */\n  #ouiBtn48 { background-color: #4CAF50; }\n  #ouiBtn48:hover { background-color: #45a049; }\n  #nonBtn48 { background-color: #f44336; }\n  #nonBtn48:hover { background-color: #da190b; }\n  \n</style>\n\n<!-- =============================\n       All Your Modal Markup\n============================= -->\n\n<!-- Modal 1 -->\n<div id=\"confirmationModal1\" class=\"modal\" aria-labelledby=\"modalTitle1\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle1\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action initialisera un satellite (TLEs & masse) à partir des données entrées.<br><br>\n          Voulez-vous confirmer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn1\">Oui</button>\n          <button id=\"nonBtn1\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 2 -->\n<div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle2\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle2\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Cette action déclenchera une manoeuvre manuelle à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn2\">Oui</button>\n      <button id=\"nonBtn2\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 3 -->\n<div id=\"confirmationModal3\" class=\"modal\" aria-labelledby=\"modalTitle3\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle3\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rechargera et écrasera toutes les TLEs à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn3\">Oui</button>\n      <button id=\"nonBtn3\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 4 -->\n<div id=\"confirmationModal4\" class=\"modal\" aria-labelledby=\"modalTitle4\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle4\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les dernières TLEs enregistrées.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn4\">Oui</button>\n      <button id=\"nonBtn4\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 5 -->\n<div id=\"confirmationModal5\" class=\"modal\" aria-labelledby=\"modalTitle5\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle5\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira les données de VTS en se basant sur la base de données de Celestrak.<br><br>\n      Si vous souhaitez démarrer un nouvel horizon de simulation, il est recommandé de cliquer préalablement sur \"REFRESH TLE DATABASE\"<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn5\">Oui</button>\n      <button id=\"nonBtn5\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 7 -->\n<div id=\"confirmationModal7\" class=\"modal\" aria-labelledby=\"modalTitle7\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle7\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action supprimera les fichiers OEMs de l'ensemble des satellites.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn7\">Oui</button>\n      <button id=\"nonBtn7\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 9 -->\n<div id=\"confirmationModal9\" class=\"modal\" aria-labelledby=\"modalTitle9\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle9\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Celestrak.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn9\">Oui</button>\n      <button id=\"nonBtn9\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 15 -->\n<div id=\"confirmationModal15\" class=\"modal\" aria-labelledby=\"modalTitle15\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle15\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Cette action déclenchera une manoeuvre prédéfinie à partir des paramètres entrés.<br><br>\n      Voulez-vous continuer ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn15\">Oui</button>\n      <button id=\"nonBtn15\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 17 -->\n<div id=\"confirmationModal17\" class=\"modal\" aria-labelledby=\"modalTitle17\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle17\" class=\"modal-text\" style=\"background-color: #244052; color: white; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action rafraîchira toutes les données VTS de l'ensemble des satellites à partir de la base de données de Aiglons.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn17\">Oui</button>\n      <button id=\"nonBtn17\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 18 -->\n<div id=\"confirmationModal18\" class=\"modal\" aria-labelledby=\"modalTitle18\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle18\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action restaurera l'état du système avant la dernière manoeuvre réalisée.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn18\">Oui</button>\n      <button id=\"nonBtn18\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- Modal 41 -->\n<div id=\"confirmationModal41\" class=\"modal\" aria-labelledby=\"modalTitle41\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle41\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action initialisera un satellite RED2 (TLEs & masse) à partir des données entrées.<br><br>\n          Voulez-vous confirmer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn41\">Oui</button>\n          <button id=\"nonBtn41\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 43 -->\n<div id=\"confirmationModal43\" class=\"modal\" aria-labelledby=\"modalTitle43\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle43\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action déclenchera une manoeuvre manuelle pour RED2 à partir des paramètres entrés.<br><br>\n          Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn43\">Oui</button>\n          <button id=\"nonBtn43\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 25 -->\n<div id=\"confirmationModal45\" class=\"modal\" aria-labelledby=\"modalTitle45\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n      <p id=\"modalTitle45\" class=\"modal-text\"\n          style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n          Cette action déclenchera une manoeuvre prédéfinie pour RED2 à partir des paramètres entrés.<br><br>\n          Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n          <button id=\"ouiBtn45\">Oui</button>\n          <button id=\"nonBtn45\">Non</button>\n      </div>\n  </div>\n</div>\n\n<!-- Modal 48 -->\n<div id=\"confirmationModal48\" class=\"modal\" aria-labelledby=\"modalTitle48\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-content\">\n    <p id=\"modalTitle48\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n      Attention : cette action restaurera l'état du système avant la dernière manoeuvre réalisée.<br><br>\n      Êtes-vous sûr de vouloir poursuivre ?\n    </p>\n    <div class=\"button-group\">\n      <button id=\"ouiBtn48\">Oui</button>\n      <button id=\"nonBtn48\">Non</button>\n    </div>\n  </div>\n</div>\n\n<!-- =========================\n   JavaScript Initialization\n========================= -->\n\n<script>\n(function(scope) {\n    // We use this flag so we only init once per dashboard rendering\n    let initialized = false;\n    let latestMsg = null;  // Will store the most recent input msg (for topic, etc.)\n\n    scope.$watch('msg', function(msg) {\n        if (msg) {\n          // Update our local copy so we can reference msg.topic in button callbacks\n          latestMsg = msg;\n        }\n\n        if (!initialized) {\n            initialized = true;\n            initModalLogic();\n        }\n    });\n\n    function initModalLogic() {\n      console.log(\"Initializing modal logic...\");\n\n      // 1) WebSocket connection\n      const socketUrl2 = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/modal5`;\n      console.log(\"Connecting to WebSocket at:\", socketUrl2);\n      const socket2 = new WebSocket(socketUrl2);\n\n      socket2.addEventListener('open', () => {\n        console.log(\"WebSocket connection established for modal!\");\n      });\n\n      socket2.addEventListener('error', (error) => {\n        console.error(\"WebSocket error:\", error);\n      });\n\n      // 2) Show/hide logic based on incoming messages\n      socket2.addEventListener('message', function(event) {\n        let command;\n        try {\n          const msg = JSON.parse(event.data);\n          command = msg.payload || msg;\n        } catch (e) {\n          command = event.data;\n        }\n\n        if (command.startsWith('hidePopup')) {\n          const modalId = `confirmationModal${command.replace('hidePopup', '')}`;\n          hideModal(modalId);\n        } else if (command.startsWith('showPopup')) {\n          const modalId = `confirmationModal${command.replace('showPopup', '')}`;\n          showModal(modalId);\n        } else {\n          console.warn(\"Unknown command:\", command);\n        }\n      });\n\n      // 3) Attach event listeners for each “Oui/Non” button\n      //    We'll incorporate the original msg.topic into the \"oui15\" send\n\n      document.getElementById('ouiBtn1')?.addEventListener('click', function() {\n        console.log(\"Oui button 1 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui1' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup1' }));\n        hideModal('confirmationModal1');\n      });\n\n      document.getElementById('nonBtn1')?.addEventListener('click', function() {\n        console.log(\"Non button 1 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non1' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup1' }));\n        hideModal('confirmationModal1');\n      });\n\n      document.getElementById('ouiBtn2')?.addEventListener('click', function() {\n        console.log(\"Oui button 2 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui2',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn2:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup2' }));\n        hideModal('confirmationModal2');\n      });\n\n      document.getElementById('nonBtn2')?.addEventListener('click', function() {\n        console.log(\"Non button 2 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non2' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup2' }));\n        hideModal('confirmationModal2');\n      });\n\n      document.getElementById('ouiBtn3')?.addEventListener('click', function() {\n        console.log(\"Oui button 3 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui3' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('nonBtn3')?.addEventListener('click', function() {\n        console.log(\"Non button 3 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non3' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup3' }));\n        hideModal('confirmationModal3');\n      });\n\n      document.getElementById('ouiBtn4')?.addEventListener('click', function() {\n        console.log(\"Oui button 4 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui4' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('nonBtn4')?.addEventListener('click', function() {\n        console.log(\"Non button 4 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non4' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup4' }));\n        hideModal('confirmationModal4');\n      });\n\n      document.getElementById('ouiBtn5')?.addEventListener('click', function() {\n        console.log(\"Oui button 5 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui5' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('nonBtn5')?.addEventListener('click', function() {\n        console.log(\"Non button 5 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non5' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup5' }));\n        hideModal('confirmationModal5');\n      });\n\n      document.getElementById('ouiBtn7')?.addEventListener('click', function() {\n        console.log(\"Oui button 7 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui7' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('nonBtn7')?.addEventListener('click', function() {\n        console.log(\"Non button 7 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non7' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup7' }));\n        hideModal('confirmationModal7');\n      });\n\n      document.getElementById('ouiBtn9')?.addEventListener('click', function() {\n        console.log(\"Oui button 9 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui9' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      document.getElementById('nonBtn9')?.addEventListener('click', function() {\n        console.log(\"Non button 9 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non9' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup9' }));\n        hideModal('confirmationModal9');\n      });\n\n      // -- Here's the button #15 that sends msg.topic too --\n      document.getElementById('ouiBtn15')?.addEventListener('click', function() {\n        console.log(\"Oui button 15 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui15',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn15:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup15' }));\n        hideModal('confirmationModal15');\n      });\n\n      document.getElementById('nonBtn15')?.addEventListener('click', function() {\n        console.log(\"Non button 15 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non15' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup15' }));\n        hideModal('confirmationModal15');\n      });\n\n      document.getElementById('ouiBtn17')?.addEventListener('click', function() {\n        console.log(\"Oui button 17 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui17' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n\n      document.getElementById('nonBtn17')?.addEventListener('click', function() {\n        console.log(\"Non button 17 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non17' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup17' }));\n        hideModal('confirmationModal17');\n      });\n      \n      \n      document.getElementById('ouiBtn18')?.addEventListener('click', function() {\n        console.log(\"Oui button 18 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui18' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup18' }));\n        hideModal('confirmationModal18');\n      });\n\n      document.getElementById('nonBtn18')?.addEventListener('click', function() {\n        console.log(\"Non button 18 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non18' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup18' }));\n        hideModal('confirmationModal18');\n      });\n      \n      \n      document.getElementById('ouiBtn41')?.addEventListener('click', function() {\n        console.log(\"Oui button 41 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui41' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup41' }));\n        hideModal('confirmationModal41');\n      });\n\n      document.getElementById('nonBtn41')?.addEventListener('click', function() {\n        console.log(\"Non button 41 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non41' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup41' }));\n        hideModal('confirmationModal41');\n      });\n      \n      document.getElementById('ouiBtn43')?.addEventListener('click', function() {\n        console.log(\"Oui button 43 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui43',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn43:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup43' }));\n        hideModal('confirmationModal43');\n      });\n\n      document.getElementById('nonBtn43')?.addEventListener('click', function() {\n        console.log(\"Non button 43 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non43' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup43' }));\n        hideModal('confirmationModal43');\n      });\n      \n      // -- Here's the button #45 that sends msg.topic too --\n      document.getElementById('ouiBtn45')?.addEventListener('click', function() {\n        console.log(\"Oui button 45 clicked\");\n\n        // Prepare the message payload\n        const messageToSend = { \n          payload: 'oui45',\n          topic: latestMsg ? latestMsg.topic : undefined\n        };\n\n        // Log the message being sent\n        console.log(\"Sending message for ouiBtn45:\", messageToSend);\n\n        // Send the message and hide the modal\n        socket2.send(JSON.stringify({ payload: messageToSend }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup45' }));\n        hideModal('confirmationModal45');\n      });\n\n      document.getElementById('nonBtn45')?.addEventListener('click', function() {\n        console.log(\"Non button 45 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non45' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup45' }));\n        hideModal('confirmationModal45');\n      });\n      \n      \n         document.getElementById('ouiBtn48')?.addEventListener('click', function() {\n        console.log(\"Oui button 48 clicked\");\n        socket2.send(JSON.stringify({ payload: 'oui48' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup48' }));\n        hideModal('confirmationModal48');\n      });\n\n      document.getElementById('nonBtn48')?.addEventListener('click', function() {\n        console.log(\"Non button 48 clicked\");\n        socket2.send(JSON.stringify({ payload: 'non48' }));\n        socket2.send(JSON.stringify({ payload: 'hidePopup48' }));\n        hideModal('confirmationModal48');\n      });\n    }\n\n    // ====== Functions to Show / Hide a Modal ======\n    function showModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n      if (modal.classList.contains('show')) {\n        console.log(`Modal with ID: ${modalId} is already shown, skipping showModal().`);\n      }\n      modal.style.display = 'block';\n      // Force reflow to ensure transition occurs\n      void modal.offsetHeight;\n      modal.classList.add('show');\n      console.log(`Modal with ID: ${modalId} shown`);\n    }\n\n    function hideModal(modalId) {\n      const modal = document.getElementById(modalId);\n      if (!modal) {\n        console.error(`No modal found with ID: ${modalId}`);\n        return;\n      }\n\n      modal.classList.remove('show');\n      // Fallback\n      setTimeout(() => {\n        if (modal.style.display !== 'none') {\n          modal.style.display = 'none';\n          console.log(`Modal with ID: ${modalId} hidden with fallback`);\n        }\n      }, 350);\n\n      modal.addEventListener('transitionend', function handler(e) {\n        if (e.propertyName === 'opacity') {\n          modal.style.display = 'none';\n          modal.removeEventListener('transitionend', handler);\n          console.log(`Modal with ID: ${modalId} hidden via transitionend`);\n        }\n      });\n    }\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 3580,
        "wires": [
            []
        ]
    },
    {
        "id": "d64699b82290a0a5",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1030,
        "y": 3840,
        "wires": [
            [
                "72316f670c2f8081"
            ]
        ]
    },
    {
        "id": "446b73bab1a8b9b9",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Overwrite LastDate r2",
        "mode": "link",
        "links": [
            "42e5130569abfefa"
        ],
        "x": 555,
        "y": 3700,
        "wires": []
    },
    {
        "id": "37d4f17e2b1f699d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "TEST DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2540,
        "y": 3320,
        "wires": []
    },
    {
        "id": "2dc4bf3bd81ee01b",
        "type": "websocket in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "server": "7eab7619d7c1b31c",
        "client": "",
        "x": 260,
        "y": 3420,
        "wires": [
            [
                "db8dd0deb9791065",
                "f5d218edd860a34a"
            ]
        ]
    },
    {
        "id": "db8dd0deb9791065",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "name": "Process Message",
        "func": "if (msg.payload) {\n    let parsedPayload = null;\n    \n    // Log the full incoming message object for debugging\n    node.warn(\"INIT PARSING: \" + JSON.stringify(msg));\n\n    // 1. Check if msg.payload is a JSON string\n    if (typeof msg.payload === 'string' && msg.payload.trim().startsWith('{')) {\n        try {\n            node.warn(\"Raw msg.payload (string): \" + msg.payload);\n            parsedPayload = JSON.parse(msg.payload);\n            node.warn(\"Successfully JSON.parsed msg.payload: \" + JSON.stringify(parsedPayload));\n        } catch (err) {\n            node.warn(\"Payload parsing failed: \" + err.message);\n            // Pass the original msg forward and exit\n            node.send(msg);\n            return;\n        }\n    } \n    // 2. Or if msg.payload is already an object\n    else if (typeof msg.payload === 'object') {\n        node.warn(\"msg.payload is already an object: \" + JSON.stringify(msg.payload));\n        parsedPayload = msg.payload;\n    } \n    // 3. Otherwise, pass it through\n    else {\n        node.warn(\"Payload is neither string nor object; passing through.\");\n        node.send(msg);\n        return;\n    }\n\n    // ---- Flatten if needed ----\n    // Some upstream nodes wrap your real data under parsedPayload.payload.payload\n    // Example: { \"payload\": { \"payload\": \"oui15\", \"topic\": { \"isp\":\"300\" } } }\n    if (parsedPayload && parsedPayload.payload && parsedPayload.payload.payload) {\n        node.warn(\"Flattening nested structure...\");\n        parsedPayload = parsedPayload.payload;  \n        node.warn(\"After flattening: \" + JSON.stringify(parsedPayload));\n        // Now parsedPayload should look like: { payload: \"oui15\", topic: { ... } }\n    } else {\n        node.warn(\"No further flattening needed or structure different. Current parsedPayload: \" + JSON.stringify(parsedPayload));\n    }\n\n    // ---- Further processing: Check parsedPayload.payload ----\n    node.warn(\"Processing parsedPayload with final shape: \" + JSON.stringify(parsedPayload));\n\n    if (parsedPayload.payload === 'oui' || parsedPayload.payload === 'non') {\n        node.warn(\"Matched case: oui / non\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui1' || parsedPayload.payload === 'non1') {\n        node.warn(\"Matched case: oui1 / non1\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup1' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui2' || parsedPayload.payload === 'non2') {\n        node.warn(\"Matched case: oui2 / non2\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui2/non2: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup2' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui3' || parsedPayload.payload === 'non3') {\n        node.warn(\"Matched case: oui3 / non3\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup3' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui7' || parsedPayload.payload === 'non7') {\n        node.warn(\"Matched case: oui7 / non7\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup7' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui9' || parsedPayload.payload === 'non9') {\n        node.warn(\"Matched case: oui9 / non9\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup9' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui15' || parsedPayload.payload === 'non15') {\n        node.warn(\"Matched case: oui15 / non15\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui15/non15: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup15' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui18' || parsedPayload.payload === 'non18') {\n        node.warn(\"Matched case: oui18 / non18\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui18/non18: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup18' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui41' || parsedPayload.payload === 'non41') {\n        node.warn(\"Matched case: oui41 / non41\");\n        const buttonMsg = { payload: parsedPayload.payload };\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup41' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui43' || parsedPayload.payload === 'non43') {\n        node.warn(\"Matched case: oui43 / non43\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui43/non43: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup43' };\n        node.send(closeMsg);\n    }\n    else if (parsedPayload.payload === 'oui45' || parsedPayload.payload === 'non45') {\n        node.warn(\"Matched case: oui45 / non45\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui45/non45: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup45' };\n        node.send(closeMsg);\n    }\n       else if (parsedPayload.payload === 'oui48' || parsedPayload.payload === 'non48') {\n        node.warn(\"Matched case: oui48 / non48\");\n        const buttonMsg = Object.assign({}, msg, { \n            payload: parsedPayload.payload,\n            topic: parsedPayload.topic  \n        });\n        node.warn(\"Sending buttonMsg for oui48/non48: \" + JSON.stringify(buttonMsg));\n        node.send(buttonMsg);\n\n        const closeMsg = { payload: 'hidePopup48' };\n        node.send(closeMsg);\n    }\n    else {\n        node.warn(\"UNHANDLED ACTION: \" + JSON.stringify(parsedPayload));\n        // You could either do nothing or pass the message on\n        msg.payload = parsedPayload;\n        node.send(msg);\n    }\n\n} else {\n    // If there's no payload, just pass the message through\n    node.warn(\"No msg.payload found; passing message through.\");\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3460,
        "wires": [
            [
                "5910ace4cc8e99d0",
                "2284c0160c191b60",
                "25ed90a326cc5dd0"
            ]
        ]
    },
    {
        "id": "5910ace4cc8e99d0",
        "type": "websocket out",
        "z": "7c68352c.1b47bc",
        "name": "WebSocket Out",
        "server": "7eab7619d7c1b31c",
        "client": "",
        "x": 720,
        "y": 3460,
        "wires": []
    },
    {
        "id": "732ecf60e5a9618f",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "1a12589aeb64156f"
        ],
        "x": 605,
        "y": 3540,
        "wires": []
    },
    {
        "id": "1a12589aeb64156f",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "01ec2e5ddc1eb73c",
            "127a851b720279da",
            "543b064cda3e254c",
            "732ecf60e5a9618f",
            "de52151a62aaac31"
        ],
        "x": 455,
        "y": 3300,
        "wires": [
            [
                "dee041395aae0d42",
                "5910ace4cc8e99d0",
                "72f95e716a6ba095",
                "9b516f233e4f4fbd"
            ]
        ]
    },
    {
        "id": "2284c0160c191b60",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "retrieveOUIr2",
        "mode": "link",
        "links": [
            "481b35b7fc677684",
            "87f2976ba754a8b9",
            "938a95745ad448b7",
            "975a654c9ae74042",
            "bc94d3bf8d4209a4"
        ],
        "x": 435,
        "y": 3500,
        "wires": []
    },
    {
        "id": "975a654c9ae74042",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "",
        "links": [
            "2284c0160c191b60"
        ],
        "x": 225,
        "y": 3640,
        "wires": [
            [
                "eb39d74c44838c70",
                "7a5bd43f51b960a5",
                "092c6245f1c719d1"
            ]
        ]
    },
    {
        "id": "25ed90a326cc5dd0",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PROCESS MESSAGE AFTER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 3320,
        "wires": []
    },
    {
        "id": "f5d218edd860a34a",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "PROCESS MESSAGE BEFORE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 3340,
        "wires": []
    },
    {
        "id": "dee041395aae0d42",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "Before Node WS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 3420,
        "wires": []
    },
    {
        "id": "647cb1843b6b4255",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"oui15\",\"topic\":{\"isp\":\"31546\"}}",
        "payloadType": "str",
        "x": 110,
        "y": 3460,
        "wires": [
            [
                "db8dd0deb9791065",
                "72f95e716a6ba095"
            ]
        ]
    },
    {
        "id": "72f95e716a6ba095",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 3500,
        "wires": []
    },
    {
        "id": "2cf2f8fbbe7b11e8",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui41",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 3700,
        "wires": [
            [
                "446b73bab1a8b9b9"
            ]
        ]
    },
    {
        "id": "814400e6cdb2c422",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "Update time optilmized",
        "mode": "link",
        "links": [
            "7304714e7d848586"
        ],
        "x": 695,
        "y": 3800,
        "wires": []
    },
    {
        "id": "ec3d4447e1398eec",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "name": "WARNING DELETE DB BLUE 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 3480,
        "wires": []
    },
    {
        "id": "b223477af032653e",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 525,
        "y": 3780,
        "wires": []
    },
    {
        "id": "5c74eac4b9bcd76c",
        "type": "switch",
        "z": "7c68352c.1b47bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui41",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 3780,
        "wires": [
            [
                "b223477af032653e",
                "4fc2d97b2364d4df"
            ]
        ]
    },
    {
        "id": "eb39d74c44838c70",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "350",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 3620,
        "wires": [
            [
                "f62b87dcd722b6d5"
            ]
        ]
    },
    {
        "id": "7a5bd43f51b960a5",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 390,
        "y": 3660,
        "wires": [
            [
                "2cf2f8fbbe7b11e8"
            ]
        ]
    },
    {
        "id": "ba25c26fe2b4ab52",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "command": "cd /app/maneuver-manager && rm -rf LastManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 525,
        "y": 3840,
        "wires": [
            [],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "61d1a72ac323af46",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "tle1-2",
        "func": "return{\n topic:\"tle\",\n payload:[msg.payload[0].tle1, msg.payload[0].tle2],\n body:12\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3330,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "f6a4ee3cc639daa0",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "b2-time-tle-OUT",
        "mode": "link",
        "links": [],
        "x": 1975,
        "y": 1600,
        "wires": []
    },
    {
        "id": "6eb08ba30ada2b4d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-R1",
        "links": [
            "bc9a8d46d71b2c0a"
        ],
        "x": 1055,
        "y": 2480,
        "wires": [
            [
                "f7b45a19089fb81e"
            ]
        ]
    },
    {
        "id": "a4307ff40f12d270",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "Tle b2-post-man-In",
        "links": [
            "8aa4b8ef7f2e638c",
            "bbf6284c8f0bc627",
            "d2bcbbe65e7d4cb1",
            "4cd5886a370890e4",
            "1148530c8ca691c5"
        ],
        "x": 1615,
        "y": 1520,
        "wires": [
            [
                "0791cfd1d50512e1"
            ]
        ]
    },
    {
        "id": "5b78836a816f993b",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "setpath1-in b2",
        "links": [
            "139d87a61de8fb2d",
            "1ae04e597256b937",
            "9b7aa4b9aad75d7d",
            "8f235a4905cf2bd5",
            "209350ebe1c882d7",
            "eeb0f82196f6f0be",
            "5f1c8a85d379e58f",
            "906e1b953fce7207",
            "7d3983b21c77d3ae"
        ],
        "x": 1635,
        "y": 1440,
        "wires": [
            [
                "0791cfd1d50512e1"
            ]
        ]
    },
    {
        "id": "92dfc759b1f5275e",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "RED1 setpath1-in",
        "links": [
            "139d87a61de8fb2d",
            "ee6ec31b290a5ef2",
            "9a9d09c333b759d3",
            "a2beac1bb901c9fa",
            "988f55311686fee2",
            "60e5dd2d9c99726d"
        ],
        "x": 1655,
        "y": 2240,
        "wires": [
            [
                "e9220f486f4e4bee"
            ]
        ]
    },
    {
        "id": "7e5337741e7dc71f",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "TLE-R1-post-manoeuvre IN",
        "links": [
            "7fa62cc3381d8044",
            "d4a984c658761c27"
        ],
        "x": 1675,
        "y": 2200,
        "wires": [
            [
                "e9220f486f4e4bee"
            ]
        ]
    },
    {
        "id": "c6cb0e1e16a0f192",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "r1-time-tle-OUT",
        "mode": "link",
        "links": [
            "8e1a91631c83419c",
            "9142b2db6208480c"
        ],
        "x": 2015,
        "y": 2300,
        "wires": []
    },
    {
        "id": "cc583fd12be99cc1",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "trigger-R2",
        "links": [
            "bc9a8d46d71b2c0a"
        ],
        "x": 975,
        "y": 3600,
        "wires": [
            [
                "93bdb173925d6f0f"
            ]
        ]
    },
    {
        "id": "417260ed0a2e03cd",
        "type": "comment",
        "z": "7c68352c.1b47bc",
        "g": "72a2d4bc14d948f6",
        "name": "msg.paths.path_1[9] or [10]",
        "info": "",
        "x": 2710,
        "y": 3940,
        "wires": []
    },
    {
        "id": "45bd63e8db2df122",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "RED2 setpath1-in",
        "links": [
            "139d87a61de8fb2d",
            "574e4c417983ae7a",
            "03886b7dd58107ae",
            "9ba76c61789ca5df"
        ],
        "x": 1545,
        "y": 3360,
        "wires": [
            [
                "c13df54a5d461cf3"
            ]
        ]
    },
    {
        "id": "3cda6a28825e07b9",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "TLE R2 post-manoeuvre IN",
        "links": [
            "9f474fcba3b0160f",
            "770a96aece5f2d32",
            "329a456e800a1d72",
            "8c91e4e55bf1a128"
        ],
        "x": 1545,
        "y": 3300,
        "wires": [
            [
                "c13df54a5d461cf3"
            ]
        ]
    },
    {
        "id": "3d2debeac7c493f5",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "r2-time-tle-OUT",
        "mode": "link",
        "links": [
            "30a3d53f7ff0de08",
            "9c7211679210b03d"
        ],
        "x": 1935,
        "y": 3420,
        "wires": []
    },
    {
        "id": "95b08878e2f5f3c9",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "UP R2 From DB",
        "links": [
            "9fd7873df4929469",
            "8e67ffcbdb4c6308",
            "98e2adb0a1d844fb",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001",
            "3d9a503964f04999",
            "ef421c4e385566ba",
            "79d946ae54145942",
            "f5ab3b9e130e081c",
            "4365699527981ea9",
            "ca4d385b5192095c"
        ],
        "x": 1855,
        "y": 3740,
        "wires": [
            [
                "1d2bcd38969248e6"
            ]
        ]
    },
    {
        "id": "8c360fc5911891f9",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "R2 to XSAT",
        "mode": "link",
        "links": [
            "03599ea1d2636c41",
            "51d80f547a4459bf",
            "8c4538d2189874b0",
            "e2f3f03425eed5dd",
            "ed6b13ca02a5a70d",
            "f252cd8f818a4514",
            "f8eaf94835fc938d"
        ],
        "x": 2915,
        "y": 3600,
        "wires": []
    },
    {
        "id": "b01a6f504b6561e9",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_121",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_121",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2690,
        "y": 1580,
        "wires": [
            [
                "24c890a304d1f771"
            ]
        ]
    },
    {
        "id": "24c890a304d1f771",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "BLLUE 1 PROPA",
        "mode": "link",
        "links": [
            "1a7828f90ec7810d",
            "6004149e305a064c",
            "a957d40878cb92bf",
            "b4ab69fb76722690",
            "6c6fabeae1f46e76"
        ],
        "x": 2825,
        "y": 1560,
        "wires": []
    },
    {
        "id": "da60363e18c79508",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "name": "UP R1 from DB",
        "links": [
            "eeb7ac39abf2e2c4",
            "0e28fb103f54c09f",
            "b99ef16ba1924c22",
            "39bc328534852ef6",
            "28c0d298350e66d0",
            "90fb241377880fb6",
            "5b2a4de095e1e430",
            "a5a253759a41f09c",
            "1f5277e3b3e49a5a",
            "95bc691f14bc137b",
            "19d0068291be5001",
            "08dbead457ffabc5",
            "228af3d92f774e72",
            "d8fa7388583ba0ae",
            "fe5302f9be92c8ba",
            "4e7dd671233d10d4",
            "fb9087d091497cd3"
        ],
        "x": 1945,
        "y": 2620,
        "wires": [
            [
                "49b55956baf75210"
            ]
        ]
    },
    {
        "id": "83657e1af5fa276d",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "R1 to XSAT",
        "mode": "link",
        "links": [
            "ed6b13ca02a5a70d",
            "f462010c0466fdea",
            "e2f3f03425eed5dd",
            "8c4538d2189874b0",
            "50c9e4557fa523d4",
            "03599ea1d2636c41",
            "fa78085e40b3accf",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 3015,
        "y": 2500,
        "wires": []
    },
    {
        "id": "4b0af0fde0de3935",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_131",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_131",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 2260,
        "wires": [
            [
                "5c2e6331eeb6c67d"
            ]
        ]
    },
    {
        "id": "5c2e6331eeb6c67d",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "BLLUE 1 PROPA",
        "mode": "link",
        "links": [
            "1a7828f90ec7810d",
            "6004149e305a064c",
            "a957d40878cb92bf",
            "b4ab69fb76722690",
            "6c6fabeae1f46e76"
        ],
        "x": 3045,
        "y": 2260,
        "wires": []
    },
    {
        "id": "4f1ab2571e7f47ae",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "Set path_141",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_141",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2670,
        "y": 3420,
        "wires": [
            [
                "c7b740e9c382dc1d"
            ]
        ]
    },
    {
        "id": "c7b740e9c382dc1d",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "BLLUE 1 PROPA",
        "mode": "link",
        "links": [
            "1a7828f90ec7810d",
            "6c6fabeae1f46e76",
            "a957d40878cb92bf",
            "b4ab69fb76722690"
        ],
        "x": 2805,
        "y": 3400,
        "wires": []
    },
    {
        "id": "3f56ea82b8ec4e6f",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "5293fd84.fa1844",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3890,
        "y": 200,
        "wires": []
    },
    {
        "id": "7a1a4db24be58879",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "B1 to time request TLE",
        "mode": "link",
        "links": [
            "220556fdf5358e27",
            "b003810dbf6c337b",
            "d7d9ed7307b05596"
        ],
        "x": 875,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5ec4f0f1b2bac771",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "43fe9e86990cf063"
            ]
        ]
    },
    {
        "id": "12fa9b1ad5c9c910",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 315,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2ca822c36f234207",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 430,
        "y": 1900,
        "wires": [
            [
                "5c90f81d0538a5c4"
            ]
        ]
    },
    {
        "id": "e3d6e277956a332a",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 490,
        "y": 2620,
        "wires": [
            [
                "e7a8bd8a4cd94f1b"
            ]
        ]
    },
    {
        "id": "092c6245f1c719d1",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 3700,
        "wires": [
            [
                "5c74eac4b9bcd76c"
            ]
        ]
    },
    {
        "id": "8b1f688102a4bde6",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 365,
        "y": 1860,
        "wires": []
    },
    {
        "id": "f1e633658f2079e1",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 325,
        "y": 2580,
        "wires": []
    },
    {
        "id": "acfee45e8462edad",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "",
        "mode": "link",
        "links": [
            "d9cc4486da2f1dcf"
        ],
        "x": 395,
        "y": 3560,
        "wires": []
    },
    {
        "id": "5862c31007cdf94b",
        "type": "function",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4560,
        "y": 2920,
        "wires": [
            [
                "3df79a501f214a11",
                "be89631c8c9d1c1d"
            ]
        ]
    },
    {
        "id": "3df79a501f214a11",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "",
        "mode": "link",
        "links": [
            "09a97cf7ca5252b9"
        ],
        "x": 4645,
        "y": 2960,
        "wires": []
    },
    {
        "id": "be89631c8c9d1c1d",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "4c0adca48375c892",
        "name": "TEST CONTINUE LOGS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4750,
        "y": 2900,
        "wires": []
    },
    {
        "id": "0dd45e03b795aea7",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1560,
        "y": 1200,
        "wires": [
            [
                "c24543b528ceac66"
            ]
        ]
    },
    {
        "id": "29c46eded1eeadbb",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "mode": "link",
        "links": [
            "ed20cce57f1ac24a"
        ],
        "x": 2925,
        "y": 900,
        "wires": []
    },
    {
        "id": "5a99bed22b559864",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "pauseType": "delay",
        "timeout": "1250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2840,
        "y": 960,
        "wires": [
            [
                "29c46eded1eeadbb"
            ]
        ]
    },
    {
        "id": "7692eeac10d6ea69",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "1250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2900,
        "y": 1740,
        "wires": [
            [
                "a3045704a76aa966"
            ]
        ]
    },
    {
        "id": "a3045704a76aa966",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B1 to XSAT",
        "mode": "link",
        "links": [
            "03599ea1d2636c41",
            "8c4538d2189874b0",
            "e2f3f03425eed5dd",
            "ed6b13ca02a5a70d",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 3055,
        "y": 1700,
        "wires": []
    },
    {
        "id": "9f2a59b72a18b1de",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "1250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2980,
        "y": 2460,
        "wires": [
            [
                "bb963eb834349742"
            ]
        ]
    },
    {
        "id": "bb963eb834349742",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B1 to XSAT",
        "mode": "link",
        "links": [
            "03599ea1d2636c41",
            "8c4538d2189874b0",
            "e2f3f03425eed5dd",
            "ed6b13ca02a5a70d",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 3135,
        "y": 2420,
        "wires": []
    },
    {
        "id": "b021a45d5c7da855",
        "type": "delay",
        "z": "7c68352c.1b47bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "1250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2920,
        "y": 3540,
        "wires": [
            [
                "23087e0890dde8be"
            ]
        ]
    },
    {
        "id": "23087e0890dde8be",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "B1 to XSAT",
        "mode": "link",
        "links": [
            "03599ea1d2636c41",
            "8c4538d2189874b0",
            "e2f3f03425eed5dd",
            "ed6b13ca02a5a70d",
            "f8eaf94835fc938d",
            "51d80f547a4459bf",
            "f252cd8f818a4514"
        ],
        "x": 3075,
        "y": 3500,
        "wires": []
    },
    {
        "id": "6caa689e1eca411a",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "label blue1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "blue1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1120,
        "wires": [
            [
                "c0c665279eb4c580",
                "45e431bd688eabab"
            ]
        ]
    },
    {
        "id": "c0c665279eb4c580",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "save last blue1",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 755,
        "y": 1120,
        "wires": []
    },
    {
        "id": "07ddde75d2bed3d7",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "label blue2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "blue2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2060,
        "wires": [
            [
                "e5fe6656c9f22fdb"
            ]
        ]
    },
    {
        "id": "0e2e8a01436b2a63",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "label red1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "red1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 2620,
        "wires": [
            [
                "8ca277576f45a7c4"
            ]
        ]
    },
    {
        "id": "4fc2d97b2364d4df",
        "type": "change",
        "z": "7c68352c.1b47bc",
        "name": "label red2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "red2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 3740,
        "wires": [
            [
                "9b46871b4fdfe2a5"
            ]
        ]
    },
    {
        "id": "ab94d92507df934c",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "command": "cd /app/maneuver-manager && ./relaunch_VTS_blue2.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4395,
        "y": 1760,
        "wires": [
            [
                "e9cd4cacf8b50df9"
            ],
            [
                "e9cd4cacf8b50df9"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "9aa73ae4af3274c9",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "command": "cd /app/maneuver-manager && ./relaunch_VTS_red1.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4395,
        "y": 1820,
        "wires": [
            [
                "bf9d53aa9770f197"
            ],
            [
                "bf9d53aa9770f197"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "48581bc26394cfc1",
        "type": "exec",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "command": "cd /app/maneuver-manager && ./relaunch_VTS_red2.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4395,
        "y": 1880,
        "wires": [
            [
                "d76d10eab019e310"
            ],
            [
                "d76d10eab019e310"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "d5b2bb2fbe32ed18",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4200,
        "y": 1760,
        "wires": [
            [
                "ab94d92507df934c"
            ]
        ]
    },
    {
        "id": "07bc99c2e3c8bfb5",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4200,
        "y": 1820,
        "wires": [
            [
                "9aa73ae4af3274c9"
            ]
        ]
    },
    {
        "id": "d4254d02e7e07ebd",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4200,
        "y": 1880,
        "wires": [
            [
                "48581bc26394cfc1"
            ]
        ]
    },
    {
        "id": "e9cd4cacf8b50df9",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4530,
        "y": 1780,
        "wires": []
    },
    {
        "id": "bf9d53aa9770f197",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4530,
        "y": 1820,
        "wires": []
    },
    {
        "id": "d76d10eab019e310",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4530,
        "y": 1880,
        "wires": []
    },
    {
        "id": "cfb48adbff178dbf",
        "type": "inject",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "6caa689e1eca411a"
            ]
        ]
    },
    {
        "id": "45e431bd688eabab",
        "type": "debug",
        "z": "7c68352c.1b47bc",
        "g": "2345ff89d3122291",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e5fe6656c9f22fdb",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "g": "fdab8259e2b1d755",
        "name": "save last blue2",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 665,
        "y": 2060,
        "wires": []
    },
    {
        "id": "8ca277576f45a7c4",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "save last red1",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 745,
        "y": 2580,
        "wires": []
    },
    {
        "id": "9b46871b4fdfe2a5",
        "type": "link out",
        "z": "7c68352c.1b47bc",
        "name": "save last red2",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 583,
        "y": 3787,
        "wires": []
    },
    {
        "id": "3b35bf6ac9b19b8d",
        "type": "link in",
        "z": "7c68352c.1b47bc",
        "g": "400721a2c2769c0e",
        "name": "RESET OUT",
        "links": [
            "67077e2686865a44"
        ],
        "x": 4275,
        "y": 1720,
        "wires": [
            [
                "c94607f83c5c85fe",
                "ab94d92507df934c",
                "9aa73ae4af3274c9",
                "48581bc26394cfc1"
            ]
        ]
    },
    {
        "id": "c3ad0cee590c46b9",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "rob1btlelatest",
        "collection": "rob1btlelatest",
        "operation": "count",
        "x": 240,
        "y": 60,
        "wires": [
            [
                "22f19b07e8074b36"
            ]
        ]
    },
    {
        "id": "22f19b07e8074b36",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "19425590056f53d4",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "1c9c112f8a798b25",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1atlelatest",
        "collection": "p1atlelatest",
        "operation": "count",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "01099de246463e1b"
            ]
        ]
    },
    {
        "id": "b249a2f802593a07",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "sattlelatest",
        "collection": "sattlelatest",
        "operation": "count",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "4b2533a24d1995b9"
            ]
        ]
    },
    {
        "id": "dcf0d47ff62b1cd9",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "p1btlelatest",
        "collection": "p1btlelatest",
        "operation": "count",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "4ac10399693d8ba0"
            ]
        ]
    },
    {
        "id": "48cd6df482948497",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "operation": "count",
        "x": 240,
        "y": 300,
        "wires": [
            [
                "c572ee81bc31e36f"
            ]
        ]
    },
    {
        "id": "4028e756b6eb15ed",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "operation": "count",
        "x": 240,
        "y": 360,
        "wires": [
            [
                "3e18ec8490338950"
            ]
        ]
    },
    {
        "id": "299a1012e822da52",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b1tlelatest",
        "collection": "b1tlelatest_backup",
        "operation": "count",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "8ba4eec3492d8209"
            ]
        ]
    },
    {
        "id": "dcf4ed991e97b0b5",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "count",
        "x": 230,
        "y": 480,
        "wires": [
            [
                "14e11d837fb27dc9"
            ]
        ]
    },
    {
        "id": "8ff8a189bd5bd772",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "count",
        "x": 220,
        "y": 540,
        "wires": [
            [
                "820fdea6a1c6e2a4"
            ]
        ]
    },
    {
        "id": "46654b8ad12c6573",
        "type": "mongodb in",
        "z": "36e05050e3375022",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "r2tlelatest",
        "collection": "r2tlelatest_backup",
        "operation": "count",
        "x": 220,
        "y": 600,
        "wires": [
            [
                "3bf82286c0a207ef"
            ]
        ]
    },
    {
        "id": "01099de246463e1b",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "1e820de2c2918413",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "4b2533a24d1995b9",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "5c1b7994334d2628",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "4ac10399693d8ba0",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "fb3384f9d9152d6b",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "c572ee81bc31e36f",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 300,
        "wires": [
            [
                "e721452cb72bb91e",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "3e18ec8490338950",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "d604947cb5843db1",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "8ba4eec3492d8209",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "b22e5241d4cd1f73",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "14e11d837fb27dc9",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 480,
        "wires": [
            [
                "0936229b4e45f77e",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "820fdea6a1c6e2a4",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "64349b0a15f94fc6",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "3bf82286c0a207ef",
        "type": "switch",
        "z": "36e05050e3375022",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 600,
        "wires": [
            [
                "1e7e3e9e857a4d1e",
                "946316c25fe51c5a"
            ]
        ]
    },
    {
        "id": "f39d4341bb0e4df8",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "ede83e604bb74820",
                "5ede263d6aa3f153"
            ]
        ]
    },
    {
        "id": "ede83e604bb74820",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "3ce10b942b7bd5b0"
            ]
        ]
    },
    {
        "id": "3ce10b942b7bd5b0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "64c58cba8d19f40c"
            ]
        ]
    },
    {
        "id": "64c58cba8d19f40c",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "1a253b7920de5c6a",
                "ee57e5d1fd688d3f"
            ]
        ]
    },
    {
        "id": "8ea391e4679da9c0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 200,
        "wires": [
            [
                "520256129fff5b10"
            ]
        ]
    },
    {
        "id": "1a253b7920de5c6a",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1042,
        "y": 400,
        "wires": [
            [
                "8ea391e4679da9c0",
                "3b251b1c2dba47a0",
                "58196b7472dc7e3b",
                "2ac0e13af7b13f30",
                "7b9cd77f3f94e543",
                "49ea1a1f7df5f932",
                "2a67bc81e635f6ae",
                "1ca19174092c6db0",
                "2e9c0fdd5f70f8b7",
                "c9ff27f775928785"
            ]
        ]
    },
    {
        "id": "3b251b1c2dba47a0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "7cb0d9a3a1e880e5"
            ]
        ]
    },
    {
        "id": "58196b7472dc7e3b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 320,
        "wires": [
            [
                "ae6bb69a766cff2d"
            ]
        ]
    },
    {
        "id": "2ac0e13af7b13f30",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 380,
        "wires": [
            [
                "e60bf4ccc10c4dcb"
            ]
        ]
    },
    {
        "id": "520256129fff5b10",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1628,
        "y": 200,
        "wires": [
            [
                "cfe6a289ae48ad80"
            ]
        ]
    },
    {
        "id": "7cb0d9a3a1e880e5",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1628,
        "y": 260,
        "wires": [
            [
                "f04e10d943c0af81"
            ]
        ]
    },
    {
        "id": "ae6bb69a766cff2d",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1628,
        "y": 320,
        "wires": [
            [
                "269dbeeb616c3641",
                "488ef075cc9bbd1e"
            ]
        ]
    },
    {
        "id": "e60bf4ccc10c4dcb",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1628,
        "y": 380,
        "wires": [
            [
                "f2a85a5a8ec1a6e3"
            ]
        ]
    },
    {
        "id": "7b9cd77f3f94e543",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 440,
        "wires": [
            [
                "20ef6a5d9b5c93d5"
            ]
        ]
    },
    {
        "id": "20ef6a5d9b5c93d5",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1628,
        "y": 440,
        "wires": [
            [
                "603d834aa9f2b9cd"
            ]
        ]
    },
    {
        "id": "49ea1a1f7df5f932",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "c3aed06e6987ea17"
            ]
        ]
    },
    {
        "id": "c3aed06e6987ea17",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1628,
        "y": 500,
        "wires": [
            [
                "4921bb9ed0ae43b8"
            ]
        ]
    },
    {
        "id": "fbf19d1e2686c7e7",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Repeupler les DB",
        "info": "",
        "x": 1160,
        "y": 120,
        "wires": []
    },
    {
        "id": "cfe6a289ae48ad80",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1970,
        "y": 200,
        "wires": []
    },
    {
        "id": "f04e10d943c0af81",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1970,
        "y": 260,
        "wires": []
    },
    {
        "id": "269dbeeb616c3641",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1970,
        "y": 320,
        "wires": []
    },
    {
        "id": "f2a85a5a8ec1a6e3",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1970,
        "y": 380,
        "wires": []
    },
    {
        "id": "603d834aa9f2b9cd",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1980,
        "y": 440,
        "wires": []
    },
    {
        "id": "4921bb9ed0ae43b8",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 1980,
        "y": 500,
        "wires": []
    },
    {
        "id": "a482fc363c9ec8d9",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 140,
        "wires": [
            [
                "f39d4341bb0e4df8"
            ]
        ]
    },
    {
        "id": "2a67bc81e635f6ae",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 560,
        "wires": [
            [
                "61bceb793cc223c0"
            ]
        ]
    },
    {
        "id": "61bceb793cc223c0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 560,
        "wires": [
            [
                "560ee02521a4e11b",
                "ecfd634c4819e1a3"
            ]
        ]
    },
    {
        "id": "560ee02521a4e11b",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1960,
        "y": 560,
        "wires": []
    },
    {
        "id": "1ca19174092c6db0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 620,
        "wires": [
            [
                "255fe007b26e99cd"
            ]
        ]
    },
    {
        "id": "255fe007b26e99cd",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 620,
        "wires": [
            [
                "f18ef92d806a5ea4"
            ]
        ]
    },
    {
        "id": "f18ef92d806a5ea4",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1960,
        "y": 620,
        "wires": []
    },
    {
        "id": "2e9c0fdd5f70f8b7",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 680,
        "wires": [
            [
                "75b88281179fd9b8"
            ]
        ]
    },
    {
        "id": "75b88281179fd9b8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 680,
        "wires": [
            [
                "b0ce077afb6f589e"
            ]
        ]
    },
    {
        "id": "b0ce077afb6f589e",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1960,
        "y": 680,
        "wires": []
    },
    {
        "id": "c9ff27f775928785",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1312,
        "y": 760,
        "wires": [
            [
                "7f31e10c7a935038"
            ]
        ]
    },
    {
        "id": "7f31e10c7a935038",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 740,
        "wires": [
            [
                "4b7be923bed537ff",
                "e925e3ab3da23340",
                "0a415400da9b3f54"
            ]
        ]
    },
    {
        "id": "4b7be923bed537ff",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1960,
        "y": 740,
        "wires": []
    },
    {
        "id": "16c9f8c251174efe",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "",
        "scope": [
            "f39d4341bb0e4df8"
        ],
        "uncaught": false,
        "x": 1292,
        "y": 100,
        "wires": [
            [
                "aa9fb3e31f201698",
                "35e8abafd04bc0e4"
            ]
        ]
    },
    {
        "id": "aa9fb3e31f201698",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 80,
        "wires": []
    },
    {
        "id": "b140aec4696a4357",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 2235,
        "y": 800,
        "wires": []
    },
    {
        "id": "9c391407c2d0ab20",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1930,
        "y": 800,
        "wires": [
            [
                "4afde4d4650b165f"
            ]
        ]
    },
    {
        "id": "4afde4d4650b165f",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2110,
        "y": 800,
        "wires": [
            [
                "b140aec4696a4357"
            ]
        ]
    },
    {
        "id": "5ede263d6aa3f153",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1152,
        "y": 60,
        "wires": []
    },
    {
        "id": "ee57e5d1fd688d3f",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1052,
        "y": 600,
        "wires": []
    },
    {
        "id": "35e8abafd04bc0e4",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 1395,
        "y": 40,
        "wires": []
    },
    {
        "id": "e925e3ab3da23340",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1672,
        "y": 800,
        "wires": []
    },
    {
        "id": "ecfd634c4819e1a3",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 600,
        "wires": []
    },
    {
        "id": "0a415400da9b3f54",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 2235,
        "y": 760,
        "wires": []
    },
    {
        "id": "488ef075cc9bbd1e",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 360,
        "wires": []
    },
    {
        "id": "19425590056f53d4",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 20,
        "wires": []
    },
    {
        "id": "1e820de2c2918413",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 553,
        "y": 100,
        "wires": []
    },
    {
        "id": "5c1b7994334d2628",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "fb3384f9d9152d6b",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 542,
        "y": 214,
        "wires": []
    },
    {
        "id": "e721452cb72bb91e",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 280,
        "wires": []
    },
    {
        "id": "d604947cb5843db1",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 340,
        "wires": []
    },
    {
        "id": "b22e5241d4cd1f73",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 400,
        "wires": []
    },
    {
        "id": "0936229b4e45f77e",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 460,
        "wires": []
    },
    {
        "id": "64349b0a15f94fc6",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 520,
        "wires": []
    },
    {
        "id": "1e7e3e9e857a4d1e",
        "type": "debug",
        "z": "36e05050e3375022",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 580,
        "wires": []
    },
    {
        "id": "946316c25fe51c5a",
        "type": "link out",
        "z": "36e05050e3375022",
        "name": "",
        "mode": "link",
        "links": [
            "a99e21ec0740199c"
        ],
        "x": 835,
        "y": 220,
        "wires": []
    },
    {
        "id": "a99e21ec0740199c",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "rescue rob1",
        "links": [
            "946316c25fe51c5a"
        ],
        "x": 1475,
        "y": 140,
        "wires": [
            [
                "c21e9ea6abd5a4ca"
            ]
        ]
    },
    {
        "id": "eef0ed836af8f7f9",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2710,
        "y": 180,
        "wires": [
            [
                "7db348de802038e7",
                "b5c1396816b09f13"
            ]
        ]
    },
    {
        "id": "7db348de802038e7",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2690,
        "y": 240,
        "wires": [
            [
                "df0f98b93741b7e2"
            ]
        ]
    },
    {
        "id": "df0f98b93741b7e2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 280,
        "wires": [
            [
                "a483f441f4a84edc"
            ]
        ]
    },
    {
        "id": "a483f441f4a84edc",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2690,
        "y": 320,
        "wires": [
            [
                "b4253e8aa693a33e",
                "412dc849425064d1"
            ]
        ]
    },
    {
        "id": "0813edc0a123a9da",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 200,
        "wires": [
            [
                "a19c88ed1003751f"
            ]
        ]
    },
    {
        "id": "b4253e8aa693a33e",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2702,
        "y": 400,
        "wires": [
            [
                "5b458c472a27df75",
                "0813edc0a123a9da",
                "798f66e1b2f4133b",
                "101da9fc5822cf62",
                "c43a6c9b79203536",
                "a01f40d70106da3d",
                "9972825d42c9ee04",
                "d884ef7206b9c26a",
                "459e66e8685f3313",
                "109277c1120534ef"
            ]
        ]
    },
    {
        "id": "5b458c472a27df75",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 260,
        "wires": [
            [
                "c2a33e4dcbe6c0c6"
            ]
        ]
    },
    {
        "id": "798f66e1b2f4133b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 320,
        "wires": [
            [
                "2f6cde9d59eb5fdd"
            ]
        ]
    },
    {
        "id": "101da9fc5822cf62",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 380,
        "wires": [
            [
                "a8cece9165b5e371"
            ]
        ]
    },
    {
        "id": "a19c88ed1003751f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3288,
        "y": 200,
        "wires": [
            [
                "afc05e6a4470d69c"
            ]
        ]
    },
    {
        "id": "c2a33e4dcbe6c0c6",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3288,
        "y": 260,
        "wires": [
            [
                "d564a7bf8bdffdcd"
            ]
        ]
    },
    {
        "id": "2f6cde9d59eb5fdd",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3288,
        "y": 320,
        "wires": [
            [
                "11c9cba3d0b784ce",
                "81d4f194ec3916e3"
            ]
        ]
    },
    {
        "id": "a8cece9165b5e371",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3288,
        "y": 380,
        "wires": [
            [
                "0d54ca5ee0d1ee44"
            ]
        ]
    },
    {
        "id": "c43a6c9b79203536",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 440,
        "wires": [
            [
                "20d3d2cb05552051"
            ]
        ]
    },
    {
        "id": "20d3d2cb05552051",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3288,
        "y": 440,
        "wires": [
            [
                "5011c7bcd6df6dc3"
            ]
        ]
    },
    {
        "id": "a01f40d70106da3d",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 500,
        "wires": [
            [
                "04ca99a561d997cc"
            ]
        ]
    },
    {
        "id": "04ca99a561d997cc",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3288,
        "y": 500,
        "wires": [
            [
                "ce07259f679ae8bc"
            ]
        ]
    },
    {
        "id": "0c73c3010ef1d45c",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Repeupler les DB",
        "info": "",
        "x": 2820,
        "y": 120,
        "wires": []
    },
    {
        "id": "afc05e6a4470d69c",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3630,
        "y": 200,
        "wires": []
    },
    {
        "id": "d564a7bf8bdffdcd",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3630,
        "y": 260,
        "wires": []
    },
    {
        "id": "11c9cba3d0b784ce",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3630,
        "y": 320,
        "wires": []
    },
    {
        "id": "0d54ca5ee0d1ee44",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3630,
        "y": 380,
        "wires": []
    },
    {
        "id": "5011c7bcd6df6dc3",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3640,
        "y": 440,
        "wires": []
    },
    {
        "id": "ce07259f679ae8bc",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 3640,
        "y": 500,
        "wires": []
    },
    {
        "id": "f8bc24b908131b1a",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 140,
        "wires": [
            [
                "eef0ed836af8f7f9"
            ]
        ]
    },
    {
        "id": "9972825d42c9ee04",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 560,
        "wires": [
            [
                "3b0584f295f8dad2"
            ]
        ]
    },
    {
        "id": "3b0584f295f8dad2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3290,
        "y": 560,
        "wires": [
            [
                "43d3cddc97fd8e02",
                "c23e70ea6c4755a3"
            ]
        ]
    },
    {
        "id": "43d3cddc97fd8e02",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3620,
        "y": 560,
        "wires": []
    },
    {
        "id": "d884ef7206b9c26a",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 620,
        "wires": [
            [
                "56c00ed1e48a0faf"
            ]
        ]
    },
    {
        "id": "56c00ed1e48a0faf",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3290,
        "y": 620,
        "wires": [
            [
                "d133925768e2a5c6"
            ]
        ]
    },
    {
        "id": "d133925768e2a5c6",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3620,
        "y": 620,
        "wires": []
    },
    {
        "id": "459e66e8685f3313",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 680,
        "wires": [
            [
                "815a597cdbd4c1c8"
            ]
        ]
    },
    {
        "id": "815a597cdbd4c1c8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3290,
        "y": 680,
        "wires": [
            [
                "93bcd18e9299d7c7"
            ]
        ]
    },
    {
        "id": "93bcd18e9299d7c7",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3620,
        "y": 680,
        "wires": []
    },
    {
        "id": "109277c1120534ef",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2972,
        "y": 760,
        "wires": [
            [
                "f8e9e0cc445b8a56"
            ]
        ]
    },
    {
        "id": "f8e9e0cc445b8a56",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3300,
        "y": 740,
        "wires": [
            [
                "36271158bf2e5cdf",
                "d45e9012e2e735d2",
                "f83637b951242d2d"
            ]
        ]
    },
    {
        "id": "36271158bf2e5cdf",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 3620,
        "y": 740,
        "wires": []
    },
    {
        "id": "e633a88a7421f255",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "",
        "scope": [
            "eef0ed836af8f7f9"
        ],
        "uncaught": false,
        "x": 2952,
        "y": 100,
        "wires": [
            [
                "e5bd24c097d87be6",
                "c041ddbc77fed555"
            ]
        ]
    },
    {
        "id": "e5bd24c097d87be6",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3170,
        "y": 80,
        "wires": []
    },
    {
        "id": "59bbc733dc336010",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 3895,
        "y": 800,
        "wires": []
    },
    {
        "id": "bf6603adabc41623",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3590,
        "y": 800,
        "wires": [
            [
                "e55982a1d8043904"
            ]
        ]
    },
    {
        "id": "e55982a1d8043904",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3770,
        "y": 800,
        "wires": [
            [
                "59bbc733dc336010"
            ]
        ]
    },
    {
        "id": "b5c1396816b09f13",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2812,
        "y": 60,
        "wires": []
    },
    {
        "id": "412dc849425064d1",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2712,
        "y": 600,
        "wires": []
    },
    {
        "id": "c041ddbc77fed555",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 3055,
        "y": 40,
        "wires": []
    },
    {
        "id": "d45e9012e2e735d2",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3332,
        "y": 800,
        "wires": []
    },
    {
        "id": "c23e70ea6c4755a3",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 600,
        "wires": []
    },
    {
        "id": "f83637b951242d2d",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 3895,
        "y": 760,
        "wires": []
    },
    {
        "id": "81d4f194ec3916e3",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3560,
        "y": 360,
        "wires": []
    },
    {
        "id": "0902aea82ccbadbb",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "cd566d87e0be95d4",
        "name": "rescue p1a",
        "links": [
            "0b02f9cfd466ca6a"
        ],
        "x": 3465,
        "y": 140,
        "wires": [
            [
                "f8bc24b908131b1a"
            ]
        ]
    },
    {
        "id": "f162615d6010b4f0",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 250,
        "y": 1160,
        "wires": [
            [
                "661750b3cef40fb5",
                "63fa8a55f57c1ac4"
            ]
        ]
    },
    {
        "id": "661750b3cef40fb5",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "a9b099946ef94bd9"
            ]
        ]
    },
    {
        "id": "a9b099946ef94bd9",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1260,
        "wires": [
            [
                "4ed0a019dac25c2c"
            ]
        ]
    },
    {
        "id": "4ed0a019dac25c2c",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 230,
        "y": 1300,
        "wires": [
            [
                "57f81f1670988422",
                "234c348b5b3e1f77"
            ]
        ]
    },
    {
        "id": "a529e9db6d01f1cd",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1180,
        "wires": [
            [
                "46678d4a7087f4a7"
            ]
        ]
    },
    {
        "id": "57f81f1670988422",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 242,
        "y": 1380,
        "wires": [
            [
                "6b39391a743846d1",
                "a529e9db6d01f1cd",
                "f9b068fa916b3249",
                "04c422ec73725ca7",
                "cee594ec223fd5d1",
                "132f907f7bdc3bb5",
                "9519a8394ddeae3d",
                "3c65dec756802357",
                "33f857d87f733489",
                "db775728d9a08313"
            ]
        ]
    },
    {
        "id": "f9b068fa916b3249",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1240,
        "wires": [
            [
                "ac39e191c4ced524"
            ]
        ]
    },
    {
        "id": "6b39391a743846d1",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1300,
        "wires": [
            [
                "9ceca59a0fb09672"
            ]
        ]
    },
    {
        "id": "04c422ec73725ca7",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1360,
        "wires": [
            [
                "073f10fc49f5a711"
            ]
        ]
    },
    {
        "id": "46678d4a7087f4a7",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 1180,
        "wires": [
            [
                "152452e738ed2b37"
            ]
        ]
    },
    {
        "id": "ac39e191c4ced524",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 1240,
        "wires": [
            [
                "4195361faeaf71b7"
            ]
        ]
    },
    {
        "id": "9ceca59a0fb09672",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 1300,
        "wires": [
            [
                "58bce64c8dbd42b3",
                "3b4bdbb74e017ae9"
            ]
        ]
    },
    {
        "id": "073f10fc49f5a711",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 1360,
        "wires": [
            [
                "1f60202c86f4f0f9"
            ]
        ]
    },
    {
        "id": "cee594ec223fd5d1",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1420,
        "wires": [
            [
                "87f9628af7345a91"
            ]
        ]
    },
    {
        "id": "87f9628af7345a91",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 1420,
        "wires": [
            [
                "632bef5dc8a4d5ee"
            ]
        ]
    },
    {
        "id": "132f907f7bdc3bb5",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1480,
        "wires": [
            [
                "9b6c67ca0f990ff0"
            ]
        ]
    },
    {
        "id": "9b6c67ca0f990ff0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 1480,
        "wires": [
            [
                "fa1965b3e0ad8c03"
            ]
        ]
    },
    {
        "id": "cdd2116f2c351029",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Repeupler les DB",
        "info": "",
        "x": 360,
        "y": 1100,
        "wires": []
    },
    {
        "id": "152452e738ed2b37",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4195361faeaf71b7",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 1240,
        "wires": []
    },
    {
        "id": "58bce64c8dbd42b3",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 1300,
        "wires": []
    },
    {
        "id": "1f60202c86f4f0f9",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 1360,
        "wires": []
    },
    {
        "id": "632bef5dc8a4d5ee",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1180,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fa1965b3e0ad8c03",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 1180,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e30e0dc36de6f6fc",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1120,
        "wires": [
            [
                "f162615d6010b4f0"
            ]
        ]
    },
    {
        "id": "9519a8394ddeae3d",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1540,
        "wires": [
            [
                "94f42d54ff82843e"
            ]
        ]
    },
    {
        "id": "94f42d54ff82843e",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1540,
        "wires": [
            [
                "53368779a5f36358",
                "0be398269af2fb2e"
            ]
        ]
    },
    {
        "id": "53368779a5f36358",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3c65dec756802357",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1600,
        "wires": [
            [
                "3c6950074510a8f0"
            ]
        ]
    },
    {
        "id": "3c6950074510a8f0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1600,
        "wires": [
            [
                "e7acae65323ed1fd"
            ]
        ]
    },
    {
        "id": "e7acae65323ed1fd",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 1600,
        "wires": []
    },
    {
        "id": "33f857d87f733489",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1660,
        "wires": [
            [
                "2a4bea90adc87a18"
            ]
        ]
    },
    {
        "id": "2a4bea90adc87a18",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1660,
        "wires": [
            [
                "31b28d90aa8df44c"
            ]
        ]
    },
    {
        "id": "31b28d90aa8df44c",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 1660,
        "wires": []
    },
    {
        "id": "db775728d9a08313",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 512,
        "y": 1740,
        "wires": [
            [
                "4844689473d623b1"
            ]
        ]
    },
    {
        "id": "4844689473d623b1",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1720,
        "wires": [
            [
                "65d133bb09646b99",
                "7c3b99b02e64576b",
                "4f0105eee79139d2"
            ]
        ]
    },
    {
        "id": "65d133bb09646b99",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 1720,
        "wires": []
    },
    {
        "id": "8709edc5df0d6b6a",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "",
        "scope": [
            "f162615d6010b4f0"
        ],
        "uncaught": false,
        "x": 492,
        "y": 1080,
        "wires": [
            [
                "5ee472dfd8bd9bbf",
                "3c09eff2c7fa3a9a"
            ]
        ]
    },
    {
        "id": "5ee472dfd8bd9bbf",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1060,
        "wires": []
    },
    {
        "id": "060e841045916da8",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 1435,
        "y": 1780,
        "wires": []
    },
    {
        "id": "65f367c707d74887",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 1780,
        "wires": [
            [
                "40296fd2ae19769e"
            ]
        ]
    },
    {
        "id": "40296fd2ae19769e",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1310,
        "y": 1780,
        "wires": [
            [
                "060e841045916da8"
            ]
        ]
    },
    {
        "id": "63fa8a55f57c1ac4",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 352,
        "y": 1040,
        "wires": []
    },
    {
        "id": "234c348b5b3e1f77",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 252,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3c09eff2c7fa3a9a",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 595,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7c3b99b02e64576b",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 872,
        "y": 1780,
        "wires": []
    },
    {
        "id": "0be398269af2fb2e",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4f0105eee79139d2",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 1435,
        "y": 1740,
        "wires": []
    },
    {
        "id": "3b4bdbb74e017ae9",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1340,
        "wires": []
    },
    {
        "id": "09a5a0d453b9a0e3",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "f6ec7be8c8b50ef4",
        "name": "rescue sat",
        "links": [
            "ec5b302db9983eb3"
        ],
        "x": 1005,
        "y": 1120,
        "wires": [
            [
                "e30e0dc36de6f6fc"
            ]
        ]
    },
    {
        "id": "e42f94c9dee1cc8e",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1770,
        "y": 1180,
        "wires": [
            [
                "e211a3b35daedb97",
                "4f0602adcd72742a"
            ]
        ]
    },
    {
        "id": "e211a3b35daedb97",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1750,
        "y": 1240,
        "wires": [
            [
                "d93fdbb0c52f044c"
            ]
        ]
    },
    {
        "id": "d93fdbb0c52f044c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 1280,
        "wires": [
            [
                "48303eea1f343220"
            ]
        ]
    },
    {
        "id": "48303eea1f343220",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1750,
        "y": 1320,
        "wires": [
            [
                "f66348ebc81ff2bd",
                "5abad142ad02682e"
            ]
        ]
    },
    {
        "id": "b2c8f9e2e177eb6f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1200,
        "wires": [
            [
                "6c45e59233628675"
            ]
        ]
    },
    {
        "id": "f66348ebc81ff2bd",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1762,
        "y": 1400,
        "wires": [
            [
                "e71676098e3b8b24",
                "b2c8f9e2e177eb6f",
                "07560ee04314d977",
                "cdb6cd01eeb10c86",
                "215f78d1e7701093",
                "de8cd65f1ff47567",
                "ebaeeb07cf240072",
                "7859284b2c01fa7b",
                "2969ee43278fa73b",
                "cf2d0464d4e0c997"
            ]
        ]
    },
    {
        "id": "07560ee04314d977",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1260,
        "wires": [
            [
                "ce619c6db2bdef31"
            ]
        ]
    },
    {
        "id": "cdb6cd01eeb10c86",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1320,
        "wires": [
            [
                "e0917e62602fbf59"
            ]
        ]
    },
    {
        "id": "e71676098e3b8b24",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1380,
        "wires": [
            [
                "356cc324f505e259"
            ]
        ]
    },
    {
        "id": "6c45e59233628675",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2348,
        "y": 1200,
        "wires": [
            [
                "efaddfecf4c76750"
            ]
        ]
    },
    {
        "id": "ce619c6db2bdef31",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2348,
        "y": 1260,
        "wires": [
            [
                "ff8c3a90d84dc987"
            ]
        ]
    },
    {
        "id": "e0917e62602fbf59",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2348,
        "y": 1320,
        "wires": [
            [
                "22a4daaa76db9b09",
                "aad26eb6f70b2485"
            ]
        ]
    },
    {
        "id": "356cc324f505e259",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2348,
        "y": 1380,
        "wires": [
            [
                "b5188ed6f8aed50d"
            ]
        ]
    },
    {
        "id": "215f78d1e7701093",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1440,
        "wires": [
            [
                "df20f998b77f2f0f"
            ]
        ]
    },
    {
        "id": "df20f998b77f2f0f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2348,
        "y": 1440,
        "wires": [
            [
                "b48d43236c9ee170"
            ]
        ]
    },
    {
        "id": "de8cd65f1ff47567",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1500,
        "wires": [
            [
                "028c28485137e385"
            ]
        ]
    },
    {
        "id": "028c28485137e385",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2348,
        "y": 1500,
        "wires": [
            [
                "baca7229e3f4d959"
            ]
        ]
    },
    {
        "id": "aca9ee0bef80e575",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Repeupler les DB",
        "info": "",
        "x": 1880,
        "y": 1120,
        "wires": []
    },
    {
        "id": "efaddfecf4c76750",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2690,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ff8c3a90d84dc987",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2690,
        "y": 1260,
        "wires": []
    },
    {
        "id": "22a4daaa76db9b09",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2690,
        "y": 1320,
        "wires": []
    },
    {
        "id": "b5188ed6f8aed50d",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2690,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b48d43236c9ee170",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2700,
        "y": 1440,
        "wires": []
    },
    {
        "id": "baca7229e3f4d959",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 2700,
        "y": 1500,
        "wires": []
    },
    {
        "id": "929f78b9274849b8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 1140,
        "wires": [
            [
                "e42f94c9dee1cc8e"
            ]
        ]
    },
    {
        "id": "ebaeeb07cf240072",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1560,
        "wires": [
            [
                "515e7796a18daf60"
            ]
        ]
    },
    {
        "id": "515e7796a18daf60",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 1560,
        "wires": [
            [
                "0d86aded6288a7cb",
                "0b61a522e52669bd"
            ]
        ]
    },
    {
        "id": "0d86aded6288a7cb",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2680,
        "y": 1560,
        "wires": []
    },
    {
        "id": "7859284b2c01fa7b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1620,
        "wires": [
            [
                "244cd44c88d86428"
            ]
        ]
    },
    {
        "id": "244cd44c88d86428",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 1620,
        "wires": [
            [
                "1a7293fa019302a1"
            ]
        ]
    },
    {
        "id": "1a7293fa019302a1",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2680,
        "y": 1620,
        "wires": []
    },
    {
        "id": "2969ee43278fa73b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1680,
        "wires": [
            [
                "80e0d14d0e42cb6e"
            ]
        ]
    },
    {
        "id": "80e0d14d0e42cb6e",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 1680,
        "wires": [
            [
                "71714c786f1dc6af"
            ]
        ]
    },
    {
        "id": "71714c786f1dc6af",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2680,
        "y": 1680,
        "wires": []
    },
    {
        "id": "cf2d0464d4e0c997",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2032,
        "y": 1760,
        "wires": [
            [
                "42e816a5f77742a8"
            ]
        ]
    },
    {
        "id": "42e816a5f77742a8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 1740,
        "wires": [
            [
                "df10258bce3d1b64",
                "4c0f405cc42d9996",
                "eed0fd174995d5b0"
            ]
        ]
    },
    {
        "id": "df10258bce3d1b64",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2680,
        "y": 1740,
        "wires": []
    },
    {
        "id": "751b6b68aa145d74",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "",
        "scope": [
            "e42f94c9dee1cc8e"
        ],
        "uncaught": false,
        "x": 2012,
        "y": 1100,
        "wires": [
            [
                "c1a535c6e7c0a423",
                "60cf32f4c3489a17"
            ]
        ]
    },
    {
        "id": "c1a535c6e7c0a423",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 1080,
        "wires": []
    },
    {
        "id": "84026e65f03a57a4",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 2955,
        "y": 1800,
        "wires": []
    },
    {
        "id": "3ad4a82f589c3de3",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2650,
        "y": 1800,
        "wires": [
            [
                "1d5e3365bbd1ee40"
            ]
        ]
    },
    {
        "id": "1d5e3365bbd1ee40",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2830,
        "y": 1800,
        "wires": [
            [
                "84026e65f03a57a4"
            ]
        ]
    },
    {
        "id": "4f0602adcd72742a",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1872,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5abad142ad02682e",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1772,
        "y": 1600,
        "wires": []
    },
    {
        "id": "60cf32f4c3489a17",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 2115,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4c0f405cc42d9996",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2392,
        "y": 1800,
        "wires": []
    },
    {
        "id": "0b61a522e52669bd",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2590,
        "y": 1600,
        "wires": []
    },
    {
        "id": "eed0fd174995d5b0",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 2955,
        "y": 1760,
        "wires": []
    },
    {
        "id": "aad26eb6f70b2485",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2620,
        "y": 1360,
        "wires": []
    },
    {
        "id": "1a9e3d84453d9a56",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "4f9f4ec412516243",
        "name": "rescue p1b",
        "links": [
            "f719a8c5b6e083f4"
        ],
        "x": 2525,
        "y": 1140,
        "wires": [
            [
                "929f78b9274849b8"
            ]
        ]
    },
    {
        "id": "820173ac1f4892fa",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3390,
        "y": 1180,
        "wires": [
            [
                "b244eb629805740f",
                "d0d6e4b33faff07a"
            ]
        ]
    },
    {
        "id": "b244eb629805740f",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3370,
        "y": 1240,
        "wires": [
            [
                "91f2ea708afb5241"
            ]
        ]
    },
    {
        "id": "91f2ea708afb5241",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3380,
        "y": 1280,
        "wires": [
            [
                "d8b3842aaa8cf1fd"
            ]
        ]
    },
    {
        "id": "d8b3842aaa8cf1fd",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3370,
        "y": 1320,
        "wires": [
            [
                "e3e2e1bc999e1214",
                "2f94c97fd3f2a127"
            ]
        ]
    },
    {
        "id": "653c62de63259d4b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1200,
        "wires": [
            [
                "7782d535a35db109"
            ]
        ]
    },
    {
        "id": "e3e2e1bc999e1214",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3382,
        "y": 1400,
        "wires": [
            [
                "ac97bf5533b5065c",
                "653c62de63259d4b",
                "0b88604527146468",
                "46922aa4a59b4e09",
                "7da1cfbdf705748b",
                "d793e718f641d373",
                "e99d571d059ad5a0",
                "7aaa804af1596fd8",
                "897e8b2061258dd2",
                "908a868e5844c290"
            ]
        ]
    },
    {
        "id": "0b88604527146468",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1260,
        "wires": [
            [
                "29526ae85b94bf4a"
            ]
        ]
    },
    {
        "id": "46922aa4a59b4e09",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1320,
        "wires": [
            [
                "806e52ba1a01a053"
            ]
        ]
    },
    {
        "id": "7da1cfbdf705748b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1380,
        "wires": [
            [
                "8b53e4203d90f3c8"
            ]
        ]
    },
    {
        "id": "7782d535a35db109",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3968,
        "y": 1200,
        "wires": [
            [
                "aabb604b10f1f391"
            ]
        ]
    },
    {
        "id": "29526ae85b94bf4a",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3968,
        "y": 1260,
        "wires": [
            [
                "c66e9bed428a4772"
            ]
        ]
    },
    {
        "id": "806e52ba1a01a053",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3968,
        "y": 1320,
        "wires": [
            [
                "fd22f0eed8b29c8f",
                "a18dc411fc867343"
            ]
        ]
    },
    {
        "id": "8b53e4203d90f3c8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3968,
        "y": 1380,
        "wires": [
            [
                "ececb226b4801051"
            ]
        ]
    },
    {
        "id": "ac97bf5533b5065c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1440,
        "wires": [
            [
                "d9692c8101477256"
            ]
        ]
    },
    {
        "id": "d9692c8101477256",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3968,
        "y": 1440,
        "wires": [
            [
                "db7990133f754e7e"
            ]
        ]
    },
    {
        "id": "d793e718f641d373",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1500,
        "wires": [
            [
                "2d07a56ffb738284"
            ]
        ]
    },
    {
        "id": "2d07a56ffb738284",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3968,
        "y": 1500,
        "wires": [
            [
                "013f830fd09f2d7d"
            ]
        ]
    },
    {
        "id": "15291fbcb8173ccc",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Repeupler les DB",
        "info": "",
        "x": 3500,
        "y": 1120,
        "wires": []
    },
    {
        "id": "aabb604b10f1f391",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4310,
        "y": 1200,
        "wires": []
    },
    {
        "id": "c66e9bed428a4772",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4310,
        "y": 1260,
        "wires": []
    },
    {
        "id": "fd22f0eed8b29c8f",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4310,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ececb226b4801051",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4310,
        "y": 1380,
        "wires": []
    },
    {
        "id": "db7990133f754e7e",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4320,
        "y": 1440,
        "wires": []
    },
    {
        "id": "013f830fd09f2d7d",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 4320,
        "y": 1500,
        "wires": []
    },
    {
        "id": "18b5321deb925320",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4320,
        "y": 1140,
        "wires": [
            [
                "820173ac1f4892fa"
            ]
        ]
    },
    {
        "id": "e99d571d059ad5a0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1560,
        "wires": [
            [
                "c4f9cf091b4854c2"
            ]
        ]
    },
    {
        "id": "c4f9cf091b4854c2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 1560,
        "wires": [
            [
                "f0cc81a01ead6fd2",
                "a91dde24c942210d"
            ]
        ]
    },
    {
        "id": "f0cc81a01ead6fd2",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4300,
        "y": 1560,
        "wires": []
    },
    {
        "id": "7aaa804af1596fd8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1620,
        "wires": [
            [
                "cf23c4f2821495dd"
            ]
        ]
    },
    {
        "id": "cf23c4f2821495dd",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 1620,
        "wires": [
            [
                "5877e4c407d5430f"
            ]
        ]
    },
    {
        "id": "5877e4c407d5430f",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4300,
        "y": 1620,
        "wires": []
    },
    {
        "id": "897e8b2061258dd2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 1680,
        "wires": [
            [
                "5e8a8bb809f20981"
            ]
        ]
    },
    {
        "id": "5e8a8bb809f20981",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 1680,
        "wires": [
            [
                "72a02e9dc5e134c9"
            ]
        ]
    },
    {
        "id": "72a02e9dc5e134c9",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4300,
        "y": 1680,
        "wires": []
    },
    {
        "id": "908a868e5844c290",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3652,
        "y": 1760,
        "wires": [
            [
                "9bd0e7339a88b52b"
            ]
        ]
    },
    {
        "id": "9bd0e7339a88b52b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3980,
        "y": 1740,
        "wires": [
            [
                "42cb191632d59531",
                "9d34006fbad5931f",
                "655ad19276a8f599"
            ]
        ]
    },
    {
        "id": "42cb191632d59531",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4300,
        "y": 1740,
        "wires": []
    },
    {
        "id": "8faffc61aaa08238",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "",
        "scope": [
            "820173ac1f4892fa"
        ],
        "uncaught": false,
        "x": 3632,
        "y": 1100,
        "wires": [
            [
                "06b1c132c29fba09",
                "748abe6393f24763"
            ]
        ]
    },
    {
        "id": "06b1c132c29fba09",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3850,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a483b0d05c354756",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 4575,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d004b0ee071172eb",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4270,
        "y": 1800,
        "wires": [
            [
                "3a88216476127dcb"
            ]
        ]
    },
    {
        "id": "3a88216476127dcb",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4450,
        "y": 1800,
        "wires": [
            [
                "a483b0d05c354756"
            ]
        ]
    },
    {
        "id": "d0d6e4b33faff07a",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3492,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2f94c97fd3f2a127",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3392,
        "y": 1600,
        "wires": []
    },
    {
        "id": "748abe6393f24763",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 3735,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9d34006fbad5931f",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4012,
        "y": 1800,
        "wires": []
    },
    {
        "id": "a91dde24c942210d",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4210,
        "y": 1600,
        "wires": []
    },
    {
        "id": "655ad19276a8f599",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 4575,
        "y": 1760,
        "wires": []
    },
    {
        "id": "a18dc411fc867343",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4240,
        "y": 1360,
        "wires": []
    },
    {
        "id": "fea1b0baf6176196",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "0cf4977f5480c358",
        "name": "rescue pneo4",
        "links": [
            "c4dcfb59b84b8924"
        ],
        "x": 4145,
        "y": 1140,
        "wires": [
            [
                "18b5321deb925320"
            ]
        ]
    },
    {
        "id": "2f3c976cdad52982",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 250,
        "y": 2100,
        "wires": [
            [
                "2921d056dfb9ea58",
                "79cdeb4868398534"
            ]
        ]
    },
    {
        "id": "2921d056dfb9ea58",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 230,
        "y": 2160,
        "wires": [
            [
                "0c43539b44d83b6d"
            ]
        ]
    },
    {
        "id": "0c43539b44d83b6d",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 2200,
        "wires": [
            [
                "476b8bce1284db02"
            ]
        ]
    },
    {
        "id": "476b8bce1284db02",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 230,
        "y": 2240,
        "wires": [
            [
                "9ced858a79f74df7",
                "9c35217ae5d0f4b8"
            ]
        ]
    },
    {
        "id": "ea3beb7bfeb039a8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2120,
        "wires": [
            [
                "a6ede921a9fa5644"
            ]
        ]
    },
    {
        "id": "9ced858a79f74df7",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 242,
        "y": 2320,
        "wires": [
            [
                "7d032d05b3ef0f11",
                "ea3beb7bfeb039a8",
                "21e080aeb252ff51",
                "9a6560fc66256ff3",
                "7718de3d29e0495a",
                "dc8a6ae72b42ccfa",
                "7d3500a4a85d71d2",
                "65b119b30798ab69",
                "7786685f82d89f9c",
                "20ae2a317af2127f"
            ]
        ]
    },
    {
        "id": "21e080aeb252ff51",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2180,
        "wires": [
            [
                "90cbfc13f74673f9"
            ]
        ]
    },
    {
        "id": "9a6560fc66256ff3",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2240,
        "wires": [
            [
                "537eb4ecf121d1b4"
            ]
        ]
    },
    {
        "id": "7718de3d29e0495a",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2300,
        "wires": [
            [
                "363004b6efc0b505"
            ]
        ]
    },
    {
        "id": "a6ede921a9fa5644",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 2120,
        "wires": [
            [
                "0098b1ff4ebca15f"
            ]
        ]
    },
    {
        "id": "90cbfc13f74673f9",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 2180,
        "wires": [
            [
                "f0f340baf845c15d"
            ]
        ]
    },
    {
        "id": "537eb4ecf121d1b4",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 2240,
        "wires": [
            [
                "1c735e5d3f995404",
                "becb36a2adf60857"
            ]
        ]
    },
    {
        "id": "363004b6efc0b505",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 2300,
        "wires": [
            [
                "40da994dc3173f41"
            ]
        ]
    },
    {
        "id": "dc8a6ae72b42ccfa",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2360,
        "wires": [
            [
                "5f2c249bfca9731b"
            ]
        ]
    },
    {
        "id": "5f2c249bfca9731b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 2360,
        "wires": [
            [
                "3eaf641b9d98808c"
            ]
        ]
    },
    {
        "id": "7d032d05b3ef0f11",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2420,
        "wires": [
            [
                "7c87042dd6704ffe"
            ]
        ]
    },
    {
        "id": "7c87042dd6704ffe",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 2420,
        "wires": [
            [
                "dc6162c9346a72a9"
            ]
        ]
    },
    {
        "id": "efa40ff6d0084e75",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Repeupler les DB",
        "info": "",
        "x": 360,
        "y": 2040,
        "wires": []
    },
    {
        "id": "0098b1ff4ebca15f",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 2120,
        "wires": []
    },
    {
        "id": "f0f340baf845c15d",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 2180,
        "wires": []
    },
    {
        "id": "1c735e5d3f995404",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 2240,
        "wires": []
    },
    {
        "id": "40da994dc3173f41",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 2300,
        "wires": []
    },
    {
        "id": "3eaf641b9d98808c",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1180,
        "y": 2360,
        "wires": []
    },
    {
        "id": "dc6162c9346a72a9",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 1180,
        "y": 2420,
        "wires": []
    },
    {
        "id": "d5c7c1256ce97335",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2060,
        "wires": [
            [
                "2f3c976cdad52982"
            ]
        ]
    },
    {
        "id": "7d3500a4a85d71d2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2480,
        "wires": [
            [
                "695fd671c12e4c01"
            ]
        ]
    },
    {
        "id": "695fd671c12e4c01",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2480,
        "wires": [
            [
                "102632a0b6e7b423",
                "4a351de7bdcf570f"
            ]
        ]
    },
    {
        "id": "102632a0b6e7b423",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 2480,
        "wires": []
    },
    {
        "id": "65b119b30798ab69",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2540,
        "wires": [
            [
                "10acbb7db4a4b6a5"
            ]
        ]
    },
    {
        "id": "10acbb7db4a4b6a5",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2540,
        "wires": [
            [
                "fe8badbb7943e0ca"
            ]
        ]
    },
    {
        "id": "fe8badbb7943e0ca",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 2540,
        "wires": []
    },
    {
        "id": "7786685f82d89f9c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2600,
        "wires": [
            [
                "74f444ec5562ba94"
            ]
        ]
    },
    {
        "id": "74f444ec5562ba94",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2600,
        "wires": [
            [
                "d9054a0d9bb83fbd"
            ]
        ]
    },
    {
        "id": "d9054a0d9bb83fbd",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 2600,
        "wires": []
    },
    {
        "id": "20ae2a317af2127f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 512,
        "y": 2680,
        "wires": [
            [
                "52cce33b5fd93baa"
            ]
        ]
    },
    {
        "id": "52cce33b5fd93baa",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2660,
        "wires": [
            [
                "bd57d191cb6d7567",
                "3f200128fcbb8dea",
                "53cadd4ff784c659"
            ]
        ]
    },
    {
        "id": "bd57d191cb6d7567",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 2660,
        "wires": []
    },
    {
        "id": "509bda04506d5a69",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "",
        "scope": [
            "2f3c976cdad52982"
        ],
        "uncaught": false,
        "x": 492,
        "y": 2020,
        "wires": [
            [
                "7645f5e1d5c86be0",
                "981ef6d87054de71"
            ]
        ]
    },
    {
        "id": "7645f5e1d5c86be0",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 2000,
        "wires": []
    },
    {
        "id": "37e8d219d3b4447d",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 1435,
        "y": 2720,
        "wires": []
    },
    {
        "id": "cd375849039a7ff0",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 2720,
        "wires": [
            [
                "e2396813278587a0"
            ]
        ]
    },
    {
        "id": "e2396813278587a0",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1310,
        "y": 2720,
        "wires": [
            [
                "37e8d219d3b4447d"
            ]
        ]
    },
    {
        "id": "79cdeb4868398534",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 352,
        "y": 1980,
        "wires": []
    },
    {
        "id": "9c35217ae5d0f4b8",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 252,
        "y": 2520,
        "wires": []
    },
    {
        "id": "981ef6d87054de71",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 595,
        "y": 1960,
        "wires": []
    },
    {
        "id": "3f200128fcbb8dea",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 872,
        "y": 2720,
        "wires": []
    },
    {
        "id": "4a351de7bdcf570f",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 2520,
        "wires": []
    },
    {
        "id": "53cadd4ff784c659",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 1435,
        "y": 2680,
        "wires": []
    },
    {
        "id": "becb36a2adf60857",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2280,
        "wires": []
    },
    {
        "id": "10331ff691dcc989",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "63c7fb1d8acb1fc4",
        "name": "rescue pneo3",
        "links": [
            "40434a59f221e247"
        ],
        "x": 1005,
        "y": 2060,
        "wires": [
            [
                "d5c7c1256ce97335"
            ]
        ]
    },
    {
        "id": "890d5612a64a95db",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1750,
        "y": 2120,
        "wires": [
            [
                "96389e91c07ade36",
                "cc5f4a4f55e6543c"
            ]
        ]
    },
    {
        "id": "96389e91c07ade36",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1730,
        "y": 2180,
        "wires": [
            [
                "5a743692ebbf148c"
            ]
        ]
    },
    {
        "id": "5a743692ebbf148c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 2220,
        "wires": [
            [
                "2baaf79438ee1680"
            ]
        ]
    },
    {
        "id": "2baaf79438ee1680",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1730,
        "y": 2260,
        "wires": [
            [
                "6b8ca77e04f20a3f",
                "dcf1eb6f60390d35"
            ]
        ]
    },
    {
        "id": "88381998ae7f02b0",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2140,
        "wires": [
            [
                "27285fcbe3084848"
            ]
        ]
    },
    {
        "id": "6b8ca77e04f20a3f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1742,
        "y": 2340,
        "wires": [
            [
                "dac54407c94566d1",
                "67a17402e1642fcd",
                "88381998ae7f02b0",
                "ac5e9823a3b21568",
                "7d61926372297c8c",
                "af73037057233b32",
                "834d8348c87e7654",
                "57fdbc60f9d69790",
                "3f56b71c2b64e750",
                "749c801f4b19cc92"
            ]
        ]
    },
    {
        "id": "67a17402e1642fcd",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2200,
        "wires": [
            [
                "fcdae58c597f7977"
            ]
        ]
    },
    {
        "id": "ac5e9823a3b21568",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2260,
        "wires": [
            [
                "23d5c38c4de4c3ca"
            ]
        ]
    },
    {
        "id": "7d61926372297c8c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2320,
        "wires": [
            [
                "1b99012470b379c2"
            ]
        ]
    },
    {
        "id": "27285fcbe3084848",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2328,
        "y": 2140,
        "wires": [
            [
                "038ebb1753d2c7ab"
            ]
        ]
    },
    {
        "id": "fcdae58c597f7977",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2328,
        "y": 2200,
        "wires": [
            [
                "84c29dfa2f149e58"
            ]
        ]
    },
    {
        "id": "23d5c38c4de4c3ca",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2328,
        "y": 2260,
        "wires": [
            [
                "5037fb7cfca19571",
                "bb08d2bdafd18cba"
            ]
        ]
    },
    {
        "id": "1b99012470b379c2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2328,
        "y": 2320,
        "wires": [
            [
                "a9a0b9686986574e"
            ]
        ]
    },
    {
        "id": "af73037057233b32",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2380,
        "wires": [
            [
                "de0742887bc0c78b"
            ]
        ]
    },
    {
        "id": "de0742887bc0c78b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2328,
        "y": 2380,
        "wires": [
            [
                "e32e12120d484f3e"
            ]
        ]
    },
    {
        "id": "834d8348c87e7654",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2440,
        "wires": [
            [
                "a82c225e4ff0ccf6"
            ]
        ]
    },
    {
        "id": "a82c225e4ff0ccf6",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2328,
        "y": 2440,
        "wires": [
            [
                "66be06619fc2d24c"
            ]
        ]
    },
    {
        "id": "f78baaadda52c40c",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Repeupler les DB",
        "info": "",
        "x": 1860,
        "y": 2060,
        "wires": []
    },
    {
        "id": "038ebb1753d2c7ab",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2670,
        "y": 2140,
        "wires": []
    },
    {
        "id": "84c29dfa2f149e58",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2670,
        "y": 2200,
        "wires": []
    },
    {
        "id": "5037fb7cfca19571",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2670,
        "y": 2260,
        "wires": []
    },
    {
        "id": "a9a0b9686986574e",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2670,
        "y": 2320,
        "wires": []
    },
    {
        "id": "e32e12120d484f3e",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2680,
        "y": 2380,
        "wires": []
    },
    {
        "id": "66be06619fc2d24c",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 2680,
        "y": 2440,
        "wires": []
    },
    {
        "id": "811e652d44db53e9",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 2080,
        "wires": [
            [
                "890d5612a64a95db"
            ]
        ]
    },
    {
        "id": "dac54407c94566d1",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2500,
        "wires": [
            [
                "c1cfc231b6d73943"
            ]
        ]
    },
    {
        "id": "c1cfc231b6d73943",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 2500,
        "wires": [
            [
                "ec782510d3f63533",
                "6c8dd81184bb417a"
            ]
        ]
    },
    {
        "id": "ec782510d3f63533",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2660,
        "y": 2500,
        "wires": []
    },
    {
        "id": "57fdbc60f9d69790",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2560,
        "wires": [
            [
                "4e4a75f60a0643c4"
            ]
        ]
    },
    {
        "id": "4e4a75f60a0643c4",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 2560,
        "wires": [
            [
                "de1c20fe65a826b9"
            ]
        ]
    },
    {
        "id": "de1c20fe65a826b9",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2660,
        "y": 2560,
        "wires": []
    },
    {
        "id": "3f56b71c2b64e750",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 2620,
        "wires": [
            [
                "f26e379fa71b4f4f"
            ]
        ]
    },
    {
        "id": "f26e379fa71b4f4f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 2620,
        "wires": [
            [
                "778ed3ecb4fca430"
            ]
        ]
    },
    {
        "id": "778ed3ecb4fca430",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2660,
        "y": 2620,
        "wires": []
    },
    {
        "id": "749c801f4b19cc92",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2012,
        "y": 2700,
        "wires": [
            [
                "861ca3af22c71595"
            ]
        ]
    },
    {
        "id": "861ca3af22c71595",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 2680,
        "wires": [
            [
                "f75986f828f51d53",
                "e7c33cd07f302f07",
                "d88388a251a33878"
            ]
        ]
    },
    {
        "id": "f75986f828f51d53",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2660,
        "y": 2680,
        "wires": []
    },
    {
        "id": "b4c7e0ea1d090f91",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "",
        "scope": [
            "890d5612a64a95db"
        ],
        "uncaught": false,
        "x": 1992,
        "y": 2040,
        "wires": [
            [
                "76fa1d92df410a7a",
                "cbf52896e447280f"
            ]
        ]
    },
    {
        "id": "76fa1d92df410a7a",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 2020,
        "wires": []
    },
    {
        "id": "60fca16c6bd61f0c",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 2935,
        "y": 2740,
        "wires": []
    },
    {
        "id": "029285bcd7e092f1",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2630,
        "y": 2740,
        "wires": [
            [
                "8041880e3f4726e9"
            ]
        ]
    },
    {
        "id": "8041880e3f4726e9",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2810,
        "y": 2740,
        "wires": [
            [
                "60fca16c6bd61f0c"
            ]
        ]
    },
    {
        "id": "cc5f4a4f55e6543c",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1852,
        "y": 2000,
        "wires": []
    },
    {
        "id": "dcf1eb6f60390d35",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1752,
        "y": 2540,
        "wires": []
    },
    {
        "id": "cbf52896e447280f",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 2095,
        "y": 1980,
        "wires": []
    },
    {
        "id": "e7c33cd07f302f07",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2372,
        "y": 2740,
        "wires": []
    },
    {
        "id": "6c8dd81184bb417a",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 2540,
        "wires": []
    },
    {
        "id": "d88388a251a33878",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 2935,
        "y": 2700,
        "wires": []
    },
    {
        "id": "bb08d2bdafd18cba",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 2300,
        "wires": []
    },
    {
        "id": "af89d5f4f668e65c",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "ad61e78ebf98a78c",
        "name": "rescue b1",
        "links": [
            "61b35b8bf893a288"
        ],
        "x": 2505,
        "y": 2080,
        "wires": [
            [
                "811e652d44db53e9"
            ]
        ]
    },
    {
        "id": "6ee539988d281031",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3450,
        "y": 2140,
        "wires": [
            [
                "a472f124c8180b0d",
                "680e281d09c64021"
            ]
        ]
    },
    {
        "id": "a472f124c8180b0d",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3430,
        "y": 2200,
        "wires": [
            [
                "a580ff37abe71af3"
            ]
        ]
    },
    {
        "id": "a580ff37abe71af3",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3440,
        "y": 2240,
        "wires": [
            [
                "dc3a63134d627677"
            ]
        ]
    },
    {
        "id": "dc3a63134d627677",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3430,
        "y": 2280,
        "wires": [
            [
                "7b68b2d7cd530d0f",
                "8f568eb31430560d"
            ]
        ]
    },
    {
        "id": "11506121a5ddf515",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2160,
        "wires": [
            [
                "cc0f7b7ef682c49c"
            ]
        ]
    },
    {
        "id": "7b68b2d7cd530d0f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3442,
        "y": 2360,
        "wires": [
            [
                "344156bb6c48364e",
                "11506121a5ddf515",
                "bf845f62507f74b3",
                "c964fc0c9b3f54b8",
                "c870948f1d956475",
                "d7bdfb9f488a9ea4",
                "9eaa8422fd9509d8",
                "e292f751baf2812b",
                "342a8f8173d09806",
                "1ba439735945246b"
            ]
        ]
    },
    {
        "id": "bf845f62507f74b3",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2220,
        "wires": [
            [
                "6bd3ca5522731f8f"
            ]
        ]
    },
    {
        "id": "c964fc0c9b3f54b8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2280,
        "wires": [
            [
                "034815e966d3bc98"
            ]
        ]
    },
    {
        "id": "c870948f1d956475",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2340,
        "wires": [
            [
                "c616928e0ce78794"
            ]
        ]
    },
    {
        "id": "cc0f7b7ef682c49c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4028,
        "y": 2160,
        "wires": [
            [
                "e5dc6cb3e42b5270"
            ]
        ]
    },
    {
        "id": "6bd3ca5522731f8f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4028,
        "y": 2220,
        "wires": [
            [
                "f26bddcdb230f031"
            ]
        ]
    },
    {
        "id": "034815e966d3bc98",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4028,
        "y": 2280,
        "wires": [
            [
                "410171459bdbff8b",
                "65fea8461e96fa5f"
            ]
        ]
    },
    {
        "id": "c616928e0ce78794",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4028,
        "y": 2340,
        "wires": [
            [
                "e0c50e39bd50aedf"
            ]
        ]
    },
    {
        "id": "d7bdfb9f488a9ea4",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2400,
        "wires": [
            [
                "fd16fac6257af5bd"
            ]
        ]
    },
    {
        "id": "fd16fac6257af5bd",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4028,
        "y": 2400,
        "wires": [
            [
                "bc2b7c680ba5e9a3"
            ]
        ]
    },
    {
        "id": "9eaa8422fd9509d8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2460,
        "wires": [
            [
                "0afe9503a905ef96"
            ]
        ]
    },
    {
        "id": "0afe9503a905ef96",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4028,
        "y": 2460,
        "wires": [
            [
                "4dfdc7b5ab87da3e"
            ]
        ]
    },
    {
        "id": "8bd47b10368ab4e2",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Repeupler les DB",
        "info": "",
        "x": 3560,
        "y": 2080,
        "wires": []
    },
    {
        "id": "e5dc6cb3e42b5270",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4370,
        "y": 2160,
        "wires": []
    },
    {
        "id": "f26bddcdb230f031",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4370,
        "y": 2220,
        "wires": []
    },
    {
        "id": "410171459bdbff8b",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4370,
        "y": 2280,
        "wires": []
    },
    {
        "id": "e0c50e39bd50aedf",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4370,
        "y": 2340,
        "wires": []
    },
    {
        "id": "bc2b7c680ba5e9a3",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4380,
        "y": 2400,
        "wires": []
    },
    {
        "id": "4dfdc7b5ab87da3e",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 4380,
        "y": 2460,
        "wires": []
    },
    {
        "id": "c7e0211423bda1af",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 2100,
        "wires": [
            [
                "6ee539988d281031"
            ]
        ]
    },
    {
        "id": "e292f751baf2812b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2520,
        "wires": [
            [
                "8b814ef6a67c2eda"
            ]
        ]
    },
    {
        "id": "8b814ef6a67c2eda",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4030,
        "y": 2520,
        "wires": [
            [
                "e365993d6db293a6",
                "820a31145c07a71e"
            ]
        ]
    },
    {
        "id": "e365993d6db293a6",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4360,
        "y": 2520,
        "wires": []
    },
    {
        "id": "344156bb6c48364e",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2580,
        "wires": [
            [
                "fc8b768c2759afda"
            ]
        ]
    },
    {
        "id": "fc8b768c2759afda",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4030,
        "y": 2580,
        "wires": [
            [
                "be2cb476ec364e94"
            ]
        ]
    },
    {
        "id": "be2cb476ec364e94",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4360,
        "y": 2580,
        "wires": []
    },
    {
        "id": "342a8f8173d09806",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 2640,
        "wires": [
            [
                "8537532aa3725d43"
            ]
        ]
    },
    {
        "id": "8537532aa3725d43",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4030,
        "y": 2640,
        "wires": [
            [
                "551fcf211ef13f41"
            ]
        ]
    },
    {
        "id": "551fcf211ef13f41",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4360,
        "y": 2640,
        "wires": []
    },
    {
        "id": "1ba439735945246b",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3712,
        "y": 2720,
        "wires": [
            [
                "60f681c0e594763c"
            ]
        ]
    },
    {
        "id": "60f681c0e594763c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4040,
        "y": 2700,
        "wires": [
            [
                "7a98cb2e9ac069e2",
                "efa5a4161fbad53e",
                "79fb1054f6de18d0"
            ]
        ]
    },
    {
        "id": "7a98cb2e9ac069e2",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 4360,
        "y": 2700,
        "wires": []
    },
    {
        "id": "7eacaeeb802eb26a",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "",
        "scope": [
            "6ee539988d281031"
        ],
        "uncaught": false,
        "x": 3692,
        "y": 2060,
        "wires": [
            [
                "827c43ed975f7e28",
                "c9eeca2b41395219"
            ]
        ]
    },
    {
        "id": "827c43ed975f7e28",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3910,
        "y": 2040,
        "wires": []
    },
    {
        "id": "6b95dc6703f177a9",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 4635,
        "y": 2760,
        "wires": []
    },
    {
        "id": "aae878c11c615dad",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4330,
        "y": 2760,
        "wires": [
            [
                "7ed28964ea26e35a"
            ]
        ]
    },
    {
        "id": "7ed28964ea26e35a",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4510,
        "y": 2760,
        "wires": [
            [
                "6b95dc6703f177a9"
            ]
        ]
    },
    {
        "id": "680e281d09c64021",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3552,
        "y": 2020,
        "wires": []
    },
    {
        "id": "8f568eb31430560d",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3452,
        "y": 2560,
        "wires": []
    },
    {
        "id": "c9eeca2b41395219",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 3795,
        "y": 2000,
        "wires": []
    },
    {
        "id": "efa5a4161fbad53e",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4072,
        "y": 2760,
        "wires": []
    },
    {
        "id": "820a31145c07a71e",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4270,
        "y": 2560,
        "wires": []
    },
    {
        "id": "79fb1054f6de18d0",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 4635,
        "y": 2720,
        "wires": []
    },
    {
        "id": "65fea8461e96fa5f",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4300,
        "y": 2320,
        "wires": []
    },
    {
        "id": "afd0b33f1a6382bb",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "a701e37a86adc5d2",
        "name": "rescue b2",
        "links": [
            "75cefcf9a95b4e3a"
        ],
        "x": 4205,
        "y": 2100,
        "wires": [
            [
                "c7e0211423bda1af"
            ]
        ]
    },
    {
        "id": "f8f487f85a14bc3c",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 20,
        "wires": [
            [
                "c3ad0cee590c46b9"
            ]
        ]
    },
    {
        "id": "01941bd026c9252d",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "1c9c112f8a798b25"
            ]
        ]
    },
    {
        "id": "5bcd4bcb5b2ac13e",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 200,
        "wires": [
            [
                "b249a2f802593a07"
            ]
        ]
    },
    {
        "id": "8d4812bfce5ea066",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 280,
        "wires": [
            [
                "dcf0d47ff62b1cd9"
            ]
        ]
    },
    {
        "id": "ed5929e2ab50f6ee",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 340,
        "wires": [
            [
                "48cd6df482948497"
            ]
        ]
    },
    {
        "id": "fc4c7e67b36455fe",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 400,
        "wires": [
            [
                "4028e756b6eb15ed"
            ]
        ]
    },
    {
        "id": "7b0a736cf329a9f0",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 460,
        "wires": [
            [
                "299a1012e822da52"
            ]
        ]
    },
    {
        "id": "c4ca52f2ae175afc",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 500,
        "wires": [
            [
                "dcf4ed991e97b0b5"
            ]
        ]
    },
    {
        "id": "500697049aa19b50",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 580,
        "wires": [
            [
                "8ff8a189bd5bd772"
            ]
        ]
    },
    {
        "id": "b156163793eddf7f",
        "type": "inject",
        "z": "36e05050e3375022",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 660,
        "wires": [
            [
                "46654b8ad12c6573"
            ]
        ]
    },
    {
        "id": "f16e56ad2f669b6e",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 250,
        "y": 3000,
        "wires": [
            [
                "8df9c506f930d2e7",
                "49441718f8591a8c"
            ]
        ]
    },
    {
        "id": "8df9c506f930d2e7",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 230,
        "y": 3060,
        "wires": [
            [
                "f402f9fcdec81304"
            ]
        ]
    },
    {
        "id": "f402f9fcdec81304",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 3100,
        "wires": [
            [
                "37c0ea20b26dd3f7"
            ]
        ]
    },
    {
        "id": "37c0ea20b26dd3f7",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 230,
        "y": 3140,
        "wires": [
            [
                "b2e995e7138c9e93",
                "ad8964d0d33058a5"
            ]
        ]
    },
    {
        "id": "05a1c9258a2e2eb3",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3020,
        "wires": [
            [
                "586b18a19bc82a01"
            ]
        ]
    },
    {
        "id": "b2e995e7138c9e93",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 242,
        "y": 3220,
        "wires": [
            [
                "3bca3cf2df6ed263",
                "05a1c9258a2e2eb3",
                "d951bf75102645a3",
                "2041af8af411701c",
                "56b150228c3da714",
                "ffb83dbaf394d959",
                "695311845bb3a8da",
                "a3f45ac9e365f4e2",
                "affbdd34b0282cd8",
                "2d2f4704914842c1"
            ]
        ]
    },
    {
        "id": "d951bf75102645a3",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3080,
        "wires": [
            [
                "15750aa931f5039a"
            ]
        ]
    },
    {
        "id": "2041af8af411701c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3140,
        "wires": [
            [
                "073969ac786c165f"
            ]
        ]
    },
    {
        "id": "56b150228c3da714",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3200,
        "wires": [
            [
                "7d8ccdc11a415bcc"
            ]
        ]
    },
    {
        "id": "586b18a19bc82a01",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 3020,
        "wires": [
            [
                "6b52b43dea8f5f87"
            ]
        ]
    },
    {
        "id": "15750aa931f5039a",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 3080,
        "wires": [
            [
                "658072941c107d5f"
            ]
        ]
    },
    {
        "id": "073969ac786c165f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 3140,
        "wires": [
            [
                "760947d4d9cd43fd",
                "3de42f09ad049811"
            ]
        ]
    },
    {
        "id": "7d8ccdc11a415bcc",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 3200,
        "wires": [
            [
                "035d87dbfd3386c7"
            ]
        ]
    },
    {
        "id": "ffb83dbaf394d959",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3260,
        "wires": [
            [
                "9ee2dcba22d19fa7"
            ]
        ]
    },
    {
        "id": "9ee2dcba22d19fa7",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 3260,
        "wires": [
            [
                "b0947befdc71ddd2"
            ]
        ]
    },
    {
        "id": "695311845bb3a8da",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3320,
        "wires": [
            [
                "abe381440e59b756"
            ]
        ]
    },
    {
        "id": "abe381440e59b756",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828,
        "y": 3320,
        "wires": [
            [
                "7bbbbf765154fe6d"
            ]
        ]
    },
    {
        "id": "e522e7dc6b978fad",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Repeupler les DB",
        "info": "",
        "x": 360,
        "y": 2940,
        "wires": []
    },
    {
        "id": "6b52b43dea8f5f87",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 3020,
        "wires": []
    },
    {
        "id": "658072941c107d5f",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 3080,
        "wires": []
    },
    {
        "id": "760947d4d9cd43fd",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 3140,
        "wires": []
    },
    {
        "id": "035d87dbfd3386c7",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1170,
        "y": 3200,
        "wires": []
    },
    {
        "id": "b0947befdc71ddd2",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1180,
        "y": 3260,
        "wires": []
    },
    {
        "id": "7bbbbf765154fe6d",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 1180,
        "y": 3320,
        "wires": []
    },
    {
        "id": "d9885d6d5ca0b944",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2960,
        "wires": [
            [
                "f16e56ad2f669b6e"
            ]
        ]
    },
    {
        "id": "a3f45ac9e365f4e2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3380,
        "wires": [
            [
                "5a7e7a3ebf63c699"
            ]
        ]
    },
    {
        "id": "5a7e7a3ebf63c699",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 3380,
        "wires": [
            [
                "8239b81a46cd0637",
                "085a424b4bac723e"
            ]
        ]
    },
    {
        "id": "8239b81a46cd0637",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 3380,
        "wires": []
    },
    {
        "id": "affbdd34b0282cd8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3440,
        "wires": [
            [
                "f117b2cbcfd990fe"
            ]
        ]
    },
    {
        "id": "f117b2cbcfd990fe",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 3440,
        "wires": [
            [
                "0ae7586b07d9c0d3"
            ]
        ]
    },
    {
        "id": "0ae7586b07d9c0d3",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 3440,
        "wires": []
    },
    {
        "id": "3bca3cf2df6ed263",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3500,
        "wires": [
            [
                "a9c9ede207bf5f2f"
            ]
        ]
    },
    {
        "id": "a9c9ede207bf5f2f",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 3500,
        "wires": [
            [
                "9e0221ae00949825"
            ]
        ]
    },
    {
        "id": "9e0221ae00949825",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 3500,
        "wires": []
    },
    {
        "id": "2d2f4704914842c1",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 512,
        "y": 3580,
        "wires": [
            [
                "c3f71e6bc29a117c"
            ]
        ]
    },
    {
        "id": "c3f71e6bc29a117c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3560,
        "wires": [
            [
                "98ba5ed7239c8c1f",
                "9c2e0eec58709dca",
                "8e4842d5d9999187"
            ]
        ]
    },
    {
        "id": "98ba5ed7239c8c1f",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 3560,
        "wires": []
    },
    {
        "id": "21b3f0c68dfdb920",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "",
        "scope": [
            "f16e56ad2f669b6e"
        ],
        "uncaught": false,
        "x": 492,
        "y": 2920,
        "wires": [
            [
                "259568284b612689",
                "dd74082fe75ea6b8"
            ]
        ]
    },
    {
        "id": "259568284b612689",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 2900,
        "wires": []
    },
    {
        "id": "54eef4c6e8c45f49",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 1435,
        "y": 3620,
        "wires": []
    },
    {
        "id": "6f968837388d78c5",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 3620,
        "wires": [
            [
                "efafb69c9b3e5bf9"
            ]
        ]
    },
    {
        "id": "efafb69c9b3e5bf9",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1310,
        "y": 3620,
        "wires": [
            [
                "54eef4c6e8c45f49"
            ]
        ]
    },
    {
        "id": "49441718f8591a8c",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 352,
        "y": 2880,
        "wires": []
    },
    {
        "id": "ad8964d0d33058a5",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 252,
        "y": 3420,
        "wires": []
    },
    {
        "id": "dd74082fe75ea6b8",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 595,
        "y": 2860,
        "wires": []
    },
    {
        "id": "9c2e0eec58709dca",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 872,
        "y": 3620,
        "wires": []
    },
    {
        "id": "085a424b4bac723e",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 3420,
        "wires": []
    },
    {
        "id": "8e4842d5d9999187",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 1435,
        "y": 3580,
        "wires": []
    },
    {
        "id": "3de42f09ad049811",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 3180,
        "wires": []
    },
    {
        "id": "da22d0979386e0b3",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "84d06975d8bcd442",
        "name": "rescue r1",
        "links": [
            "6c9b238eb56480c6"
        ],
        "x": 1005,
        "y": 2960,
        "wires": [
            [
                "d9885d6d5ca0b944"
            ]
        ]
    },
    {
        "id": "f9756873dc9ac557",
        "type": "file in",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "",
        "filename": "tle-latest.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1790,
        "y": 3080,
        "wires": [
            [
                "18a322c37aa39109",
                "0783a8c602143ead"
            ]
        ]
    },
    {
        "id": "18a322c37aa39109",
        "type": "split",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1770,
        "y": 3140,
        "wires": [
            [
                "1d73fcbdc34780c4"
            ]
        ]
    },
    {
        "id": "1d73fcbdc34780c4",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "filtre emptystring",
        "func": "if(msg.payload.length<=1){}\nelse{return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 3180,
        "wires": [
            [
                "dffb573f76b32a8e"
            ]
        ]
    },
    {
        "id": "dffb573f76b32a8e",
        "type": "join",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "TLE recomb",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "30",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1770,
        "y": 3220,
        "wires": [
            [
                "9f94a6dff1a41a51",
                "93a23ad8f4c49ea4"
            ]
        ]
    },
    {
        "id": "d1908ab0ce2f9205",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3100,
        "wires": [
            [
                "bbc49d1347cc34a2"
            ]
        ]
    },
    {
        "id": "9f94a6dff1a41a51",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Trim TLE",
        "func": "msg.payload[0]=msg.payload[0].trim();\nmsg.payload[1]=msg.payload[1].trim();\nmsg.payload[2]=msg.payload[2].trim();\nmsg.payload[3] = msg.payload[3].trim();\nmsg.payload[4] = msg.payload[4].trim();\nmsg.payload[5] = msg.payload[5].trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1782,
        "y": 3300,
        "wires": [
            [
                "d64d6700717b0823",
                "7b5a29dd2756bfa8",
                "03e21a5829cbcbf2",
                "e885590ea56e3804",
                "7cb7182c292dd7c2",
                "592388ef29f93fa3",
                "d1908ab0ce2f9205",
                "62b19f418aad35bf",
                "e1206577f51ffe1d",
                "c498f93e467ac18d"
            ]
        ]
    },
    {
        "id": "62b19f418aad35bf",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1A\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3160,
        "wires": [
            [
                "7e69671add81d102"
            ]
        ]
    },
    {
        "id": "e1206577f51ffe1d",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3220,
        "wires": [
            [
                "304d3137477a0664"
            ]
        ]
    },
    {
        "id": "c498f93e467ac18d",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES 1B\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3280,
        "wires": [
            [
                "28126a0dcc0eaa53"
            ]
        ]
    },
    {
        "id": "bbc49d1347cc34a2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2368,
        "y": 3100,
        "wires": [
            [
                "8eb6a8ea0ae36355"
            ]
        ]
    },
    {
        "id": "7e69671add81d102",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2368,
        "y": 3160,
        "wires": [
            [
                "d390072249f3f80b"
            ]
        ]
    },
    {
        "id": "304d3137477a0664",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2368,
        "y": 3220,
        "wires": [
            [
                "e6f786aea292d87f",
                "2d48c79ae0828996"
            ]
        ]
    },
    {
        "id": "28126a0dcc0eaa53",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2368,
        "y": 3280,
        "wires": [
            [
                "eb11293aa26e159f"
            ]
        ]
    },
    {
        "id": "592388ef29f93fa3",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 4\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3340,
        "wires": [
            [
                "958b05a706cf1403"
            ]
        ]
    },
    {
        "id": "958b05a706cf1403",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2368,
        "y": 3340,
        "wires": [
            [
                "779566965cc52267"
            ]
        ]
    },
    {
        "id": "7cb7182c292dd7c2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"PLEIADES NEO 3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3400,
        "wires": [
            [
                "6c5fb4555050f7fa"
            ]
        ]
    },
    {
        "id": "6c5fb4555050f7fa",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass: msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2368,
        "y": 3400,
        "wires": [
            [
                "51a74c2ec7224785"
            ]
        ]
    },
    {
        "id": "479735de9022140a",
        "type": "comment",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Repeupler les DB",
        "info": "",
        "x": 1900,
        "y": 3020,
        "wires": []
    },
    {
        "id": "8eb6a8ea0ae36355",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-rob1btlelatest",
        "collection": "rob1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2710,
        "y": 3100,
        "wires": []
    },
    {
        "id": "d390072249f3f80b",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2710,
        "y": 3160,
        "wires": []
    },
    {
        "id": "e6f786aea292d87f",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-sattlelatest",
        "collection": "sattlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2710,
        "y": 3220,
        "wires": []
    },
    {
        "id": "eb11293aa26e159f",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2710,
        "y": 3280,
        "wires": []
    },
    {
        "id": "779566965cc52267",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2720,
        "y": 3340,
        "wires": []
    },
    {
        "id": "51a74c2ec7224785",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 2720,
        "y": 3400,
        "wires": []
    },
    {
        "id": "ab50bd21eea112a3",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 3040,
        "wires": [
            [
                "f9756873dc9ac557"
            ]
        ]
    },
    {
        "id": "e885590ea56e3804",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if(msg.payload[0]===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3460,
        "wires": [
            [
                "ac55b2e29df3e27e"
            ]
        ]
    },
    {
        "id": "ac55b2e29df3e27e",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\n msg.payload={\n\ntle1:msg.payload[1],\ntle2:msg.payload[2],\nstatus:1,\ndry_mass:msg.payload[3],\nergol_mass: msg.payload[4],\nergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 3460,
        "wires": [
            [
                "cc1b1f78728544ea",
                "1959bbd13e200ded"
            ]
        ]
    },
    {
        "id": "cc1b1f78728544ea",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2700,
        "y": 3460,
        "wires": []
    },
    {
        "id": "03e21a5829cbcbf2",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3520,
        "wires": [
            [
                "32dc883fd2893220"
            ]
        ]
    },
    {
        "id": "32dc883fd2893220",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 3520,
        "wires": [
            [
                "8ca8a24c910cba19"
            ]
        ]
    },
    {
        "id": "8ca8a24c910cba19",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2700,
        "y": 3520,
        "wires": []
    },
    {
        "id": "7b5a29dd2756bfa8",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 3580,
        "wires": [
            [
                "c435e55429931a3c"
            ]
        ]
    },
    {
        "id": "c435e55429931a3c",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 3580,
        "wires": [
            [
                "570b4b59e615ab98"
            ]
        ]
    },
    {
        "id": "570b4b59e615ab98",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2700,
        "y": 3580,
        "wires": []
    },
    {
        "id": "d64d6700717b0823",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Select the right message",
        "func": "if (msg.payload[0] ===\"UWE-3\" ){return msg;}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2052,
        "y": 3660,
        "wires": [
            [
                "578e02795f869e54"
            ]
        ]
    },
    {
        "id": "578e02795f869e54",
        "type": "function",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "Prepare the message for upload to DB R2",
        "func": "\nmsg.payload = {\n\n    tle1: msg.payload[1],\n    tle2: msg.payload[2],\n    status: 1,\n    dry_mass: msg.payload[3],\n    ergol_mass: msg.payload[4],\n    ergol_consumption: msg.payload[5],\n}\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 3640,
        "wires": [
            [
                "c20ed5bb29a4736b",
                "d271e8060ff273d3"
            ]
        ]
    },
    {
        "id": "c20ed5bb29a4736b",
        "type": "mongodb out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 2700,
        "y": 3640,
        "wires": []
    },
    {
        "id": "f4dcdd2ac8fe9a47",
        "type": "catch",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "",
        "scope": [
            "f9756873dc9ac557"
        ],
        "uncaught": false,
        "x": 2032,
        "y": 3000,
        "wires": [
            [
                "c064fa574825ce0a",
                "59cd0631d8f81a14"
            ]
        ]
    },
    {
        "id": "c064fa574825ce0a",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "TLE LATEST ERROR READING",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 2980,
        "wires": []
    },
    {
        "id": "a704076d86a5a588",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "",
        "mode": "link",
        "links": [
            "3853f0aecc249b02"
        ],
        "x": 2975,
        "y": 3700,
        "wires": []
    },
    {
        "id": "1a70ac0f89de5628",
        "type": "switch",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on-start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2670,
        "y": 3700,
        "wires": [
            [
                "19d622a7a1e57857"
            ]
        ]
    },
    {
        "id": "19d622a7a1e57857",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2850,
        "y": 3700,
        "wires": [
            [
                "a704076d86a5a588"
            ]
        ]
    },
    {
        "id": "0783a8c602143ead",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "tle-latest.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1892,
        "y": 2960,
        "wires": []
    },
    {
        "id": "93a23ad8f4c49ea4",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "TLE recomb",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1792,
        "y": 3500,
        "wires": []
    },
    {
        "id": "59cd0631d8f81a14",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "RESTART",
        "mode": "link",
        "links": [
            "063d6204bbca5ae5"
        ],
        "x": 2135,
        "y": 2940,
        "wires": []
    },
    {
        "id": "d271e8060ff273d3",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2412,
        "y": 3700,
        "wires": []
    },
    {
        "id": "1959bbd13e200ded",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "TEST_PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 3500,
        "wires": []
    },
    {
        "id": "85667f2df171a6b7",
        "type": "link out",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "TEST MASS",
        "mode": "link",
        "links": [
            "e67ac97fa8402138",
            "03bf9a30c0096024",
            "86c9e057c582a4e3",
            "6fce1378378d053b",
            "e848cec598b68b88",
            "ab78159c4ce3225b",
            "758fa51806ec8c11",
            "38e7dd3d89aea720"
        ],
        "x": 2975,
        "y": 3660,
        "wires": []
    },
    {
        "id": "2d48c79ae0828996",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "TEST_PAYLOAD_SAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 3260,
        "wires": []
    },
    {
        "id": "4e471f1b0324c285",
        "type": "link in",
        "z": "36e05050e3375022",
        "g": "7ebb6f22c1784649",
        "name": "rescue r2",
        "links": [
            "42b8fd5872be96af"
        ],
        "x": 2545,
        "y": 3040,
        "wires": [
            [
                "ab50bd21eea112a3"
            ]
        ]
    },
    {
        "id": "d9cc4486da2f1dcf",
        "type": "link in",
        "z": "36e05050e3375022",
        "name": "Rescue Empty TLEs Trigger",
        "links": [
            "12fa9b1ad5c9c910",
            "8b1f688102a4bde6",
            "f1e633658f2079e1",
            "acfee45e8462edad",
            "41e888d35dc8e920",
            "700fb1d797fb7a8c",
            "d18125d14af7aeeb",
            "f141f3208025a9d3",
            "478bef3a5a7bfe17",
            "2368489316f9702a",
            "afdb2c309e47c2e8"
        ],
        "x": 135,
        "y": 100,
        "wires": [
            [
                "c3ad0cee590c46b9",
                "1c9c112f8a798b25",
                "b249a2f802593a07",
                "dcf0d47ff62b1cd9",
                "48cd6df482948497",
                "4028e756b6eb15ed",
                "299a1012e822da52",
                "dcf4ed991e97b0b5",
                "8ff8a189bd5bd772",
                "46654b8ad12c6573"
            ]
        ]
    },
    {
        "id": "c21e9ea6abd5a4ca",
        "type": "delay",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1650,
        "y": 140,
        "wires": [
            [
                "a482fc363c9ec8d9",
                "923a07ed1158a6f6"
            ]
        ]
    },
    {
        "id": "923a07ed1158a6f6",
        "type": "debug",
        "z": "36e05050e3375022",
        "g": "137096c381fcc9dc",
        "name": "RATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 80,
        "wires": []
    },
    {
        "id": "abc023eaf9742ff4",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete rob1blelatest",
        "collection": "rob1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 990,
        "y": 180,
        "wires": []
    },
    {
        "id": "7693efda5c149b37",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1atlelatest",
        "collection": "p1atlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 990,
        "y": 240,
        "wires": []
    },
    {
        "id": "2d048e610bae770c",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete sattlelatest",
        "collection": "sattlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 990,
        "y": 300,
        "wires": []
    },
    {
        "id": "a92b9b92f69f3da3",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete p1btlelatest",
        "collection": "p1btlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "174f1174a53464f1",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo4tlelatest",
        "collection": "pneo4tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1000,
        "y": 420,
        "wires": []
    },
    {
        "id": "f02e9c08ca001be7",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete pneo3tlelatest",
        "collection": "pneo3tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1000,
        "y": 480,
        "wires": []
    },
    {
        "id": "a3fcd1da77e2ece2",
        "type": "function",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "name": "query to delete ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 180,
        "wires": [
            [
                "93d3f91dc2acd7d3",
                "e862a676c829c98c",
                "44640bc6a1b5ff33",
                "ce5a6d07030e2f3a",
                "aaa5419a79773c30",
                "0e7f4920091762d1"
            ]
        ]
    },
    {
        "id": "b1541dff3ced43a3",
        "type": "inject",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 120,
        "wires": [
            [
                "a3fcd1da77e2ece2"
            ]
        ]
    },
    {
        "id": "ce5a6d07030e2f3a",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b1tlelatest",
        "collection": "b1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 990,
        "y": 540,
        "wires": []
    },
    {
        "id": "93d3f91dc2acd7d3",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete b2tlelatest",
        "collection": "b2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 990,
        "y": 600,
        "wires": []
    },
    {
        "id": "e862a676c829c98c",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r1tlelatest",
        "collection": "r1tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 980,
        "y": 660,
        "wires": []
    },
    {
        "id": "44640bc6a1b5ff33",
        "type": "mongodb out",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete r2tlelatest",
        "collection": "r2tlelatest",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 980,
        "y": 720,
        "wires": []
    },
    {
        "id": "508d38c3b32d4c33",
        "type": "link in",
        "z": "374a79f0f056bee3",
        "g": "0e0f916aa7c754d9",
        "name": "DELETE RED / BLUE DB",
        "links": [
            "4986adffbe571116",
            "c2a583850e07004c"
        ],
        "x": 485,
        "y": 180,
        "wires": [
            [
                "a3fcd1da77e2ece2"
            ]
        ]
    },
    {
        "id": "aaa5419a79773c30",
        "type": "change",
        "z": "374a79f0f056bee3",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 860,
        "wires": [
            [
                "dcfd6237d35b2343"
            ]
        ]
    },
    {
        "id": "0e7f4920091762d1",
        "type": "change",
        "z": "374a79f0f056bee3",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 940,
        "wires": [
            [
                "94cecfcb02626376"
            ]
        ]
    },
    {
        "id": "94cecfcb02626376",
        "type": "function",
        "z": "374a79f0f056bee3",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 940,
        "wires": [
            [
                "dcfd6237d35b2343"
            ]
        ]
    },
    {
        "id": "dcfd6237d35b2343",
        "type": "join",
        "z": "374a79f0f056bee3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 860,
        "wires": [
            [
                "032efd4db14b4707"
            ]
        ]
    },
    {
        "id": "032efd4db14b4707",
        "type": "function",
        "z": "374a79f0f056bee3",
        "name": "echange",
        "func": "// Ensure the second payload element is an empty string as per your original logic\nmsg.payload[0] = \"\";\nmsg.payload[1] = \"\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 860,
        "wires": [
            [
                "b8c884b8bc0d3d84",
                "71dfa5816a53016b"
            ]
        ]
    },
    {
        "id": "b8c884b8bc0d3d84",
        "type": "debug",
        "z": "374a79f0f056bee3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 820,
        "wires": []
    },
    {
        "id": "71dfa5816a53016b",
        "type": "link out",
        "z": "374a79f0f056bee3",
        "name": "OUT TLE DISPLAY",
        "mode": "link",
        "links": [
            "341ea45486c46832"
        ],
        "x": 1045,
        "y": 860,
        "wires": []
    },
    {
        "id": "f693d63c62570f8a",
        "type": "http request",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "http request OEM/AEM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 830,
        "y": 260,
        "wires": [
            [
                "0372893f29e0bda8",
                "cac456888820b002",
                "e850a8d04766ac3c"
            ]
        ]
    },
    {
        "id": "0372893f29e0bda8",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "OEM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 180,
        "wires": []
    },
    {
        "id": "1d11069de605ece6",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "Sub-Module VTS files Updating",
        "info": "",
        "x": 1050,
        "y": 220,
        "wires": []
    },
    {
        "id": "18c10a830f795391",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "joinwait reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 180,
        "wires": []
    },
    {
        "id": "a7d719827bffc702",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "API request preparation",
        "info": "",
        "x": 600,
        "y": 200,
        "wires": []
    },
    {
        "id": "26b952eb7b9c9813",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 1050,
        "y": 400,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "d7a660cda25dac9d",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"180\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        }\t        \t    ],\t    \"groundStations\": [\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {}\t       \t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 240,
        "wires": [
            [
                "18c10a830f795391",
                "f693d63c62570f8a"
            ]
        ]
    },
    {
        "id": "f1a6f0a7f4514dcf",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "paths": "[\"path_121\",\"path_12\",\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 320,
        "y": 260,
        "wires": [
            [
                "d7a660cda25dac9d",
                "b7526ec620a475c6"
            ],
            []
        ]
    },
    {
        "id": "f8eaf94835fc938d",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "JOINWAIT XSAT",
        "links": [
            "13e6783f699d391f",
            "1a19adb69a35a3a7",
            "41a32e4cc747f910",
            "d51fcddeda0e0de7",
            "24606f59b812db66",
            "ac147f0729ad1810",
            "68c5a6850e745a21",
            "f7f9c11d1f2382ae",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "2072d02e.cd2d4",
            "15d13ebb1f03b0a7",
            "c72fbcae841b3ef6",
            "540a7905183c0eee",
            "2f25edf21b8a07d4",
            "adb61069d247c406",
            "a2ee62ca6cec9904",
            "fc6400aba3c7f324",
            "cd1146af51cb6d1e",
            "83657e1af5fa276d",
            "8c360fc5911891f9",
            "3bb6463710bb46bc",
            "a3045704a76aa966",
            "bb963eb834349742",
            "23087e0890dde8be"
        ],
        "x": 125,
        "y": 260,
        "wires": [
            [
                "f1a6f0a7f4514dcf",
                "cf318dfacd4da19e"
            ]
        ]
    },
    {
        "id": "b7526ec620a475c6",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "check X sat",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "cf318dfacd4da19e",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "paths": "[\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 240,
        "y": 380,
        "wires": [
            [
                "d155befe485d3213"
            ],
            []
        ]
    },
    {
        "id": "1f422eea67d7a5be",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 300,
        "wires": [
            [
                "f1a6f0a7f4514dcf"
            ]
        ]
    },
    {
        "id": "d155befe485d3213",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "095a7bf2cf433323",
                "1f422eea67d7a5be"
            ],
            [
                "2766942c725b1c65"
            ],
            []
        ]
    },
    {
        "id": "095a7bf2cf433323",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "COPYMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 360,
        "wires": []
    },
    {
        "id": "2766942c725b1c65",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "COPYMEM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 400,
        "wires": []
    },
    {
        "id": "cac456888820b002",
        "type": "switch",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "property": "headers.vtsflag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ready",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 320,
        "wires": [
            [
                "d5303d82ed22fa96"
            ]
        ]
    },
    {
        "id": "d5303d82ed22fa96",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python concatenate.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "concatenate",
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "53032da51855d552",
                "0e1897c63762329b",
                "531dcf581ac5e866"
            ],
            [
                "8145ed7dd72bf7fb"
            ],
            []
        ]
    },
    {
        "id": "0e1897c63762329b",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "func": "msg.payload=\"situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "d2cd251a22174f61",
                "aaa7724b1bec1bb2",
                "412619f53ed922d6",
                "f9c91c8ce7aabec7"
            ]
        ]
    },
    {
        "id": "53032da51855d552",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "CONCATENATE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 280,
        "wires": []
    },
    {
        "id": "8145ed7dd72bf7fb",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "CONCATENATE  ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 320,
        "wires": []
    },
    {
        "id": "3e846f404d3b3dd4",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "mode": "link",
        "links": [
            "c67ec5067dc22890"
        ],
        "x": 995,
        "y": 60,
        "wires": []
    },
    {
        "id": "d2cd251a22174f61",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "mode": "link",
        "links": [
            "640bcc1f704ee31a"
        ],
        "x": 1385,
        "y": 240,
        "wires": []
    },
    {
        "id": "fc1d42be022de5bf",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"60\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {},\t        \"VISIBILITY\": {}\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "25b3ecb94bd5faa9",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "A GARDER ",
        "info": "Pour implémenter la visibilité des satellites par les stations au sol.",
        "x": 350,
        "y": 180,
        "wires": []
    },
    {
        "id": "1e7784d619fcf45c",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "OPTIMISATION",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 120,
        "wires": []
    },
    {
        "id": "48ee54bd869b3619",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "links": [
            "1018c17f521a78d5",
            "9d5ad2825aaf5257",
            "3beb235b45a5923b",
            "8122ab317ae422a1",
            "2b40adc7edb46ab0",
            "6d83d4d5db0d86dd",
            "0ee9784829f9267b",
            "72316f670c2f8081"
        ],
        "x": 115,
        "y": 200,
        "wires": [
            [
                "1e7784d619fcf45c",
                "f1a6f0a7f4514dcf"
            ]
        ]
    },
    {
        "id": "a957d40878cb92bf",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "BLUE 1 MANEUVER",
        "links": [
            "61f4316899cdb467",
            "9a0753c9c8dd5049",
            "a3f1a7d2c9db58ee",
            "dda64c2d25df24e9",
            "24c890a304d1f771",
            "5c2e6331eeb6c67d",
            "c7b740e9c382dc1d"
        ],
        "x": 125,
        "y": 320,
        "wires": [
            [
                "f1a6f0a7f4514dcf"
            ]
        ]
    },
    {
        "id": "aaa7724b1bec1bb2",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat && rm default_Sat.vts && python copy_vts_conf_backup.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy vts_conf_backup",
        "x": 1320,
        "y": 380,
        "wires": [
            [
                "32a92bb13743039b"
            ],
            [],
            []
        ]
    },
    {
        "id": "32a92bb13743039b",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "TEST BACKUP VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 360,
        "wires": []
    },
    {
        "id": "e850a8d04766ac3c",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 100,
        "wires": [
            [
                "3e846f404d3b3dd4"
            ]
        ]
    },
    {
        "id": "412619f53ed922d6",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "Set path_998",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_998",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 140,
        "wires": [
            [
                "098ed20d47fcd4cf"
            ]
        ]
    },
    {
        "id": "fd0a7626203eccce",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "links": [
            "026134e2c78ce6d7"
        ],
        "x": 1125,
        "y": 120,
        "wires": [
            [
                "8a7068b7fba6abe5",
                "098ed20d47fcd4cf"
            ]
        ]
    },
    {
        "id": "8a7068b7fba6abe5",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "Set path_1000",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_998",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 80,
        "wires": [
            [
                "e8e568aadaa16303"
            ]
        ]
    },
    {
        "id": "e8e568aadaa16303",
        "type": "delay",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1430,
        "y": 80,
        "wires": [
            [
                "098ed20d47fcd4cf"
            ]
        ]
    },
    {
        "id": "098ed20d47fcd4cf",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "paths": "[\"path_998\",\"path_999\"]",
        "pathsToExpire": "[\"path_1000\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "500",
        "timeoutUnits": "1",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1440,
        "y": 120,
        "wires": [
            [
                "1a5b3092221308c1",
                "b1ff878eb7cb1e20",
                "4232852ed8ec50b3"
            ],
            []
        ]
    },
    {
        "id": "b1ff878eb7cb1e20",
        "type": "mqtt out",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "trigger/continuation2",
        "topic": "trigger/continuation2",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e688816fa768592b",
        "x": 1680,
        "y": 160,
        "wires": []
    },
    {
        "id": "1a5b3092221308c1",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "MQTT SIGNAL TEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 200,
        "wires": []
    },
    {
        "id": "531dcf581ac5e866",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 1080,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4232852ed8ec50b3",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 80,
        "wires": [
            [
                "cd78f44cfafcedc6"
            ]
        ]
    },
    {
        "id": "cd78f44cfafcedc6",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "mode": "link",
        "links": [
            "38208a861ba52b6e"
        ],
        "x": 1725,
        "y": 80,
        "wires": []
    },
    {
        "id": "f9c91c8ce7aabec7",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 180,
        "wires": [
            [
                "191af4d1144a9e5e"
            ]
        ]
    },
    {
        "id": "191af4d1144a9e5e",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "93b592892fcc50c8",
        "name": "",
        "mode": "link",
        "links": [
            "38208a861ba52b6e"
        ],
        "x": 1465,
        "y": 180,
        "wires": []
    },
    {
        "id": "a367d565230fff14",
        "type": "http request",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "http request OEM/AEM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 830,
        "y": 700,
        "wires": [
            [
                "59af655636e58b94",
                "54033599ff8e0c7f",
                "d2cb318f405975a3"
            ]
        ]
    },
    {
        "id": "59af655636e58b94",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "OEM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 620,
        "wires": []
    },
    {
        "id": "e229f7e2176a7736",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "Sub-Module VTS files Updating",
        "info": "",
        "x": 1050,
        "y": 660,
        "wires": []
    },
    {
        "id": "823cd4b656c6f678",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "joinwait reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 620,
        "wires": []
    },
    {
        "id": "30212b9a705c4dc4",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "API request preparation",
        "info": "",
        "x": 600,
        "y": 640,
        "wires": []
    },
    {
        "id": "d01e198e8732a6fa",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 1050,
        "y": 840,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "6362f7812b2e8c03",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"180\"\t    },\t    \"satellites\": [\t         {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        }\t    ],\t    \"groundStations\": [\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {}\t       \t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 680,
        "wires": [
            [
                "823cd4b656c6f678",
                "a367d565230fff14"
            ]
        ]
    },
    {
        "id": "b2d96396fa5863d8",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "paths": "[\"path_131\",\"path_12\",\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 320,
        "y": 700,
        "wires": [
            [
                "6362f7812b2e8c03",
                "eea7b58c49b5b773"
            ],
            []
        ]
    },
    {
        "id": "51d80f547a4459bf",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "JOINWAIT XSAT",
        "links": [
            "13e6783f699d391f",
            "1a19adb69a35a3a7",
            "41a32e4cc747f910",
            "d51fcddeda0e0de7",
            "24606f59b812db66",
            "ac147f0729ad1810",
            "68c5a6850e745a21",
            "f7f9c11d1f2382ae",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "2072d02e.cd2d4",
            "15d13ebb1f03b0a7",
            "c72fbcae841b3ef6",
            "540a7905183c0eee",
            "2f25edf21b8a07d4",
            "adb61069d247c406",
            "a2ee62ca6cec9904",
            "fc6400aba3c7f324",
            "cd1146af51cb6d1e",
            "83657e1af5fa276d",
            "8c360fc5911891f9",
            "3bb6463710bb46bc",
            "a3045704a76aa966",
            "bb963eb834349742",
            "23087e0890dde8be"
        ],
        "x": 185,
        "y": 700,
        "wires": [
            [
                "b2d96396fa5863d8",
                "0a90201ea218cef6"
            ]
        ]
    },
    {
        "id": "eea7b58c49b5b773",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "check X sat",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 760,
        "wires": []
    },
    {
        "id": "0a90201ea218cef6",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "paths": "[\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 240,
        "y": 820,
        "wires": [
            [
                "56237cb99d323cd9"
            ],
            []
        ]
    },
    {
        "id": "b95315ef78ccbf10",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 740,
        "wires": [
            [
                "b2d96396fa5863d8"
            ]
        ]
    },
    {
        "id": "56237cb99d323cd9",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 400,
        "y": 800,
        "wires": [
            [
                "c0127a356a250759",
                "b95315ef78ccbf10"
            ],
            [
                "5766aa28bad745ae"
            ],
            []
        ]
    },
    {
        "id": "c0127a356a250759",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "COPYMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 800,
        "wires": []
    },
    {
        "id": "5766aa28bad745ae",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "COPYMEM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 840,
        "wires": []
    },
    {
        "id": "54033599ff8e0c7f",
        "type": "switch",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "property": "headers.vtsflag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ready",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 760,
        "wires": [
            [
                "b5f69e12e5b964fe"
            ]
        ]
    },
    {
        "id": "b5f69e12e5b964fe",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python concatenate.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "concatenate",
        "x": 1070,
        "y": 780,
        "wires": [
            [
                "e4c20fcb9981dca8",
                "e01e6739f7ce51ea",
                "907e861b4e3208f3"
            ],
            [
                "212785c57447f1d4"
            ],
            []
        ]
    },
    {
        "id": "e01e6739f7ce51ea",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "func": "msg.payload=\"situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 680,
        "wires": [
            [
                "045025ed0d65cab9",
                "5ad5ff8e164b9036",
                "9555c58b1882f80e",
                "9dd502afeb659a28"
            ]
        ]
    },
    {
        "id": "e4c20fcb9981dca8",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "CONCATENATE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 720,
        "wires": []
    },
    {
        "id": "212785c57447f1d4",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "CONCATENATE  ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 760,
        "wires": []
    },
    {
        "id": "6cf76c8f806eabc0",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "mode": "link",
        "links": [
            "e69743906051c56e"
        ],
        "x": 995,
        "y": 500,
        "wires": []
    },
    {
        "id": "045025ed0d65cab9",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "mode": "link",
        "links": [
            "640bcc1f704ee31a"
        ],
        "x": 1385,
        "y": 680,
        "wires": []
    },
    {
        "id": "028e645c181e507e",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"60\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {},\t        \"VISIBILITY\": {}\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "62e16a59924f4a98",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "A GARDER ",
        "info": "Pour implémenter la visibilité des satellites par les stations au sol.",
        "x": 350,
        "y": 620,
        "wires": []
    },
    {
        "id": "76e0d3da60dfea21",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "OPTIMISATION",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 560,
        "wires": []
    },
    {
        "id": "ee0af6fccbb5381f",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "links": [
            "1018c17f521a78d5",
            "9d5ad2825aaf5257",
            "3beb235b45a5923b",
            "8122ab317ae422a1",
            "2b40adc7edb46ab0",
            "6d83d4d5db0d86dd",
            "0ee9784829f9267b",
            "72316f670c2f8081"
        ],
        "x": 115,
        "y": 640,
        "wires": [
            [
                "76e0d3da60dfea21",
                "b2d96396fa5863d8"
            ]
        ]
    },
    {
        "id": "b4ab69fb76722690",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "BLUE 1 MANEUVER",
        "links": [
            "61f4316899cdb467",
            "9a0753c9c8dd5049",
            "a3f1a7d2c9db58ee",
            "dda64c2d25df24e9",
            "24c890a304d1f771",
            "5c2e6331eeb6c67d",
            "c7b740e9c382dc1d"
        ],
        "x": 135,
        "y": 760,
        "wires": [
            [
                "b2d96396fa5863d8"
            ]
        ]
    },
    {
        "id": "5ad5ff8e164b9036",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat && rm default_Sat.vts && python copy_vts_conf_backup.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy vts_conf_backup",
        "x": 1320,
        "y": 820,
        "wires": [
            [
                "f939231efcb4c34c"
            ],
            [],
            []
        ]
    },
    {
        "id": "f939231efcb4c34c",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "TEST BACKUP VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 800,
        "wires": []
    },
    {
        "id": "d2cb318f405975a3",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "6cf76c8f806eabc0"
            ]
        ]
    },
    {
        "id": "9555c58b1882f80e",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "Set path_998",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_998",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 580,
        "wires": [
            [
                "648520213ad35f27"
            ]
        ]
    },
    {
        "id": "c94e8a646f6ffced",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "links": [
            "b18e4e51bdaf93e7"
        ],
        "x": 1125,
        "y": 580,
        "wires": [
            [
                "1fcc0657a58b6366",
                "648520213ad35f27"
            ]
        ]
    },
    {
        "id": "1fcc0657a58b6366",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "Set path_1000",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_998",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 520,
        "wires": [
            [
                "8fce5659e9d21ee6"
            ]
        ]
    },
    {
        "id": "8fce5659e9d21ee6",
        "type": "delay",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1430,
        "y": 520,
        "wires": [
            [
                "648520213ad35f27"
            ]
        ]
    },
    {
        "id": "648520213ad35f27",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "paths": "[\"path_998\",\"path_999\"]",
        "pathsToExpire": "[\"path_1000\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "500",
        "timeoutUnits": "1",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1440,
        "y": 560,
        "wires": [
            [
                "8ac1fbd222fbbc75",
                "05ed1040bf903f37",
                "6dfafa5dbb7f7bc8"
            ],
            []
        ]
    },
    {
        "id": "05ed1040bf903f37",
        "type": "mqtt out",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "trigger/continuation3",
        "topic": "trigger/continuation3",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e688816fa768592b",
        "x": 1680,
        "y": 600,
        "wires": []
    },
    {
        "id": "8ac1fbd222fbbc75",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "MQTT SIGNAL TEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 640,
        "wires": []
    },
    {
        "id": "907e861b4e3208f3",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 1080,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6dfafa5dbb7f7bc8",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 520,
        "wires": [
            [
                "e7e49290a59cf863"
            ]
        ]
    },
    {
        "id": "e7e49290a59cf863",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "mode": "link",
        "links": [
            "582b20c3fb7fcbdc"
        ],
        "x": 1725,
        "y": 520,
        "wires": []
    },
    {
        "id": "9dd502afeb659a28",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 620,
        "wires": [
            [
                "c71ba3ca6e2f98cd"
            ]
        ]
    },
    {
        "id": "c71ba3ca6e2f98cd",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "5ac1093b9ff24da2",
        "name": "",
        "mode": "link",
        "links": [
            "582b20c3fb7fcbdc"
        ],
        "x": 1465,
        "y": 620,
        "wires": []
    },
    {
        "id": "1e362c5ed3c4307a",
        "type": "http request",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "http request OEM/AEM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://backend:8000/vts",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 830,
        "y": 1180,
        "wires": [
            [
                "1fcbe1b2a298d0fe",
                "6a5ea6b7faced984",
                "506d36fb0a684b5f"
            ]
        ]
    },
    {
        "id": "1fcbe1b2a298d0fe",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "OEM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e5b85e11e64c22dd",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "Sub-Module VTS files Updating",
        "info": "",
        "x": 1050,
        "y": 1140,
        "wires": []
    },
    {
        "id": "0778e8ab26b1c2a5",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "joinwait reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1100,
        "wires": []
    },
    {
        "id": "98f2e7a2fa03ea6c",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "API request preparation",
        "info": "",
        "x": 600,
        "y": 1120,
        "wires": []
    },
    {
        "id": "0e647e91f10b4e9c",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "MACHINE DEPENDENCE",
        "info": "TLE_STORK.txt",
        "x": 1050,
        "y": 1320,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "42653947be507125",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"180\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {}\t       \t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1160,
        "wires": [
            [
                "0778e8ab26b1c2a5",
                "1e362c5ed3c4307a"
            ]
        ]
    },
    {
        "id": "553addc33fe6a950",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "paths": "[\"path_141\",\"path_12\",\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "5",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 320,
        "y": 1180,
        "wires": [
            [
                "42653947be507125",
                "303cb9bffa4c4181"
            ],
            []
        ]
    },
    {
        "id": "f252cd8f818a4514",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "JOINWAIT XSAT",
        "links": [
            "13e6783f699d391f",
            "1a19adb69a35a3a7",
            "41a32e4cc747f910",
            "d51fcddeda0e0de7",
            "24606f59b812db66",
            "ac147f0729ad1810",
            "68c5a6850e745a21",
            "f7f9c11d1f2382ae",
            "8943bd9a10115aea",
            "be24a5a05268a710",
            "2072d02e.cd2d4",
            "15d13ebb1f03b0a7",
            "c72fbcae841b3ef6",
            "540a7905183c0eee",
            "2f25edf21b8a07d4",
            "adb61069d247c406",
            "a2ee62ca6cec9904",
            "fc6400aba3c7f324",
            "cd1146af51cb6d1e",
            "83657e1af5fa276d",
            "8c360fc5911891f9",
            "3bb6463710bb46bc",
            "a3045704a76aa966",
            "bb963eb834349742",
            "23087e0890dde8be"
        ],
        "x": 165,
        "y": 1180,
        "wires": [
            [
                "553addc33fe6a950",
                "d218d82f6930c26f"
            ]
        ]
    },
    {
        "id": "303cb9bffa4c4181",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "check X sat",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d218d82f6930c26f",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "paths": "[\"path_11\",\"path_10\",\"path_9\",\"path_8\",\"path_7\", \"path_6\", \"path_5\", \"path_4\", \"path_3\", \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 240,
        "y": 1300,
        "wires": [
            [
                "fbceae8e3791c921"
            ],
            []
        ]
    },
    {
        "id": "5d8eab4453d5d6a5",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1220,
        "wires": [
            [
                "553addc33fe6a950"
            ]
        ]
    },
    {
        "id": "fbceae8e3791c921",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 400,
        "y": 1280,
        "wires": [
            [
                "c1ed7673e3f78632",
                "5d8eab4453d5d6a5"
            ],
            [
                "54d1ea12042a3fb0"
            ],
            []
        ]
    },
    {
        "id": "c1ed7673e3f78632",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "COPYMEM OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1280,
        "wires": []
    },
    {
        "id": "54d1ea12042a3fb0",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "COPYMEM ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1320,
        "wires": []
    },
    {
        "id": "6a5ea6b7faced984",
        "type": "switch",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "property": "headers.vtsflag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ready",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 1240,
        "wires": [
            [
                "1c218801354bc691"
            ]
        ]
    },
    {
        "id": "1c218801354bc691",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python concatenate.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "concatenate",
        "x": 1070,
        "y": 1260,
        "wires": [
            [
                "8891ce862d8d1e1d",
                "7d2cfa9eb87f9ab8",
                "7a2be699a5294c63"
            ],
            [
                "b90532757deb2f4f"
            ],
            []
        ]
    },
    {
        "id": "7d2cfa9eb87f9ab8",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "func": "msg.payload=\"situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1160,
        "wires": [
            [
                "49a7dc96b95e1035",
                "a4e67d43a4b38f18",
                "20f63722fb9d1874",
                "f267061e59a61a98"
            ]
        ]
    },
    {
        "id": "8891ce862d8d1e1d",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "CONCATENATE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b90532757deb2f4f",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "CONCATENATE  ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 1240,
        "wires": []
    },
    {
        "id": "079f3b4468c4887e",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "mode": "link",
        "links": [
            "e69743906051c56e"
        ],
        "x": 985,
        "y": 1000,
        "wires": []
    },
    {
        "id": "49a7dc96b95e1035",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "mode": "link",
        "links": [
            "640bcc1f704ee31a"
        ],
        "x": 1385,
        "y": 1160,
        "wires": []
    },
    {
        "id": "7661572817bed7ad",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "LLA-Visibility-Update2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"header\": {\t        \"timeStart\": msg.paths.path_8.startdate,\t        \"timeEnd\": msg.paths.path_8.enddate,\t        \"step\": \"60\"\t    },\t    \"satellites\": [\t        {\t            \"name\": \"Sat\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_1[0],\t            \"line2\": msg.paths.path_1[1]\t        },\t        {\t            \"name\": \"PLEIADES1A\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_2[0],\t            \"line2\": msg.paths.path_2[1]\t        },\t        {\t            \"name\": \"PLEIADES1B\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_11[0],\t            \"line2\": msg.paths.path_11[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO3\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_10[0],\t            \"line2\": msg.paths.path_10[1]\t        },\t        {\t            \"name\": \"PLEIADES-NEO4\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_9[0],\t            \"line2\": msg.paths.path_9[1]\t        },\t        {\t            \"name\": \"BLUE1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_3[0],\t            \"line2\": msg.paths.path_3[1]\t        },\t        {\t            \"name\": \"BLUE2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_4[0],\t            \"line2\": msg.paths.path_4[1]\t        },\t        {\t            \"name\": \"RED1\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_5[0],\t            \"line2\": msg.paths.path_5[1]\t        },\t        {\t            \"name\": \"RED2\",\t            \"type\": \"tle\",\t            \"line1\": msg.paths.path_6[0],\t            \"line2\": msg.paths.path_6[1]\t        }\t    ],\t    \"groundStations\": [\t        msg.paths.path_7\t    ],\t    \"options\": {\t        \"CARTESIAN\": {},\t        \"ATTITUDE\": {\t            \"law\": \"LOF_LVLH\"\t        },\t        \"LLA\": {},\t        \"VISIBILITY\": {}\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "2f020f4f32f52da4",
        "type": "comment",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "A GARDER ",
        "info": "Pour implémenter la visibilité des satellites par les stations au sol.",
        "x": 350,
        "y": 1100,
        "wires": []
    },
    {
        "id": "0c26b1acebd8d42f",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "OPTIMISATION",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d39e139798401e69",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "links": [
            "1018c17f521a78d5",
            "9d5ad2825aaf5257",
            "3beb235b45a5923b",
            "8122ab317ae422a1",
            "2b40adc7edb46ab0",
            "6d83d4d5db0d86dd",
            "0ee9784829f9267b",
            "72316f670c2f8081"
        ],
        "x": 115,
        "y": 1120,
        "wires": [
            [
                "0c26b1acebd8d42f",
                "553addc33fe6a950"
            ]
        ]
    },
    {
        "id": "6c6fabeae1f46e76",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "BLUE 1 MANEUVER",
        "links": [
            "61f4316899cdb467",
            "9a0753c9c8dd5049",
            "a3f1a7d2c9db58ee",
            "dda64c2d25df24e9",
            "24c890a304d1f771",
            "5c2e6331eeb6c67d",
            "c7b740e9c382dc1d"
        ],
        "x": 125,
        "y": 1260,
        "wires": [
            [
                "553addc33fe6a950"
            ]
        ]
    },
    {
        "id": "a4e67d43a4b38f18",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat && rm default_Sat.vts && python copy_vts_conf_backup.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy vts_conf_backup",
        "x": 1320,
        "y": 1300,
        "wires": [
            [
                "f7f30a86bae12dd6"
            ],
            [],
            []
        ]
    },
    {
        "id": "f7f30a86bae12dd6",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "TEST BACKUP VTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 1280,
        "wires": []
    },
    {
        "id": "506d36fb0a684b5f",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1000,
        "wires": [
            [
                "079f3b4468c4887e"
            ]
        ]
    },
    {
        "id": "20f63722fb9d1874",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "Set path_998",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_998",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1060,
        "wires": [
            [
                "768be090527a2882"
            ]
        ]
    },
    {
        "id": "cd3f51956308c239",
        "type": "link in",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "links": [
            "f32279ed0ca356bb"
        ],
        "x": 1105,
        "y": 1060,
        "wires": [
            [
                "a0158770759a27e4",
                "768be090527a2882"
            ]
        ]
    },
    {
        "id": "a0158770759a27e4",
        "type": "change",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "Set path_1000",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_998",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 1000,
        "wires": [
            [
                "e61bca96d2cc1a8d"
            ]
        ]
    },
    {
        "id": "e61bca96d2cc1a8d",
        "type": "delay",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1430,
        "y": 1000,
        "wires": [
            [
                "768be090527a2882"
            ]
        ]
    },
    {
        "id": "768be090527a2882",
        "type": "join-wait",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "paths": "[\"path_998\",\"path_999\"]",
        "pathsToExpire": "[\"path_1000\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "500",
        "timeoutUnits": "1",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1440,
        "y": 1040,
        "wires": [
            [
                "e3e080638774b941",
                "ca64e5d06feae8b4",
                "011b2a822f225412"
            ],
            []
        ]
    },
    {
        "id": "ca64e5d06feae8b4",
        "type": "mqtt out",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "trigger/continuation4",
        "topic": "trigger/continuation4",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e688816fa768592b",
        "x": 1680,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e3e080638774b941",
        "type": "debug",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "MQTT SIGNAL TEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1140,
        "wires": []
    },
    {
        "id": "7a2be699a5294c63",
        "type": "exec",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "command": "cd /app/jsatorb-rest-api/files/default_Sat/Data&& python copymem.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copymem",
        "x": 1080,
        "y": 1200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "011b2a822f225412",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1000,
        "wires": [
            [
                "07f5c28189b9ccbf"
            ]
        ]
    },
    {
        "id": "07f5c28189b9ccbf",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "mode": "link",
        "links": [
            "4aa96be32ec24727"
        ],
        "x": 1725,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f267061e59a61a98",
        "type": "function",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1100,
        "wires": [
            [
                "7660123249ed8b61"
            ]
        ]
    },
    {
        "id": "7660123249ed8b61",
        "type": "link out",
        "z": "b711cf531b370c21",
        "g": "a6482ba6881fb884",
        "name": "",
        "mode": "link",
        "links": [
            "4aa96be32ec24727"
        ],
        "x": 1455,
        "y": 1100,
        "wires": []
    },
    {
        "id": "dce3220a.a2827",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Angular Calculation Function",
        "func": "\n// Create a Params variable\n// with a time and temp component\n// Earth radius in kilometers\nconst radius = 6378;\n\n// position data from the Ground Station\nvar lat1 = msg.payload[0].latitude;\nvar lon1 = msg.payload[0].longitude;\nvar alt1 = msg.payload[0].altitude/1000;\n// latitude and longitude of ground station in radian\nvar lat1rad = lat1*Math.PI/180;\nvar lon1rad = lon1*Math.PI/180\n\n// position data from the Satellite\nvar lat2 = msg.object.lat;\nvar lon2 = msg.object.lon;\nvar alt2 = msg.object.alt;\n// latitude and logitude of satellite in radian\nvar lat2rad = lat2*Math.PI/180;\nvar lon2rad = lon2*Math.PI/180;\n\n// Intermediate angles and distances\nvar deltaLat = Math.abs((lat2-lat1)*Math.PI/180);\nvar deltaLon = Math.abs((lon2-lon1)*Math.PI/180);\nvar deltaAlt = Math.abs(alt2-alt1);\n\n//Orthodromic Distance in km (arch portion) beetween ground station and Satellite's ground projection\nvar arc = Math.acos(Math.sin(lat1rad)*Math.sin(lat2rad)+Math.cos(lat1rad)*Math.cos(lat2rad)*Math.cos(deltaLon))*radius;\n\n//Alpha angle (radian) between Ground Station - Earth Center - Satellite\nvar alpha =  arc/radius;\n\n\n//Chord in km between Ground Station and Satellite's ground projection\nvar chord = Math.sqrt(2*radius*radius*(1-Math.cos(alpha)));\n\n//Gamma angle (radian) in the isoceles triangle (Ground station, Earth Radius, Satellite's ground projection)\nvar gamma = Math.acos(chord/(2*radius));\n\n//Beta angle (radian) complementary in 90° with Gamma\n//PI()/2-C29\nvar beta = Math.PI/2-gamma;\n\n//Distance in km in line of sight between Satellite and Ground Station\nvar dist = Math.sqrt(chord*chord+deltaAlt*deltaAlt-2*chord*deltaAlt*Math.cos(beta+Math.PI/2))\n\n//Cotangente of Azimut\n//(SIN($C$8)*COS(C18-$C$9)-COS($C$8)*TAN(C17))/(SIN(C18-$C$9))\nvar cotAz = (Math.sin(lat1rad)*Math.cos(lon2rad-lon1rad)-Math.cos(lat1rad)*Math.tan(lat2rad))/Math.sin(lon2rad-lon1rad);\n\n//Tangente of Azimut\nvar tanAz = 1/cotAz;\n\n//Arctangente of Azimut in degree\n//180*ATAN(C35)/PI()\nvar atanAz = 180*Math.atan(tanAz)/Math.PI;\n\n//Symbols\n//Difference of longitude in degree between Satellite and Station\nvar longiDiff = lon2-lon1;\n\n//Longitude symbol : 0 if satellite is at West from the Station, else 1\nvar longisymbol = (1+longiDiff/Math.abs(longiDiff))/2;\n\n\n//Latitude symbol for Hemisphere : 0 if satellite is South Hemisphere, else 2\nvar latisymbol = 1+lat1/Math.abs(lat1);\n\n//Relative latitude difference : difference of latitude in degree between satellite and ground station\nvar latiDiff = lat2 - lat1;\n//C13-$C$4\n\n//Latitude symbol for relative position between satellite and station\nvar relativeLatiDiff = (1+latiDiff/Math.abs(latiDiff))/2;\n\n\n//Elevation angle between Station and Satellite, in degree\nvar el = 180*Math.atan(deltaAlt/chord)/Math.PI-beta;\n\n//Azimut angle : direction between Station and Satellite, in degree\n//(360-C42*90-C41*180)-C37\nvar azi = 180*longisymbol+((180*relativeLatiDiff+(360-latisymbol*90-longisymbol*180)-atanAz) % 360)\nvar az = azi % 360;\n\n\n//Parameters of the message for fill the table\n\nmsg.params = {$id:msg.body.id, $names:msg.payload[0].name, $mjday:msg.object.mjday, $mjfrac:msg.object.mjfrac, $dist:dist, $az:az, $el:el}\nvar tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n //if elevation angle is inside the visibility cone of the ground station\nif(el>msg.payload[0].elevation){\n    gs.id = msg.body.id\n    gs.name = msg.payload[0].name\n    gs.epochUnixTime = msg.object.epochUnixTime\n    gs.mjday = msg.object.mjday\n    gs.mjfrac = msg.object.mjfrac\n    gs.dist = dist\n    gs.az = az\n    gs.el = el\n\n\n    tab.push(gs)\n\n    msg.payload = tab\n    return msg;  \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 860,
        "wires": [
            [
                "f1175ba2.a05c28",
                "6b922809.e4f268"
            ]
        ]
    },
    {
        "id": "2e7fb2ab.ff8a5e",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Fill the Angular table",
        "info": "",
        "x": 2790,
        "y": 760,
        "wires": []
    },
    {
        "id": "5d531160.429e6",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "select gsdata of gs for id",
        "func": "msg.body = msg.payload;\nmsg.payload = {name: msg.payload.name}\n//msg.topic ='SELECT * FROM gsdata WHERE  name =\"' + msg.payload.name+'\"' ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 860,
        "wires": [
            [
                "ce326199.0a85b"
            ]
        ]
    },
    {
        "id": "30879888.257e48",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Angular data calculation",
        "info": "",
        "x": 2340,
        "y": 900,
        "wires": []
    },
    {
        "id": "88e679ca.dca768",
        "type": "link out",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "ANGULAR Table is filled",
        "links": [
            "192eea6c.16fe26",
            "fc15070f.cea9b8",
            "fe49e6f5.8df938"
        ],
        "x": 2995,
        "y": 820,
        "wires": []
    },
    {
        "id": "72aca196.278cf",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 290,
        "y": 900,
        "wires": [
            [
                "ca490983.7ec9b8",
                "2e404121.6748ae"
            ]
        ]
    },
    {
        "id": "8f9bb2ec.12936",
        "type": "complete",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Trigger when VISI table is complete",
        "scope": [
            "48bcbb3f.1b82b4"
        ],
        "uncaught": false,
        "x": 200,
        "y": 860,
        "wires": [
            [
                "ca490983.7ec9b8",
                "2e404121.6748ae"
            ]
        ]
    },
    {
        "id": "5e4f2147.9249e",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "EXIT LOOP2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3050,
        "y": 740,
        "wires": []
    },
    {
        "id": "fce1105a.6ef5",
        "type": "trigger",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2780,
        "y": 800,
        "wires": [
            [
                "88e679ca.dca768",
                "5e4f2147.9249e",
                "2668a3d2.59aabc"
            ]
        ]
    },
    {
        "id": "ca00b8d1.93b088",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Display ground station id stored in database",
        "func": "\n   return{\n topic:\"Ground station Id stored in database\",\n payload:msg.params.$id,\n\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 880,
        "wires": [
            [
                "a53ae528.1172e8"
            ]
        ]
    },
    {
        "id": "a53ae528.1172e8",
        "type": "ui_chart",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "group": "e85e692d.e47bb8",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Pursuit Database Monitoring",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 3220,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "6b922809.e4f268",
        "type": "delay",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 2580,
        "y": 880,
        "wires": [
            [
                "ca00b8d1.93b088"
            ]
        ]
    },
    {
        "id": "2668a3d2.59aabc",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "message to dashboard9",
        "func": "msg.payload = \"Angular data written in DB\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3090,
        "y": 780,
        "wires": [
            [
                "986279ab.994688"
            ]
        ]
    },
    {
        "id": "986279ab.994688",
        "type": "link out",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "angular OUT",
        "links": [
            "a3f34a27.9e9038",
            "4250d989.2dabd8",
            "f48249b.dec28b8"
        ],
        "x": 3255,
        "y": 780,
        "wires": []
    },
    {
        "id": "2e404121.6748ae",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "query for sat position",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 860,
        "wires": [
            [
                "333f1f0b.07ba1"
            ]
        ]
    },
    {
        "id": "333f1f0b.07ba1",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of satpos",
        "collection": "satpos",
        "operation": "find",
        "x": 780,
        "y": 860,
        "wires": [
            [
                "8361c2b3.30592"
            ]
        ]
    },
    {
        "id": "e9076de9.07737",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 290,
        "y": 820,
        "wires": [
            [
                "2e404121.6748ae"
            ]
        ]
    },
    {
        "id": "8361c2b3.30592",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 950,
        "y": 860,
        "wires": [
            [
                "5cf3906d.cd20b"
            ]
        ]
    },
    {
        "id": "5cf3906d.cd20b",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Query for visibility ",
        "func": "msg.object = msg.payload;\nmsg.payload = {mjday: msg.payload.mjday}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 860,
        "wires": [
            [
                "c781d830.604888"
            ]
        ]
    },
    {
        "id": "c781d830.604888",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of visi ",
        "collection": "visibility_windows",
        "operation": "find",
        "x": 1330,
        "y": 860,
        "wires": [
            [
                "c5dfe4bd.95e2e8"
            ]
        ]
    },
    {
        "id": "c5dfe4bd.95e2e8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "Sat position inside visi windows",
        "func": "for (var i = 0; i < msg.payload.length-1; i++) {\n if((msg.object.mjfrac >= msg.payload[i].mjfrac) && (msg.payload[i].status ==\"START\")){\n    if((msg.object.mjfrac <= msg.payload[i+1].mjfrac) && (msg.payload[i+1].status ==\"END\")){\n        var newMsg = {};\n        newMsg.object = msg.object;\n        newMsg.payload = msg.payload[i]\n        node.send(newMsg);\n        //console.log(msg.object.mjday, msg.object.mjfrac);\n    }\n    //console.log(msg.object.mjday, msg.object.mjfrac);\n }\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 860,
        "wires": [
            [
                "5d531160.429e6"
            ]
        ]
    },
    {
        "id": "ce326199.0a85b",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of ground station",
        "collection": "ground_stations",
        "operation": "find",
        "x": 2070,
        "y": 860,
        "wires": [
            [
                "dce3220a.a2827"
            ]
        ]
    },
    {
        "id": "ca490983.7ec9b8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "delete angular",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 900,
        "wires": [
            [
                "88e99eb4.37486"
            ]
        ]
    },
    {
        "id": "88e99eb4.37486",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "",
        "collection": "angular",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 760,
        "y": 900,
        "wires": []
    },
    {
        "id": "a8b66cd3.d5319",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-angular mongo",
        "collection": "angular",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2820,
        "y": 840,
        "wires": []
    },
    {
        "id": "f1175ba2.a05c28",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2550,
        "y": 840,
        "wires": [
            [
                "fce1105a.6ef5",
                "a8b66cd3.d5319"
            ]
        ]
    },
    {
        "id": "a5ef7279.4f0f6",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 2130,
        "y": 1220,
        "wires": []
    },
    {
        "id": "4a7abf0e.e4e85",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2130,
        "y": 1260,
        "wires": []
    },
    {
        "id": "eac5880a.b59fb8",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2130,
        "y": 1300,
        "wires": []
    },
    {
        "id": "36c58d2d.bf0f02",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2130,
        "y": 1340,
        "wires": []
    },
    {
        "id": "95af4893.c89828",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2130,
        "y": 1380,
        "wires": []
    },
    {
        "id": "362b3f2b.4d2ac",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "pursuit data",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2130,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fc51d4bf.af93b8",
        "type": "ui_slider",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "label": "Time",
        "tooltip": "Time range",
        "group": "e7d5b9e4.972fe8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "50",
        "step": 1,
        "className": "",
        "x": 770,
        "y": 1340,
        "wires": [
            [
                "7666c04f07bbb05f",
                "6d1ccf9412d0d665"
            ]
        ]
    },
    {
        "id": "c33f4812.c84db8",
        "type": "ui_template",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "name": "SkyView",
        "order": 2,
        "width": 6,
        "height": 5,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset='ISO-8859-1'>\n    <script src=\"https://d3js.org/d3.v3.min.js\"></script>\n    <style type=\"text/css\">\npath {\n  fill: none;\n  stroke: black;\n  stroke-width: 2px;\n}\n.axis text {\n  font: 13px sans-serif;\n}\n\n.axis line,\n.axis circle {\n  fill: none;\n  stroke: #777;\n  stroke-dasharray: 1,4;\n}\n\n.line {\n  fill: none;\n  stroke: red;\n  stroke-width: 1.5px;\n}\n</style>\n</head>\n\n\n\n<body style='background-color:lightgray'>\n    <div id=\"chart\" style='width: 250px; height: 250px; padding-left: 30px; padding-bottom: 5px;'></div>\n\n    <script>\n        var deg2rad = Math.PI / 180;\n        var width = 250, height = 250, radius = Math.min(width, height) / 2 - 30;\n\n        var svg = d3.select(\"#chart\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n        var r = d3.scale.linear()\n            .domain([90, 0])\n            .range([0, radius]);\n\n        var line = d3.svg.line.radial()\n            .radius(function (d) { return r(d[1]); })\n            .angle(function (d) { return -d[0] + Math.PI / 2; });\n\n        var gr = null;\n        \n        createSkyplot();\n        \n        function createSkyplot() {\n        //////////////////////\t\t\t  \n        gr = svg.append(\"g\")\n            .attr(\"class\", \"r axis\")\n            .selectAll(\"g\")\n            .data(r.ticks(5))\n            .enter().append(\"g\");\n\n        gr.append(\"circle\").attr(\"r\", r).style('fill', 'black');\n\n        gr.append(\"text\")\n            .attr(\"y\", function (d) { return -r(d) - 4; })\n            .attr(\"transform\", \"rotate(20)\")\n            .style(\"text-anchor\", \"middle\")\n            .style('fill', 'green')\n            .text(function (d) { return d; });\n        /////////////////////\n\n        /////////////////////\n        var ga = svg.append(\"g\")\n            .attr(\"class\", \"a axis\")\n            .selectAll(\"g\")\n            .data(d3.range(0, 360, 45))\n            .enter().append(\"g\")\n            .attr(\"transform\", function (d) { return \"rotate(\" + (d - 90) + \")\"; });\n\n        ga.append(\"line\").attr(\"x2\", radius).style('stroke', 'white').style('stroke-dasharray', '1,8');\n\n        ga.append(\"text\")\n            .attr(\"x\", radius + 6)\n            .attr(\"dy\", \".35em\")\n            .style(\"text-anchor\", function (d) { return d < 360 && d > 90 ? \"end\" : null; })\n            .attr(\"transform\", function (d) { return d < 360 && d > 90 ? \"rotate(180 \" + (radius + 3) + \",0)\" : null; })\n            .text(function (d) { return d + \"°\"; });\n        /////////////////////\n    }\n    \n        \n        (function ($scope) {\n            // watch msg object from Node-RED\n            scope.$watch('msg', function (msg) {\n                \n                svg.selectAll('circle').remove();\n                svg.selectAll('text').remove();\n                \n                createSkyplot();\n        \n                function createSkyplot() {\n                //////////////////////\t\t\t  \n                gr = svg.append(\"g\")\n                    .attr(\"class\", \"r axis\")\n                    .selectAll(\"g\")\n                    .data(r.ticks(5))\n                    .enter().append(\"g\");\n        \n                gr.append(\"circle\").attr(\"r\", r).style('fill', 'black');\n        \n                gr.append(\"text\")\n                    .attr(\"y\", function (d) { return -r(d) - 4; })\n                    .attr(\"transform\", \"rotate(20)\")\n                    .style(\"text-anchor\", \"middle\")\n                    .style('fill', 'green')\n                    .text(function (d) { return d; });\n                /////////////////////\n        \n                /////////////////////\n                var ga = svg.append(\"g\")\n                    .attr(\"class\", \"a axis\")\n                    .selectAll(\"g\")\n                    .data(d3.range(0, 360, 45))\n                    .enter().append(\"g\")\n                    .attr(\"transform\", function (d) { return \"rotate(\" + (d - 90) + \")\"; });\n        \n                ga.append(\"line\").attr(\"x2\", radius).style('stroke', 'white').style('stroke-dasharray', '1,8');\n        \n                ga.append(\"text\")\n                    .attr(\"x\", radius + 6)\n                    .attr(\"dy\", \".35em\")\n                    .style(\"text-anchor\", function (d) { return d < 360 && d > 90 ? \"end\" : null; })\n                    .attr(\"transform\", function (d) { return d < 360 && d > 90 ? \"rotate(180 \" + (radius + 3) + \",0)\" : null; })\n                    .text(function (d) { return d + \"°\"; });\n                /////////////////////\n            }\n                \n                \n                \n                // new message received\n                var Data = msg.payload;\n                //window.alert(strlink2);\n                //document.getElementById(\"refee\").setAttribute(\"href\",strlink2);\n                var json = {\n                    \"type\": \"GSV\",\n                    \"inView\": [{ \"data\": [1, 45, 90, \"#69b3a2\"] },\n                    { \"data\": [3, 70, 180, \"#69b3a2\"] },\n                    { \"data\": [5, 70, 225, \"#A82051\"] },\n                    { \"data\": [3, 70, 270, \"#69b3a2\"] },\n                    { \"data\": [3, 70, 315, \"#69b3a2\"] },\n                    { \"data\": [3, 70, 0, \"#69b3a2\"] }]\n                };\n\n                //updateSkyPlot(json);\n                updateSkyPlot(Data);\n                \n                \n                \n                \n                \n                function updateSkyPlot(d) {\n                    \n                    \n                    \n                    \n                    var pos = [];\n                    var inview = d.inView;\n\n                    for (var elem in inview) {\n                        if (inview.hasOwnProperty(elem)) {\n                            // the azimuth should be in radians and substracted from (Math.PI/2)\t\"data\" : [1, 45, 90]\n                            var d = [(Math.PI / 2) - inview[elem].data[2] * deg2rad, inview[elem].data[1]];\n                            pos.push({ \"angle\": d, \"label\": inview[elem].data[0], \"col\": inview[elem].data[3] });\n                        }\n                    }\n\n                    var r = d3.scale.linear()\n                        .domain([90, 0])\n                        .range([0, radius]);\n\n                    var line = d3.svg.line.radial()\n                        .radius(function (d) { return r(d[1]); })\n                        .angle(function (d) { return -d[0] + Math.PI / 2; });\n\n                    var color = d3.scale.category20();\n\n                    svg.selectAll('circle').remove();\n                    \n                    \n                    gr.append(\"circle\").attr(\"r\", r).style('fill', 'black');\n                    \n\n                    var points = svg.selectAll(\"point\")\n                        .data(pos)\n                        .enter()\n                        .append(\"a\")\n                        .attr(\"transform\", function (d) {\n                            var coors = line([d.angle]).slice(1).slice(0, -1);\n                            return \"translate(\" + coors + \")\"\n                        });\n\n                    points.append(\"circle\")\n                        .attr(\"class\", \"point\")\n                        .attr(\"r\", 5)\n                        .attr(\"fill\", function (d, i) { return color(d.col); });\n\n                    //points.append(\"text\")\n                        //.text(function (d) { return d.label })\n                        //.attr(\"transform\", \"translate(-7,5)\")\n                }\n            })\n        }) (scope);\n    </script>\n</body>\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2140,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "58db54d0.12d46c",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 1520,
        "wires": []
    },
    {
        "id": "c43a64bf.f83098",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Time start visi",
        "func": "//from msg with mday and mjfrac \n//var tjd = (msg.payload[0].mjday-33282)+msg.payload[0].mjfrac/86400\n//to Epoch Unix date\n//var time = 86400*tjd-631152000\nvar time = msg.payload[0].epochUnixTime\n//to GMT date format\nvar myDate = new Date(time *1000);\ndate= (myDate.toGMTString());\n\nmsg.payload = date\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1220,
        "wires": [
            [
                "d2a2dc9c.b4a27"
            ]
        ]
    },
    {
        "id": "d2a2dc9c.b4a27",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "group": "e7d5b9e4.972fe8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1610,
        "y": 1220,
        "wires": []
    },
    {
        "id": "7cb023f0.0c57bc",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Time visi",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar tjd = (instantT.mjday-33282)+instantT.mjfrac/86400\nvar time = 86400*tjd-631152000\n\nvar myDate = new Date(time *1000);\ndate= (myDate.toGMTString());\n\nmsg.payload = date\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 1260,
        "wires": [
            [
                "d2a2dc9c.b4a27"
            ]
        ]
    },
    {
        "id": "da44af67.6b24f",
        "type": "join",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1230,
        "y": 1340,
        "wires": [
            [
                "7cb023f0.0c57bc",
                "5192d05b.d1875",
                "da50ca5b.310b28",
                "386d7942.156c76",
                "429b1393.6ffd6c",
                "b8207185.f42bd",
                "18f17f32.5f7e71",
                "c62dbe90.1b804",
                "13ab995fda488768"
            ]
        ]
    },
    {
        "id": "a647cc01.bfdfb",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Max slider",
        "func": "\n\nmsg = {ui_control:{max:msg.payload.length-1}}; // need a -1 because it is an array index\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1340,
        "wires": [
            [
                "fc51d4bf.af93b8"
            ]
        ]
    },
    {
        "id": "5192d05b.d1875",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\n// we copy the object of interest to avoid having to copy everything \nmsg.payload = instantT.id\nmsg.topic = \"Id\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1220,
        "wires": [
            [
                "a5ef7279.4f0f6"
            ]
        ]
    },
    {
        "id": "da50ca5b.310b28",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nmsg.payload = instantT.name\nmsg.topic = \"Name\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1260,
        "wires": [
            [
                "4a7abf0e.e4e85"
            ]
        ]
    },
    {
        "id": "429b1393.6ffd6c",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar tjd = (instantT.mjday-33282)+instantT.mjfrac/86400\nvar time = 86400*tjd-631152000\n\nvar myDate = new Date(time *1000);\ndate= (myDate.toGMTString());\n\nmsg.payload = date\nmsg.topic = \"Date\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1300,
        "wires": [
            [
                "eac5880a.b59fb8"
            ]
        ]
    },
    {
        "id": "386d7942.156c76",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar dist = instantT.dist\n\nmsg.payload = Math.round(dist)\n\nmsg.topic = \"Distance (km)\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1340,
        "wires": [
            [
                "36c58d2d.bf0f02"
            ]
        ]
    },
    {
        "id": "b8207185.f42bd",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar az = instantT.az\n\nmsg.payload = Math.round(az)\nmsg.topic = \"Azimut (°)\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1380,
        "wires": [
            [
                "95af4893.c89828"
            ]
        ]
    },
    {
        "id": "18f17f32.5f7e71",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "msg2dash",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nvar el = instantT.el\nmsg.payload = Math.round(el)\nmsg.topic = \"Elevation (°)\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1420,
        "wires": [
            [
                "362b3f2b.4d2ac"
            ]
        ]
    },
    {
        "id": "992c5674.60e4f8",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Data4Skyview 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"type\": \"GSV\",\t   \"inView\": [\t       msg.payload   \t   ]\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "body",
                "pt": "msg",
                "to": "payload[0].data[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 1480,
        "wires": [
            [
                "c33f4812.c84db8",
                "58db54d0.12d46c"
            ]
        ]
    },
    {
        "id": "c62dbe90.1b804",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "format",
        "func": "var instantT=Object.create(msg.payload.angles[msg.payload.sliderpos]);\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nvar FRAC = Math.round(1000*(instantT.mjfrac)/86400)\nvar DAY = instantT.mjday\nvar ID = instantT.id\nvar EL = instantT.el\nvar AZ = instantT.az\nvar DIST = instantT.dist\n\nvar red = Math.abs(Math.round((Math.round(EL+AZ/10)-45)*255/269));\nvar hex = rgbToHex(red, 0, 255); // convert rbg to hex color\n\nmsg.payload = [ID,EL,AZ]\nmsg.topic = [FRAC, DAY]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1480,
        "wires": [
            [
                "69383c6d.0abe04"
            ]
        ]
    },
    {
        "id": "69383c6d.0abe04",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Data4Skyview 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t           \"data\": [\t               msg.payload[0],\t               msg.payload[1],\t               msg.payload[2],\t               msg.topic[0]\t           ]        \t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1480,
        "wires": [
            [
                "992c5674.60e4f8"
            ]
        ]
    },
    {
        "id": "a4da2217.fb14a",
        "type": "link in",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "GS dash in",
        "links": [
            "62ecd0ac.9f798",
            "938db804027aa68d"
        ],
        "x": 75,
        "y": 1260,
        "wires": [
            [
                "18151515.6d2f0b"
            ]
        ]
    },
    {
        "id": "e364185d.295dd8",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Skyview Widget",
        "info": "",
        "x": 2120,
        "y": 1180,
        "wires": []
    },
    {
        "id": "7133e66d.aacb98",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "MACHINE DEPENDENCE",
        "info": "angular-persistence.json\n",
        "x": 930,
        "y": 1200,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "18151515.6d2f0b",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "func": "msg.payload = {name: msg.payload}\nmsg.sort = {epochUnixTime:1}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "b8bf83a3.79c91"
            ]
        ]
    },
    {
        "id": "b8bf83a3.79c91",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * from angular",
        "collection": "angular",
        "operation": "find",
        "x": 380,
        "y": 1260,
        "wires": [
            [
                "c43a64bf.f83098",
                "a647cc01.bfdfb",
                "edb348011caef461",
                "70f082f113f3cffb"
            ]
        ]
    },
    {
        "id": "ce2c1d1e.f767",
        "type": "link in",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "Time-in",
        "links": [
            "9c6e6a2a.83f0a8",
            "b715a8a4.6ee488",
            "eae873f.0883f9",
            "f225da6f.835808"
        ],
        "x": 155,
        "y": 1000,
        "wires": [
            [
                "43419e4a.69252"
            ]
        ]
    },
    {
        "id": "dd210a3f.75a238",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 1040,
        "wires": [
            [
                "43419e4a.69252"
            ]
        ]
    },
    {
        "id": "e9ccf3f5.9a0dd",
        "type": "ui_dropdown",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "",
        "label": "Ground Station",
        "tooltip": "Choose a ground station in the list",
        "place": "Select option",
        "group": "e7d5b9e4.972fe8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1080,
        "y": 1040,
        "wires": [
            [
                "62ecd0ac.9f798"
            ]
        ]
    },
    {
        "id": "62ecd0ac.9f798",
        "type": "link out",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "GS dash out",
        "links": [
            "a4da2217.fb14a"
        ],
        "x": 1215,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ef9996c9.844698",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1080,
        "wires": []
    },
    {
        "id": "880e080b.6e03c8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "Loop to send station names",
        "func": "liste = []\nmsg.payload.forEach((gs) => {\n    liste.push(gs.name)\n})\nmsg.options = liste\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1040,
        "wires": [
            [
                "e9ccf3f5.9a0dd"
            ]
        ]
    },
    {
        "id": "43419e4a.69252",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "name": "Query for Station name",
        "func": "msg.payload = {}\nmsg.projection = {name:1,_id:0}\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1040,
        "wires": [
            [
                "9d1f06ad.04cba8"
            ]
        ]
    },
    {
        "id": "9d1f06ad.04cba8",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "ca417f4.d57648",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show stations name",
        "collection": "ground_stations",
        "operation": "find",
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "880e080b.6e03c8",
                "ef9996c9.844698"
            ]
        ]
    },
    {
        "id": "6b1d521f.f17bdc",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "payload",
        "payloadType": "msg",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "fa7c0ed1.a0037"
            ]
        ]
    },
    {
        "id": "fa7c0ed1.a0037",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "name": "query to delete visbility",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "ea29f6f6.a79b68"
            ]
        ]
    },
    {
        "id": "ea29f6f6.a79b68",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete visi Mongo",
        "collection": "visibility_windows",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 670,
        "y": 420,
        "wires": []
    },
    {
        "id": "3124de43.b13802",
        "type": "link in",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "name": "If Visibility Windows Updated",
        "links": [
            "1df6f4783011c9ba"
        ],
        "x": 180,
        "y": 380,
        "wires": [
            [
                "fa7c0ed1.a0037"
            ]
        ],
        "l": true
    },
    {
        "id": "12859d93.ff2bb2",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "f9ac2a4f.ec0f18",
        "name": "MACHINE DEPENDENCE",
        "info": "/home/antoine/jsatorb-rest-api/files/default_STORK/Data/STORK_MEM_LLA.TXT",
        "x": 650,
        "y": 360,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "b28fa916.8cecf8",
        "type": "file in",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "Sat-position",
        "filename": "/app/jsatorb-rest-api/files/default_Sat/Data/Sat_MEM_LLA.TXT",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 810,
        "y": 200,
        "wires": [
            [
                "d2fa18fb.bb0268"
            ]
        ]
    },
    {
        "id": "30f8536.28de1ac",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "56b0ea89.58abe4"
            ]
        ]
    },
    {
        "id": "ac33343b.ba4e78",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "LLA-file",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2200,
        "y": 260,
        "wires": []
    },
    {
        "id": "d2fa18fb.bb0268",
        "type": "join",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1010,
        "y": 200,
        "wires": [
            [
                "17ecad58.1256a3"
            ]
        ]
    },
    {
        "id": "6e83ca21.272f94",
        "type": "csv",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "mjday, mjfrac, lat, lon, alt",
        "skip": "15",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1270,
        "y": 200,
        "wires": [
            [
                "6c0fd70b.db8398"
            ]
        ]
    },
    {
        "id": "17ecad58.1256a3",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "6e83ca21.272f94"
            ]
        ]
    },
    {
        "id": "fe40c70e.60f8c8",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "start with array[13]",
        "info": "",
        "x": 1470,
        "y": 160,
        "wires": []
    },
    {
        "id": "6c0fd70b.db8398",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1390,
        "y": 200,
        "wires": [
            [
                "f0d578c5.436e78"
            ]
        ]
    },
    {
        "id": "f0d578c5.436e78",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "msg_Sat-position-filling",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\nvar mjday;\nvar mjfrac;\nvar lat;\nvar lon;\nvar alt;\n\n   return{\n topic:\"satellite position filling into table\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 200,
        "wires": [
            [
                "4b6b90eb.77d19"
            ]
        ]
    },
    {
        "id": "1a4d810e.14739f",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "message to dashboard1",
        "func": "msg.payload = \"Writing satpos DB\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "cb89ef4c.ba97b"
            ]
        ]
    },
    {
        "id": "55945d7e.c40f94",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "message to dashboard2",
        "func": "msg.payload = \"satpos DB completed\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 120,
        "wires": [
            [
                "cb89ef4c.ba97b"
            ]
        ]
    },
    {
        "id": "bffee3e0.8e31f",
        "type": "ui_button",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "group": "e7d5b9e4.972fe8",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "SAT Position UPDATE",
        "tooltip": "",
        "color": "",
        "bgcolor": "#301934",
        "className": "",
        "icon": "fa-refresh",
        "payload": "CMD TIME PLAY",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "56b0ea89.58abe4"
            ]
        ]
    },
    {
        "id": "44ae3f5e.453b7",
        "type": "ui_text",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "group": "89c6e42c.26d338",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "Satpos on writing",
        "label": "User Notification",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-left",
        "className": "",
        "x": 2890,
        "y": 100,
        "wires": []
    },
    {
        "id": "b4a46ba6.0c8db8",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 450,
        "y": 60,
        "wires": [
            [
                "1a4d810e.14739f"
            ]
        ]
    },
    {
        "id": "d96ea2e8.2a85a",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2070,
        "y": 120,
        "wires": [
            [
                "55945d7e.c40f94"
            ]
        ]
    },
    {
        "id": "cb89ef4c.ba97b",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "Color Mapping",
        "func": "switch (msg.payload) {\n\ncase \"Writing satpos DB\" : \n    msg.color = \"red\";\n    break;\n    \ncase \"satpos DB completed\" : \n    msg.color = \"lime\";\n    break;\n    \ndefault : \n    msg.color = \"red\";\n    break;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 100,
        "wires": [
            [
                "44ae3f5e.453b7"
            ]
        ]
    },
    {
        "id": "56b0ea89.58abe4",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "query to delete satpos",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 100,
        "wires": [
            [
                "68bafbeb.9ea644",
                "1a4d810e.14739f"
            ]
        ]
    },
    {
        "id": "68bafbeb.9ea644",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "delete satpos Mongo",
        "collection": "satpos",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "4b6b90eb.77d19",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "query to fill sat pos database",
        "func": "var tab = []\nvar gs = {}\n\n //From the GS\ngs.mjday = parseInt(msg.payload.mjday)\ngs.mjfrac = parseFloat(msg.payload.mjfrac)\ngs.lat = parseFloat(msg.payload.lat)\ngs.lon = parseFloat(msg.payload.lon)\ngs.alt = parseFloat(msg.payload.alt)\nvar tjd = (gs.mjday-33282)+gs.mjfrac/86400\ngs.epochUnixTime = 86400*tjd-631152000\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 200,
        "wires": [
            [
                "3ce6983f.32dee8"
            ]
        ]
    },
    {
        "id": "3ce6983f.32dee8",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2010,
        "y": 200,
        "wires": [
            [
                "f2b0db0a.891f48",
                "ac33343b.ba4e78",
                "55945d7e.c40f94"
            ]
        ]
    },
    {
        "id": "f2b0db0a.891f48",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert satpos mongo",
        "collection": "satpos",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2240,
        "y": 200,
        "wires": []
    },
    {
        "id": "733f7d7b.5f7334",
        "type": "complete",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "Trigger when satpos deleted",
        "scope": [
            "56b0ea89.58abe4"
        ],
        "uncaught": false,
        "x": 180,
        "y": 200,
        "wires": [
            [
                "d652d2af.e4153"
            ]
        ]
    },
    {
        "id": "d652d2af.e4153",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "query to fill satpos",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 200,
        "wires": [
            [
                "b28fa916.8cecf8"
            ]
        ]
    },
    {
        "id": "95d28814.324448",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Get LLA.TXT data (mjday, mjfrac, lat, lon, alt)",
        "info": "",
        "x": 230,
        "y": 520,
        "wires": []
    },
    {
        "id": "ccdacc27.0b8d5",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "start with array[13]",
        "info": "",
        "x": 2670,
        "y": 540,
        "wires": []
    },
    {
        "id": "27642efd.b128c2",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Get VISI.TXT data (id, name, mjday, mjfrac, status)",
        "info": "",
        "x": 2270,
        "y": 640,
        "wires": []
    },
    {
        "id": "2597a39d.2cd17c",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Fill the visi table",
        "info": "",
        "x": 2900,
        "y": 620,
        "wires": []
    },
    {
        "id": "41078e88.a6fd9",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/jsatorb-rest-api/files/default_Sat/Data/Sat_MEM_VISIBILITY_\" & msg.payload & \".TXT\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 580,
        "wires": [
            [
                "5011c869.b39c88"
            ]
        ]
    },
    {
        "id": "5011c869.b39c88",
        "type": "file in",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Visibility file",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2190,
        "y": 580,
        "wires": [
            [
                "74efb784.8f5f08",
                "7d635cb4aa8261b2"
            ]
        ]
    },
    {
        "id": "66f1c442.2f1dbc",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "select name of the station",
        "func": "//msg.topic =msg.payload;\nname = msg.payload[0].name\nnames = name.split('\"')[0]\nmsg.payload = names\nmsg.topic = [msg.var-1, name]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 580,
        "wires": [
            [
                "41078e88.a6fd9",
                "74efb784.8f5f08"
            ]
        ]
    },
    {
        "id": "dbe1ad67.c3a45",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2650,
        "y": 580,
        "wires": [
            [
                "d84b60ca.de634"
            ]
        ]
    },
    {
        "id": "d84b60ca.de634",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "msg_Visibility-windows-filling",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\nvar id;\nvar mjday;\nvar mjfrac;\nvar status;\n\n   return{\n topic:\"visbility window filling into table\",\n payload:[\n        id=msg.topic[0]+1, name=msg.topic[1], msg.payload\n    ],\n body: msg.topic[1]\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 580,
        "wires": [
            [
                "c8d1a797.2e0608"
            ]
        ]
    },
    {
        "id": "c8d1a797.2e0608",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Param Variable",
        "func": "\n// Create a Params variable\n// with a time and temp component\n//\nmsg.params = {$id:msg.payload[0], $name:msg.payload[1], $mjday:msg.payload[2].mjday, $mjfrac:msg.payload[2].mjfrac, $status:msg.payload[2].status}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 580,
        "wires": [
            [
                "a54a8ad9.b9fcd8",
                "93b14ae0.e32aa8"
            ]
        ]
    },
    {
        "id": "df778f9f.fb09e",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Visi Timestamp and Satpos Timestamp comparison",
        "info": "",
        "x": 770,
        "y": 640,
        "wires": []
    },
    {
        "id": "1692c203.53310e",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "EXIT LOOP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3490,
        "y": 540,
        "wires": []
    },
    {
        "id": "a54a8ad9.b9fcd8",
        "type": "trigger",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3260,
        "y": 580,
        "wires": [
            [
                "1692c203.53310e",
                "48bcbb3f.1b82b4"
            ]
        ]
    },
    {
        "id": "72c44582.c5e4ec",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "MACHINE DEPENDENCE",
        "info": "/home/antoine/jsatorb-rest-api/files/default_STORK/Data/STORK_MEM_VISIBILITY_.TXT",
        "x": 2210,
        "y": 540,
        "wires": [],
        "icon": "node-red-contrib-alarm/alarm.png"
    },
    {
        "id": "48bcbb3f.1b82b4",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "message to dashboard8",
        "func": "msg.payload = \"Visi window written in DB\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 580,
        "wires": [
            [
                "918bdb58.54e5a8"
            ]
        ]
    },
    {
        "id": "918bdb58.54e5a8",
        "type": "link out",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "visi OUT",
        "links": [
            "dd962994.25d498",
            "fb2c27e9.282708",
            "becd8ee3.9efcd"
        ],
        "x": 3695,
        "y": 580,
        "wires": []
    },
    {
        "id": "7622255e.b430ec",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "query to show station names",
        "func": "msg.payload = {}\nmsg.projection = {name:1,_id:0}\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 580,
        "wires": [
            [
                "e4972806.98b458"
            ]
        ]
    },
    {
        "id": "e4972806.98b458",
        "type": "mongodb in",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show stations name",
        "collection": "ground_stations",
        "operation": "find",
        "x": 980,
        "y": 580,
        "wires": [
            [
                "39c9f32f.91a26c"
            ]
        ]
    },
    {
        "id": "527ae382.4cd48c",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1350,
        "y": 580,
        "wires": [
            [
                "da43a5f9.d381a8"
            ]
        ]
    },
    {
        "id": "74efb784.8f5f08",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2470,
        "y": 520,
        "wires": []
    },
    {
        "id": "da43a5f9.d381a8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "message format",
        "func": "msg.var = msg.payload.var\ndelete msg.payload.var\nmsg.payload = [msg.payload]\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 580,
        "wires": [
            [
                "66f1c442.2f1dbc"
            ]
        ]
    },
    {
        "id": "39c9f32f.91a26c",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "insert counter",
        "func": "var count = 1\nmsg.payload.forEach(gs => {\n    gs.var = count ++\n})\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 580,
        "wires": [
            [
                "527ae382.4cd48c"
            ]
        ]
    },
    {
        "id": "93b14ae0.e32aa8",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Query to fill visibility database",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\ngs.id = msg.payload[0]\ngs.name = msg.payload[1]\ngs.mjday = parseInt(msg.payload[2].mjday)\ngs.mjfrac = parseFloat(msg.payload[2].mjfrac)\ngs.status = msg.payload[2].status\nvar tjd = (gs.mjday-33282)+gs.mjfrac/86400\ngs.epochUnixTime = 86400*tjd-631152000\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 640,
        "wires": [
            [
                "4c4d2bcd.1f4104"
            ]
        ]
    },
    {
        "id": "4c4d2bcd.1f4104",
        "type": "split",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3510,
        "y": 640,
        "wires": [
            [
                "518f311d.94f08"
            ]
        ]
    },
    {
        "id": "518f311d.94f08",
        "type": "mongodb out",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert-visi mongo",
        "collection": "visibility_windows",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 3670,
        "y": 640,
        "wires": []
    },
    {
        "id": "c1aa03b9.0e853",
        "type": "function",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "query to fill visibility ",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 580,
        "wires": [
            [
                "7622255e.b430ec"
            ]
        ]
    },
    {
        "id": "1487730a.2f8b9d",
        "type": "complete",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "Trigger when visibility deleted",
        "scope": [
            "fa7c0ed1.a0037"
        ],
        "uncaught": false,
        "x": 200,
        "y": 580,
        "wires": [
            [
                "c1aa03b9.0e853"
            ]
        ]
    },
    {
        "id": "4a6b4791859a7ec7",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "!!!! Pas de EXIT LOOP2 probleme de mongo db",
        "info": "",
        "x": 1560,
        "y": 780,
        "wires": []
    },
    {
        "id": "ddff7293e03f0b82",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "a70ba86a.746ad8",
        "name": "CHECK FLOW",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 780,
        "wires": []
    },
    {
        "id": "7d635cb4aa8261b2",
        "type": "split",
        "z": "6ac37828.4c7288",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2490,
        "y": 700,
        "wires": [
            [
                "efa1578a636dec6f"
            ]
        ]
    },
    {
        "id": "efa1578a636dec6f",
        "type": "csv",
        "z": "6ac37828.4c7288",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\n",
        "temp": "mjday, mjfrac, status",
        "skip": "15",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 2630,
        "y": 700,
        "wires": [
            [
                "dbe1ad67.c3a45"
            ]
        ]
    },
    {
        "id": "4aae53bd115977ea",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "name": "CHECK FLOW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 900,
        "wires": []
    },
    {
        "id": "48c9278751e6dd80",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "Disconnected for test",
        "info": "Disconnected to try with simple file in and out",
        "x": 1040,
        "y": 1480,
        "wires": []
    },
    {
        "id": "edb348011caef461",
        "type": "file",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "filename": "angle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 630,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "7666c04f07bbb05f",
        "type": "file in",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "filename": "angle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "b83d4c26dabed0ee"
            ]
        ]
    },
    {
        "id": "b83d4c26dabed0ee",
        "type": "json",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 1300,
        "wires": [
            [
                "f1d4084e6377b063"
            ]
        ]
    },
    {
        "id": "7bdca02863b868fd",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "storage check1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1460,
        "wires": []
    },
    {
        "id": "9e71a5834972f14f",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "storage check2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1180,
        "wires": []
    },
    {
        "id": "13ab995fda488768",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "storage check3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1180,
        "wires": []
    },
    {
        "id": "70f082f113f3cffb",
        "type": "debug",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "storage check4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f1d4084e6377b063",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "angles",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1260,
        "wires": [
            [
                "da44af67.6b24f",
                "9e71a5834972f14f"
            ]
        ]
    },
    {
        "id": "6d1ccf9412d0d665",
        "type": "change",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sliderpos",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1360,
        "wires": [
            [
                "da44af67.6b24f",
                "7bdca02863b868fd"
            ]
        ]
    },
    {
        "id": "a9e817f573788987",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "2/05/23",
        "info": "We changed the persist for normal files, to prevent any related bug. Then appeared the problem that: After the join we hqd until now an array with the slider current position respresented by an integer and an array with for each time instant of the window, all angle of interest. Now the calculation assumed that the slider position is the second element in the array but the position isnt fixed it depends of hom arrives first the slider or the array from the storage. As it is reversed now, instead of changing in every following scripts the index we prefer to creat an object composed of key:and values so we never have to change again. ",
        "x": 970,
        "y": 1520,
        "wires": []
    },
    {
        "id": "170b38f03bd0fc97",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "out of 1",
        "info": "needed to change the max to length -1 to use as an array index",
        "x": 610,
        "y": 1300,
        "wires": []
    },
    {
        "id": "7233d22172de1941",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "HERE WAS A PERSIST ANGLE",
        "info": "",
        "x": 670,
        "y": 1460,
        "wires": []
    },
    {
        "id": "dc4fd25033b5651f",
        "type": "comment",
        "z": "6ac37828.4c7288",
        "g": "68821a62.dd81d4",
        "name": "HERE WAS A PERSIST ANGLE",
        "info": "",
        "x": 910,
        "y": 1400,
        "wires": []
    },
    {
        "id": "56d08e9d1e1b8ab3",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "4a641fde.c960f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "payload",
        "payloadType": "msg",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "c1aa03b9.0e853"
            ]
        ]
    },
    {
        "id": "5598c3c58ce87176",
        "type": "inject",
        "z": "6ac37828.4c7288",
        "g": "2b159612.3e728a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "d652d2af.e4153"
            ]
        ]
    },
    {
        "id": "d96813c8d3d9d7b7",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "b1 timesettermaneuver IN",
        "links": [
            "9958904edb2cfd1b",
            "9eabc86f41dcbbd7",
            "311d56865a75bbd3",
            "a888b1680995934c",
            "50f4d72ba35dcb42",
            "dbf98d3c62768d6c",
            "2e243ce920ba358d",
            "a16fee9e3c088819",
            "29082c0a16ce95c8"
        ],
        "x": 555,
        "y": 1040,
        "wires": [
            [
                "85acb55e62dcd0aa",
                "9d50485913894097",
                "649976e64d5c201f"
            ]
        ]
    },
    {
        "id": "85acb55e62dcd0aa",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1040,
        "wires": [
            [
                "d4c40cf6c7f7ebc8",
                "98bfdb80d7a0fd62"
            ]
        ]
    },
    {
        "id": "fa3505e97673a6cd",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 940,
        "wires": [
            [
                "d4c40cf6c7f7ebc8",
                "f931ad51642cd8ee"
            ]
        ]
    },
    {
        "id": "d4c40cf6c7f7ebc8",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1120,
        "y": 1020,
        "wires": [
            [
                "a0a3a6241e714836"
            ],
            []
        ]
    },
    {
        "id": "a0a3a6241e714836",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1020,
        "wires": [
            [
                "5ce8b43dcfe48401",
                "62b3a7b77702ad42",
                "1ed08a51f29784aa"
            ]
        ]
    },
    {
        "id": "1ccb2dbfe3a3a365",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 920,
        "wires": [
            [
                "e7070b966067aebf"
            ]
        ]
    },
    {
        "id": "e7070b966067aebf",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], msg.paths.path_6[0].dx, msg.paths.path_6[0].dy, msg.paths.path_6[0].dz, msg.paths.path_6[0].dura]; 0\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 920,
        "wires": [
            [
                "689500019e5fc158"
            ]
        ]
    },
    {
        "id": "93cecfd0bf213d56",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 820,
        "wires": [
            [
                "9fa7b5ec6419d3fe",
                "5a0576c4f856da44"
            ]
        ]
    },
    {
        "id": "5ce8b43dcfe48401",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 960,
        "wires": [
            [
                "9fa7b5ec6419d3fe",
                "d7b127ba994e38dc",
                "b089fb2561c492ae"
            ]
        ]
    },
    {
        "id": "9fa7b5ec6419d3fe",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_6\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1700,
        "y": 900,
        "wires": [
            [
                "1ccb2dbfe3a3a365",
                "ee486cfdad340cc8"
            ],
            []
        ]
    },
    {
        "id": "689500019e5fc158",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2430,
        "y": 920,
        "wires": [
            [
                "e8ef91b33d7df1e8"
            ]
        ]
    },
    {
        "id": "e8ef91b33d7df1e8",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2630,
        "y": 920,
        "wires": [
            [
                "126a998aa29751c7"
            ]
        ]
    },
    {
        "id": "126a998aa29751c7",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2860,
        "y": 920,
        "wires": [
            [
                "dca7f8d059c1c0d6",
                "ed1e8f84b626b010"
            ]
        ]
    },
    {
        "id": "5cb2e7b3339a7e8c",
        "type": "ui_form",
        "z": "a9c7c6499fb06192",
        "d": true,
        "name": "",
        "label": "BLUE1-Vehicle-Continuous",
        "group": "5a7810372552815e",
        "order": 2,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Dry mass (kg)",
                "value": "drymass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Ergol mass (kg)",
                "value": "ergolmass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Thrust (N)",
                "value": "thrust",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (s)",
                "value": "isp",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Surf Ref (m²)",
                "value": "surfref",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "drymass": "",
            "ergolmass": "",
            "thrust": "",
            "isp": "",
            "surfref": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 440,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "78ed0576c46a296c",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 1200,
        "wires": [
            [
                "6982ab15f50d5e20",
                "b34bd82137d511de"
            ]
        ]
    },
    {
        "id": "ec164a7ad1af2abe",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 1240,
        "wires": [
            [
                "6982ab15f50d5e20",
                "e3dbeb329df47c0f"
            ]
        ]
    },
    {
        "id": "6982ab15f50d5e20",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_1\", \"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1760,
        "y": 1200,
        "wires": [
            [
                "37eb1a8222d471d8",
                "a4a9a11440819b91"
            ],
            []
        ]
    },
    {
        "id": "06b6c4fefcad996e",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1180,
        "wires": [
            [
                "36fb16574dfa562b"
            ]
        ]
    },
    {
        "id": "649976e64d5c201f",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query for b1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1100,
        "wires": [
            [
                "5fe639eceb332936"
            ]
        ]
    },
    {
        "id": "5fe639eceb332936",
        "type": "mongodb in",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 820,
        "y": 1180,
        "wires": [
            [
                "06b6c4fefcad996e",
                "dec7a68a804e0f28",
                "f0fa543d1e256207",
                "affa3fc7a9844d11"
            ]
        ]
    },
    {
        "id": "36fb16574dfa562b",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1230,
        "y": 1180,
        "wires": [
            [
                "e615303e89c9bc3b"
            ]
        ]
    },
    {
        "id": "62b3a7b77702ad42",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 1160,
        "wires": [
            [
                "6982ab15f50d5e20",
                "bc8a6e0c97bde7ea"
            ]
        ]
    },
    {
        "id": "e6bd2d01e6a1c45b",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2150,
        "y": 1260,
        "wires": [
            [
                "df1a5085d9c1fd68",
                "acb74cb65fe54054"
            ]
        ]
    },
    {
        "id": "df1a5085d9c1fd68",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2330,
        "y": 1280,
        "wires": [
            [
                "a2d37e0b2e341ec0"
            ]
        ]
    },
    {
        "id": "a2d37e0b2e341ec0",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2590,
        "y": 1280,
        "wires": [
            [
                "76268b76f4356014",
                "16af0905aa1e3301"
            ]
        ]
    },
    {
        "id": "98a2817c58cf23b3",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1260,
        "wires": [
            [
                "e6bd2d01e6a1c45b",
                "eaecbee09afa4cf7"
            ]
        ]
    },
    {
        "id": "76268b76f4356014",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*1.0;\n\nvar myDate = new Date(datecurrent);\ndate= (myDate.toGMTString());\n\n\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2910,
        "y": 1260,
        "wires": [
            [
                "85161039bfca3377"
            ]
        ]
    },
    {
        "id": "12b83b90775bc4ae",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue1 -DcommandParameter=executeManeuver -jar ImpulseManeuver.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3510,
        "y": 1080,
        "wires": [
            [
                "9485be051675a761",
                "ff33218d1b7bd97d",
                "9b9556cf26bc732b",
                "9e08147f903bac3b",
                "037981a907a5146a"
            ],
            [
                "0212a7d5f68269dd",
                "55efe277fd5d2a31",
                "29bfb4186607f927",
                "bc8901639fdf19be",
                "ec6f72b607943c05",
                "9b9556cf26bc732b"
            ],
            []
        ]
    },
    {
        "id": "dca7f8d059c1c0d6",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2770,
        "y": 1060,
        "wires": [
            [
                "11a9f8c0a2748862"
            ]
        ]
    },
    {
        "id": "85161039bfca3377",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2850,
        "y": 1160,
        "wires": [
            [
                "11a9f8c0a2748862",
                "dccd5d93e441b55c"
            ]
        ]
    },
    {
        "id": "11a9f8c0a2748862",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\", \"path_10\"]",
        "pathsToExpire": "[ \"path_4\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "900",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3260,
        "y": 1100,
        "wires": [
            [
                "12b83b90775bc4ae",
                "75da10b16042b061",
                "3dafcdba28b0d46e"
            ],
            []
        ]
    },
    {
        "id": "197bbc7efce6300a",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "RAZ Result injection",
        "func": "msg.payload = null\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 720,
        "wires": [
            [
                "30ed0ce92421468d"
            ]
        ]
    },
    {
        "id": "30ed0ce92421468d",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1950,
        "y": 720,
        "wires": [
            [
                "5a16ab898b485a30"
            ]
        ]
    },
    {
        "id": "5a16ab898b485a30",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Result-RAZ",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2210,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "f7fae6fbb972e49a",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Result.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 720,
        "wires": [
            [
                "197bbc7efce6300a"
            ]
        ]
    },
    {
        "id": "9485be051675a761",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3850,
        "y": 960,
        "wires": [
            [
                "9c67ea7ef084c63f"
            ]
        ]
    },
    {
        "id": "9c67ea7ef084c63f",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4090,
        "y": 980,
        "wires": [
            [
                "2f32dbf2d1608b6c",
                "541422c1896cb1ab"
            ]
        ]
    },
    {
        "id": "2f32dbf2d1608b6c",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4270,
        "y": 960,
        "wires": [
            [
                "a29281032b7881e1"
            ]
        ]
    },
    {
        "id": "a29281032b7881e1",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 1120,
        "wires": [
            [
                "161b2bb09e7e82f1",
                "541422c1896cb1ab"
            ]
        ]
    },
    {
        "id": "161b2bb09e7e82f1",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n-12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4040,
        "y": 1080,
        "wires": [
            [
                "cfee6256eea5629f",
                "541422c1896cb1ab"
            ]
        ]
    },
    {
        "id": "cfee6256eea5629f",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass=msg.payload[0].ergolmass;\ngs.dry_mass=msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 1160,
        "wires": [
            [
                "ca7b56f5ed334d36"
            ]
        ]
    },
    {
        "id": "52e1e45e0c77a7cb",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "update all for B1 OUT",
        "mode": "link",
        "links": [
            "5c3232735d2e2038"
        ],
        "x": 4775,
        "y": 1080,
        "wires": []
    },
    {
        "id": "16af0905aa1e3301",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of post-maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*1.0;\n\n\nmsg.payload = datecurrent\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 1400,
        "wires": [
            [
                "ae0ea039375e5e98",
                "de8d8073934276aa"
            ]
        ]
    },
    {
        "id": "ae0ea039375e5e98",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2950,
        "y": 1400,
        "wires": [
            [
                "177153850fd7c528"
            ]
        ]
    },
    {
        "id": "177153850fd7c528",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 1440,
        "wires": [
            [
                "898040caa909b090"
            ]
        ]
    },
    {
        "id": "898040caa909b090",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to fill b1 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2910,
        "y": 1440,
        "wires": [
            [
                "3bf9e37eb8dd795c"
            ]
        ]
    },
    {
        "id": "3bf9e37eb8dd795c",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2690,
        "y": 1480,
        "wires": [
            [
                "abdabf163cc832c6"
            ]
        ]
    },
    {
        "id": "abdabf163cc832c6",
        "type": "mongodb out",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert b1 time tle mongo",
        "collection": "peritimeb1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2870,
        "y": 1480,
        "wires": []
    },
    {
        "id": "65421165bbc07ccd",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Tle b1-postMan-OUT",
        "mode": "link",
        "links": [
            "17bd6cd48b2a4ff4",
            "eaa764a3200e5895",
            "8c549ce61c13f241",
            "ce4f0fdb27bdb44e",
            "56e6a629bd1f59e2",
            "5b95d42e7eac28c8",
            "e24933176e964d7d",
            "5c2d917dc0d2c6f9"
        ],
        "x": 4415,
        "y": 1260,
        "wires": []
    },
    {
        "id": "c467dc3c60f156cc",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4430,
        "y": 1220,
        "wires": [
            [
                "65421165bbc07ccd"
            ]
        ]
    },
    {
        "id": "5f9d8e33aa0cc23e",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "MMB1",
        "info": "",
        "x": 1290,
        "y": 600,
        "wires": []
    },
    {
        "id": "82e2ef7ac9a7ebe5",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 520,
        "y": 620,
        "wires": []
    },
    {
        "id": "b6554248648c776d",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 680,
        "y": 620,
        "wires": []
    },
    {
        "id": "5a598d75a51bbd89",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 580,
        "y": 560,
        "wires": []
    },
    {
        "id": "3761085fcf07ae9e",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 880,
        "y": 620,
        "wires": []
    },
    {
        "id": "de8d8073934276aa",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "blue1-date-storage",
        "filename": "blue1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2970,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "958395228819a348",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 860,
        "y": 500,
        "wires": []
    },
    {
        "id": "571e3f94c7f0d258",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1920,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f8c655b18db697e6",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Thrust param + Manoeuver Delay",
        "info": "",
        "x": 1390,
        "y": 880,
        "wires": []
    },
    {
        "id": "062734104196c0f9",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Here we store the new start date because the positions of the satellite before the manoeuver  are now false",
        "info": "",
        "x": 2660,
        "y": 1540,
        "wires": []
    },
    {
        "id": "45ebb2a368cee875",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4740,
        "y": 980,
        "wires": [
            [
                "febd0e86b2abbc88",
                "5368d7cb85243003"
            ]
        ]
    },
    {
        "id": "9b1b47e8a3e5d733",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "fabrication de la string",
        "info": "",
        "x": 4040,
        "y": 1280,
        "wires": []
    },
    {
        "id": "6b03f32425a00b68",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 1310,
        "y": 1060,
        "wires": []
    },
    {
        "id": "bc7989cd3aa6dc02",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "12b83b90775bc4ae"
        ],
        "uncaught": false,
        "x": 3430,
        "y": 1280,
        "wires": [
            [
                "0212a7d5f68269dd"
            ]
        ]
    },
    {
        "id": "ca7b56f5ed334d36",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4500,
        "y": 1160,
        "wires": [
            [
                "979282dffe4fca2d",
                "52e1e45e0c77a7cb",
                "044efb5580bec36f",
                "a29bd13f1f18078d",
                "ccd09cec286b29ef",
                "8b136dbdc6b60ec6",
                "0f157f682d68492b"
            ],
            [
                "55513a8e25fdd0b8"
            ]
        ]
    },
    {
        "id": "bd4ce9117d35c595",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4530,
        "y": 980,
        "wires": []
    },
    {
        "id": "8689ab60c352e350",
        "type": "ui_table",
        "z": "a9c7c6499fb06192",
        "group": "cbb369e33298cfeb",
        "name": "TLE display",
        "order": 1,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "version",
                "title": "Ver.",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "incli",
                "title": "Incli (°)",
                "width": "82",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "raan",
                "title": "RAAN (°)",
                "width": "95",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ecc",
                "title": "Ecc",
                "width": "75",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "aop",
                "title": "AoP (°)",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "meana",
                "title": "M.Ano",
                "width": "85",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mean",
                "title": "M.Motion",
                "width": "101",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ergol_mass",
                "title": "Ergols (kg)",
                "width": "108",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4810,
        "y": 580,
        "wires": []
    },
    {
        "id": "bbc736346aaf3051",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4870,
        "y": 860,
        "wires": [
            [
                "e50475bece7fb460"
            ]
        ]
    },
    {
        "id": "febd0e86b2abbc88",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4870,
        "y": 900,
        "wires": [
            [
                "bbc736346aaf3051"
            ]
        ]
    },
    {
        "id": "7669ab0c0d0926af",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read blue1-tle-storage",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4120,
        "y": 620,
        "wires": [
            [
                "f06a625861629231",
                "cb162b22f3805c3f"
            ]
        ]
    },
    {
        "id": "d15098f9ee275633",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Old tle storage",
        "filename": "blue1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4140,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f06a625861629231",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4170,
        "y": 700,
        "wires": [
            [
                "d15098f9ee275633",
                "68a5bc26ffb29949"
            ]
        ]
    },
    {
        "id": "49db1864f2df7111",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "11/05/23",
        "info": "",
        "x": 4600,
        "y": 820,
        "wires": []
    },
    {
        "id": "593a52079dbca503",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer B1",
        "links": [
            "d32b325c8b1fc9af"
        ],
        "x": 3655,
        "y": 520,
        "wires": [
            [
                "1093096c2260921d",
                "7669ab0c0d0926af"
            ]
        ]
    },
    {
        "id": "14d7295f97317f5a",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer B1 out",
        "mode": "link",
        "links": [
            "eff4798c71085513"
        ],
        "x": 4885,
        "y": 660,
        "wires": []
    },
    {
        "id": "68a5bc26ffb29949",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4350,
        "y": 700,
        "wires": [
            [
                "fefeeb14f4a13dd0"
            ]
        ]
    },
    {
        "id": "fefeeb14f4a13dd0",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4450,
        "y": 660,
        "wires": [
            [
                "5958fe1bf113855a",
                "5c6c2ef4a8f00e2d"
            ]
        ]
    },
    {
        "id": "08a705a994cb38f6",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4750,
        "y": 660,
        "wires": [
            [
                "14d7295f97317f5a"
            ]
        ]
    },
    {
        "id": "5958fe1bf113855a",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4610,
        "y": 660,
        "wires": [
            [
                "08a705a994cb38f6"
            ]
        ]
    },
    {
        "id": "a29bd13f1f18078d",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read blue1-tle-storage",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4080,
        "y": 820,
        "wires": [
            [
                "f2b4f5a36909e093"
            ]
        ]
    },
    {
        "id": "f2b4f5a36909e093",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4130,
        "y": 860,
        "wires": [
            [
                "e4f414dd3436bafb",
                "5dece65aa3cb9e20"
            ]
        ]
    },
    {
        "id": "e4f414dd3436bafb",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Old tle storage",
        "filename": "blue1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4240,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "5c6c2ef4a8f00e2d",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "if (msg.payload[0].version === \"New TLE\") {\n    // Create a copy of the first payload object to avoid mutating the original directly\n    var tmp = { ...msg.payload[0] };\n\n    // Helper function to remove leading zeros and format to two decimal places\n    function formatNumber(value) {\n        return parseFloat(value).toFixed(3);\n    }\n\n    // Format 'incli' from \"002.0000\" to \"2.00\"\n    tmp.incli = formatNumber(tmp.incli);\n\n    // Format 'raan' from \"003.0000\" to \"3.00\"\n    tmp.raan = formatNumber(tmp.raan);\n\n    // Format 'ecc' from \"0000001\" to \"1.00E-7\"\n    // Assuming \"0000001\" represents 1e-7\n    tmp.ecc = (parseInt(tmp.ecc, 10) * 1e-7).toExponential(3).toUpperCase();\n\n    // Format 'aop' from \"003.0000\" to \"3.00\"\n    tmp.aop = formatNumber(tmp.aop);\n\n    // Format 'meana' from \"003.0000\" to \"3.00\"\n    tmp.meana = formatNumber(tmp.meana);\n\n    // Format 'mean' from \"15.83035000000000\" to \"15.83\"\n    tmp.mean = parseFloat(tmp.mean).toFixed(3);\n\n    // Format 'dry_mass' from \"1000.00000\" to \"1000.00\"\n    tmp.dry_mass = parseFloat(tmp.dry_mass).toFixed(3);\n\n    // Format 'ergol_mass' from \"4000.00000\" to \"4000.00\"\n    tmp.ergol_mass = parseFloat(tmp.ergol_mass).toFixed(3);\n\n    // Update the payload with the formatted object\n    msg.payload[0] = tmp;\n\n    // Ensure the second payload element is an empty string as per your original logic\n    msg.payload[1] = \"\";\n}\nelse {\n    // Create a copy of the first payload object to avoid mutating the original directly\n    var tmp = { ...msg.payload[0] };\n\n    // Helper function to remove leading zeros and format to two decimal places\n    function formatNumber(value) {\n        return parseFloat(value).toFixed(3);\n    }\n\n    // Format 'incli' from \"002.0000\" to \"2.00\"\n    tmp.incli = formatNumber(tmp.incli);\n\n    // Format 'raan' from \"003.0000\" to \"3.00\"\n    tmp.raan = formatNumber(tmp.raan);\n\n    // Format 'ecc' from \"0000001\" to \"1.00E-7\"\n    // Assuming \"0000001\" represents 1e-7\n    tmp.ecc = (parseInt(tmp.ecc, 10) * 1e-7).toExponential(3).toUpperCase();\n\n    // Format 'aop' from \"003.0000\" to \"3.00\"\n    tmp.aop = formatNumber(tmp.aop);\n\n    // Format 'meana' from \"003.0000\" to \"3.00\"\n    tmp.meana = formatNumber(tmp.meana);\n\n    // Format 'mean' from \"15.83035000000000\" to \"15.83\"\n    tmp.mean = parseFloat(tmp.mean).toFixed(3);\n\n    // Format 'dry_mass' from \"1000.00000\" to \"1000.00\"\n    tmp.dry_mass = parseFloat(tmp.dry_mass).toFixed(2);\n\n    // Format 'ergol_mass' from \"4000.00000\" to \"4000.00\"\n    tmp.ergol_mass = parseFloat(tmp.ergol_mass).toFixed(2);\n\n    // Update the payload with the formatted object\n    msg.payload[0] = tmp;\n\n    // Ensure the second payload element is an empty string as per your original logic\n    msg.payload[1] = \"\";\n\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4520,
        "y": 740,
        "wires": [
            [
                "9d157c44361e9d20",
                "8689ab60c352e350"
            ]
        ]
    },
    {
        "id": "e615303e89c9bc3b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1220,
        "wires": [
            [
                "ec164a7ad1af2abe"
            ]
        ]
    },
    {
        "id": "37eb1a8222d471d8",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Data.txt format",
        "func": "var N; // Mean motion in rev/day\nvar n; // See the expression later \nvar a; // Semi-major axis\nvar acube; // acube = a³ \nvar e; // Eccentricity\n\nvar mu = 398600.4418;\n// var mu = 398600; // Earth's standard gravitational parameter\n// var J = 86164; // Wrong value changed on the 240523\nvar J = 86400; // A day expressed in seconds \n\nN = msg.paths.path_2[7]; // The mean motion in rev/day\nn = 2 * Math.PI * N / J; // n = 2π/T where T = J/N\nacube = mu / (n * n); // acube = a³ \na = Math.cbrt(acube); // Compute the cubic root for a\ne = Number(msg.paths.path_2[4]) / 10000000; // Convert TLE formatted eccentricity to a real number \ne = e.toFixed(7);\n\n// Initialize variables with default values\nvar durastop = msg.paths.path_3[0] + 1.0 + 1.0;\nvar thrust = \"0\";\nvar dv = \"0\";\nvar isp = \"0\";\nvar drymass = \"0\";\nvar ergolmass = \"0\";\nvar surface = \"0\";\nvar myDate = new Date(msg.paths.path_3[1]);\nDATE = myDate.toISOString(); // Format the date to ISO string\n\n// CORRECTION 050723\n// Removed unnecessary and inaccurate date parsing code\n\n// Assign values if they are valid numbers\nif (!isNaN(msg.isp)) { isp = msg.isp; }\nif (!isNaN(msg.dv)) { dv = msg.dv; }\nif (!isNaN(msg.paths.path_13[1])) { ergolmass = msg.paths.path_13[1]; }\nif (!isNaN(msg.paths.path_13[0])) { drymass = msg.paths.path_13[0]; }\n\n// **New Addition: Set maneuverType to \"Impulse\" if it's not provided**\nif (msg.maneuverType == null || msg.maneuverType === undefined || msg.maneuverType === \"\") {\n    msg.maneuverType = \"Impulse\";\n}\n\nmsg.payload = [\n    \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thrust, ISP, Ergol mass, Simu duration stop, ManeuverType, DV\",\n    DATE,\n    a,\n    e,\n    msg.paths.path_2[2],\n    msg.paths.path_2[3],\n    msg.paths.path_2[5],\n    msg.paths.path_2[6],\n    drymass,\n    surface,\n    thrust,\n    isp,\n    ergolmass,\n    durastop,\n    msg.maneuverType, // Now guaranteed to have a value\n    dv\n];\n\n// 03/05/2023 I had to change the column to take the AoP from it was coded column 7 I changed for 8 because 7 is a blank space \nreturn msg;\n\n// 160523 I changed the access to the orbital \n// parameters they are in the payload in an array\n// \"2010-01-01T11:59:26.000\"\n\n// This function was changed on the 240523 because of wrong values on the J (duration of a day in seconds) \n// And to improve the readability\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1260,
        "wires": [
            [
                "98a2817c58cf23b3"
            ]
        ]
    },
    {
        "id": "5a506a6cdc16104a",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 880,
        "wires": [
            [
                "8cb21e99ae7a9bcf"
            ]
        ]
    },
    {
        "id": "8cb21e99ae7a9bcf",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 880,
        "wires": [
            [
                "fa3505e97673a6cd",
                "a3147be2230ad75a"
            ]
        ]
    },
    {
        "id": "dec7a68a804e0f28",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1140,
        "wires": [
            [
                "184247d3590e402c"
            ]
        ]
    },
    {
        "id": "184247d3590e402c",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1290,
        "y": 1100,
        "wires": [
            [
                "5a506a6cdc16104a"
            ]
        ]
    },
    {
        "id": "68b48a24f162fb34",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 290,
        "y": 620,
        "wires": []
    },
    {
        "id": "3fac222938a0beee",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 210,
        "y": 580,
        "wires": []
    },
    {
        "id": "1093096c2260921d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Init TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3960,
        "y": 520,
        "wires": [
            [
                "fefeeb14f4a13dd0",
                "5fb6c6aaa728004e"
            ]
        ]
    },
    {
        "id": "5dece65aa3cb9e20",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4390,
        "y": 860,
        "wires": [
            [
                "bbc736346aaf3051"
            ]
        ]
    },
    {
        "id": "6fa96c20b2c8807a",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "ICI TLE line2",
        "info": "",
        "x": 4670,
        "y": 4680,
        "wires": []
    },
    {
        "id": "0e137f8d69667297",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Here was the tle stored",
        "info": "",
        "x": 4440,
        "y": 4680,
        "wires": []
    },
    {
        "id": "3a3e45a60586f3e6",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "TEST030523",
        "info": "We try with a persistant",
        "x": 4870,
        "y": 4680,
        "wires": []
    },
    {
        "id": "0212a7d5f68269dd",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3780,
        "y": 1280,
        "wires": []
    },
    {
        "id": "cb162b22f3805c3f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4490,
        "y": 600,
        "wires": []
    },
    {
        "id": "1ed08a51f29784aa",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1020,
        "wires": []
    },
    {
        "id": "98bfdb80d7a0fd62",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f931ad51642cd8ee",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 940,
        "wires": []
    },
    {
        "id": "f502af4a11673556",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 590,
        "y": 500,
        "wires": []
    },
    {
        "id": "044efb5580bec36f",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4230,
        "y": 1220,
        "wires": [
            [
                "c467dc3c60f156cc"
            ]
        ]
    },
    {
        "id": "541422c1896cb1ab",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4250,
        "y": 1120,
        "wires": []
    },
    {
        "id": "979282dffe4fca2d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4780,
        "y": 1120,
        "wires": [
            [
                "4393c1b970e3a29b"
            ]
        ]
    },
    {
        "id": "4393c1b970e3a29b",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 4815,
        "y": 1220,
        "wires": []
    },
    {
        "id": "55efe277fd5d2a31",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "var max=6;\nvar random = Math.floor(Math.random() * max);\n\nif (msg.payload.includes(\"hyperbolic orbits cannot be handled\")){\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3840,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "0b7e677ffd81b460",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3945,
        "y": 1200,
        "wires": []
    },
    {
        "id": "735a75c945acae04",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4120,
        "y": 460,
        "wires": [
            [
                "7669ab0c0d0926af"
            ]
        ]
    },
    {
        "id": "b911f1ddeac099b6",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4110,
        "y": 400,
        "wires": []
    },
    {
        "id": "8476c250cbd8a111",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "7669ab0c0d0926af"
        ],
        "uncaught": false,
        "x": 3770,
        "y": 400,
        "wires": [
            [
                "735a75c945acae04",
                "b911f1ddeac099b6"
            ]
        ]
    },
    {
        "id": "1f15540a163a20fa",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4370,
        "y": 4780,
        "wires": [
            [
                "4922ac523bdc91d3"
            ]
        ]
    },
    {
        "id": "4922ac523bdc91d3",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "func": "\nconst fileNames = ['blue1-tle-storage.json','blue2-tle-storage.json','red1-tle-storage.json','red2-tle-storage.json',\n                   'blue1-date-storage.json','blue2-date-storage.json','red1-date-storage.json','red2-date-storage.json'];\nconst { fs } = context.global;\n//const fs = context.global.fs;\n//var path = global.get('path');\n\nmsg.payload=[];\nfor ( const file of fileNames ) {\nvar filePath = '/usr/src/node-red/'+file;\nconsole.log('The file'+file+'at '+filePath+ 'exists :'+fs.existsSync(filePath));\n\n    if (fs.existsSync(filePath)) {\n        \n        msg.payload.push({fileName: file, exists: true, message : 'The file '+file+' exists'});\n    } \n    else {\n        \n        msg.payload.push({ fileName: file, exists: false, message :'The file '+file+'is being created ...'});\n    }\n\n}\n\nreturn msg;\n\n\n\n//var fs = require('fs');\n \n /*In Node-RED functions, if you try to require a Node.js native module, you will get the error ReferenceError: require is not defined.\nThis is because you can't require a Node.js module directly in a function.\n\nTo resolve this, we integrated these modules in the Node-RED global context.\nYou can access them by using context.global.\n\nFor example, to require the crypto module, just declare it like this: const { crypto } = context.global;*/\n/*\ntry {\n    fs.stat(filePath);\n    // Le fichier existe\n     msg.payload.push({fileName: file, exists: true, message : 'The file '+file+' exists'});\n} catch (err) {\n    console.log(err);\n\n    // Le fichier n'existe pas\n     msg.payload.push({ fileName: file, exists: false, message :'The file '+file+'is being created ...'});\n}\n\n*/\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4560,
        "y": 4780,
        "wires": [
            [
                "6acd64861c2ddf3a",
                "fe6dc5caccab0721"
            ]
        ]
    },
    {
        "id": "5dbba84369f71a58",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4600,
        "y": 4960,
        "wires": [
            []
        ]
    },
    {
        "id": "1688d203d6d2922f",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "property": "payload.exists",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4550,
        "y": 4860,
        "wires": [
            [
                "af5aae43d30de7ee"
            ],
            []
        ]
    },
    {
        "id": "af5aae43d30de7ee",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "filename",
        "rules": [
            {
                "t": "move",
                "p": "payload.fileName",
                "pt": "msg",
                "to": "filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4560,
        "y": 4900,
        "wires": [
            [
                "5dbba84369f71a58",
                "0d97d48b885c1636"
            ]
        ]
    },
    {
        "id": "6acd64861c2ddf3a",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4550,
        "y": 4820,
        "wires": [
            [
                "1688d203d6d2922f"
            ]
        ]
    },
    {
        "id": "0d97d48b885c1636",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "JSON initialiser ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 4880,
        "wires": []
    },
    {
        "id": "6374784edd2511fd",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "scope": [
            "4922ac523bdc91d3"
        ],
        "uncaught": false,
        "x": 4710,
        "y": 4780,
        "wires": [
            [
                "db5372ec605c6c64"
            ]
        ]
    },
    {
        "id": "db5372ec605c6c64",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "error json exist check",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4810,
        "y": 4840,
        "wires": []
    },
    {
        "id": "d0dc599394b98a40",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Orientation computing",
        "func": "\nvar Dx;\nvar Dy;\nvar Dz;\n\n// theta is related to Dz it is the angle around x or y \n\n//PREPARATION STEP\n\n// theta est le complement a 90 de beta\nvar theta = 90 - msg.payload.beta\n// converting theta to rad and computing\n//the vector composition of the thrust\nDx = 1*Math.sin(theta*Math.PI/180)*Math.cos(msg.payload.alpha*Math.PI/180);\nDy = 1*Math.sin(theta*Math.PI/180)*Math.sin(msg.payload.alpha*Math.PI/180);\nDz = 1*Math.cos(theta*Math.PI/180)\n\nvar tab = []\nvar gs = {}\n\ngs.dx = Dx\ngs.dy = Dy\ngs.dz = Dz\ngs.dura = msg.payload.duration\n\n\ntab.push(gs)\nmsg.body = msg.payload\nmsg.payload = tab\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 720,
        "wires": [
            [
                "f7fae6fbb972e49a",
                "20ebfeb180b061b3"
            ]
        ]
    },
    {
        "id": "0d641d83dafe1659",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "5a7810372552815e",
        "name": "Thrust-Orientation",
        "order": 1,
        "width": 10,
        "height": 6,
        "format": "<!-- Load Three.js -->\n<script id=\"libraryThreeDL\" src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n\n<div id=\"angle-input\" style=\"display: flex; justify-content: center; align-items: center;\">\n    <label for=\"alpha\">Alpha (°): </label>\n    <input type=\"number\" id=\"alpha\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n\n    <label for=\"beta\">Beta (°): </label>\n    <input type=\"number\" id=\"beta\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n</div>\n<button id=\"thrustButton\">Thrust Orientation</button>\n<div id=\"canvas-container\" style=\"display: flex; justify-content: center; align-items: center;\"></div>\n\n<script >\n//document.addEventListener(\"DOMContentLoaded\", function() {\nfunction chargerLibrairie(url,callback) {\n    var script = document.createElement('script');\n    script.type='text/javascript';\n    script.src=url;\n    script.onload=callback;\n\n    document.head.appendChild(script);\n}\n\n(function(scope) {\n    \n    chargerLibrairie('https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',function (){\n    \n    var button = document.getElementById(\"thrustButton\");\n    button.style.backgroundColor = \"#00567a\"; // Blue background color\n    button.style.color = \"#ffffff\"; // White text color\n    button.style.border = \"none\"; // Remove border\n    button.style.padding = \"10px 20px\"; // Add padding for better appearance\n     button.style.borderRadius = \"2px\"; // Add rounded edges\n  //  console.log(scope);\n    var alphaInput = document.getElementById(\"alpha\");\n    var betaInput = document.getElementById(\"beta\");\n    var durationInput = 1;\n    var canvasContainer = document.getElementById(\"canvas-container\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    var noderedStandardUnit = 48;// Nodered unit in pixels\n\n    var heightOfWidget = Number(scope.height)*noderedStandardUnit\n    var widthOfWidget=Number(scope.width)*noderedStandardUnit\n\n\n    renderer.setSize(widthOfWidget,heightOfWidget- noderedStandardUnit);\n    \n    canvasContainer.appendChild(renderer.domElement);\n    renderer.setClearColor(new THREE.Color(0x212C31));\n    // add the cubesat\n\n\n//CUBE SATELLITE\n    var cubeside=1\n    var geometry = new THREE.BoxBufferGeometry(cubeside,cubeside,cubeside);\n    var material = new THREE.MeshStandardMaterial({\n    color: 0x929292,          // Base color of the metal\n    metalness: 0.7,             // Set to 1 for a full metallic surface\n    roughness: 0.5,           // Adjust the roughness to control reflection blur\n    \n    });\n   //var material = new THREE.MeshStandardMaterial({ color: 0xAAAAAA, metalness: 1, roughness: 0.5 });\n    //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n     \n    alphaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    alphaInput.style.color = \"#ffffff\"; // White text color\n    betaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    betaInput.style.color = \"#ffffff\"; // White text color\n   \n//ARROWS\n    var arrowOrigin = new THREE.Vector3(0, 0, 0);\n    var arrowDirection = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionX = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionY = new THREE.Vector3(0, 0, 1); // Initial direction\n    var arrowDirectionZ = new THREE.Vector3(1, 0, 0); // Initial direction\n    var arrowLength = 1.4; // Length of the arrow\n    var arrowLengthUnit = 1; // Length of the arrow\n    var arrowColorRed = 0xff0000; // Red color\n    var arrowColorYellow = 0xffff00; // Yellow color\n    var arrowColorBlue = 0x0000ff; // Blue color\n    var arrowColorGreen = 0x00ff00; //Green color\n    var arrowHelper = new THREE.ArrowHelper(arrowDirection, arrowOrigin, arrowLength, arrowColorYellow);\n    var arrowHelperX = new THREE.ArrowHelper(arrowDirectionX, arrowOrigin,arrowLengthUnit, arrowColorRed);\n    var arrowHelperY = new THREE.ArrowHelper(arrowDirectionY, arrowOrigin, arrowLengthUnit, arrowColorGreen);\n    var arrowHelperZ = new THREE.ArrowHelper(arrowDirectionZ, arrowOrigin, arrowLengthUnit, arrowColorBlue);\n    \n    scene.add(arrowHelper);\n    scene.add(arrowHelperX);\n    scene.add(arrowHelperY);\n    scene.add(arrowHelperZ);\n    \n//CAMERA POSITION\n\n    camera.position.set(1.6,1.6,1.6); // Set position like this\n    camera.lookAt(new THREE.Vector3(0,0,0)); // Set look at coordinate like this\n    \n//TRAJECTORY\n\n    const ringgeometry = new THREE.RingGeometry( 36, 36.02, 90 ); \n    const ringmaterial = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n    const mesh = new THREE.Mesh( ringgeometry, ringmaterial );\n    mesh.position.set(-36, 0, 0);\n    scene.add( mesh );\n    \n//EARTH\n\n    var sphereGeometry = new THREE.SphereBufferGeometry(34, 32, 32);\n    var sphereMaterial = new THREE.MeshStandardMaterial({\n    color: 0x002654,          // Base color of the metal\n    metalness: 0,             // Set to 1 for a full metallic surface\n    roughness: 0.5           // Adjust the roughness to control reflection blur\n\n    });\n    //var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x021437 });\n    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n    sphere.position.set(-36, 0, 0); // Position the sphere along the -X axis\n    scene.add(sphere);\n    \n//SUN DIRECTIONAL LIGHT\n    \n    const directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );\n    directionalLight.position.set(15,5,5);\n    scene.add( directionalLight );\n    ambient = new THREE.AmbientLight(0xffffff, 0.2);\n    scene.add(ambient);\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n\n        // Obtenir les valeurs d'alpha et beta en radians\n        var alpha = alphaInput.value * Math.PI / 180;\n        var beta = betaInput.value * Math.PI / 180;\n        \n        // Calculate THETA\n        var theta = Math.PI / 2 - beta;\n\n        // Compute coordinates \n        var y = Math.sin(theta) * Math.cos(alpha);\n        var z = Math.sin(theta) * Math.sin(alpha);\n        var x = Math.cos(theta);\n\n        // Up dates direction of the arrow \n        arrowHelper.setDirection(new THREE.Vector3(x, y, z));\n        cube.lookAt(new THREE.Vector3(x, y, z))\n        renderer.render(scene, camera);\n    }\n\n    function updateOrientation(scope) {\n        animate();\n\n        var alpha = parseFloat(alphaInput.value);\n        var beta = parseFloat(betaInput.value);\n        var duration= durationInput;\n        // Send output (Alpha Beta)\n        scope.send({ payload: { alpha: alpha, beta: beta, duration: duration } });\n    }\n\n    animate();\n\n    document.getElementById(\"thrustButton\").addEventListener(\"click\", function() {\n        updateOrientation(scope);\n    });\n\n    });\n//window.onload = function() {\n//document.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    \n\n\n})(scope);\n//}); \n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 720,
        "wires": [
            [
                "03b0a2b8d17493a9",
                "07f5ec0f422fa51a",
                "649976e64d5c201f",
                "0727ec67d0063253",
                "367ef4390c7ab24f"
            ]
        ]
    },
    {
        "id": "a4a9a11440819b91",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2000,
        "y": 1200,
        "wires": []
    },
    {
        "id": "03b0a2b8d17493a9",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "ORientation",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 820,
        "wires": []
    },
    {
        "id": "ff33218d1b7bd97d",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3620,
        "y": 800,
        "wires": []
    },
    {
        "id": "9ca7aa9eaa4888d2",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 1140,
        "wires": []
    },
    {
        "id": "d54e2e4ee899c6f1",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "5a7810372552815e",
        "name": "BLUE1 Vehicule template",
        "order": 5,
        "width": 10,
        "height": "3",
        "format": "<style>\n  .form-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    margin-top: 35px;\n  }\n\n  .parameters-row {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 10px;\n    margin-top: 20px;\n  }\n\n  .column {\n    flex: 1;\n    padding: 0 10px;\n    max-width: 300px;\n    box-sizing: border-box;\n  }\n\n  .md-input-container {\n    width: 100%;\n    margin: 10px 0px;\n    color: #ffffff !important;\n  }\n\n  .md-input-container label {\n    color: #ffffff !important;\n    font-weight: bold !important;\n  }\n\n  /* Ensure the option text appears white */\n  md-select .md-select-value,\n  md-option {\n    color: #ffffff !important;\n  }\n\n  .button-container {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 0 10px;\n    box-sizing: border-box;\n  }\n\n  .button-container button {\n    width: 100%;\n    margin-top: 10px;\n  }\n\n  .button-container button:first-child {\n    margin-top: 20px;\n  }\n\n  .third-row {\n    margin-bottom: 30px;\n  }\n\n  .result-display {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    color: white;\n    margin: 15px 0;\n  }\n\n  .result-value {\n    font-weight: bold;\n    color: #ffcc00;\n  }\n</style>\n\n<!-- HTML form structure -->\n<form id=\"myForm2\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n  <div class=\"form-container\">\n    <!-- Maneuver type field (only one option: Impulse) -->\n    <div class=\"parameters-row\">\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_maneuver\">Maneuver Type</label>\n          <md-select ng-model=\"msg.payload.maneuverType\" id=\"select_20\" name=\"maneuverType\"\n            ng-change=\"send({payload: msg.payload})\">\n            <md-option value=\"Impulse\">Impulse</md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </div>\n\n    <!-- DV and Surface fields -->\n    <div class=\"parameters-row\">\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_dv\">DV (m/s)</label>\n          <input type=\"text\" id=\"form2_dv\" name=\"dv\" ng-model=\"msg.payload.dv\" ng-change=\"send({payload: msg.payload})\">\n        </md-input-container>\n      </div>\n\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_isp\">ISP (s)</label>\n          <input type=\"text\" id=\"form2_isp\" name=\"isp\" ng-model=\"msg.payload.isp\" ng-change=\"send({payload: msg.payload})\">\n        </md-input-container>\n      </div>\n    </div>\n\n\n  </div>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "5ff1d8529bbd3cdf",
                "5955fa977e1584a1",
                "9ca7aa9eaa4888d2",
                "782f37fd9b3ab440",
                "649976e64d5c201f"
            ]
        ]
    },
    {
        "id": "acb74cb65fe54054",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 1200,
        "wires": []
    },
    {
        "id": "eaecbee09afa4cf7",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e3dbeb329df47c0f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 1300,
        "wires": []
    },
    {
        "id": "b34bd82137d511de",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1480,
        "wires": []
    },
    {
        "id": "bc8a6e0c97bde7ea",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 1340,
        "wires": []
    },
    {
        "id": "a3147be2230ad75a",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 880,
        "wires": []
    },
    {
        "id": "5a0576c4f856da44",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 820,
        "wires": []
    },
    {
        "id": "d7b127ba994e38dc",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 1000,
        "wires": []
    },
    {
        "id": "fe6dc5caccab0721",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "g": "9c8f7f2b5249150e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4870,
        "y": 4760,
        "wires": []
    },
    {
        "id": "5ff1d8529bbd3cdf",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "5a7810372552815e",
        "name": "BLUE1 Vehicule Submit",
        "order": 8,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 20px;\n    }\n</style>\n\n<div class=\"button-container\">\n    <!-- Utilisation de ng-click pour envoyer msg.payload au clic -->\n    <button type=\"submit\" id=\"submitButtonb1\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">\n    Submit\n  </button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 900,
        "wires": [
            [
                "760b3d0a63c706a7",
                "a8afbea0bbfb8ddf"
            ]
        ]
    },
    {
        "id": "c4afa794e0b821e3",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "5a7810372552815e",
        "name": "Affichage Conso",
        "order": 6,
        "width": 10,
        "height": 2,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Affichage Ergols</title>\n   \n    <!-- Style pour masquer la barre de défilement tout en permettant le défilement -->\n    <style>\n        /* Conteneur principal pour masquer la barre de défilement */\n        .scroll-container {\n            height: 100vh;\n            overflow-y: scroll; /* Activer le défilement vertical */\n            scrollbar-width: none; /* Masquer la barre pour Firefox */\n        }\n\n        /* Masquer la barre de défilement pour Chrome, Safari, etc. */\n        .scroll-container::-webkit-scrollbar {\n            display: none; /* Masquer la barre de défilement */\n        }\n    </style>\n</head>\n\n<body>\n        <!-- Conteneur principal avec défilement masqué -->\n    <div class=\"scroll-container\">\n    <!-- Section pour afficher Ergols restants -->\n    <div class=\"result-display\">\n        Ergols disponibles avant maneuvre (kg) : <span class=\"form2_ergolRemaining result-value\">--</span>\n    </div>\n\n    <!-- Section pour afficher Consommation d'ergols -->\n    <div class=\"result-display\">\n        Consommation d'ergols (kg) : <span class=\"form2_ergolResult result-value\">--</span>\n    </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        (function(scope) {\n            // Utiliser $watch pour surveiller les changements dans le payload\n            scope.$watch('msg.payload', function(payload) {\n                console.log(\"Payload reçu :\", payload);  // Pour vérifier si le payload est bien reçu\n                if (payload) {\n                     // Définissez ici la valeur des ergols restants (valeur statique à adapter selon le besoin)\n                    let ergolsRestants = payload.path_14[2]; // Exemple de valeur statique (à remplacer par une donnée dynamique si nécessaire)\n\n                    // Mise à jour de la valeur \"Ergols restants\"\n                    let formattedErgolsRestants = ergolsRestants.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    let remainingElements = document.getElementsByClassName(\"form2_ergolRemaining\");\n                    for (let i = 0; i < remainingElements.length; i++) {\n                        remainingElements[i].textContent = formattedErgolsRestants + \" kg\";\n            }\n                    let consommation = payload.path_15[0].consommationErgols;\n                    \n                    // Formattage en notation française\n                    let formattedConsommation = consommation.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    \n                    // Mettre à jour toutes les instances de consommation d'ergols\n                    let elements = document.getElementsByClassName(\"form2_ergolResult\");\n                    for (let i = 0; i < elements.length; i++) {\n                        elements[i].textContent = formattedConsommation + \" kg\";\n                    }\n                } else {\n                    console.log(\"Payload non valide ou consommationErgols manquant\");\n                }\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 480,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "782f37fd9b3ab440",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5955fa977e1584a1",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1240,
        "wires": [
            [
                "27b806628752dc84",
                "43e06e6430e5d534"
            ]
        ]
    },
    {
        "id": "3b4c74d5a64c8561",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && rm -rf Ergols.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 340,
        "y": 660,
        "wires": [
            [],
            [
                "bdd7731940db00c9"
            ],
            [
                "37f9cff3ace6a64f"
            ]
        ]
    },
    {
        "id": "27b806628752dc84",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_11\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 720,
        "y": 1300,
        "wires": [
            [
                "0bf61d4662aac1e7",
                "88df0e37cbbb6986"
            ],
            []
        ]
    },
    {
        "id": "43e06e6430e5d534",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1360,
        "wires": []
    },
    {
        "id": "37f9cff3ace6a64f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 780,
        "wires": []
    },
    {
        "id": "bdd7731940db00c9",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 720,
        "wires": []
    },
    {
        "id": "0bf61d4662aac1e7",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Ergols.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar path11 = (msg.paths && msg.paths.path_11) ? msg.paths.path_11 : {};\nvar pathArray2 = (msg.paths && msg.paths.path_13) ? msg.paths.path_13 : [0.0,0.0,0.0];\n\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray2[0] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray2[1] || 0; // Troisième élément ou 0 si non défini\nvar DV = path11.dv || 0; // Quatrième élément ou 0 si non défini\nvar isp = path11.isp|| 0;// Premier élément ou 0 si non défini\nvar maneuvertype = path11.maneuverType  || \"Unknown\"; // Deuxième élément ou 0 si non défini\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"DryMass, ErgolMass, DV, ManeuverType, ISP\",\n    drymass, ergolmass, DV, maneuvertype, isp\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1420,
        "wires": [
            [
                "24dee9194e4ff96e",
                "16935d52d2ae726f",
                "9fd8b10d532938ed"
            ]
        ]
    },
    {
        "id": "9fd8b10d532938ed",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Ergols.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1500,
        "wires": [
            [
                "58f0a5bb32d77f30",
                "abc2342d9175468f"
            ]
        ]
    },
    {
        "id": "58f0a5bb32d77f30",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1050,
        "y": 1680,
        "wires": [
            [
                "71f9445ac6c09782",
                "0cc9a810b5cff1c6"
            ]
        ]
    },
    {
        "id": "abc2342d9175468f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 1500,
        "wires": []
    },
    {
        "id": "0cc9a810b5cff1c6",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1640,
        "wires": []
    },
    {
        "id": "71f9445ac6c09782",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1370,
        "y": 1680,
        "wires": [
            [
                "2359edc8d8843601"
            ]
        ]
    },
    {
        "id": "2359edc8d8843601",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1570,
        "y": 1680,
        "wires": [
            [
                "ade840aefa3ddf13"
            ]
        ]
    },
    {
        "id": "ade840aefa3ddf13",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue1 -DcommandParameter=consommationErgols -jar ImpulseManeuver.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 1990,
        "y": 1680,
        "wires": [
            [
                "74cb7ad77c59a8bd",
                "791ebfa23f821e06"
            ],
            [
                "791ebfa23f821e06"
            ],
            []
        ]
    },
    {
        "id": "74cb7ad77c59a8bd",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ConsommationErgols.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2270,
        "y": 1660,
        "wires": [
            [
                "38e7a44c78cc5a8c"
            ]
        ]
    },
    {
        "id": "38e7a44c78cc5a8c",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2450,
        "y": 1660,
        "wires": [
            [
                "bf1bf5c44c2e97bd"
            ]
        ]
    },
    {
        "id": "bf1bf5c44c2e97bd",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2610,
        "y": 1660,
        "wires": [
            [
                "b2370d4a7ad9c208",
                "369c291ff336e706",
                "12c0b6867b53fa8c"
            ]
        ]
    },
    {
        "id": "369c291ff336e706",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "ERGOLS TEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2840,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b2370d4a7ad9c208",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.consommationErgols = parseFloat(msg.payload[n-1])\n\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2860,
        "y": 1660,
        "wires": [
            [
                "6b6cf679df8a03de",
                "fc5369f8625c814f"
            ]
        ]
    },
    {
        "id": "6b6cf679df8a03de",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 1600,
        "wires": []
    },
    {
        "id": "fc5369f8625c814f",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Ergols out",
        "mode": "link",
        "links": [
            "4822cbd95d742191"
        ],
        "x": 3095,
        "y": 1680,
        "wires": []
    },
    {
        "id": "45e7abc0bcbba13e",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 1660,
        "wires": []
    },
    {
        "id": "4822cbd95d742191",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "Ergols in",
        "links": [
            "fc5369f8625c814f"
        ],
        "x": 115,
        "y": 1660,
        "wires": [
            [
                "45e7abc0bcbba13e",
                "7272cf23694793ee",
                "c19758b625aa61bc",
                "cb2f7bdbc8771077"
            ]
        ]
    },
    {
        "id": "5fb6c6aaa728004e",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4410,
        "y": 520,
        "wires": []
    },
    {
        "id": "f0fa543d1e256207",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "ergols",
        "func": "if (msg.payload && msg.payload[0]) {\n    // Assurez-vous que les propriétés existent et ne sont pas null avant de les insérer dans le tableau\n    const dry_mass = msg.payload[0].dry_mass !== undefined ? msg.payload[0].dry_mass : 0;\n    const ergol_mass = msg.payload[0].ergol_mass !== undefined ? msg.payload[0].ergol_mass : 0;\n    const ergol_consumption = msg.payload[0].ergol_consumption !== null && msg.payload[0].ergol_consumption !== undefined ? msg.payload[0].ergol_consumption : 0.0;\n\n    // Créer un tableau avec les valeurs\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"Le payload ne contient pas les données attendues.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1240,
        "wires": [
            [
                "cdc3a147c97786e6"
            ]
        ]
    },
    {
        "id": "cdc3a147c97786e6",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1270,
        "y": 1260,
        "wires": [
            [
                "e1ead6d1c194d251",
                "cc9d9ce16ff5f501"
            ]
        ]
    },
    {
        "id": "e1ead6d1c194d251",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "// Découper le CSV en lignes\nlet csvData = msg.payload.split('\\n');\n\n// Vérifier si la deuxième ligne existe\nif (csvData.length > 1) {\n    // Récupérer la deuxième ligne (index 1)\n    let secondLine = csvData[1].trim();\n\n    // Découper la deuxième ligne par espaces ou tabulations\n    let values = secondLine.split(/\\s+/); // Utilisation de \\s+ pour capturer les espaces multiples\n\n    // Convertir les valeurs en nombres (si applicable)\n    let dry_mass = parseFloat(values[0]) || 0;\n    let ergol_mass = parseFloat(values[1]) || 0;\n    let ergol_consumption = parseFloat(values[2]) || 0;\n\n    // Placer les valeurs dans un tableau\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"La deuxième ligne n'existe pas.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1300,
        "wires": [
            [
                "fc827226680f589d"
            ]
        ]
    },
    {
        "id": "fc827226680f589d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1380,
        "wires": [
            [
                "27b806628752dc84",
                "c49d5ab833b481e0",
                "6982ab15f50d5e20"
            ]
        ]
    },
    {
        "id": "c49d5ab833b481e0",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "PATH 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1360,
        "wires": []
    },
    {
        "id": "affa3fc7a9844d11",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cc9d9ce16ff5f501",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 1420,
        "wires": []
    },
    {
        "id": "5368d7cb85243003",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4890,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8d458acac06751d5",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "In maneuvre prédéfinie b1",
        "links": [
            "afcc0a1cac7ab0bd",
            "c697e7932b33da91"
        ],
        "x": 4645,
        "y": 700,
        "wires": [
            [
                "8af986b81f3bba2d",
                "67834c12be069b8c",
                "4267bfd33deaa4f7"
            ]
        ]
    },
    {
        "id": "7e2bd40709ff1c42",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "ERGOLS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1480,
        "wires": []
    },
    {
        "id": "7272cf23694793ee",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_15",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_15",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1580,
        "wires": [
            [
                "193b726aa18e8170",
                "24dee9194e4ff96e"
            ]
        ]
    },
    {
        "id": "24dee9194e4ff96e",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1480,
        "wires": [
            [
                "5f5b626b4e794eba",
                "193b726aa18e8170"
            ]
        ]
    },
    {
        "id": "193b726aa18e8170",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_14\",\"path_15\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 240,
        "y": 1380,
        "wires": [
            [
                "5633d915352ac7b0"
            ],
            []
        ]
    },
    {
        "id": "5f5b626b4e794eba",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 1580,
        "wires": []
    },
    {
        "id": "5633d915352ac7b0",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "// Suppose que msg.payload contient déjà des informations\nlet paths = msg.paths; // Supposons que les chemins sont dans msg.paths\n\n// Ajouter les informations de paths dans payload\nmsg.payload = paths;\n\n// Retourner le message avec paths inclus dans payload\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1300,
        "wires": [
            [
                "7e2bd40709ff1c42",
                "c4afa794e0b821e3"
            ]
        ]
    },
    {
        "id": "20b34b494b7565dc",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "Ergol Mass Update",
        "links": [
            "e6b1abc87d5a903a",
            "6753438f0a5b99cb",
            "07d8564e89b73a2a",
            "b1beae978b71e742",
            "6582a47df26b709c",
            "ed11b52c0d40c469"
        ],
        "x": 165,
        "y": 980,
        "wires": [
            [
                "30273ddc32aa7fef",
                "d5a68d249b820637"
            ]
        ]
    },
    {
        "id": "30273ddc32aa7fef",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 290,
        "y": 1020,
        "wires": [
            [
                "0bf61d4662aac1e7",
                "5955fa977e1584a1"
            ]
        ]
    },
    {
        "id": "16935d52d2ae726f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1500,
        "wires": []
    },
    {
        "id": "88df0e37cbbb6986",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "PATH DV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1260,
        "wires": []
    },
    {
        "id": "d5a68d249b820637",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 290,
        "y": 960,
        "wires": [
            [
                "649976e64d5c201f"
            ]
        ]
    },
    {
        "id": "c19758b625aa61bc",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && rm -rf ConsommationErgols.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 1720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "12c0b6867b53fa8c",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_16",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_16",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2770,
        "y": 1600,
        "wires": [
            [
                "9f1576fa31dadf4a"
            ]
        ]
    },
    {
        "id": "9f1576fa31dadf4a",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Wait result",
        "mode": "link",
        "links": [
            "59c0a8fda71dd25c"
        ],
        "x": 2905,
        "y": 1600,
        "wires": []
    },
    {
        "id": "59c0a8fda71dd25c",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "wait result",
        "links": [
            "9f1576fa31dadf4a"
        ],
        "x": 625,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "07f5ec0f422fa51a",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 660,
        "wires": []
    },
    {
        "id": "ed1e8f84b626b010",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "PATH 1 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3040,
        "y": 980,
        "wires": []
    },
    {
        "id": "dccd5d93e441b55c",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "PATH 2 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3240,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9d157c44361e9d20",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4730,
        "y": 800,
        "wires": []
    },
    {
        "id": "760b3d0a63c706a7",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup2', topic: msg.payload };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 840,
        "wires": [
            [
                "130148a01655b183",
                "0ae3a5a6ba667d7a"
            ]
        ]
    },
    {
        "id": "2c6eb7f8e345fc06",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 900,
        "wires": [
            [
                "649976e64d5c201f",
                "12d538bb7ebae102",
                "9d50485913894097",
                "9b6bf07e831005fe"
            ]
        ]
    },
    {
        "id": "8af986b81f3bba2d",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cp blue1-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4580,
        "y": 360,
        "wires": [
            [
                "22967eb441789dbe"
            ],
            [
                "22967eb441789dbe"
            ],
            []
        ]
    },
    {
        "id": "22967eb441789dbe",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST_SAVE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4670,
        "y": 440,
        "wires": []
    },
    {
        "id": "67834c12be069b8c",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST AFTER MANEUVER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4780,
        "y": 520,
        "wires": []
    },
    {
        "id": "4267bfd33deaa4f7",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "// Define helper functions outside the main function for reuse\nfunction formatNumber(value) {\n    if (typeof value === 'string') {\n        // Remove leading zeros and convert to float\n        let num = parseFloat(value);\n        // If parsing fails, return the original value\n        if (isNaN(num)) return value;\n        return num.toFixed(3);\n    } else if (typeof value === 'number') {\n        return value.toFixed(3);\n    }\n    return value; // Return as is if not string or number\n}\n\nfunction formatEccentricity(value) {\n    if (typeof value === 'string') {\n        // Parse the string as an integer\n        let intVal = parseInt(value, 10);\n        if (isNaN(intVal)) return value;\n        // Multiply by 1e-7 and format in exponential notation with three decimals\n        return (intVal * 1e-7).toExponential(3).toUpperCase();\n    } else if (typeof value === 'number') {\n        return (value * 1e-7).toExponential(3).toUpperCase();\n    }\n    return value; // Return as is if not string or number\n}\n\n// Main function to process the message\nfunction processMessage(msg) {\n    // Check if msg.payload exists\n    if (!msg.payload || !Array.isArray(msg.payload)) {\n        node.error(\"Invalid payload structure. Expected an array.\", msg);\n        return msg;\n    }\n    \n    // Create a new array to store the formatted results\n    let newPayload = [];\n    \n    // Process each item in the payload array\n    msg.payload.forEach((item, index) => {\n        if (item && typeof item === 'object') {\n            // Handle the case where the target fields are in item.payload\n            if (typeof item.payload === 'object' && item.payload !== null && item.payload.version) {\n                let formattedPayload = formatItem(item.payload);\n                // Create a new object with the formatted payload\n                newPayload[index] = formattedPayload;\n            } \n            // Handle the case where the target fields are directly in the item\n            else if (item.version) {\n                newPayload[index] = formatItem(item);\n            }\n            else {\n                // If no version field is found, preserve the original item\n                newPayload[index] = item;\n            }\n        } else {\n            // If the item is not an object, preserve it as is\n            newPayload[index] = item;\n        }\n    });\n    \n    // Replace the original payload with the formatted one\n    newPayload[1] = \"\";\n    msg.payload = newPayload;\n    \n    return msg;\n}\n\n// Function to format fields in an item and return a new formatted object\nfunction formatItem(item) {\n    // Create a new object to avoid modifying the original\n    let formattedItem = {...item};\n    \n    // Format 'incli' if it exists\n    if (formattedItem.hasOwnProperty('incli')) {\n        formattedItem.incli = formatNumber(formattedItem.incli);\n    }\n    // Format 'raan' if it exists\n    if (formattedItem.hasOwnProperty('raan')) {\n        formattedItem.raan = formatNumber(formattedItem.raan);\n    }\n    // Format 'ecc' if it exists\n    if (formattedItem.hasOwnProperty('ecc')) {\n        formattedItem.ecc = formatEccentricity(formattedItem.ecc);\n    }\n    // Format 'aop' if it exists\n    if (formattedItem.hasOwnProperty('aop')) {\n        formattedItem.aop = formatNumber(formattedItem.aop);\n    }\n    // Format 'meana' if it exists\n    if (formattedItem.hasOwnProperty('meana')) {\n        formattedItem.meana = formatNumber(formattedItem.meana);\n    }\n    // Format 'mean' if it exists\n    if (formattedItem.hasOwnProperty('mean')) {\n        formattedItem.mean = formatNumber(formattedItem.mean);\n    }\n    // Format 'dry_mass' if it exists\n    if (formattedItem.hasOwnProperty('dry_mass')) {\n        formattedItem.dry_mass = formatNumber(formattedItem.dry_mass);\n    }\n    // Format 'ergol_mass' if it exists\n    if (formattedItem.hasOwnProperty('ergol_mass')) {\n        formattedItem.ergol_mass = formatNumber(formattedItem.ergol_mass);\n    }\n    // Format 'ergol_consumption' if it exists\n    if (formattedItem.hasOwnProperty('ergol_consumption')) {\n        formattedItem.ergol_consumption = formatNumber(formattedItem.ergol_consumption);\n    }\n    \n    return formattedItem;\n}\n\n// Process the incoming message\nreturn processMessage(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4780,
        "y": 720,
        "wires": [
            [
                "8689ab60c352e350"
            ]
        ]
    },
    {
        "id": "e50475bece7fb460",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "// Check if msg.payload exists and is an array with at least two elements\nif (msg.payload && Array.isArray(msg.payload) && msg.payload.length >= 2) {\n\n    // Define a helper function to format numbers:\n    // Removes leading zeros and formats to two decimal places\n    function formatNumber(value) {\n        if (typeof value === 'string') {\n            // Remove leading zeros and convert to float\n            let num = parseFloat(value);\n            // If parsing fails, return the original value\n            if (isNaN(num)) return value;\n            return num.toFixed(3);\n        } else if (typeof value === 'number') {\n            return value.toFixed(3);\n        }\n        return value; // Return as is if not string or number\n    }\n\n    // Define a helper function to format eccentricity to scientific notation\n    function formatEccentricity(value) {\n        if (typeof value === 'string') {\n            // Parse the string as an integer\n            let intVal = parseInt(value, 10);\n            if (isNaN(intVal)) return value;\n            // Multiply by 1e-7 and format in exponential notation with two decimals\n            return (intVal * 1e-7).toExponential(3).toUpperCase();\n        } else if (typeof value === 'number') {\n            return (value * 1e-7).toExponential(3).toUpperCase();\n        }\n        return value; // Return as is if not string or number\n    }\n\n    // Iterate over each object in the payload array\n    msg.payload.forEach((item, index) => {\n        // Check if the item has the 'version' field\n        if (item.version) {\n            // Format 'incli' if it exists\n            if (item.hasOwnProperty('incli')) {\n                item.incli = formatNumber(item.incli);\n            }\n\n            // Format 'raan' if it exists\n            if (item.hasOwnProperty('raan')) {\n                item.raan = formatNumber(item.raan);\n            }\n\n            // Format 'ecc' if it exists\n            if (item.hasOwnProperty('ecc')) {\n                item.ecc = formatEccentricity(item.ecc);\n            }\n\n            // Format 'aop' if it exists\n            if (item.hasOwnProperty('aop')) {\n                item.aop = formatNumber(item.aop);\n            }\n\n            // Format 'meana' if it exists\n            if (item.hasOwnProperty('meana')) {\n                item.meana = formatNumber(item.meana);\n            }\n\n            // Format 'mean' if it exists\n            if (item.hasOwnProperty('mean')) {\n                item.mean = formatNumber(item.mean);\n            }\n\n            // Format 'dry_mass' if it exists\n            if (item.hasOwnProperty('dry_mass')) {\n                item.dry_mass = formatNumber(item.dry_mass);\n            }\n\n            // Format 'ergol_mass' if it exists\n            if (item.hasOwnProperty('ergol_mass')) {\n                item.ergol_mass = formatNumber(item.ergol_mass);\n            }\n\n            // Optionally, format 'ergol_consumption' if it exists\n            if (item.hasOwnProperty('ergol_consumption')) {\n                // Assuming you want to format it to two decimal places\n                if (typeof item.ergol_consumption === 'string' || typeof item.ergol_consumption === 'number') {\n                    item.ergol_consumption = formatNumber(item.ergol_consumption);\n                }\n            }\n\n            // Add any additional fields you wish to format here\n        }\n    });\n\n    // After formatting, ensure that the payload array still has two elements\n    // (This step is optional since we're modifying the existing objects)\n    if (msg.payload.length !== 2) {\n        node.warn(\"Payload array does not contain exactly two elements.\");\n    }\n\n} else {\n    // Handle cases where payload is not as expected\n    node.error(\"Invalid payload structure. Expected an array with at least two elements.\", msg);\n}\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4880,
        "y": 780,
        "wires": [
            [
                "8689ab60c352e350"
            ]
        ]
    },
    {
        "id": "12d538bb7ebae102",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST SWITCH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 980,
        "wires": []
    },
    {
        "id": "9d50485913894097",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=msg.topic;\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 840,
        "wires": [
            [
                "8ca023c23b2317fa",
                "78ed0576c46a296c",
                "3b0bfbce9e6266a7"
            ]
        ]
    },
    {
        "id": "8ca023c23b2317fa",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST CONVERT PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 820,
        "wires": []
    },
    {
        "id": "130148a01655b183",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST TRIGGER MANUAL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 740,
        "wires": []
    },
    {
        "id": "a8afbea0bbfb8ddf",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 940,
        "wires": []
    },
    {
        "id": "e67ac97fa8402138",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "60bab848a6e23861",
            "0a415400da9b3f54",
            "f83637b951242d2d",
            "4f0105eee79139d2",
            "eed0fd174995d5b0",
            "655ad19276a8f599",
            "53cadd4ff784c659",
            "d88388a251a33878",
            "79fb1054f6de18d0",
            "8e4842d5d9999187",
            "85667f2df171a6b7",
            "4ed49ade6926a5ea"
        ],
        "x": 4445,
        "y": 940,
        "wires": [
            [
                "9965158d48792881",
                "c6ed546faf7a3401"
            ]
        ]
    },
    {
        "id": "9965158d48792881",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "msg.payload[0] = \"\";\n\n// Ensure the second payload element is an empty string as per your original logic\nmsg.payload[1] = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4620,
        "y": 880,
        "wires": [
            [
                "8689ab60c352e350",
                "e9fba9ec66080e74"
            ]
        ]
    },
    {
        "id": "e9fba9ec66080e74",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4630,
        "y": 940,
        "wires": []
    },
    {
        "id": "c6ed546faf7a3401",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4490,
        "y": 800,
        "wires": []
    },
    {
        "id": "15ce479d884995ab",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Keeping all the original styles */\n    md-card[node-id=\"15ce479d884995ab\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n\n    /* Modal Overlay with improved transitions */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    /* Modal Content with transform animation */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n\n    /* Red Rectangle Inside the Modal Content */\n    .red-rectangle {\n      width: 100px;\n      height: 50px;\n      background-color: red;\n      margin: 20px auto;\n    }\n\n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n\n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n\n    /* Oui Button */\n    #ouiBtn2 {\n      background-color: #4CAF50;\n    }\n\n    #ouiBtn2:hover {\n      background-color: #45a049;\n    }\n\n    /* Non Button */\n    #nonBtn2 {\n      background-color: #f44336;\n    }\n\n    #nonBtn2:hover {\n      background-color: #da190b;\n    }\n\n    /* Keeping all the form styles */\n    .hidden { display: none; }\n    \n    .scrollable-container {\n      max-height: 80vh;\n      overflow-y: auto;\n      padding-right: 10px;\n      scrollbar-width: none;\n      -ms-overflow-style: none;\n    }\n    \n    .scrollable-container::-webkit-scrollbar {\n      display: none;\n    }\n\n    .form-group {\n      margin-bottom: 20px;\n    }\n\n    .form-group label {\n      display: block;\n      margin-bottom: 10px;\n      font-weight: normal;\n      color: #fff;\n      padding-left: 25px;\n    }\n\n    .form-group input,\n    .form-group select {\n      width: 90%;\n      padding: 8px 0;\n      box-sizing: border-box;\n      border: none;\n      background-color: #212c31;\n      color: #fff;\n      border-bottom: 2px solid #666;\n      margin: 0 auto;\n      display: block;\n    }\n\n    .form-group input:focus,\n    .form-group select:focus {\n      outline: none;\n      border-bottom: 2px solid #888;\n    }\n\n    .form-group select option {\n      background-color: #212c31;\n      color: #fff;\n    }\n\n    #formTitle {\n      font-size: 18px;\n      font-weight: normal;\n      color: #fff;\n      margin-top: 25px;\n      margin-bottom: 30px;\n      margin-left: 25px;\n    }\n\n    #inputField {\n      margin-top: 20px;\n    }\n\n    .spacer {\n      height: 30px;\n    }\n\n    #submitButton {\n      margin-top: 20px;\n      margin-left: 25px;\n      padding: 10px 20px;\n      font-size: 16px;\n      font-weight: normal;\n      color: #fff;\n      background-color: rgb(0, 86, 122);\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: background-color 0.3s, transform 0.2s;\n    }\n\n    #submitButton:hover {\n      background-color: rgb(0, 106, 152);\n    }\n\n    #submitButton:active {\n      background-color: rgb(0, 66, 92);\n      transform: scale(0.98);\n    }\n\n    #lastSubmitted {\n      margin-top: 50px;\n      padding: 15px;\n      border: 1px solid #444;\n      border-radius: 4px;\n      background-color: #212c31;\n      color: #fff;\n    }\n\n    #lastSubmitted h3 {\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    #lastSubmitted ul {\n      list-style-type: disc;\n      padding-left: 20px;\n    }\n\n    #lastSubmitted li {\n      margin-bottom: 5px;\n      color: #ddd;\n    }\n\n    #lastSubmitted p {\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    #lastSubmitted ul li strong {\n      color: #fff;\n    }\n  </style>\n</head>\n<body>\n  <md-card node-id=\"15ce479d884995ab\">\n  </md-card>\n\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n      <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Cette action déclenchera une manoeuvre manuelle à partir des paramètres entrés.<br><br>\n        Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn2\">Oui</button>\n        <button id=\"nonBtn2\">Non</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal2');\n      var originalMsg = null;\n\n      function showModal(msg) {\n        originalMsg = msg;\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n\n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n            originalMsg = null;\n          }\n        });\n      }\n\n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState2') {\n          if (event.newValue === 'show') {\n            showModal(JSON.parse(localStorage.getItem('modalMsg2')));\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n\n      // Watch for incoming messages from Node-RED\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState2', 'show');\n          localStorage.setItem('modalMsg2', JSON.stringify(msg));\n          showModal(msg);\n        }\n      });\n\n      // Handle \"Oui\" button click\n      document.getElementById('ouiBtn2').addEventListener('click', function() {\n        var responseMsg = originalMsg ? \n          { payload: 'oui', topic: originalMsg.topic } : \n          { payload: 'oui' };\n        scope.send(responseMsg);\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n\n      // Handle \"Non\" button click\n      document.getElementById('nonBtn2').addEventListener('click', function() {\n        var responseMsg = originalMsg ? \n          { payload: 'non', topic: originalMsg.topic } : \n          { payload: 'non' };\n        scope.send(responseMsg);\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 360,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "020e2f471936b565",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "d": true,
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n  /* CSS style for labels */\n  #select_20 .md-select-value span,\n  #select_20 .md-text,\n  #select_25 .md-select-value span,\n  #select_25 .md-text {\n    color: #ffffff !important;\n  }\n</style>\n\n<md-input-container>\n  <label for=\"maneuver\">Maneuver</label>\n  <md-select ng-model=\"maneuver\" id=\"select_20\">\n    <md-option value=\"Impulse\">Impulse</md-option>\n    <md-option value=\"Continuous\">Continuous</md-option>\n  </md-select>\n</md-input-container>\n\n<md-input-container>\n  <label for=\"integrator\">Integrator</label>\n  <md-select ng-model=\"integrator\" style=\"color: #ffffff !important;\" id=\"select_25\">\n    <md-option value=\"RK4\">RungeKutta4</md-option>\n    <md-option value=\"DP\">DormandPrince</md-option>\n  </md-select>\n</md-input-container>\n\n<br>\n\n<button ng-click=\"send({payload: {maneuverType: maneuver, integrator: integrator}})\" class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" id=\"thrustButton\">Submit</button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "75da10b16042b061",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": ": > /app/maneuver-manager/Result.txt && : > /app/maneuver-manager/PostManeuverDate.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3160,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bc8901639fdf19be",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate.txt",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3450,
        "y": 1520,
        "wires": [
            [
                "3715cbf4f9fc327f"
            ],
            [],
            []
        ]
    },
    {
        "id": "3715cbf4f9fc327f",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3430,
        "y": 1420,
        "wires": [
            [
                "e0b0453ce3603559"
            ]
        ]
    },
    {
        "id": "e0b0453ce3603559",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_11\", \"path_12\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3660,
        "y": 1420,
        "wires": [
            [
                "c27564e4408d054b"
            ],
            []
        ]
    },
    {
        "id": "c27564e4408d054b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "var max = 6;\nvar random = Math.floor(Math.random() * max);\n\n// Use the message from path_12 for error analysis\nvar errorPayload = msg.paths && msg.paths.path_12 ? msg.paths.path_12 : \"\";\n\nif (errorPayload.includes(\"hyperbolic orbits cannot be handled\")) {\n    if(random == 0){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";\n    }\n    else if(random == 1){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";\n    }\n    else if(random == 2){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Are you deserting?\";\n    }\n    else if(random == 3){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. You aren't qualified for interplanetary flight!\";\n    }\n    else {\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. No French assets in this direction!\";\n    }\n} \nelse if (errorPayload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (errorPayload.includes(\"ERGOL\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (errorPayload.includes(\"Initial date must\")) {\n    msg.errorMessage = \"**Temporal error :** Maneuver order is anterior to last apside reached !\";\nmsg.errorMessage += \" | Last apside: \" + msg.paths.path_11;\n    \n} \nelse if (errorPayload.includes(\"Eccentricity\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver !\";\n} \nelse if (errorPayload.includes(\"parabolic or hyperbolic orbit\")) {\n    msg.errorMessage = \"**Incorrect Delta-V:** The maneuver results in a hyperbolic orbit !\";\n} \nelse {\n    msg.errorMessage = \"Maneuver aborted !\";\n}\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3825,
        "y": 1428,
        "wires": [
            [
                "5138db32bb673efd",
                "f109a18a53ac740b"
            ]
        ]
    },
    {
        "id": "5138db32bb673efd",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3970,
        "y": 1440,
        "wires": []
    },
    {
        "id": "29bfb4186607f927",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3770,
        "y": 1360,
        "wires": [
            [
                "e0b0453ce3603559"
            ]
        ]
    },
    {
        "id": "f109a18a53ac740b",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3945,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0ae3a5a6ba667d7a",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "36426cd5b9b3bd96",
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "4b07af770e19997b",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f"
        ],
        "x": 65,
        "y": 800,
        "wires": []
    },
    {
        "id": "6ea07daab434c5f5",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "39dfb7984ba6d244",
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "3216b872aa5f404a",
            "b69bea8abb1b280f",
            "b8e26b39226639eb"
        ],
        "x": 355,
        "y": 860,
        "wires": [
            [
                "2c6eb7f8e345fc06"
            ]
        ]
    },
    {
        "id": "9b6bf07e831005fe",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST POST ACCEPT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 800,
        "wires": []
    },
    {
        "id": "ec6f72b607943c05",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "// This example sends a message to trigger a reload\nmsg.payload = { reload: true };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3280,
        "y": 760,
        "wires": [
            [
                "33d139aabb3bc80f",
                "2c605ddbdf8aaab6"
            ]
        ]
    },
    {
        "id": "33d139aabb3bc80f",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3480,
        "y": 880,
        "wires": [
            [
                "a7994dc234594159"
            ]
        ]
    },
    {
        "id": "a7994dc234594159",
        "type": "websocket out",
        "z": "a9c7c6499fb06192",
        "name": "reload",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 3550,
        "y": 940,
        "wires": []
    },
    {
        "id": "344c02222cab8a8e",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3140,
        "y": 860,
        "wires": [
            [
                "ec6f72b607943c05"
            ]
        ]
    },
    {
        "id": "3dafcdba28b0d46e",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager && ./clear.sh blue1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3280,
        "y": 1160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ccd09cec286b29ef",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4590,
        "y": 1020,
        "wires": [
            [
                "45ebb2a368cee875"
            ]
        ]
    },
    {
        "id": "8d2d4cdcdc1b0c21",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "4261fdb86c0dcab9"
        ],
        "x": 2175,
        "y": 1120,
        "wires": [
            [
                "fbc4f0f2dc7864b2",
                "e0e75c23364452bd"
            ]
        ]
    },
    {
        "id": "81a75b8dd83d68d9",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_10\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1",
        "exactOrder": "true",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2560,
        "y": 1140,
        "wires": [
            [
                "c53ddc43e6d33bdb",
                "11a9f8c0a2748862"
            ],
            []
        ]
    },
    {
        "id": "3b0bfbce9e6266a7",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 780,
        "wires": [
            [
                "4261fdb86c0dcab9"
            ]
        ]
    },
    {
        "id": "4261fdb86c0dcab9",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Submit Manoeuver",
        "mode": "link",
        "links": [
            "8d2d4cdcdc1b0c21"
        ],
        "x": 899,
        "y": 777,
        "wires": []
    },
    {
        "id": "2c605ddbdf8aaab6",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3430,
        "y": 700,
        "wires": []
    },
    {
        "id": "c53ddc43e6d33bdb",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2390,
        "y": 1060,
        "wires": [
            [
                "6778960709317dec"
            ]
        ]
    },
    {
        "id": "6778960709317dec",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 1000,
        "wires": [
            [
                "11a9f8c0a2748862"
            ]
        ]
    },
    {
        "id": "55513a8e25fdd0b8",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager && ./remove_two_lines.sh blue1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4720,
        "y": 1360,
        "wires": [
            [
                "d74cc8aee2977a9d"
            ],
            [],
            []
        ]
    },
    {
        "id": "8b136dbdc6b60ec6",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AffichageLastManeuverDate",
        "mode": "link",
        "links": [
            "ba46eb9b87200062"
        ],
        "x": 4635,
        "y": 1060,
        "wires": []
    },
    {
        "id": "8d4e39130316ea8a",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4380,
        "y": 1420,
        "wires": [
            [
                "55513a8e25fdd0b8"
            ]
        ]
    },
    {
        "id": "ca86e0b5aa1a8d2f",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "msg.payload = { \n    isp: '',\n    dv: '' \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1180,
        "wires": [
            [
                "d54e2e4ee899c6f1"
            ]
        ]
    },
    {
        "id": "9b9556cf26bc732b",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "reset fields",
        "mode": "link",
        "links": [
            "36e45596fc8e97eb"
        ],
        "x": 3745,
        "y": 1060,
        "wires": []
    },
    {
        "id": "36e45596fc8e97eb",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "9b9556cf26bc732b"
        ],
        "x": 175,
        "y": 1120,
        "wires": [
            [
                "ca86e0b5aa1a8d2f"
            ]
        ]
    },
    {
        "id": "9e08147f903bac3b",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "SAVE TRIGGER",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 3535,
        "y": 1020,
        "wires": []
    },
    {
        "id": "53b64fcd0162168d",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "b2 timesettermaneuver IN",
        "links": [
            "37ba85f0b8ed5e1b",
            "8e8f8899a93adf9a"
        ],
        "x": 605,
        "y": 2700,
        "wires": [
            [
                "3cd1d84dc0c52a00",
                "f81857a99a75e35e",
                "3cf944068aa20bad"
            ]
        ]
    },
    {
        "id": "3cd1d84dc0c52a00",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2700,
        "wires": [
            [
                "75158eecf10d8890",
                "44520fc1932ae98f"
            ]
        ]
    },
    {
        "id": "121713b0d557813b",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 2600,
        "wires": [
            [
                "75158eecf10d8890",
                "ce0ae76a98b60ac4"
            ]
        ]
    },
    {
        "id": "75158eecf10d8890",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1090,
        "y": 2680,
        "wires": [
            [
                "90841241ae4d2bbd"
            ],
            []
        ]
    },
    {
        "id": "90841241ae4d2bbd",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 2680,
        "wires": [
            [
                "4917a59d8888f5f8",
                "16137a6c1fe49e7e",
                "f4fb69243f37a23e"
            ]
        ]
    },
    {
        "id": "c845115de107fcc0",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 2580,
        "wires": [
            [
                "48c339a1bb33fc65"
            ]
        ]
    },
    {
        "id": "48c339a1bb33fc65",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], msg.paths.path_6[0].dx, msg.paths.path_6[0].dy, msg.paths.path_6[0].dz, msg.paths.path_6[0].dura]; 0\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 2580,
        "wires": [
            [
                "d58c70fd39649c7c"
            ]
        ]
    },
    {
        "id": "70bf8118d2ac4534",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 2460,
        "wires": [
            [
                "e5f3cbb7bcc156f0",
                "a2e96e3facd7362b"
            ]
        ]
    },
    {
        "id": "4917a59d8888f5f8",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 2620,
        "wires": [
            [
                "e5f3cbb7bcc156f0",
                "a19d689d32e7ef4f",
                "932973a91ac1e5f0"
            ]
        ]
    },
    {
        "id": "e5f3cbb7bcc156f0",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_6\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1670,
        "y": 2560,
        "wires": [
            [
                "c845115de107fcc0"
            ],
            []
        ]
    },
    {
        "id": "d58c70fd39649c7c",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2400,
        "y": 2580,
        "wires": [
            [
                "4e923e1b6c82acba"
            ]
        ]
    },
    {
        "id": "4e923e1b6c82acba",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2600,
        "y": 2580,
        "wires": [
            [
                "870d71779056ac10"
            ]
        ]
    },
    {
        "id": "870d71779056ac10",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2830,
        "y": 2580,
        "wires": [
            [
                "ca225af6b4766dbd",
                "09ae8b945b5574ee"
            ]
        ]
    },
    {
        "id": "590ac4734365e8ba",
        "type": "ui_form",
        "z": "a9c7c6499fb06192",
        "d": true,
        "name": "",
        "label": "BLUE1-Vehicle-Continuous",
        "group": "5a7810372552815e",
        "order": 2,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Dry mass (kg)",
                "value": "drymass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Ergol mass (kg)",
                "value": "ergolmass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Thrust (N)",
                "value": "thrust",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (s)",
                "value": "isp",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Surf Ref (m²)",
                "value": "surfref",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "drymass": "",
            "ergolmass": "",
            "thrust": "",
            "isp": "",
            "surfref": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 410,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "f78edff72d5bc307",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 2860,
        "wires": [
            [
                "51bf34a9288891b1",
                "56cb10c2207d9917"
            ]
        ]
    },
    {
        "id": "7caf5cf9a569852f",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 2900,
        "wires": [
            [
                "51bf34a9288891b1",
                "688e412edc1ccf07"
            ]
        ]
    },
    {
        "id": "51bf34a9288891b1",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_1\", \"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1730,
        "y": 2860,
        "wires": [
            [
                "5635bc42fee548b5",
                "cdd526266ebd9ee1"
            ],
            []
        ]
    },
    {
        "id": "580ac09aec9f45cf",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2840,
        "wires": [
            [
                "d5501646c1cc8b89"
            ]
        ]
    },
    {
        "id": "f81857a99a75e35e",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query for b2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 2760,
        "wires": [
            [
                "c3170e2055bd4989"
            ]
        ]
    },
    {
        "id": "c3170e2055bd4989",
        "type": "mongodb in",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 790,
        "y": 2840,
        "wires": [
            [
                "580ac09aec9f45cf",
                "2cd410f9544ccc91",
                "5f5b33984601f57d",
                "303e3f31f77bdd1b"
            ]
        ]
    },
    {
        "id": "d5501646c1cc8b89",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1200,
        "y": 2840,
        "wires": [
            [
                "f1c2a0c1accb4824"
            ]
        ]
    },
    {
        "id": "16137a6c1fe49e7e",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 2820,
        "wires": [
            [
                "51bf34a9288891b1",
                "928a9e71eb85b97c"
            ]
        ]
    },
    {
        "id": "2dd03006da42e14d",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2120,
        "y": 2920,
        "wires": [
            [
                "791a60ce94525462",
                "45c718088831c135"
            ]
        ]
    },
    {
        "id": "791a60ce94525462",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2300,
        "y": 2940,
        "wires": [
            [
                "4d162774a9159c58"
            ]
        ]
    },
    {
        "id": "4d162774a9159c58",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2560,
        "y": 2940,
        "wires": [
            [
                "b205427567803857",
                "9f80cfbd42c98c5c"
            ]
        ]
    },
    {
        "id": "6fd1aa77da2559a8",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 2920,
        "wires": [
            [
                "2dd03006da42e14d",
                "b8bbbae3148f9105"
            ]
        ]
    },
    {
        "id": "b205427567803857",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*1.0;\n\nvar myDate = new Date(datecurrent);\ndate= (myDate.toGMTString());\n\n\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2880,
        "y": 2920,
        "wires": [
            [
                "9675776e739e7e7f"
            ]
        ]
    },
    {
        "id": "e37c0d8cb762105e",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue2 -DcommandParameter=executeManeuver -jar ImpulseManeuver.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3480,
        "y": 2740,
        "wires": [
            [
                "ce6478cad5c9b62d",
                "8d0f7768d6ae38eb",
                "d8a9b8c8c2e1cd66",
                "93f5dfbe80e101d0",
                "c58c8b51154bdad1"
            ],
            [
                "9b4b09a8e6aa8dd9",
                "ca0405edaa292b46",
                "cbfe95be6c8f719e",
                "7057f37d68008049",
                "bba4a51fb49fea2b",
                "d8a9b8c8c2e1cd66"
            ],
            []
        ]
    },
    {
        "id": "ca225af6b4766dbd",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2790,
        "y": 2720,
        "wires": [
            [
                "ee45888c972f3341"
            ]
        ]
    },
    {
        "id": "9675776e739e7e7f",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 2800,
        "wires": [
            [
                "ee45888c972f3341",
                "8f83908e97c0974e"
            ]
        ]
    },
    {
        "id": "ee45888c972f3341",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\", \"path_10\"]",
        "pathsToExpire": "[ \"path_4\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "900",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3230,
        "y": 2760,
        "wires": [
            [
                "e37c0d8cb762105e",
                "5eb308965ea40f29",
                "7d9ca37dad5b6c44"
            ],
            []
        ]
    },
    {
        "id": "89cc001c71dde619",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "RAZ Result injection",
        "func": "msg.payload = null\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 2380,
        "wires": [
            [
                "8181dc7bb8336bf4"
            ]
        ]
    },
    {
        "id": "8181dc7bb8336bf4",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1920,
        "y": 2380,
        "wires": [
            [
                "c4f46d6f4830ee4b"
            ]
        ]
    },
    {
        "id": "c4f46d6f4830ee4b",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Result-RAZ",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2180,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "a3637b03df45d880",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Result2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 2380,
        "wires": [
            [
                "89cc001c71dde619"
            ]
        ]
    },
    {
        "id": "ce6478cad5c9b62d",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to read Result2.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 2620,
        "wires": [
            [
                "68ed6763d85362b0"
            ]
        ]
    },
    {
        "id": "68ed6763d85362b0",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4060,
        "y": 2640,
        "wires": [
            [
                "fe991f85ad0708a8",
                "68414d02967f1c89"
            ]
        ]
    },
    {
        "id": "fe991f85ad0708a8",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4240,
        "y": 2620,
        "wires": [
            [
                "49872e9ea6a0388f"
            ]
        ]
    },
    {
        "id": "49872e9ea6a0388f",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3780,
        "y": 2780,
        "wires": [
            [
                "c94ef8b4368e0ad6",
                "68414d02967f1c89"
            ]
        ]
    },
    {
        "id": "c94ef8b4368e0ad6",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n-12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4010,
        "y": 2740,
        "wires": [
            [
                "af69442b553fa3a6",
                "68414d02967f1c89"
            ]
        ]
    },
    {
        "id": "af69442b553fa3a6",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass=msg.payload[0].ergolmass;\ngs.dry_mass=msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4200,
        "y": 2820,
        "wires": [
            [
                "10e3498738b7b3df"
            ]
        ]
    },
    {
        "id": "cb16e182f096a56e",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "update all for B2 OUT",
        "mode": "link",
        "links": [
            "57b7bbaac29962ab"
        ],
        "x": 4745,
        "y": 2720,
        "wires": []
    },
    {
        "id": "9f80cfbd42c98c5c",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of post-maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*1.0;\n\n\nmsg.payload = datecurrent\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 3060,
        "wires": [
            [
                "4a48e5abe3d234d9",
                "12a8ba3203d3ba47"
            ]
        ]
    },
    {
        "id": "4a48e5abe3d234d9",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 3060,
        "wires": [
            [
                "0b43eeb00ea84eff"
            ]
        ]
    },
    {
        "id": "0b43eeb00ea84eff",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 3100,
        "wires": [
            [
                "919bf4ffc0eb5143"
            ]
        ]
    },
    {
        "id": "919bf4ffc0eb5143",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "query to fill b2 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2880,
        "y": 3100,
        "wires": [
            [
                "98b63bc244a17d9c"
            ]
        ]
    },
    {
        "id": "98b63bc244a17d9c",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2660,
        "y": 3140,
        "wires": [
            [
                "4aa655a5e530c223"
            ]
        ]
    },
    {
        "id": "4aa655a5e530c223",
        "type": "mongodb out",
        "z": "a9c7c6499fb06192",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert b2 time tle mongo",
        "collection": "peritimeb2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2840,
        "y": 3140,
        "wires": []
    },
    {
        "id": "4cd5886a370890e4",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Tle b2-postMan-OUT",
        "mode": "link",
        "links": [
            "a4307ff40f12d270"
        ],
        "x": 4375,
        "y": 2940,
        "wires": []
    },
    {
        "id": "0506407b1cd47c65",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4400,
        "y": 2880,
        "wires": [
            [
                "4cd5886a370890e4"
            ]
        ]
    },
    {
        "id": "852b01dc7c97ce50",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "MMB1",
        "info": "",
        "x": 1260,
        "y": 2260,
        "wires": []
    },
    {
        "id": "18daa92bd2b3e94f",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 490,
        "y": 2280,
        "wires": []
    },
    {
        "id": "d2871e7bca8d597f",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 650,
        "y": 2280,
        "wires": []
    },
    {
        "id": "535d934041fefe26",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 550,
        "y": 2220,
        "wires": []
    },
    {
        "id": "44fa37204026bf4c",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 850,
        "y": 2280,
        "wires": []
    },
    {
        "id": "12a8ba3203d3ba47",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "blue2-date-storage",
        "filename": "blue2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2940,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "8cc2914941326766",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 830,
        "y": 2160,
        "wires": []
    },
    {
        "id": "7515549619ddb7d7",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1890,
        "y": 2760,
        "wires": []
    },
    {
        "id": "514ce676a8ed86d1",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Thrust param + Manoeuver Delay",
        "info": "",
        "x": 1360,
        "y": 2540,
        "wires": []
    },
    {
        "id": "4a2d58cc8b898064",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "Here we store the new start date because the positions of the satellite before the manoeuver  are now false",
        "info": "",
        "x": 2630,
        "y": 3200,
        "wires": []
    },
    {
        "id": "37dd9b0d6c5ed1f9",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4830,
        "y": 2600,
        "wires": [
            [
                "583364a7d8da753d",
                "2cf69988888a5b86"
            ]
        ]
    },
    {
        "id": "91aff7e7f1f06d1b",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "fabrication de la string",
        "info": "",
        "x": 4010,
        "y": 2940,
        "wires": []
    },
    {
        "id": "98b8055d3f104d2e",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 1280,
        "y": 2720,
        "wires": []
    },
    {
        "id": "85188001c9648b25",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "e37c0d8cb762105e"
        ],
        "uncaught": false,
        "x": 3400,
        "y": 2940,
        "wires": [
            [
                "9b4b09a8e6aa8dd9"
            ]
        ]
    },
    {
        "id": "10e3498738b7b3df",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4470,
        "y": 2820,
        "wires": [
            [
                "1de5c2efd5b6dd71",
                "cb16e182f096a56e",
                "70b1f4b9690cfd91",
                "3d50b60995eaa8c2",
                "9c7669b3367fb37c",
                "b31e3dda5e3cdd67",
                "a4b647fded8bb2dd"
            ],
            [
                "27b183e107117472"
            ]
        ]
    },
    {
        "id": "20de60acdee38ffb",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4500,
        "y": 2640,
        "wires": []
    },
    {
        "id": "b18c09cc024a4add",
        "type": "ui_table",
        "z": "a9c7c6499fb06192",
        "group": "81d0e5ee7c52f38a",
        "name": "TLE display",
        "order": 1,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "version",
                "title": "Ver.",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "incli",
                "title": "Incli (°)",
                "width": "82",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "raan",
                "title": "RAAN (°)",
                "width": "95",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ecc",
                "title": "Ecc",
                "width": "75",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "aop",
                "title": "AoP (°)",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "meana",
                "title": "M.Ano",
                "width": "85",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mean",
                "title": "M.Motion",
                "width": "101",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ergol_mass",
                "title": "Ergols (kg)",
                "width": "108",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4810,
        "y": 2240,
        "wires": []
    },
    {
        "id": "345f4d6021461cee",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4840,
        "y": 2520,
        "wires": [
            [
                "8905c2ea81e0de50"
            ]
        ]
    },
    {
        "id": "583364a7d8da753d",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4840,
        "y": 2560,
        "wires": [
            [
                "345f4d6021461cee"
            ]
        ]
    },
    {
        "id": "4b966e67817d0bba",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read blue2-tle-storage",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4090,
        "y": 2280,
        "wires": [
            [
                "cac54a8cd1af5926",
                "fdfdf76a91bfc61c"
            ]
        ]
    },
    {
        "id": "751ab8c9b696bc05",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Old tle storage",
        "filename": "blue2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4110,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "cac54a8cd1af5926",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4140,
        "y": 2360,
        "wires": [
            [
                "751ab8c9b696bc05",
                "5f9aa65afe901565"
            ]
        ]
    },
    {
        "id": "8e1a9ca71cdc8fa4",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "11/05/23",
        "info": "",
        "x": 4570,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a77b39042024c5c7",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer B2",
        "links": [
            "93d678661c5d817a"
        ],
        "x": 3625,
        "y": 2180,
        "wires": [
            [
                "99e5a619fa0dad09",
                "4b966e67817d0bba"
            ]
        ]
    },
    {
        "id": "ff7d6c12c61aa819",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "TLE visualizer B2 out",
        "mode": "link",
        "links": [
            "491df3b4c3bf3409"
        ],
        "x": 4925,
        "y": 2340,
        "wires": []
    },
    {
        "id": "5f9aa65afe901565",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4320,
        "y": 2360,
        "wires": [
            [
                "e43523d2b1152f2c"
            ]
        ]
    },
    {
        "id": "e43523d2b1152f2c",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4410,
        "y": 2320,
        "wires": [
            [
                "77c29eaa5ca7042e",
                "2aea1ff784165956"
            ]
        ]
    },
    {
        "id": "355fd1b23a393869",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Init TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4750,
        "y": 2340,
        "wires": [
            [
                "ff7d6c12c61aa819"
            ]
        ]
    },
    {
        "id": "77c29eaa5ca7042e",
        "type": "split",
        "z": "a9c7c6499fb06192",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4550,
        "y": 2300,
        "wires": [
            [
                "355fd1b23a393869",
                "d9803094df8b773f"
            ]
        ]
    },
    {
        "id": "3d50b60995eaa8c2",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "read blue2-tle-storage",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4050,
        "y": 2480,
        "wires": [
            [
                "d83c1d6298494eaa"
            ]
        ]
    },
    {
        "id": "d83c1d6298494eaa",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4100,
        "y": 2520,
        "wires": [
            [
                "cf8cb595404294d1",
                "e63a953365843a85"
            ]
        ]
    },
    {
        "id": "cf8cb595404294d1",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Old tle storage",
        "filename": "blue2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4210,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "2aea1ff784165956",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "if (msg.payload[0].version === \"New TLE\") {\n    // Create a copy of the first payload object to avoid mutating the original directly\n    var tmp = { ...msg.payload[0] };\n\n    // Helper function to remove leading zeros and format to two decimal places\n    function formatNumber(value) {\n        return parseFloat(value).toFixed(3);\n    }\n\n    // Format 'incli' from \"002.0000\" to \"2.00\"\n    tmp.incli = formatNumber(tmp.incli);\n\n    // Format 'raan' from \"003.0000\" to \"3.00\"\n    tmp.raan = formatNumber(tmp.raan);\n\n    // Format 'ecc' from \"0000001\" to \"1.00E-7\"\n    // Assuming \"0000001\" represents 1e-7\n    tmp.ecc = (parseInt(tmp.ecc, 10) * 1e-7).toExponential(3).toUpperCase();\n\n    // Format 'aop' from \"003.0000\" to \"3.00\"\n    tmp.aop = formatNumber(tmp.aop);\n\n    // Format 'meana' from \"003.0000\" to \"3.00\"\n    tmp.meana = formatNumber(tmp.meana);\n\n    // Format 'mean' from \"15.83035000000000\" to \"15.83\"\n    tmp.mean = parseFloat(tmp.mean).toFixed(3);\n\n    // Format 'dry_mass' from \"1000.00000\" to \"1000.00\"\n    tmp.dry_mass = parseFloat(tmp.dry_mass).toFixed(3);\n\n    // Format 'ergol_mass' from \"4000.00000\" to \"4000.00\"\n    tmp.ergol_mass = parseFloat(tmp.ergol_mass).toFixed(3);\n\n    // Update the payload with the formatted object\n    msg.payload[0] = tmp;\n\n    // Ensure the second payload element is an empty string as per your original logic\n    msg.payload[1] = \"\";\n}\nelse {\n    // Create a copy of the first payload object to avoid mutating the original directly\n    var tmp = { ...msg.payload[0] };\n\n    // Helper function to remove leading zeros and format to two decimal places\n    function formatNumber(value) {\n        return parseFloat(value).toFixed(3);\n    }\n\n    // Format 'incli' from \"002.0000\" to \"2.00\"\n    tmp.incli = formatNumber(tmp.incli);\n\n    // Format 'raan' from \"003.0000\" to \"3.00\"\n    tmp.raan = formatNumber(tmp.raan);\n\n    // Format 'ecc' from \"0000001\" to \"1.00E-7\"\n    // Assuming \"0000001\" represents 1e-7\n    tmp.ecc = (parseInt(tmp.ecc, 10) * 1e-7).toExponential(3).toUpperCase();\n\n    // Format 'aop' from \"003.0000\" to \"3.00\"\n    tmp.aop = formatNumber(tmp.aop);\n\n    // Format 'meana' from \"003.0000\" to \"3.00\"\n    tmp.meana = formatNumber(tmp.meana);\n\n    // Format 'mean' from \"15.83035000000000\" to \"15.83\"\n    tmp.mean = parseFloat(tmp.mean).toFixed(3);\n\n    // Format 'dry_mass' from \"1000.00000\" to \"1000.00\"\n    tmp.dry_mass = parseFloat(tmp.dry_mass).toFixed(2);\n\n    // Format 'ergol_mass' from \"4000.00000\" to \"4000.00\"\n    tmp.ergol_mass = parseFloat(tmp.ergol_mass).toFixed(2);\n\n    // Update the payload with the formatted object\n    msg.payload[0] = tmp;\n\n    // Ensure the second payload element is an empty string as per your original logic\n    msg.payload[1] = \"\";\n\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4520,
        "y": 2420,
        "wires": [
            [
                "7b0d995a866c24f8",
                "b18c09cc024a4add"
            ]
        ]
    },
    {
        "id": "f1c2a0c1accb4824",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2880,
        "wires": [
            [
                "7caf5cf9a569852f"
            ]
        ]
    },
    {
        "id": "5635bc42fee548b5",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Data2.txt format",
        "func": "var N; // Mean motion in rev/day\nvar n; // See the expression later \nvar a; // Semi-major axis\nvar acube; // acube = a³ \nvar e; // Eccentricity\n\nvar mu = 398600.4418;\n// var mu = 398600; // Earth's standard gravitational parameter\n// var J = 86164; // Wrong value changed on the 240523\nvar J = 86400; // A day expressed in seconds \n\nN = msg.paths.path_2[7]; // The mean motion in rev/day\nn = 2 * Math.PI * N / J; // n = 2π/T where T = J/N\nacube = mu / (n * n); // acube = a³ \na = Math.cbrt(acube); // Compute the cubic root for a\ne = Number(msg.paths.path_2[4]) / 10000000; // Convert TLE formatted eccentricity to a real number \ne = e.toFixed(7);\n\n// Initialize variables with default values\nvar durastop = msg.paths.path_3[0] + 1.0 + 1.0;\nvar thrust = \"0\";\nvar dv = \"0\";\nvar isp = \"0\";\nvar drymass = \"0\";\nvar ergolmass = \"0\";\nvar surface = \"0\";\nvar myDate = new Date(msg.paths.path_3[1]);\nDATE = myDate.toISOString(); // Format the date to ISO string\n\n// CORRECTION 050723\n// Removed unnecessary and inaccurate date parsing code\n\n// Assign values if they are valid numbers\nif (!isNaN(msg.isp)) { isp = msg.isp; }\nif (!isNaN(msg.dv)) { dv = msg.dv; }\nif (!isNaN(msg.paths.path_13[1])) { ergolmass = msg.paths.path_13[1]; }\nif (!isNaN(msg.paths.path_13[0])) { drymass = msg.paths.path_13[0]; }\n\n// **New Addition: Set maneuverType to \"Impulse\" if it's not provided**\nif (msg.maneuverType == null || msg.maneuverType === undefined || msg.maneuverType === \"\") {\n    msg.maneuverType = \"Impulse\";\n}\n\nmsg.payload = [\n    \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thrust, ISP, Ergol mass, Simu duration stop, ManeuverType, DV\",\n    DATE,\n    a,\n    e,\n    msg.paths.path_2[2],\n    msg.paths.path_2[3],\n    msg.paths.path_2[5],\n    msg.paths.path_2[6],\n    drymass,\n    surface,\n    thrust,\n    isp,\n    ergolmass,\n    durastop,\n    msg.maneuverType, // Now guaranteed to have a value\n    dv\n];\n\n// 03/05/2023 I had to change the column to take the AoP from it was coded column 7 I changed for 8 because 7 is a blank space \nreturn msg;\n\n// 160523 I changed the access to the orbital \n// parameters they are in the payload in an array\n// \"2010-01-01T11:59:26.000\"\n\n// This function was changed on the 240523 because of wrong values on the J (duration of a day in seconds) \n// And to improve the readability\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 2920,
        "wires": [
            [
                "6fd1aa77da2559a8"
            ]
        ]
    },
    {
        "id": "68b1dc311b10e848",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 2540,
        "wires": [
            [
                "0143ac3565d9d15a"
            ]
        ]
    },
    {
        "id": "0143ac3565d9d15a",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2540,
        "wires": [
            [
                "121713b0d557813b",
                "174ac4b6e8fd7a3f"
            ]
        ]
    },
    {
        "id": "2cd410f9544ccc91",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2800,
        "wires": [
            [
                "22107f12de6bba5c"
            ]
        ]
    },
    {
        "id": "22107f12de6bba5c",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1260,
        "y": 2760,
        "wires": [
            [
                "68b1dc311b10e848"
            ]
        ]
    },
    {
        "id": "17d4b91ca2e0ec0f",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 260,
        "y": 2280,
        "wires": []
    },
    {
        "id": "f01792c65bf1dd2a",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 180,
        "y": 2240,
        "wires": []
    },
    {
        "id": "99e5a619fa0dad09",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Init TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3930,
        "y": 2180,
        "wires": [
            [
                "e43523d2b1152f2c",
                "7941f0780ef18fc3"
            ]
        ]
    },
    {
        "id": "e63a953365843a85",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4360,
        "y": 2520,
        "wires": [
            [
                "345f4d6021461cee"
            ]
        ]
    },
    {
        "id": "9b4b09a8e6aa8dd9",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3750,
        "y": 2940,
        "wires": []
    },
    {
        "id": "fdfdf76a91bfc61c",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4460,
        "y": 2260,
        "wires": []
    },
    {
        "id": "f4fb69243f37a23e",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 2680,
        "wires": []
    },
    {
        "id": "44520fc1932ae98f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 2760,
        "wires": []
    },
    {
        "id": "ce0ae76a98b60ac4",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2600,
        "wires": []
    },
    {
        "id": "d7a76d2334a54eab",
        "type": "comment",
        "z": "a9c7c6499fb06192",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 560,
        "y": 2160,
        "wires": []
    },
    {
        "id": "70b1f4b9690cfd91",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4200,
        "y": 2880,
        "wires": [
            [
                "0506407b1cd47c65"
            ]
        ]
    },
    {
        "id": "68414d02967f1c89",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4220,
        "y": 2780,
        "wires": []
    },
    {
        "id": "1de5c2efd5b6dd71",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4750,
        "y": 2780,
        "wires": [
            [
                "bff3cdef37810ee9"
            ]
        ]
    },
    {
        "id": "bff3cdef37810ee9",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 4785,
        "y": 2880,
        "wires": []
    },
    {
        "id": "ca0405edaa292b46",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "var max=6;\nvar random = Math.floor(Math.random() * max);\n\nif (msg.payload.includes(\"hyperbolic orbits cannot be handled\")){\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "afd2d4c22f5279be",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3935,
        "y": 2860,
        "wires": []
    },
    {
        "id": "2b3fc5b388fc71b0",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4090,
        "y": 2120,
        "wires": [
            [
                "4b966e67817d0bba"
            ]
        ]
    },
    {
        "id": "97dbe4b63f9dca47",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4080,
        "y": 2060,
        "wires": []
    },
    {
        "id": "e68417ca71d0972e",
        "type": "catch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "scope": [
            "4b966e67817d0bba"
        ],
        "uncaught": false,
        "x": 3740,
        "y": 2060,
        "wires": [
            [
                "2b3fc5b388fc71b0",
                "97dbe4b63f9dca47"
            ]
        ]
    },
    {
        "id": "cf906b076cca82a2",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Orientation computing",
        "func": "\nvar Dx;\nvar Dy;\nvar Dz;\n\n// theta is related to Dz it is the angle around x or y \n\n//PREPARATION STEP\n\n// theta est le complement a 90 de beta\nvar theta = 90 - msg.payload.beta\n// converting theta to rad and computing\n//the vector composition of the thrust\nDx = 1*Math.sin(theta*Math.PI/180)*Math.cos(msg.payload.alpha*Math.PI/180);\nDy = 1*Math.sin(theta*Math.PI/180)*Math.sin(msg.payload.alpha*Math.PI/180);\nDz = 1*Math.cos(theta*Math.PI/180)\n\nvar tab = []\nvar gs = {}\n\ngs.dx = Dx\ngs.dy = Dy\ngs.dz = Dz\ngs.dura = msg.payload.duration\n\n\ntab.push(gs)\nmsg.body = msg.payload\nmsg.payload = tab\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 2380,
        "wires": [
            [
                "a3637b03df45d880",
                "85c5678ffd7d9b60"
            ]
        ]
    },
    {
        "id": "f308056b26f83ea3",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "1756cdc52869c611",
        "name": "Thrust-Orientation",
        "order": 1,
        "width": 10,
        "height": 6,
        "format": "<!-- Load Three.js -->\n<script id=\"libraryThreeDL\" src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n\n<div id=\"angle-input\" style=\"display: flex; justify-content: center; align-items: center;\">\n    <label for=\"alpha\">Alpha (°): </label>\n    <input type=\"number\" id=\"alpha\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n\n    <label for=\"beta\">Beta (°): </label>\n    <input type=\"number\" id=\"beta\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n</div>\n<button id=\"thrustButton\">Thrust Orientation</button>\n<div id=\"canvas-container\" style=\"display: flex; justify-content: center; align-items: center;\"></div>\n\n<script >\n//document.addEventListener(\"DOMContentLoaded\", function() {\nfunction chargerLibrairie(url,callback) {\n    var script = document.createElement('script');\n    script.type='text/javascript';\n    script.src=url;\n    script.onload=callback;\n\n    document.head.appendChild(script);\n}\n\n(function(scope) {\n    \n    chargerLibrairie('https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',function (){\n    \n    var button = document.getElementById(\"thrustButton\");\n    button.style.backgroundColor = \"#00567a\"; // Blue background color\n    button.style.color = \"#ffffff\"; // White text color\n    button.style.border = \"none\"; // Remove border\n    button.style.padding = \"10px 20px\"; // Add padding for better appearance\n     button.style.borderRadius = \"2px\"; // Add rounded edges\n  //  console.log(scope);\n    var alphaInput = document.getElementById(\"alpha\");\n    var betaInput = document.getElementById(\"beta\");\n    var durationInput = 1;\n    var canvasContainer = document.getElementById(\"canvas-container\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    var noderedStandardUnit = 48;// Nodered unit in pixels\n\n    var heightOfWidget = Number(scope.height)*noderedStandardUnit\n    var widthOfWidget=Number(scope.width)*noderedStandardUnit\n\n\n    renderer.setSize(widthOfWidget,heightOfWidget- noderedStandardUnit);\n    \n    canvasContainer.appendChild(renderer.domElement);\n    renderer.setClearColor(new THREE.Color(0x212C31));\n    // add the cubesat\n\n\n//CUBE SATELLITE\n    var cubeside=1\n    var geometry = new THREE.BoxBufferGeometry(cubeside,cubeside,cubeside);\n    var material = new THREE.MeshStandardMaterial({\n    color: 0x929292,          // Base color of the metal\n    metalness: 0.7,             // Set to 1 for a full metallic surface\n    roughness: 0.5,           // Adjust the roughness to control reflection blur\n    \n    });\n   //var material = new THREE.MeshStandardMaterial({ color: 0xAAAAAA, metalness: 1, roughness: 0.5 });\n    //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n     \n    alphaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    alphaInput.style.color = \"#ffffff\"; // White text color\n    betaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    betaInput.style.color = \"#ffffff\"; // White text color\n   \n//ARROWS\n    var arrowOrigin = new THREE.Vector3(0, 0, 0);\n    var arrowDirection = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionX = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionY = new THREE.Vector3(0, 0, 1); // Initial direction\n    var arrowDirectionZ = new THREE.Vector3(1, 0, 0); // Initial direction\n    var arrowLength = 1.4; // Length of the arrow\n    var arrowLengthUnit = 1; // Length of the arrow\n    var arrowColorRed = 0xff0000; // Red color\n    var arrowColorYellow = 0xffff00; // Yellow color\n    var arrowColorBlue = 0x0000ff; // Blue color\n    var arrowColorGreen = 0x00ff00; //Green color\n    var arrowHelper = new THREE.ArrowHelper(arrowDirection, arrowOrigin, arrowLength, arrowColorYellow);\n    var arrowHelperX = new THREE.ArrowHelper(arrowDirectionX, arrowOrigin,arrowLengthUnit, arrowColorRed);\n    var arrowHelperY = new THREE.ArrowHelper(arrowDirectionY, arrowOrigin, arrowLengthUnit, arrowColorGreen);\n    var arrowHelperZ = new THREE.ArrowHelper(arrowDirectionZ, arrowOrigin, arrowLengthUnit, arrowColorBlue);\n    \n    scene.add(arrowHelper);\n    scene.add(arrowHelperX);\n    scene.add(arrowHelperY);\n    scene.add(arrowHelperZ);\n    \n//CAMERA POSITION\n\n    camera.position.set(1.6,1.6,1.6); // Set position like this\n    camera.lookAt(new THREE.Vector3(0,0,0)); // Set look at coordinate like this\n    \n//TRAJECTORY\n\n    const ringgeometry = new THREE.RingGeometry( 36, 36.02, 90 ); \n    const ringmaterial = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n    const mesh = new THREE.Mesh( ringgeometry, ringmaterial );\n    mesh.position.set(-36, 0, 0);\n    scene.add( mesh );\n    \n//EARTH\n\n    var sphereGeometry = new THREE.SphereBufferGeometry(34, 32, 32);\n    var sphereMaterial = new THREE.MeshStandardMaterial({\n    color: 0x002654,          // Base color of the metal\n    metalness: 0,             // Set to 1 for a full metallic surface\n    roughness: 0.5           // Adjust the roughness to control reflection blur\n\n    });\n    //var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x021437 });\n    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n    sphere.position.set(-36, 0, 0); // Position the sphere along the -X axis\n    scene.add(sphere);\n    \n//SUN DIRECTIONAL LIGHT\n    \n    const directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );\n    directionalLight.position.set(15,5,5);\n    scene.add( directionalLight );\n    ambient = new THREE.AmbientLight(0xffffff, 0.2);\n    scene.add(ambient);\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n\n        // Obtenir les valeurs d'alpha et beta en radians\n        var alpha = alphaInput.value * Math.PI / 180;\n        var beta = betaInput.value * Math.PI / 180;\n        \n        // Calculate THETA\n        var theta = Math.PI / 2 - beta;\n\n        // Compute coordinates \n        var y = Math.sin(theta) * Math.cos(alpha);\n        var z = Math.sin(theta) * Math.sin(alpha);\n        var x = Math.cos(theta);\n\n        // Up dates direction of the arrow \n        arrowHelper.setDirection(new THREE.Vector3(x, y, z));\n        cube.lookAt(new THREE.Vector3(x, y, z))\n        renderer.render(scene, camera);\n    }\n\n    function updateOrientation(scope) {\n        animate();\n\n        var alpha = parseFloat(alphaInput.value);\n        var beta = parseFloat(betaInput.value);\n        var duration= durationInput;\n        // Send output (Alpha Beta)\n        scope.send({ payload: { alpha: alpha, beta: beta, duration: duration } });\n    }\n\n    animate();\n\n    document.getElementById(\"thrustButton\").addEventListener(\"click\", function() {\n        updateOrientation(scope);\n    });\n\n    });\n//window.onload = function() {\n//document.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    \n\n\n})(scope);\n//}); \n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 2380,
        "wires": [
            [
                "cf906b076cca82a2",
                "daaafc1e1ea6ef39",
                "439170c1e228a361",
                "9306af734a5ae241"
            ]
        ]
    },
    {
        "id": "cdd526266ebd9ee1",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1970,
        "y": 2860,
        "wires": []
    },
    {
        "id": "daaafc1e1ea6ef39",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "ORientation",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2480,
        "wires": []
    },
    {
        "id": "8d0f7768d6ae38eb",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3590,
        "y": 2460,
        "wires": []
    },
    {
        "id": "215cfb1e76a057c4",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 2800,
        "wires": []
    },
    {
        "id": "7df939978ee8b84b",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "1756cdc52869c611",
        "name": "BLUE2 Vehicule template",
        "order": 5,
        "width": 10,
        "height": "3",
        "format": "<style>\n  .form-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    margin-top: 35px;\n  }\n\n  .parameters-row {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 10px;\n    margin-top: 20px;\n  }\n\n  .column {\n    flex: 1;\n    padding: 0 10px;\n    max-width: 300px;\n    box-sizing: border-box;\n  }\n\n  .md-input-container {\n    width: 100%;\n    margin: 10px 0px;\n    color: #ffffff !important;\n  }\n\n  .md-input-container label {\n    color: #ffffff !important;\n    font-weight: bold !important;\n  }\n\n  /* Ensure the option text appears white */\n  md-select .md-select-value,\n  md-option {\n    color: #ffffff !important;\n  }\n\n  .button-container {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 0 10px;\n    box-sizing: border-box;\n  }\n\n  .button-container button {\n    width: 100%;\n    margin-top: 10px;\n  }\n\n  .button-container button:first-child {\n    margin-top: 20px;\n  }\n\n  .third-row {\n    margin-bottom: 30px;\n  }\n\n  .result-display {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    color: white;\n    margin: 15px 0;\n  }\n\n  .result-value {\n    font-weight: bold;\n    color: #ffcc00;\n  }\n</style>\n\n<!-- HTML form structure -->\n<form id=\"myForm2\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n  <div class=\"form-container\">\n    <!-- Maneuver type field (only one option: Impulse) -->\n    <div class=\"parameters-row\">\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_maneuver\">Maneuver Type</label>\n          <md-select ng-model=\"msg.payload.maneuverType\" id=\"select_20\" name=\"maneuverType\"\n            ng-change=\"send({payload: msg.payload})\">\n            <md-option value=\"Impulse\">Impulse</md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </div>\n\n    <!-- DV and Surface fields -->\n    <div class=\"parameters-row\">\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_dv\">DV (m/s)</label>\n          <input type=\"text\" id=\"form2_dv\" name=\"dv\" ng-model=\"msg.payload.dv\" ng-change=\"send({payload: msg.payload})\">\n        </md-input-container>\n      </div>\n\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_isp\">ISP (s)</label>\n          <input type=\"text\" id=\"form2_isp\" name=\"isp\" ng-model=\"msg.payload.isp\" ng-change=\"send({payload: msg.payload})\">\n        </md-input-container>\n      </div>\n    </div>\n\n\n  </div>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 220,
        "y": 2900,
        "wires": [
            [
                "845dd7fac602fd55",
                "6beee22037ee2aa9",
                "215cfb1e76a057c4",
                "3c8c0e2afc385692",
                "f81857a99a75e35e"
            ]
        ]
    },
    {
        "id": "45c718088831c135",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2220,
        "y": 2860,
        "wires": []
    },
    {
        "id": "b8bbbae3148f9105",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2160,
        "y": 2820,
        "wires": []
    },
    {
        "id": "688e412edc1ccf07",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 2960,
        "wires": []
    },
    {
        "id": "56cb10c2207d9917",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 3140,
        "wires": []
    },
    {
        "id": "928a9e71eb85b97c",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 3000,
        "wires": []
    },
    {
        "id": "174ac4b6e8fd7a3f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2540,
        "wires": []
    },
    {
        "id": "a2e96e3facd7362b",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1760,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a19d689d32e7ef4f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1840,
        "y": 2660,
        "wires": []
    },
    {
        "id": "845dd7fac602fd55",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "1756cdc52869c611",
        "name": "BLUE2 Vehicule Submit",
        "order": 8,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 20px;\n    }\n</style>\n\n<div class=\"button-container\">\n    <!-- Utilisation de ng-click pour envoyer msg.payload au clic -->\n    <button type=\"submit\" id=\"submitButtonb1\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">\n    Submit\n  </button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 2560,
        "wires": [
            [
                "ba547653daa2e016",
                "ab74b541d4d58e03"
            ]
        ]
    },
    {
        "id": "7605794e784228e3",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "1756cdc52869c611",
        "name": "Affichage Conso",
        "order": 6,
        "width": 10,
        "height": 2,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Affichage Ergols</title>\n   \n    <!-- Style pour masquer la barre de défilement tout en permettant le défilement -->\n    <style>\n        /* Conteneur principal pour masquer la barre de défilement */\n        .scroll-container {\n            height: 100vh;\n            overflow-y: scroll; /* Activer le défilement vertical */\n            scrollbar-width: none; /* Masquer la barre pour Firefox */\n        }\n\n        /* Masquer la barre de défilement pour Chrome, Safari, etc. */\n        .scroll-container::-webkit-scrollbar {\n            display: none; /* Masquer la barre de défilement */\n        }\n    </style>\n</head>\n\n<body>\n        <!-- Conteneur principal avec défilement masqué -->\n    <div class=\"scroll-container\">\n    <!-- Section pour afficher Ergols restants -->\n    <div class=\"result-display\">\n        Ergols disponibles avant maneuvre (kg) : <span class=\"form2_ergolRemaining result-value\">--</span>\n    </div>\n\n    <!-- Section pour afficher Consommation d'ergols -->\n    <div class=\"result-display\">\n        Consommation d'ergols (kg) : <span class=\"form2_ergolResult result-value\">--</span>\n    </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        (function(scope) {\n            // Utiliser $watch pour surveiller les changements dans le payload\n            scope.$watch('msg.payload', function(payload) {\n                console.log(\"Payload reçu :\", payload);  // Pour vérifier si le payload est bien reçu\n                if (payload) {\n                     // Définissez ici la valeur des ergols restants (valeur statique à adapter selon le besoin)\n                    let ergolsRestants = payload.path_14[2]; // Exemple de valeur statique (à remplacer par une donnée dynamique si nécessaire)\n\n                    // Mise à jour de la valeur \"Ergols restants\"\n                    let formattedErgolsRestants = ergolsRestants.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    let remainingElements = document.getElementsByClassName(\"form2_ergolRemaining\");\n                    for (let i = 0; i < remainingElements.length; i++) {\n                        remainingElements[i].textContent = formattedErgolsRestants + \" kg\";\n            }\n                    let consommation = payload.path_15[0].consommationErgols;\n                    \n                    // Formattage en notation française\n                    let formattedConsommation = consommation.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    \n                    // Mettre à jour toutes les instances de consommation d'ergols\n                    let elements = document.getElementsByClassName(\"form2_ergolResult\");\n                    for (let i = 0; i < elements.length; i++) {\n                        elements[i].textContent = formattedConsommation + \" kg\";\n                    }\n                } else {\n                    console.log(\"Payload non valide ou consommationErgols manquant\");\n                }\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 450,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "3c8c0e2afc385692",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 2960,
        "wires": []
    },
    {
        "id": "6beee22037ee2aa9",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 2900,
        "wires": [
            [
                "d3c9815c810ebcfc",
                "91616dd8c5e7b9a7"
            ]
        ]
    },
    {
        "id": "ed91c3eeb1e67647",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && rm -rf Ergols2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 320,
        "y": 2320,
        "wires": [
            [],
            [
                "3da962f5563c0e13"
            ],
            [
                "747935fce9fa686b"
            ]
        ]
    },
    {
        "id": "d3c9815c810ebcfc",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_11\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 690,
        "y": 2960,
        "wires": [
            [
                "d33b140166f1ad23",
                "719455bb37946fef"
            ],
            []
        ]
    },
    {
        "id": "91616dd8c5e7b9a7",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 3020,
        "wires": []
    },
    {
        "id": "747935fce9fa686b",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 2440,
        "wires": []
    },
    {
        "id": "3da962f5563c0e13",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d33b140166f1ad23",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Ergols2.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar path11 = (msg.paths && msg.paths.path_11) ? msg.paths.path_11 : {};\nvar pathArray2 = (msg.paths && msg.paths.path_13) ? msg.paths.path_13 : [0.0,0.0,0.0];\n\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray2[0] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray2[1] || 0; // Troisième élément ou 0 si non défini\nvar DV = path11.dv || 0; // Quatrième élément ou 0 si non défini\nvar isp = path11.isp|| 0;// Premier élément ou 0 si non défini\nvar maneuvertype = path11.maneuverType  || \"Unknown\"; // Deuxième élément ou 0 si non défini\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"DryMass, ErgolMass, DV, ManeuverType, ISP\",\n    drymass, ergolmass, DV, maneuvertype, isp\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 3080,
        "wires": [
            [
                "ed823e2f8f1a6516",
                "87b4a58de43b30a3",
                "cdd5acecb402dd2c"
            ]
        ]
    },
    {
        "id": "cdd5acecb402dd2c",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Ergols2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 3160,
        "wires": [
            [
                "e226847c97682bd0",
                "2f734d0792581812"
            ]
        ]
    },
    {
        "id": "e226847c97682bd0",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1020,
        "y": 3340,
        "wires": [
            [
                "79fb3f9511f3fbac",
                "0fc13343aecce81a"
            ]
        ]
    },
    {
        "id": "2f734d0792581812",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 3160,
        "wires": []
    },
    {
        "id": "0fc13343aecce81a",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 3300,
        "wires": []
    },
    {
        "id": "79fb3f9511f3fbac",
        "type": "json",
        "z": "a9c7c6499fb06192",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1340,
        "y": 3340,
        "wires": [
            [
                "3b1d32721cd3868c"
            ]
        ]
    },
    {
        "id": "3b1d32721cd3868c",
        "type": "file",
        "z": "a9c7c6499fb06192",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1540,
        "y": 3340,
        "wires": [
            [
                "c3df3637a6edc0aa"
            ]
        ]
    },
    {
        "id": "c3df3637a6edc0aa",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue2 -DcommandParameter=consommationErgols -jar ImpulseManeuver.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 1960,
        "y": 3340,
        "wires": [
            [
                "1a74133eb21fc8c5",
                "ef72e5b221396eae"
            ],
            [
                "9cc071c54a6f9bd5"
            ],
            [
                "08718043abd48c55"
            ]
        ]
    },
    {
        "id": "1a74133eb21fc8c5",
        "type": "file in",
        "z": "a9c7c6499fb06192",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ConsommationErgols2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2240,
        "y": 3320,
        "wires": [
            [
                "9c9a9366416eae59"
            ]
        ]
    },
    {
        "id": "9c9a9366416eae59",
        "type": "join",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2420,
        "y": 3320,
        "wires": [
            [
                "122d4a489dd11342"
            ]
        ]
    },
    {
        "id": "122d4a489dd11342",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 3320,
        "wires": [
            [
                "7ef7aa2619dfdd5e",
                "17d51c9e7fb74e2d",
                "d0dab6ba9240b050"
            ]
        ]
    },
    {
        "id": "17d51c9e7fb74e2d",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2800,
        "y": 3380,
        "wires": []
    },
    {
        "id": "7ef7aa2619dfdd5e",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.consommationErgols = parseFloat(msg.payload[n-1])\n\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2830,
        "y": 3320,
        "wires": [
            [
                "4d9f577fdc810de1",
                "32d0674838b0d223"
            ]
        ]
    },
    {
        "id": "4d9f577fdc810de1",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3080,
        "y": 3260,
        "wires": []
    },
    {
        "id": "32d0674838b0d223",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Ergols out",
        "mode": "link",
        "links": [
            "827ec2052cc36599"
        ],
        "x": 3065,
        "y": 3340,
        "wires": []
    },
    {
        "id": "946b8b4c52dd93e0",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 3320,
        "wires": []
    },
    {
        "id": "827ec2052cc36599",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "Ergols in",
        "links": [
            "32d0674838b0d223"
        ],
        "x": 65,
        "y": 3320,
        "wires": [
            [
                "946b8b4c52dd93e0",
                "935f4a6c8b5c2c18",
                "7b91e1532b023e4e",
                "7cedab42bc8283e3"
            ]
        ]
    },
    {
        "id": "7941f0780ef18fc3",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4380,
        "y": 2180,
        "wires": []
    },
    {
        "id": "5f5b33984601f57d",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "ergols",
        "func": "if (msg.payload && msg.payload[0]) {\n    // Assurez-vous que les propriétés existent et ne sont pas null avant de les insérer dans le tableau\n    const dry_mass = msg.payload[0].dry_mass !== undefined ? msg.payload[0].dry_mass : 0;\n    const ergol_mass = msg.payload[0].ergol_mass !== undefined ? msg.payload[0].ergol_mass : 0;\n    const ergol_consumption = msg.payload[0].ergol_consumption !== null && msg.payload[0].ergol_consumption !== undefined ? msg.payload[0].ergol_consumption : 0.0;\n\n    // Créer un tableau avec les valeurs\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"Le payload ne contient pas les données attendues.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2900,
        "wires": [
            [
                "7301d98e89fdc73f"
            ]
        ]
    },
    {
        "id": "7301d98e89fdc73f",
        "type": "csv",
        "z": "a9c7c6499fb06192",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1240,
        "y": 2920,
        "wires": [
            [
                "bc8a8085b3ac47d9",
                "69b095f4ef5f975b"
            ]
        ]
    },
    {
        "id": "bc8a8085b3ac47d9",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "// Découper le CSV en lignes\nlet csvData = msg.payload.split('\\n');\n\n// Vérifier si la deuxième ligne existe\nif (csvData.length > 1) {\n    // Récupérer la deuxième ligne (index 1)\n    let secondLine = csvData[1].trim();\n\n    // Découper la deuxième ligne par espaces ou tabulations\n    let values = secondLine.split(/\\s+/); // Utilisation de \\s+ pour capturer les espaces multiples\n\n    // Convertir les valeurs en nombres (si applicable)\n    let dry_mass = parseFloat(values[0]) || 0;\n    let ergol_mass = parseFloat(values[1]) || 0;\n    let ergol_consumption = parseFloat(values[2]) || 0;\n\n    // Placer les valeurs dans un tableau\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"La deuxième ligne n'existe pas.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2960,
        "wires": [
            [
                "9fd5ec3b1f151d19"
            ]
        ]
    },
    {
        "id": "9fd5ec3b1f151d19",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 3040,
        "wires": [
            [
                "d3c9815c810ebcfc",
                "063b09abb0bf12c8",
                "51bf34a9288891b1"
            ]
        ]
    },
    {
        "id": "063b09abb0bf12c8",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "PATH 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 3020,
        "wires": []
    },
    {
        "id": "303e3f31f77bdd1b",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 2720,
        "wires": []
    },
    {
        "id": "69b095f4ef5f975b",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 3080,
        "wires": []
    },
    {
        "id": "2cf69988888a5b86",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4860,
        "y": 2680,
        "wires": []
    },
    {
        "id": "bf4f9f57961ab891",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "In maneuvre prédéfinie b2",
        "links": [
            "05f0496bbe241c35",
            "ca64e9a084125e43"
        ],
        "x": 4535,
        "y": 2360,
        "wires": [
            [
                "e0f13308ea4d925e",
                "20438c8aebb665e3",
                "93fcaa5749229a79"
            ]
        ]
    },
    {
        "id": "cba95d513441f186",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "ERGOLS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 3120,
        "wires": []
    },
    {
        "id": "935f4a6c8b5c2c18",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_15",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_15",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 3200,
        "wires": [
            [
                "1479998011dd5d37",
                "ed823e2f8f1a6516"
            ]
        ]
    },
    {
        "id": "ed823e2f8f1a6516",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 3140,
        "wires": [
            [
                "1f3265acbf073243",
                "1479998011dd5d37"
            ]
        ]
    },
    {
        "id": "1479998011dd5d37",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_14\",\"path_15\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 210,
        "y": 3040,
        "wires": [
            [
                "8563e4b242b6b350"
            ],
            []
        ]
    },
    {
        "id": "1f3265acbf073243",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 3240,
        "wires": []
    },
    {
        "id": "8563e4b242b6b350",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "// Suppose que msg.payload contient déjà des informations\nlet paths = msg.paths; // Supposons que les chemins sont dans msg.paths\n\n// Ajouter les informations de paths dans payload\nmsg.payload = paths;\n\n// Retourner le message avec paths inclus dans payload\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2960,
        "wires": [
            [
                "cba95d513441f186",
                "7605794e784228e3"
            ]
        ]
    },
    {
        "id": "ee6b9c05ddd20ce5",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "Ergol Mass Update b2",
        "links": [
            "b1beae978b71e742"
        ],
        "x": 145,
        "y": 2660,
        "wires": [
            [
                "0e3355654ba5756f",
                "09ed5a08b1e35265"
            ]
        ]
    },
    {
        "id": "0e3355654ba5756f",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 290,
        "y": 2680,
        "wires": [
            [
                "d33b140166f1ad23",
                "6beee22037ee2aa9"
            ]
        ]
    },
    {
        "id": "87b4a58de43b30a3",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 3160,
        "wires": []
    },
    {
        "id": "719455bb37946fef",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "PATH DV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 2920,
        "wires": []
    },
    {
        "id": "09ed5a08b1e35265",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 290,
        "y": 2640,
        "wires": [
            [
                "f81857a99a75e35e"
            ]
        ]
    },
    {
        "id": "7b91e1532b023e4e",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && rm -rf ConsommationErgols2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 430,
        "y": 3380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d0dab6ba9240b050",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_16",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_16",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2740,
        "y": 3260,
        "wires": [
            [
                "5129daa1d332e306"
            ]
        ]
    },
    {
        "id": "5129daa1d332e306",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Wait result",
        "mode": "link",
        "links": [
            "3e6c9d2d86eb5d53"
        ],
        "x": 2875,
        "y": 3260,
        "wires": []
    },
    {
        "id": "3e6c9d2d86eb5d53",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "wait result",
        "links": [
            "5129daa1d332e306"
        ],
        "x": 595,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "439170c1e228a361",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 2320,
        "wires": []
    },
    {
        "id": "09ae8b945b5574ee",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "PATH 1 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3010,
        "y": 2640,
        "wires": []
    },
    {
        "id": "8f83908e97c0974e",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "PATH 2 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3210,
        "y": 2900,
        "wires": []
    },
    {
        "id": "7b0d995a866c24f8",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4700,
        "y": 2460,
        "wires": []
    },
    {
        "id": "ba547653daa2e016",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup23', topic: msg.payload };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 2500,
        "wires": [
            [
                "df235569253a6cd4",
                "bb4d58831852dc2a"
            ]
        ]
    },
    {
        "id": "2258bc63b3f6fd6a",
        "type": "switch",
        "z": "a9c7c6499fb06192",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui23",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 360,
        "y": 2560,
        "wires": [
            [
                "f81857a99a75e35e",
                "32cb1907330d955a",
                "3cf944068aa20bad",
                "a9857019dc5c98d7"
            ]
        ]
    },
    {
        "id": "e0f13308ea4d925e",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cp blue2-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4550,
        "y": 2020,
        "wires": [
            [
                "ec2f9940eefb2f15"
            ],
            [
                "ec2f9940eefb2f15"
            ],
            []
        ]
    },
    {
        "id": "ec2f9940eefb2f15",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST_SAVE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4640,
        "y": 2100,
        "wires": []
    },
    {
        "id": "20438c8aebb665e3",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST AFTER MANEUVER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4750,
        "y": 2180,
        "wires": []
    },
    {
        "id": "93fcaa5749229a79",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "// Define helper functions outside the main function for reuse\nfunction formatNumber(value) {\n    if (typeof value === 'string') {\n        // Remove leading zeros and convert to float\n        let num = parseFloat(value);\n        // If parsing fails, return the original value\n        if (isNaN(num)) return value;\n        return num.toFixed(3);\n    } else if (typeof value === 'number') {\n        return value.toFixed(3);\n    }\n    return value; // Return as is if not string or number\n}\n\nfunction formatEccentricity(value) {\n    if (typeof value === 'string') {\n        // Parse the string as an integer\n        let intVal = parseInt(value, 10);\n        if (isNaN(intVal)) return value;\n        // Multiply by 1e-7 and format in exponential notation with three decimals\n        return (intVal * 1e-7).toExponential(3).toUpperCase();\n    } else if (typeof value === 'number') {\n        return (value * 1e-7).toExponential(3).toUpperCase();\n    }\n    return value; // Return as is if not string or number\n}\n\n// Main function to process the message\nfunction processMessage(msg) {\n    // Check if msg.payload exists\n    if (!msg.payload || !Array.isArray(msg.payload)) {\n        node.error(\"Invalid payload structure. Expected an array.\", msg);\n        return msg;\n    }\n    \n    // Create a new array to store the formatted results\n    let newPayload = [];\n    \n    // Process each item in the payload array\n    msg.payload.forEach((item, index) => {\n        if (item && typeof item === 'object') {\n            // Handle the case where the target fields are in item.payload\n            if (typeof item.payload === 'object' && item.payload !== null && item.payload.version) {\n                let formattedPayload = formatItem(item.payload);\n                // Create a new object with the formatted payload\n                newPayload[index] = formattedPayload;\n            } \n            // Handle the case where the target fields are directly in the item\n            else if (item.version) {\n                newPayload[index] = formatItem(item);\n            }\n            else {\n                // If no version field is found, preserve the original item\n                newPayload[index] = item;\n            }\n        } else {\n            // If the item is not an object, preserve it as is\n            newPayload[index] = item;\n        }\n    });\n    \n    // Replace the original payload with the formatted one\n    newPayload[1] = \"\";\n    msg.payload = newPayload;\n    \n    return msg;\n}\n\n// Function to format fields in an item and return a new formatted object\nfunction formatItem(item) {\n    // Create a new object to avoid modifying the original\n    let formattedItem = {...item};\n    \n    // Format 'incli' if it exists\n    if (formattedItem.hasOwnProperty('incli')) {\n        formattedItem.incli = formatNumber(formattedItem.incli);\n    }\n    // Format 'raan' if it exists\n    if (formattedItem.hasOwnProperty('raan')) {\n        formattedItem.raan = formatNumber(formattedItem.raan);\n    }\n    // Format 'ecc' if it exists\n    if (formattedItem.hasOwnProperty('ecc')) {\n        formattedItem.ecc = formatEccentricity(formattedItem.ecc);\n    }\n    // Format 'aop' if it exists\n    if (formattedItem.hasOwnProperty('aop')) {\n        formattedItem.aop = formatNumber(formattedItem.aop);\n    }\n    // Format 'meana' if it exists\n    if (formattedItem.hasOwnProperty('meana')) {\n        formattedItem.meana = formatNumber(formattedItem.meana);\n    }\n    // Format 'mean' if it exists\n    if (formattedItem.hasOwnProperty('mean')) {\n        formattedItem.mean = formatNumber(formattedItem.mean);\n    }\n    // Format 'dry_mass' if it exists\n    if (formattedItem.hasOwnProperty('dry_mass')) {\n        formattedItem.dry_mass = formatNumber(formattedItem.dry_mass);\n    }\n    // Format 'ergol_mass' if it exists\n    if (formattedItem.hasOwnProperty('ergol_mass')) {\n        formattedItem.ergol_mass = formatNumber(formattedItem.ergol_mass);\n    }\n    // Format 'ergol_consumption' if it exists\n    if (formattedItem.hasOwnProperty('ergol_consumption')) {\n        formattedItem.ergol_consumption = formatNumber(formattedItem.ergol_consumption);\n    }\n    \n    return formattedItem;\n}\n\n// Process the incoming message\nreturn processMessage(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4780,
        "y": 2400,
        "wires": [
            [
                "4c98e0e2f054b831",
                "b18c09cc024a4add"
            ]
        ]
    },
    {
        "id": "8905c2ea81e0de50",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "// Check if msg.payload exists and is an array with at least two elements\nif (msg.payload && Array.isArray(msg.payload) && msg.payload.length >= 2) {\n\n    // Define a helper function to format numbers:\n    // Removes leading zeros and formats to two decimal places\n    function formatNumber(value) {\n        if (typeof value === 'string') {\n            // Remove leading zeros and convert to float\n            let num = parseFloat(value);\n            // If parsing fails, return the original value\n            if (isNaN(num)) return value;\n            return num.toFixed(3);\n        } else if (typeof value === 'number') {\n            return value.toFixed(3);\n        }\n        return value; // Return as is if not string or number\n    }\n\n    // Define a helper function to format eccentricity to scientific notation\n    function formatEccentricity(value) {\n        if (typeof value === 'string') {\n            // Parse the string as an integer\n            let intVal = parseInt(value, 10);\n            if (isNaN(intVal)) return value;\n            // Multiply by 1e-7 and format in exponential notation with two decimals\n            return (intVal * 1e-7).toExponential(3).toUpperCase();\n        } else if (typeof value === 'number') {\n            return (value * 1e-7).toExponential(3).toUpperCase();\n        }\n        return value; // Return as is if not string or number\n    }\n\n    // Iterate over each object in the payload array\n    msg.payload.forEach((item, index) => {\n        // Check if the item has the 'version' field\n        if (item.version) {\n            // Format 'incli' if it exists\n            if (item.hasOwnProperty('incli')) {\n                item.incli = formatNumber(item.incli);\n            }\n\n            // Format 'raan' if it exists\n            if (item.hasOwnProperty('raan')) {\n                item.raan = formatNumber(item.raan);\n            }\n\n            // Format 'ecc' if it exists\n            if (item.hasOwnProperty('ecc')) {\n                item.ecc = formatEccentricity(item.ecc);\n            }\n\n            // Format 'aop' if it exists\n            if (item.hasOwnProperty('aop')) {\n                item.aop = formatNumber(item.aop);\n            }\n\n            // Format 'meana' if it exists\n            if (item.hasOwnProperty('meana')) {\n                item.meana = formatNumber(item.meana);\n            }\n\n            // Format 'mean' if it exists\n            if (item.hasOwnProperty('mean')) {\n                item.mean = formatNumber(item.mean);\n            }\n\n            // Format 'dry_mass' if it exists\n            if (item.hasOwnProperty('dry_mass')) {\n                item.dry_mass = formatNumber(item.dry_mass);\n            }\n\n            // Format 'ergol_mass' if it exists\n            if (item.hasOwnProperty('ergol_mass')) {\n                item.ergol_mass = formatNumber(item.ergol_mass);\n            }\n\n            // Optionally, format 'ergol_consumption' if it exists\n            if (item.hasOwnProperty('ergol_consumption')) {\n                // Assuming you want to format it to two decimal places\n                if (typeof item.ergol_consumption === 'string' || typeof item.ergol_consumption === 'number') {\n                    item.ergol_consumption = formatNumber(item.ergol_consumption);\n                }\n            }\n\n            // Add any additional fields you wish to format here\n        }\n    });\n\n    // After formatting, ensure that the payload array still has two elements\n    // (This step is optional since we're modifying the existing objects)\n    if (msg.payload.length !== 2) {\n        node.warn(\"Payload array does not contain exactly two elements.\");\n    }\n\n} else {\n    // Handle cases where payload is not as expected\n    node.error(\"Invalid payload structure. Expected an array with at least two elements.\", msg);\n}\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4850,
        "y": 2440,
        "wires": [
            [
                "b18c09cc024a4add"
            ]
        ]
    },
    {
        "id": "32cb1907330d955a",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST SWITCH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 2640,
        "wires": []
    },
    {
        "id": "3cf944068aa20bad",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "object to array",
        "func": "msg.payload=msg.topic;\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2500,
        "wires": [
            [
                "5e254f6b6263b38a",
                "f78edff72d5bc307",
                "277df223f42d1eb2"
            ]
        ]
    },
    {
        "id": "5e254f6b6263b38a",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST CONVERT PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2480,
        "wires": []
    },
    {
        "id": "df235569253a6cd4",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST TRIGGER MANUAL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 2400,
        "wires": []
    },
    {
        "id": "ab74b541d4d58e03",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 2600,
        "wires": []
    },
    {
        "id": "e848cec598b68b88",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "60bab848a6e23861",
            "0a415400da9b3f54",
            "f83637b951242d2d",
            "4f0105eee79139d2",
            "eed0fd174995d5b0",
            "655ad19276a8f599",
            "53cadd4ff784c659",
            "d88388a251a33878",
            "79fb1054f6de18d0",
            "8e4842d5d9999187",
            "85667f2df171a6b7",
            "4ed49ade6926a5ea"
        ],
        "x": 4405,
        "y": 2580,
        "wires": [
            [
                "da7faad11c1846eb",
                "feda14dea2ef716e"
            ]
        ]
    },
    {
        "id": "da7faad11c1846eb",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "echange",
        "func": "msg.payload[0] = \"\";\n\n// Ensure the second payload element is an empty string as per your original logic\nmsg.payload[1] = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4590,
        "y": 2540,
        "wires": [
            [
                "b18c09cc024a4add",
                "6fd71d4fc3c990da"
            ]
        ]
    },
    {
        "id": "6fd71d4fc3c990da",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4600,
        "y": 2600,
        "wires": []
    },
    {
        "id": "feda14dea2ef716e",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4460,
        "y": 2460,
        "wires": []
    },
    {
        "id": "4a9c6fdba4c6a991",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Keeping all the original styles */\n    md-card[node-id=\"15ce479d884995ab\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n\n    /* Modal Overlay with improved transitions */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    /* Modal Content with transform animation */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n\n    /* Red Rectangle Inside the Modal Content */\n    .red-rectangle {\n      width: 100px;\n      height: 50px;\n      background-color: red;\n      margin: 20px auto;\n    }\n\n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n\n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n\n    /* Oui Button */\n    #ouiBtn2 {\n      background-color: #4CAF50;\n    }\n\n    #ouiBtn2:hover {\n      background-color: #45a049;\n    }\n\n    /* Non Button */\n    #nonBtn2 {\n      background-color: #f44336;\n    }\n\n    #nonBtn2:hover {\n      background-color: #da190b;\n    }\n\n    /* Keeping all the form styles */\n    .hidden { display: none; }\n    \n    .scrollable-container {\n      max-height: 80vh;\n      overflow-y: auto;\n      padding-right: 10px;\n      scrollbar-width: none;\n      -ms-overflow-style: none;\n    }\n    \n    .scrollable-container::-webkit-scrollbar {\n      display: none;\n    }\n\n    .form-group {\n      margin-bottom: 20px;\n    }\n\n    .form-group label {\n      display: block;\n      margin-bottom: 10px;\n      font-weight: normal;\n      color: #fff;\n      padding-left: 25px;\n    }\n\n    .form-group input,\n    .form-group select {\n      width: 90%;\n      padding: 8px 0;\n      box-sizing: border-box;\n      border: none;\n      background-color: #212c31;\n      color: #fff;\n      border-bottom: 2px solid #666;\n      margin: 0 auto;\n      display: block;\n    }\n\n    .form-group input:focus,\n    .form-group select:focus {\n      outline: none;\n      border-bottom: 2px solid #888;\n    }\n\n    .form-group select option {\n      background-color: #212c31;\n      color: #fff;\n    }\n\n    #formTitle {\n      font-size: 18px;\n      font-weight: normal;\n      color: #fff;\n      margin-top: 25px;\n      margin-bottom: 30px;\n      margin-left: 25px;\n    }\n\n    #inputField {\n      margin-top: 20px;\n    }\n\n    .spacer {\n      height: 30px;\n    }\n\n    #submitButton {\n      margin-top: 20px;\n      margin-left: 25px;\n      padding: 10px 20px;\n      font-size: 16px;\n      font-weight: normal;\n      color: #fff;\n      background-color: rgb(0, 86, 122);\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: background-color 0.3s, transform 0.2s;\n    }\n\n    #submitButton:hover {\n      background-color: rgb(0, 106, 152);\n    }\n\n    #submitButton:active {\n      background-color: rgb(0, 66, 92);\n      transform: scale(0.98);\n    }\n\n    #lastSubmitted {\n      margin-top: 50px;\n      padding: 15px;\n      border: 1px solid #444;\n      border-radius: 4px;\n      background-color: #212c31;\n      color: #fff;\n    }\n\n    #lastSubmitted h3 {\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    #lastSubmitted ul {\n      list-style-type: disc;\n      padding-left: 20px;\n    }\n\n    #lastSubmitted li {\n      margin-bottom: 5px;\n      color: #ddd;\n    }\n\n    #lastSubmitted p {\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    #lastSubmitted ul li strong {\n      color: #fff;\n    }\n  </style>\n</head>\n<body>\n  <md-card node-id=\"15ce479d884995ab\">\n  </md-card>\n\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n      <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Cette action déclenchera une manoeuvre manuelle à partir des paramètres entrés.<br><br>\n        Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn2\">Oui</button>\n        <button id=\"nonBtn2\">Non</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal2');\n      var originalMsg = null;\n\n      function showModal(msg) {\n        originalMsg = msg;\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n\n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n            originalMsg = null;\n          }\n        });\n      }\n\n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState2') {\n          if (event.newValue === 'show') {\n            showModal(JSON.parse(localStorage.getItem('modalMsg2')));\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n\n      // Watch for incoming messages from Node-RED\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState2', 'show');\n          localStorage.setItem('modalMsg2', JSON.stringify(msg));\n          showModal(msg);\n        }\n      });\n\n      // Handle \"Oui\" button click\n      document.getElementById('ouiBtn2').addEventListener('click', function() {\n        var responseMsg = originalMsg ? \n          { payload: 'oui', topic: originalMsg.topic } : \n          { payload: 'oui' };\n        scope.send(responseMsg);\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n\n      // Handle \"Non\" button click\n      document.getElementById('nonBtn2').addEventListener('click', function() {\n        var responseMsg = originalMsg ? \n          { payload: 'non', topic: originalMsg.topic } : \n          { payload: 'non' };\n        scope.send(responseMsg);\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 330,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "a6cb475450e9f4e6",
        "type": "ui_template",
        "z": "a9c7c6499fb06192",
        "d": true,
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n  /* CSS style for labels */\n  #select_20 .md-select-value span,\n  #select_20 .md-text,\n  #select_25 .md-select-value span,\n  #select_25 .md-text {\n    color: #ffffff !important;\n  }\n</style>\n\n<md-input-container>\n  <label for=\"maneuver\">Maneuver</label>\n  <md-select ng-model=\"maneuver\" id=\"select_20\">\n    <md-option value=\"Impulse\">Impulse</md-option>\n    <md-option value=\"Continuous\">Continuous</md-option>\n  </md-select>\n</md-input-container>\n\n<md-input-container>\n  <label for=\"integrator\">Integrator</label>\n  <md-select ng-model=\"integrator\" style=\"color: #ffffff !important;\" id=\"select_25\">\n    <md-option value=\"RK4\">RungeKutta4</md-option>\n    <md-option value=\"DP\">DormandPrince</md-option>\n  </md-select>\n</md-input-container>\n\n<br>\n\n<button ng-click=\"send({payload: {maneuverType: maneuver, integrator: integrator}})\" class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" id=\"thrustButton\">Submit</button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "5eb308965ea40f29",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": ": > /app/maneuver-manager/Result2.txt && : > /app/maneuver-manager/PostManeuverDate2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3140,
        "y": 2680,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7057f37d68008049",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate2.txt",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3420,
        "y": 3180,
        "wires": [
            [
                "b92fe173d4a9acbd"
            ],
            [],
            []
        ]
    },
    {
        "id": "b92fe173d4a9acbd",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3400,
        "y": 3080,
        "wires": [
            [
                "a6d6bc3fe4a2bcd9"
            ]
        ]
    },
    {
        "id": "a6d6bc3fe4a2bcd9",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[\"path_11\", \"path_12\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3630,
        "y": 3080,
        "wires": [
            [
                "a419cae47d3725d1"
            ],
            []
        ]
    },
    {
        "id": "a419cae47d3725d1",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "var max = 6;\nvar random = Math.floor(Math.random() * max);\n\n// Use the message from path_12 for error analysis\nvar errorPayload = msg.paths && msg.paths.path_12 ? msg.paths.path_12 : \"\";\n\nif (errorPayload.includes(\"hyperbolic orbits cannot be handled\")) {\n    if(random == 0){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";\n    }\n    else if(random == 1){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";\n    }\n    else if(random == 2){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Are you deserting?\";\n    }\n    else if(random == 3){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. You aren't qualified for interplanetary flight!\";\n    }\n    else {\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. No French assets in this direction!\";\n    }\n} \nelse if (errorPayload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (errorPayload.includes(\"ERGOL\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (errorPayload.includes(\"Initial date must\")) {\n    msg.errorMessage = \"**Temporal error :** Maneuver order is anterior to last apside reached !\";\nmsg.errorMessage += \" | Last apside: \" + msg.paths.path_11;\n    \n} \nelse if (errorPayload.includes(\"Eccentricity\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver !\";\n} \nelse if (errorPayload.includes(\"parabolic or hyperbolic orbit\")) {\n    msg.errorMessage = \"**Incorrect Delta-V:** The maneuver results in a hyperbolic orbit !\";\n} \nelse {\n    msg.errorMessage = \"Maneuver aborted !\";\n}\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3795,
        "y": 3088,
        "wires": [
            [
                "58c203770cd0239a",
                "b42a778cbea68a9d"
            ]
        ]
    },
    {
        "id": "58c203770cd0239a",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3940,
        "y": 3100,
        "wires": []
    },
    {
        "id": "cbfe95be6c8f719e",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3740,
        "y": 3020,
        "wires": [
            [
                "a6d6bc3fe4a2bcd9"
            ]
        ]
    },
    {
        "id": "b42a778cbea68a9d",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3925,
        "y": 3140,
        "wires": []
    },
    {
        "id": "bb4d58831852dc2a",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "36426cd5b9b3bd96",
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "4b07af770e19997b",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f"
        ],
        "x": 45,
        "y": 2460,
        "wires": []
    },
    {
        "id": "25e790e666584dcd",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "3216b872aa5f404a",
            "39dfb7984ba6d244"
        ],
        "x": 315,
        "y": 2520,
        "wires": [
            [
                "2258bc63b3f6fd6a"
            ]
        ]
    },
    {
        "id": "a9857019dc5c98d7",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "TEST POST ACCEPT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 2460,
        "wires": []
    },
    {
        "id": "bba4a51fb49fea2b",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "// This example sends a message to trigger a reload\nmsg.payload = { reload: true };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3250,
        "y": 2420,
        "wires": [
            [
                "9e4423971a9585b8",
                "e1f1d7f06ef764a3"
            ]
        ]
    },
    {
        "id": "9e4423971a9585b8",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3450,
        "y": 2540,
        "wires": [
            [
                "eaedc0df91619726"
            ]
        ]
    },
    {
        "id": "eaedc0df91619726",
        "type": "websocket out",
        "z": "a9c7c6499fb06192",
        "name": "reload",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 3520,
        "y": 2600,
        "wires": []
    },
    {
        "id": "dacc63efe34a9bbe",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3110,
        "y": 2520,
        "wires": [
            [
                "bba4a51fb49fea2b"
            ]
        ]
    },
    {
        "id": "7d9ca37dad5b6c44",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager && ./clear.sh blue2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3250,
        "y": 2820,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9c7669b3367fb37c",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4660,
        "y": 2680,
        "wires": [
            [
                "37dd9b0d6c5ed1f9"
            ]
        ]
    },
    {
        "id": "520c3c10f905abbb",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "e0b524876b6d2e1b"
        ],
        "x": 2165,
        "y": 2760,
        "wires": [
            [
                "d2fd18757fa421f8",
                "2b8436cea4ab2e73"
            ]
        ]
    },
    {
        "id": "358911c28e241c58",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_10\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1",
        "exactOrder": "true",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2600,
        "y": 2760,
        "wires": [
            [
                "e6a795e2193de1ec",
                "ee45888c972f3341"
            ],
            []
        ]
    },
    {
        "id": "277df223f42d1eb2",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 749,
        "y": 2437,
        "wires": [
            [
                "e0b524876b6d2e1b"
            ]
        ]
    },
    {
        "id": "e0b524876b6d2e1b",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Submit Manoeuver b2",
        "mode": "link",
        "links": [
            "520c3c10f905abbb"
        ],
        "x": 875,
        "y": 2440,
        "wires": []
    },
    {
        "id": "e1f1d7f06ef764a3",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3400,
        "y": 2360,
        "wires": []
    },
    {
        "id": "e6a795e2193de1ec",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2360,
        "y": 2720,
        "wires": [
            [
                "92d04a1ba95b0393"
            ]
        ]
    },
    {
        "id": "92d04a1ba95b0393",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2640,
        "y": 2680,
        "wires": [
            [
                "ee45888c972f3341"
            ]
        ]
    },
    {
        "id": "27b183e107117472",
        "type": "exec",
        "z": "a9c7c6499fb06192",
        "command": "cd /app/maneuver-manager && ./remove_two_lines.sh blue2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4690,
        "y": 3020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b31e3dda5e3cdd67",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "AffichageLastManeuverDate b2",
        "mode": "link",
        "links": [
            "785447d40b10d8aa"
        ],
        "x": 4615,
        "y": 2740,
        "wires": []
    },
    {
        "id": "3f89f666b798bfc6",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4350,
        "y": 3080,
        "wires": [
            [
                "27b183e107117472"
            ]
        ]
    },
    {
        "id": "08579cdb8871d9b2",
        "type": "function",
        "z": "a9c7c6499fb06192",
        "name": "",
        "func": "msg.payload = { \n    isp: '',\n    dv: '' \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 2840,
        "wires": [
            [
                "7df939978ee8b84b"
            ]
        ]
    },
    {
        "id": "d8a9b8c8c2e1cd66",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "reset fields",
        "mode": "link",
        "links": [
            "67b379ed586cb3ab"
        ],
        "x": 3715,
        "y": 2720,
        "wires": []
    },
    {
        "id": "67b379ed586cb3ab",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "d8a9b8c8c2e1cd66"
        ],
        "x": 115,
        "y": 2780,
        "wires": [
            [
                "08579cdb8871d9b2"
            ]
        ]
    },
    {
        "id": "93f5dfbe80e101d0",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "SAVE TRIGGER",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 3525,
        "y": 2680,
        "wires": []
    },
    {
        "id": "d9803094df8b773f",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4610,
        "y": 2200,
        "wires": []
    },
    {
        "id": "d74cc8aee2977a9d",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4890,
        "y": 1460,
        "wires": []
    },
    {
        "id": "096cb0bc679c2cfe",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1720,
        "y": 1780,
        "wires": [
            [
                "ade840aefa3ddf13"
            ]
        ]
    },
    {
        "id": "791ebfa23f821e06",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "CONSO ERGOLS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 1760,
        "wires": []
    },
    {
        "id": "341ea45486c46832",
        "type": "link in",
        "z": "a9c7c6499fb06192",
        "name": "",
        "links": [
            "71dfa5816a53016b"
        ],
        "x": 4685,
        "y": 560,
        "wires": [
            [
                "8689ab60c352e350"
            ]
        ]
    },
    {
        "id": "ef72e5b221396eae",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 3380,
        "wires": []
    },
    {
        "id": "9cc071c54a6f9bd5",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "RETURN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2240,
        "y": 3440,
        "wires": []
    },
    {
        "id": "08718043abd48c55",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 3480,
        "wires": []
    },
    {
        "id": "cd2795483e837e1f",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "link",
        "links": [
            "ed20cce57f1ac24a"
        ],
        "x": 4865,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0f157f682d68492b",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "1250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4760,
        "y": 1040,
        "wires": [
            [
                "cd2795483e837e1f"
            ]
        ]
    },
    {
        "id": "3d31cd17bfeacfc7",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4700,
        "y": 1100,
        "wires": [
            [
                "0f157f682d68492b"
            ]
        ]
    },
    {
        "id": "a4b647fded8bb2dd",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "1250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4700,
        "y": 2940,
        "wires": [
            [
                "72ed8c48f6cc8021"
            ]
        ]
    },
    {
        "id": "72ed8c48f6cc8021",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "",
        "mode": "link",
        "links": [
            "ed20cce57f1ac24a"
        ],
        "x": 4805,
        "y": 2960,
        "wires": []
    },
    {
        "id": "d2fd18757fa421f8",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2350,
        "y": 2760,
        "wires": [
            [
                "358911c28e241c58"
            ]
        ]
    },
    {
        "id": "fbc4f0f2dc7864b2",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2370,
        "y": 1140,
        "wires": [
            [
                "81a75b8dd83d68d9"
            ]
        ]
    },
    {
        "id": "e0e75c23364452bd",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Triger ManeuverOrder",
        "mode": "link",
        "links": [
            "5cce2a0876911472"
        ],
        "x": 2195,
        "y": 1060,
        "wires": []
    },
    {
        "id": "20ebfeb180b061b3",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_69",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_69",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 760,
        "wires": [
            [
                "b089fb2561c492ae"
            ]
        ]
    },
    {
        "id": "b089fb2561c492ae",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_69\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1280,
        "y": 800,
        "wires": [
            [
                "93cecfd0bf213d56",
                "36c0574b7a1b4ae3"
            ],
            []
        ]
    },
    {
        "id": "36c0574b7a1b4ae3",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 760,
        "wires": []
    },
    {
        "id": "ee486cfdad340cc8",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 860,
        "wires": []
    },
    {
        "id": "0727ec67d0063253",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Trigger Manoeuver Order By Time",
        "mode": "link",
        "links": [
            "5cce2a0876911472"
        ],
        "x": 995,
        "y": 680,
        "wires": []
    },
    {
        "id": "367ef4390c7ab24f",
        "type": "delay",
        "z": "a9c7c6499fb06192",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "d0dc599394b98a40"
            ]
        ]
    },
    {
        "id": "cb2f7bdbc8771077",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Trigger Manoeuver Order By Mass",
        "mode": "link",
        "links": [
            "5cce2a0876911472"
        ],
        "x": 95,
        "y": 1540,
        "wires": []
    },
    {
        "id": "2b8436cea4ab2e73",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Triger ManeuverOrder 2",
        "mode": "link",
        "links": [
            "0f501dc84ae381f0"
        ],
        "x": 2225,
        "y": 2700,
        "wires": []
    },
    {
        "id": "9306af734a5ae241",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Trigger Manoeuver Order By Time 2",
        "mode": "link",
        "links": [
            "0f501dc84ae381f0"
        ],
        "x": 745,
        "y": 2320,
        "wires": []
    },
    {
        "id": "7cedab42bc8283e3",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "Trigger Manoeuver Order By Mass 2",
        "mode": "link",
        "links": [
            "0f501dc84ae381f0"
        ],
        "x": 95,
        "y": 3240,
        "wires": []
    },
    {
        "id": "85c5678ffd7d9b60",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "Set path_69",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_69",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 2420,
        "wires": [
            [
                "932973a91ac1e5f0"
            ]
        ]
    },
    {
        "id": "932973a91ac1e5f0",
        "type": "join-wait",
        "z": "a9c7c6499fb06192",
        "name": "",
        "paths": "[ \"path_69\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1280,
        "y": 2420,
        "wires": [
            [
                "70bf8118d2ac4534"
            ],
            []
        ]
    },
    {
        "id": "29645ceac3dd151a",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "save last blue1",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 3415,
        "y": 960,
        "wires": []
    },
    {
        "id": "037981a907a5146a",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "label blue1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "blue1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3270,
        "y": 960,
        "wires": [
            [
                "29645ceac3dd151a"
            ]
        ]
    },
    {
        "id": "c58c8b51154bdad1",
        "type": "change",
        "z": "a9c7c6499fb06192",
        "name": "label blue2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "blue2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 2600,
        "wires": [
            [
                "6b37dc4adcb902d6"
            ]
        ]
    },
    {
        "id": "0b47c6e1b46b768e",
        "type": "inject",
        "z": "a9c7c6499fb06192",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3100,
        "y": 920,
        "wires": [
            [
                "037981a907a5146a"
            ]
        ]
    },
    {
        "id": "6b37dc4adcb902d6",
        "type": "link out",
        "z": "a9c7c6499fb06192",
        "name": "save last blue2",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 3315,
        "y": 2600,
        "wires": []
    },
    {
        "id": "b72fc258f6c39d50",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "test after exhange maggle",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 5010,
        "y": 680,
        "wires": []
    },
    {
        "id": "4c98e0e2f054b831",
        "type": "debug",
        "z": "a9c7c6499fb06192",
        "name": "test after exhange maggl TEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4870,
        "y": 2280,
        "wires": []
    },
    {
        "id": "9a32e760c91d0c76",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "r1 timesettermaneuver IN",
        "links": [
            "f2933fa8dba20ac9",
            "f53aa6e3c64b4915"
        ],
        "x": 575,
        "y": 740,
        "wires": [
            [
                "4ff06731f763d657",
                "2fa3cd0d5cd71d34",
                "5513b9091d2e24c5"
            ]
        ]
    },
    {
        "id": "4ff06731f763d657",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 740,
        "wires": [
            [
                "9ba3d9f206d099a0",
                "7bb37ad899dfb297"
            ]
        ]
    },
    {
        "id": "efffac38476e2350",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 640,
        "wires": [
            [
                "9ba3d9f206d099a0",
                "8c7603495710c933"
            ]
        ]
    },
    {
        "id": "9ba3d9f206d099a0",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1100,
        "y": 720,
        "wires": [
            [
                "6b9e75580cf20be6"
            ],
            []
        ]
    },
    {
        "id": "6b9e75580cf20be6",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 720,
        "wires": [
            [
                "fb34aef586ba33e2",
                "50d003e7f4de3d14",
                "a2206ab0f440b14a"
            ]
        ]
    },
    {
        "id": "9d360545171979f2",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 620,
        "wires": [
            [
                "c4227d51ad394570"
            ]
        ]
    },
    {
        "id": "c4227d51ad394570",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], msg.paths.path_6[0].dx, msg.paths.path_6[0].dy, msg.paths.path_6[0].dz, msg.paths.path_6[0].dura]; 0\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 620,
        "wires": [
            [
                "3995763d6874ae60"
            ]
        ]
    },
    {
        "id": "096511bb842ff0a0",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 460,
        "wires": [
            [
                "39b73cab18ee6e64",
                "a98c4f4529487caf"
            ]
        ]
    },
    {
        "id": "fb34aef586ba33e2",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 660,
        "wires": [
            [
                "39b73cab18ee6e64",
                "86a9a02d685e29c3",
                "e2a75452be14bfaa"
            ]
        ]
    },
    {
        "id": "39b73cab18ee6e64",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_6\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1680,
        "y": 600,
        "wires": [
            [
                "9d360545171979f2"
            ],
            []
        ]
    },
    {
        "id": "3995763d6874ae60",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2410,
        "y": 620,
        "wires": [
            [
                "2b9085a4e72d811b"
            ]
        ]
    },
    {
        "id": "2b9085a4e72d811b",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2610,
        "y": 620,
        "wires": [
            [
                "261e6a36e0fd183f"
            ]
        ]
    },
    {
        "id": "261e6a36e0fd183f",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2840,
        "y": 620,
        "wires": [
            [
                "ec1a6ca22c61f729",
                "9195d34086babaf8"
            ]
        ]
    },
    {
        "id": "006fd8d675d6c5b8",
        "type": "ui_form",
        "z": "4f2d767445be8316",
        "d": true,
        "name": "",
        "label": "BLUE1-Vehicle-Continuous",
        "group": "5a7810372552815e",
        "order": 2,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Dry mass (kg)",
                "value": "drymass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Ergol mass (kg)",
                "value": "ergolmass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Thrust (N)",
                "value": "thrust",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (s)",
                "value": "isp",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Surf Ref (m²)",
                "value": "surfref",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "drymass": "",
            "ergolmass": "",
            "thrust": "",
            "isp": "",
            "surfref": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 420,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "223ef7149c8782d4",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 900,
        "wires": [
            [
                "15a9819528912f2e",
                "586fa5aca4b3cb55"
            ]
        ]
    },
    {
        "id": "9ba4492bd90e520d",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 940,
        "wires": [
            [
                "15a9819528912f2e",
                "c625e2f7c8e0d2bc"
            ]
        ]
    },
    {
        "id": "15a9819528912f2e",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_1\", \"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1740,
        "y": 900,
        "wires": [
            [
                "87b53270bbc5e0ed",
                "5fb86bc4a112710e"
            ],
            []
        ]
    },
    {
        "id": "4e5d3c0d31b7dc8a",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 880,
        "wires": [
            [
                "ef3dbb21f3283204"
            ]
        ]
    },
    {
        "id": "5513b9091d2e24c5",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "query for r1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 800,
        "wires": [
            [
                "2a45b4236184685d"
            ]
        ]
    },
    {
        "id": "2a45b4236184685d",
        "type": "mongodb in",
        "z": "4f2d767445be8316",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 800,
        "y": 880,
        "wires": [
            [
                "4e5d3c0d31b7dc8a",
                "b7c674b6b9cf1366",
                "dfe4833461b38e5c",
                "d5d44c7751055fde"
            ]
        ]
    },
    {
        "id": "ef3dbb21f3283204",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1210,
        "y": 880,
        "wires": [
            [
                "d21ec3d6e066cea6"
            ]
        ]
    },
    {
        "id": "50d003e7f4de3d14",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 860,
        "wires": [
            [
                "15a9819528912f2e",
                "0550f34b3cf39fc6"
            ]
        ]
    },
    {
        "id": "022645828bb11952",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2130,
        "y": 960,
        "wires": [
            [
                "4a8a59d314e3ce50",
                "8d4db535cb7ae899"
            ]
        ]
    },
    {
        "id": "4a8a59d314e3ce50",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2310,
        "y": 980,
        "wires": [
            [
                "f2bd66e7b4e3fb8a"
            ]
        ]
    },
    {
        "id": "f2bd66e7b4e3fb8a",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2570,
        "y": 980,
        "wires": [
            [
                "eb8924e681c66fc9",
                "25c357314ed07e45"
            ]
        ]
    },
    {
        "id": "a5b2e35365b9397b",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 960,
        "wires": [
            [
                "022645828bb11952",
                "ac2d1e6842146c79"
            ]
        ]
    },
    {
        "id": "eb8924e681c66fc9",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "time of maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*1.0;\n\nvar myDate = new Date(datecurrent);\ndate= (myDate.toGMTString());\n\n\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 960,
        "wires": [
            [
                "9c65cef95909529e"
            ]
        ]
    },
    {
        "id": "89f890a5bab4b81e",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red1 -DcommandParameter=executeManeuver -jar ImpulseManeuver.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3490,
        "y": 780,
        "wires": [
            [
                "208a165916b755c6",
                "19d97ec49e761047",
                "42f281ba75293a37",
                "2362705d7baa151b",
                "17903653f6e421d0"
            ],
            [
                "da1181d94f6fb5ea",
                "d16f67ef448f7fc6",
                "cc8ac76d8461ea4b",
                "aa80dd655c7beba9",
                "eff471ab8387163b",
                "42f281ba75293a37"
            ],
            []
        ]
    },
    {
        "id": "ec1a6ca22c61f729",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 760,
        "wires": [
            [
                "bf6e00d19d81b035"
            ]
        ]
    },
    {
        "id": "9c65cef95909529e",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 840,
        "wires": [
            [
                "bf6e00d19d81b035",
                "5eab3d9de23d87ae"
            ]
        ]
    },
    {
        "id": "bf6e00d19d81b035",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\", \"path_10\"]",
        "pathsToExpire": "[ \"path_4\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "900",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3240,
        "y": 800,
        "wires": [
            [
                "89f890a5bab4b81e",
                "0c891626d5f6e170",
                "173cef215dee3fac"
            ],
            []
        ]
    },
    {
        "id": "85b40fe1014a2487",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "RAZ Result injection",
        "func": "msg.payload = null\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 420,
        "wires": [
            [
                "6efee1669ffbf737"
            ]
        ]
    },
    {
        "id": "6efee1669ffbf737",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1930,
        "y": 420,
        "wires": [
            [
                "b9e65beddb4b2926"
            ]
        ]
    },
    {
        "id": "b9e65beddb4b2926",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Result-RAZ",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2190,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a7c3a7001115ffa6",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Result3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 420,
        "wires": [
            [
                "85b40fe1014a2487"
            ]
        ]
    },
    {
        "id": "208a165916b755c6",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "query to read Result3.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3830,
        "y": 660,
        "wires": [
            [
                "96cae82b667ec452"
            ]
        ]
    },
    {
        "id": "96cae82b667ec452",
        "type": "file in",
        "z": "4f2d767445be8316",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4070,
        "y": 680,
        "wires": [
            [
                "e3177b104586045f",
                "36ba5d801ed86a64"
            ]
        ]
    },
    {
        "id": "e3177b104586045f",
        "type": "join",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4250,
        "y": 660,
        "wires": [
            [
                "fc0e9997158e7745"
            ]
        ]
    },
    {
        "id": "fc0e9997158e7745",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3790,
        "y": 820,
        "wires": [
            [
                "002acd42b4dd7a1f",
                "36ba5d801ed86a64"
            ]
        ]
    },
    {
        "id": "002acd42b4dd7a1f",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n-12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 780,
        "wires": [
            [
                "44f917bbba931bc4",
                "36ba5d801ed86a64"
            ]
        ]
    },
    {
        "id": "44f917bbba931bc4",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass=msg.payload[0].ergolmass;\ngs.dry_mass=msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 860,
        "wires": [
            [
                "5053b9511df5ecf9"
            ]
        ]
    },
    {
        "id": "89f5c1c0106215dc",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "update all for R1 OUT",
        "mode": "link",
        "links": [
            "2a754af658e107d7"
        ],
        "x": 4755,
        "y": 760,
        "wires": []
    },
    {
        "id": "25c357314ed07e45",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "time of post-maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*1.0;\n\n\nmsg.payload = datecurrent\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 1100,
        "wires": [
            [
                "4536b8a6b04811b1",
                "98ed2195d0ddf092"
            ]
        ]
    },
    {
        "id": "4536b8a6b04811b1",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 1100,
        "wires": [
            [
                "07160f97dee5aeab"
            ]
        ]
    },
    {
        "id": "07160f97dee5aeab",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 1140,
        "wires": [
            [
                "19c407b4a279b942"
            ]
        ]
    },
    {
        "id": "19c407b4a279b942",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "query to fill b1 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 1140,
        "wires": [
            [
                "724ae3a9b11e02ad"
            ]
        ]
    },
    {
        "id": "724ae3a9b11e02ad",
        "type": "split",
        "z": "4f2d767445be8316",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2670,
        "y": 1180,
        "wires": [
            [
                "2459c6bfc3b6f0c4"
            ]
        ]
    },
    {
        "id": "2459c6bfc3b6f0c4",
        "type": "mongodb out",
        "z": "4f2d767445be8316",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert r1 time tle mongo",
        "collection": "peritimer1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2850,
        "y": 1180,
        "wires": []
    },
    {
        "id": "7fa62cc3381d8044",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Tle r1-postMan-OUT",
        "mode": "link",
        "links": [
            "7e5337741e7dc71f"
        ],
        "x": 4395,
        "y": 960,
        "wires": []
    },
    {
        "id": "f7e175de797e36b0",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4410,
        "y": 920,
        "wires": [
            [
                "7fa62cc3381d8044"
            ]
        ]
    },
    {
        "id": "a5a05dd1ad3726d1",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "MMB1",
        "info": "",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "e3634e7a529af982",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 400,
        "y": 280,
        "wires": []
    },
    {
        "id": "9a00f6de5ce45bd8",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 460,
        "y": 320,
        "wires": []
    },
    {
        "id": "c68d3b6f7a2e0b26",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 180,
        "y": 280,
        "wires": []
    },
    {
        "id": "19568b3c15d13c64",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 580,
        "y": 280,
        "wires": []
    },
    {
        "id": "98ed2195d0ddf092",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "red1-date-storage",
        "filename": "red1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2950,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "fb5d94a57d65aebc",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 440,
        "y": 240,
        "wires": []
    },
    {
        "id": "dbe09708b56f44e3",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1900,
        "y": 800,
        "wires": []
    },
    {
        "id": "a822970aecd03aa4",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Thrust param + Manoeuver Delay",
        "info": "",
        "x": 1370,
        "y": 580,
        "wires": []
    },
    {
        "id": "224c8f493b332547",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Here we store the new start date because the positions of the satellite before the manoeuver  are now false",
        "info": "",
        "x": 2640,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5c452bf7944dd5df",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4860,
        "y": 660,
        "wires": [
            [
                "bc9fdc36edcd1ae8",
                "420b489607adb100"
            ]
        ]
    },
    {
        "id": "3374b7e67e1b30f4",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "fabrication de la string",
        "info": "",
        "x": 4020,
        "y": 980,
        "wires": []
    },
    {
        "id": "e0698be3b716683e",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 1290,
        "y": 760,
        "wires": []
    },
    {
        "id": "990b5c4ec634950a",
        "type": "catch",
        "z": "4f2d767445be8316",
        "name": "",
        "scope": [
            "89f890a5bab4b81e"
        ],
        "uncaught": false,
        "x": 3410,
        "y": 980,
        "wires": [
            [
                "da1181d94f6fb5ea"
            ]
        ]
    },
    {
        "id": "5053b9511df5ecf9",
        "type": "switch",
        "z": "4f2d767445be8316",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4480,
        "y": 860,
        "wires": [
            [
                "ed2daf9212775d45",
                "89f5c1c0106215dc",
                "2a04ea13883dcac8",
                "ccd315e6a8429c7e",
                "19dee0ea29a053a4",
                "ca9db7a635b99391",
                "a21f4f8b72bc90c4"
            ],
            [
                "5835c48cc1b16c66"
            ]
        ]
    },
    {
        "id": "2f76ee7a0c6dd17d",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4510,
        "y": 680,
        "wires": []
    },
    {
        "id": "944c87b4c4bfac96",
        "type": "ui_table",
        "z": "4f2d767445be8316",
        "group": "c02dcce485dfb187",
        "name": "TLE display",
        "order": 1,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "version",
                "title": "Ver.",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "incli",
                "title": "Incli (°)",
                "width": "82",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "raan",
                "title": "RAAN (°)",
                "width": "95",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ecc",
                "title": "Ecc",
                "width": "75",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "aop",
                "title": "AoP (°)",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "meana",
                "title": "M.Ano",
                "width": "85",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mean",
                "title": "M.Motion",
                "width": "101",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ergol_mass",
                "title": "Ergols (kg)",
                "width": "108",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4810,
        "y": 280,
        "wires": []
    },
    {
        "id": "c9cb958b1c7b3f4e",
        "type": "join",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4870,
        "y": 540,
        "wires": [
            [
                "d87c198169f5a96a"
            ]
        ]
    },
    {
        "id": "bc9fdc36edcd1ae8",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4890,
        "y": 600,
        "wires": [
            [
                "c9cb958b1c7b3f4e"
            ]
        ]
    },
    {
        "id": "413cf2bd0b8dbdb2",
        "type": "file in",
        "z": "4f2d767445be8316",
        "name": "read red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4100,
        "y": 320,
        "wires": [
            [
                "579ac2d28ae766e3",
                "71d764747878aaaa"
            ]
        ]
    },
    {
        "id": "47bfbbc6e6f6e4b0",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Old tle storage",
        "filename": "red1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4120,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "579ac2d28ae766e3",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4150,
        "y": 400,
        "wires": [
            [
                "47bfbbc6e6f6e4b0",
                "4313cdf4504a0adc"
            ]
        ]
    },
    {
        "id": "8d38905b1ce76ff8",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "11/05/23",
        "info": "",
        "x": 4580,
        "y": 520,
        "wires": []
    },
    {
        "id": "389c3d55659292b3",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "TLE visualizer R1",
        "links": [
            "1ad21657b2842d69"
        ],
        "x": 3635,
        "y": 220,
        "wires": [
            [
                "b30c9a58dd04c1a9",
                "413cf2bd0b8dbdb2"
            ]
        ]
    },
    {
        "id": "66a5d326608ed97d",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "TLE visualizer R1 out",
        "mode": "link",
        "links": [
            "3e84b71925909505"
        ],
        "x": 4885,
        "y": 360,
        "wires": []
    },
    {
        "id": "4313cdf4504a0adc",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4330,
        "y": 400,
        "wires": [
            [
                "5573604b48379ec1"
            ]
        ]
    },
    {
        "id": "5573604b48379ec1",
        "type": "join",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4480,
        "y": 360,
        "wires": [
            [
                "4389d77112dc8721",
                "bb6270cb0bbbd4b3",
                "bf24afc835dc2b5b"
            ]
        ]
    },
    {
        "id": "c5f1c976a0cf7434",
        "type": "switch",
        "z": "4f2d767445be8316",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Init TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4760,
        "y": 360,
        "wires": [
            [
                "66a5d326608ed97d"
            ]
        ]
    },
    {
        "id": "4389d77112dc8721",
        "type": "split",
        "z": "4f2d767445be8316",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4620,
        "y": 360,
        "wires": [
            [
                "c5f1c976a0cf7434"
            ]
        ]
    },
    {
        "id": "ccd315e6a8429c7e",
        "type": "file in",
        "z": "4f2d767445be8316",
        "name": "read red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4060,
        "y": 520,
        "wires": [
            [
                "ee56db0f5b3b353f"
            ]
        ]
    },
    {
        "id": "ee56db0f5b3b353f",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4110,
        "y": 560,
        "wires": [
            [
                "c76a1ecc2b69b552",
                "57273097c1c07349"
            ]
        ]
    },
    {
        "id": "c76a1ecc2b69b552",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Old tle storage",
        "filename": "red1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4220,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "bb6270cb0bbbd4b3",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "echange",
        "func": "if (msg.payload[0].version === \"New TLE\") {\n    // Create a copy of the first payload object to avoid mutating the original directly\n    var tmp = { ...msg.payload[0] };\n\n    // Helper function to remove leading zeros and format to two decimal places\n    function formatNumber(value) {\n        return parseFloat(value).toFixed(3);\n    }\n\n    // Format 'incli' from \"002.0000\" to \"2.00\"\n    tmp.incli = formatNumber(tmp.incli);\n\n    // Format 'raan' from \"003.0000\" to \"3.00\"\n    tmp.raan = formatNumber(tmp.raan);\n\n    // Format 'ecc' from \"0000001\" to \"1.00E-7\"\n    // Assuming \"0000001\" represents 1e-7\n    tmp.ecc = (parseInt(tmp.ecc, 10) * 1e-7).toExponential(3).toUpperCase();\n\n    // Format 'aop' from \"003.0000\" to \"3.00\"\n    tmp.aop = formatNumber(tmp.aop);\n\n    // Format 'meana' from \"003.0000\" to \"3.00\"\n    tmp.meana = formatNumber(tmp.meana);\n\n    // Format 'mean' from \"15.83035000000000\" to \"15.83\"\n    tmp.mean = parseFloat(tmp.mean).toFixed(3);\n\n    // Format 'dry_mass' from \"1000.00000\" to \"1000.00\"\n    tmp.dry_mass = parseFloat(tmp.dry_mass).toFixed(3);\n\n    // Format 'ergol_mass' from \"4000.00000\" to \"4000.00\"\n    tmp.ergol_mass = parseFloat(tmp.ergol_mass).toFixed(3);\n\n    // Update the payload with the formatted object\n    msg.payload[0] = tmp;\n\n    // Ensure the second payload element is an empty string as per your original logic\n    msg.payload[1] = \"\";\n}\nelse {\n    // Create a copy of the first payload object to avoid mutating the original directly\n    var tmp = { ...msg.payload[0] };\n\n    // Helper function to remove leading zeros and format to two decimal places\n    function formatNumber(value) {\n        return parseFloat(value).toFixed(3);\n    }\n\n    // Format 'incli' from \"002.0000\" to \"2.00\"\n    tmp.incli = formatNumber(tmp.incli);\n\n    // Format 'raan' from \"003.0000\" to \"3.00\"\n    tmp.raan = formatNumber(tmp.raan);\n\n    // Format 'ecc' from \"0000001\" to \"1.00E-7\"\n    // Assuming \"0000001\" represents 1e-7\n    tmp.ecc = (parseInt(tmp.ecc, 10) * 1e-7).toExponential(3).toUpperCase();\n\n    // Format 'aop' from \"003.0000\" to \"3.00\"\n    tmp.aop = formatNumber(tmp.aop);\n\n    // Format 'meana' from \"003.0000\" to \"3.00\"\n    tmp.meana = formatNumber(tmp.meana);\n\n    // Format 'mean' from \"15.83035000000000\" to \"15.83\"\n    tmp.mean = parseFloat(tmp.mean).toFixed(3);\n\n    // Format 'dry_mass' from \"1000.00000\" to \"1000.00\"\n    tmp.dry_mass = parseFloat(tmp.dry_mass).toFixed(2);\n\n    // Format 'ergol_mass' from \"4000.00000\" to \"4000.00\"\n    tmp.ergol_mass = parseFloat(tmp.ergol_mass).toFixed(2);\n\n    // Update the payload with the formatted object\n    msg.payload[0] = tmp;\n\n    // Ensure the second payload element is an empty string as per your original logic\n    msg.payload[1] = \"\";\n\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4620,
        "y": 440,
        "wires": [
            [
                "a1c7b890280b30a7",
                "944c87b4c4bfac96"
            ]
        ]
    },
    {
        "id": "d21ec3d6e066cea6",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 920,
        "wires": [
            [
                "9ba4492bd90e520d"
            ]
        ]
    },
    {
        "id": "87b53270bbc5e0ed",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Data3.txt format",
        "func": "var N; // Mean motion in rev/day\nvar n; // See the expression later \nvar a; // Semi-major axis\nvar acube; // acube = a³ \nvar e; // Eccentricity\n\nvar mu = 398600.4418;\n// var mu = 398600; // Earth's standard gravitational parameter\n// var J = 86164; // Wrong value changed on the 240523\nvar J = 86400; // A day expressed in seconds \n\nN = msg.paths.path_2[7]; // The mean motion in rev/day\nn = 2 * Math.PI * N / J; // n = 2π/T where T = J/N\nacube = mu / (n * n); // acube = a³ \na = Math.cbrt(acube); // Compute the cubic root for a\ne = Number(msg.paths.path_2[4]) / 10000000; // Convert TLE formatted eccentricity to a real number \ne = e.toFixed(7);\n\n// Initialize variables with default values\nvar durastop = msg.paths.path_3[0] + 1.0 + 1.0;\nvar thrust = \"0\";\nvar dv = \"0\";\nvar isp = \"0\";\nvar drymass = \"0\";\nvar ergolmass = \"0\";\nvar surface = \"0\";\nvar myDate = new Date(msg.paths.path_3[1]);\nDATE = myDate.toISOString(); // Format the date to ISO string\n\n// CORRECTION 050723\n// Removed unnecessary and inaccurate date parsing code\n\n// Assign values if they are valid numbers\nif (!isNaN(msg.isp)) { isp = msg.isp; }\nif (!isNaN(msg.dv)) { dv = msg.dv; }\nif (!isNaN(msg.paths.path_13[1])) { ergolmass = msg.paths.path_13[1]; }\nif (!isNaN(msg.paths.path_13[0])) { drymass = msg.paths.path_13[0]; }\n\n// **New Addition: Set maneuverType to \"Impulse\" if it's not provided**\nif (msg.maneuverType == null || msg.maneuverType === undefined || msg.maneuverType === \"\") {\n    msg.maneuverType = \"Impulse\";\n}\n\nmsg.payload = [\n    \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thrust, ISP, Ergol mass, Simu duration stop, ManeuverType, DV\",\n    DATE,\n    a,\n    e,\n    msg.paths.path_2[2],\n    msg.paths.path_2[3],\n    msg.paths.path_2[5],\n    msg.paths.path_2[6],\n    drymass,\n    surface,\n    thrust,\n    isp,\n    ergolmass,\n    durastop,\n    msg.maneuverType, // Now guaranteed to have a value\n    dv\n];\n\n// 03/05/2023 I had to change the column to take the AoP from it was coded column 7 I changed for 8 because 7 is a blank space \nreturn msg;\n\n// 160523 I changed the access to the orbital \n// parameters they are in the payload in an array\n// \"2010-01-01T11:59:26.000\"\n\n// This function was changed on the 240523 because of wrong values on the J (duration of a day in seconds) \n// And to improve the readability\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 960,
        "wires": [
            [
                "a5b2e35365b9397b"
            ]
        ]
    },
    {
        "id": "f05236c369b3685e",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 580,
        "wires": [
            [
                "e8bdcafac5f0f244"
            ]
        ]
    },
    {
        "id": "e8bdcafac5f0f244",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 580,
        "wires": [
            [
                "efffac38476e2350",
                "e8c7ea1a8c95075e"
            ]
        ]
    },
    {
        "id": "b7c674b6b9cf1366",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 840,
        "wires": [
            [
                "a0117cbe18ad7dfd"
            ]
        ]
    },
    {
        "id": "a0117cbe18ad7dfd",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1270,
        "y": 800,
        "wires": [
            [
                "f05236c369b3685e"
            ]
        ]
    },
    {
        "id": "49dc898c27d2775a",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 250,
        "y": 320,
        "wires": []
    },
    {
        "id": "36a1bbe8e5ed28e0",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 70,
        "y": 320,
        "wires": []
    },
    {
        "id": "b30c9a58dd04c1a9",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Init TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3940,
        "y": 220,
        "wires": [
            [
                "5573604b48379ec1",
                "0925203471b2eb39"
            ]
        ]
    },
    {
        "id": "57273097c1c07349",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4370,
        "y": 560,
        "wires": [
            [
                "c9cb958b1c7b3f4e"
            ]
        ]
    },
    {
        "id": "da1181d94f6fb5ea",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3760,
        "y": 980,
        "wires": []
    },
    {
        "id": "71d764747878aaaa",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4470,
        "y": 300,
        "wires": []
    },
    {
        "id": "a2206ab0f440b14a",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 720,
        "wires": []
    },
    {
        "id": "7bb37ad899dfb297",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 800,
        "wires": []
    },
    {
        "id": "8c7603495710c933",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 640,
        "wires": []
    },
    {
        "id": "5086454b4a623228",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 170,
        "y": 240,
        "wires": []
    },
    {
        "id": "2a04ea13883dcac8",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4210,
        "y": 920,
        "wires": [
            [
                "f7e175de797e36b0"
            ]
        ]
    },
    {
        "id": "36ba5d801ed86a64",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4230,
        "y": 820,
        "wires": []
    },
    {
        "id": "ed2daf9212775d45",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4760,
        "y": 820,
        "wires": [
            [
                "66424b21c51293f5"
            ]
        ]
    },
    {
        "id": "66424b21c51293f5",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 4795,
        "y": 920,
        "wires": []
    },
    {
        "id": "d16f67ef448f7fc6",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "var max=6;\nvar random = Math.floor(Math.random() * max);\n\nif (msg.payload.includes(\"hyperbolic orbits cannot be handled\")){\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "be1bb9bba660fad6",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 3915,
        "y": 900,
        "wires": []
    },
    {
        "id": "e9a1e3a5e7088540",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4100,
        "y": 160,
        "wires": [
            [
                "413cf2bd0b8dbdb2"
            ]
        ]
    },
    {
        "id": "6c2ad2de52bd60f6",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4090,
        "y": 100,
        "wires": []
    },
    {
        "id": "8eaab1efdb6719dd",
        "type": "catch",
        "z": "4f2d767445be8316",
        "name": "",
        "scope": [
            "413cf2bd0b8dbdb2"
        ],
        "uncaught": false,
        "x": 3750,
        "y": 100,
        "wires": [
            [
                "e9a1e3a5e7088540",
                "6c2ad2de52bd60f6"
            ]
        ]
    },
    {
        "id": "ff9c69d211f7c42a",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Orientation computing",
        "func": "\nvar Dx;\nvar Dy;\nvar Dz;\n\n// theta is related to Dz it is the angle around x or y \n\n//PREPARATION STEP\n\n// theta est le complement a 90 de beta\nvar theta = 90 - msg.payload.beta\n// converting theta to rad and computing\n//the vector composition of the thrust\nDx = 1*Math.sin(theta*Math.PI/180)*Math.cos(msg.payload.alpha*Math.PI/180);\nDy = 1*Math.sin(theta*Math.PI/180)*Math.sin(msg.payload.alpha*Math.PI/180);\nDz = 1*Math.cos(theta*Math.PI/180)\n\nvar tab = []\nvar gs = {}\n\ngs.dx = Dx\ngs.dy = Dy\ngs.dz = Dz\ngs.dura = msg.payload.duration\n\n\ntab.push(gs)\nmsg.body = msg.payload\nmsg.payload = tab\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 420,
        "wires": [
            [
                "a7c3a7001115ffa6",
                "615999b336343ec8"
            ]
        ]
    },
    {
        "id": "e3ce1354021396d3",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "c8a7959a4b0f55f9",
        "name": "Thrust-Orientation",
        "order": 1,
        "width": 10,
        "height": 6,
        "format": "<!-- Load Three.js -->\n<script id=\"libraryThreeDL\" src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n\n<div id=\"angle-input\" style=\"display: flex; justify-content: center; align-items: center;\">\n    <label for=\"alpha\">Alpha (°): </label>\n    <input type=\"number\" id=\"alpha\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n\n    <label for=\"beta\">Beta (°): </label>\n    <input type=\"number\" id=\"beta\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n</div>\n<button id=\"thrustButton\">Thrust Orientation</button>\n<div id=\"canvas-container\" style=\"display: flex; justify-content: center; align-items: center;\"></div>\n\n<script >\n//document.addEventListener(\"DOMContentLoaded\", function() {\nfunction chargerLibrairie(url,callback) {\n    var script = document.createElement('script');\n    script.type='text/javascript';\n    script.src=url;\n    script.onload=callback;\n\n    document.head.appendChild(script);\n}\n\n(function(scope) {\n    \n    chargerLibrairie('https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',function (){\n    \n    var button = document.getElementById(\"thrustButton\");\n    button.style.backgroundColor = \"firebrick\"; // Blue background color\n    button.style.color = \"#ffffff\"; // White text color\n    button.style.border = \"none\"; // Remove border\n    button.style.padding = \"10px 20px\"; // Add padding for better appearance\n     button.style.borderRadius = \"2px\"; // Add rounded edges\n  //  console.log(scope);\n    var alphaInput = document.getElementById(\"alpha\");\n    var betaInput = document.getElementById(\"beta\");\n    var durationInput = 1;\n    var canvasContainer = document.getElementById(\"canvas-container\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    var noderedStandardUnit = 48;// Nodered unit in pixels\n\n    var heightOfWidget = Number(scope.height)*noderedStandardUnit\n    var widthOfWidget=Number(scope.width)*noderedStandardUnit\n\n\n    renderer.setSize(widthOfWidget,heightOfWidget- noderedStandardUnit);\n    \n    canvasContainer.appendChild(renderer.domElement);\n    renderer.setClearColor(new THREE.Color(0x212C31));\n    // add the cubesat\n\n\n//CUBE SATELLITE\n    var cubeside=1\n    var geometry = new THREE.BoxBufferGeometry(cubeside,cubeside,cubeside);\n    var material = new THREE.MeshStandardMaterial({\n    color: 0x929292,          // Base color of the metal\n    metalness: 0.7,             // Set to 1 for a full metallic surface\n    roughness: 0.5,           // Adjust the roughness to control reflection blur\n    \n    });\n   //var material = new THREE.MeshStandardMaterial({ color: 0xAAAAAA, metalness: 1, roughness: 0.5 });\n    //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n     \n    alphaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    alphaInput.style.color = \"#ffffff\"; // White text color\n    betaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    betaInput.style.color = \"#ffffff\"; // White text color\n   \n//ARROWS\n    var arrowOrigin = new THREE.Vector3(0, 0, 0);\n    var arrowDirection = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionX = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionY = new THREE.Vector3(0, 0, 1); // Initial direction\n    var arrowDirectionZ = new THREE.Vector3(1, 0, 0); // Initial direction\n    var arrowLength = 1.4; // Length of the arrow\n    var arrowLengthUnit = 1; // Length of the arrow\n    var arrowColorRed = 0xff0000; // Red color\n    var arrowColorYellow = 0xffff00; // Yellow color\n    var arrowColorBlue = 0x0000ff; // Blue color\n    var arrowColorGreen = 0x00ff00; //Green color\n    var arrowHelper = new THREE.ArrowHelper(arrowDirection, arrowOrigin, arrowLength, arrowColorYellow);\n    var arrowHelperX = new THREE.ArrowHelper(arrowDirectionX, arrowOrigin,arrowLengthUnit, arrowColorRed);\n    var arrowHelperY = new THREE.ArrowHelper(arrowDirectionY, arrowOrigin, arrowLengthUnit, arrowColorGreen);\n    var arrowHelperZ = new THREE.ArrowHelper(arrowDirectionZ, arrowOrigin, arrowLengthUnit, arrowColorBlue);\n    \n    scene.add(arrowHelper);\n    scene.add(arrowHelperX);\n    scene.add(arrowHelperY);\n    scene.add(arrowHelperZ);\n    \n//CAMERA POSITION\n\n    camera.position.set(1.6,1.6,1.6); // Set position like this\n    camera.lookAt(new THREE.Vector3(0,0,0)); // Set look at coordinate like this\n    \n//TRAJECTORY\n\n    const ringgeometry = new THREE.RingGeometry( 36, 36.02, 90 ); \n    const ringmaterial = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n    const mesh = new THREE.Mesh( ringgeometry, ringmaterial );\n    mesh.position.set(-36, 0, 0);\n    scene.add( mesh );\n    \n//EARTH\n\n    var sphereGeometry = new THREE.SphereBufferGeometry(34, 32, 32);\n    var sphereMaterial = new THREE.MeshStandardMaterial({\n    color: 0x002654,          // Base color of the metal\n    metalness: 0,             // Set to 1 for a full metallic surface\n    roughness: 0.5           // Adjust the roughness to control reflection blur\n\n    });\n    //var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x021437 });\n    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n    sphere.position.set(-36, 0, 0); // Position the sphere along the -X axis\n    scene.add(sphere);\n    \n//SUN DIRECTIONAL LIGHT\n    \n    const directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );\n    directionalLight.position.set(15,5,5);\n    scene.add( directionalLight );\n    ambient = new THREE.AmbientLight(0xffffff, 0.2);\n    scene.add(ambient);\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n\n        // Obtenir les valeurs d'alpha et beta en radians\n        var alpha = alphaInput.value * Math.PI / 180;\n        var beta = betaInput.value * Math.PI / 180;\n        \n        // Calculate THETA\n        var theta = Math.PI / 2 - beta;\n\n        // Compute coordinates \n        var y = Math.sin(theta) * Math.cos(alpha);\n        var z = Math.sin(theta) * Math.sin(alpha);\n        var x = Math.cos(theta);\n\n        // Up dates direction of the arrow \n        arrowHelper.setDirection(new THREE.Vector3(x, y, z));\n        cube.lookAt(new THREE.Vector3(x, y, z))\n        renderer.render(scene, camera);\n    }\n\n    function updateOrientation(scope) {\n        animate();\n\n        var alpha = parseFloat(alphaInput.value);\n        var beta = parseFloat(betaInput.value);\n        var duration= durationInput;\n        // Send output (Alpha Beta)\n        scope.send({ payload: { alpha: alpha, beta: beta, duration: duration } });\n    }\n\n    animate();\n\n    document.getElementById(\"thrustButton\").addEventListener(\"click\", function() {\n        updateOrientation(scope);\n    });\n\n    });\n//window.onload = function() {\n//document.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    \n\n\n})(scope);\n//}); \n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 420,
        "wires": [
            [
                "ff9c69d211f7c42a",
                "6eb141fefa240c7c",
                "2a9c46302c289eb8",
                "ef488a750c5c550e"
            ]
        ]
    },
    {
        "id": "5fb86bc4a112710e",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 900,
        "wires": []
    },
    {
        "id": "6eb141fefa240c7c",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "ORientation",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 520,
        "wires": []
    },
    {
        "id": "19d97ec49e761047",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3600,
        "y": 500,
        "wires": []
    },
    {
        "id": "b935ea55e093ecc2",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 840,
        "wires": []
    },
    {
        "id": "905d8b0581e760c7",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "c8a7959a4b0f55f9",
        "name": "RED1 Vehicule template",
        "order": 5,
        "width": 10,
        "height": "3",
        "format": "<style>\n  .form-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    margin-top: 35px;\n  }\n\n  .parameters-row {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 10px;\n    margin-top: 20px;\n  }\n\n  .column {\n    flex: 1;\n    padding: 0 10px;\n    max-width: 300px;\n    box-sizing: border-box;\n  }\n\n  .md-input-container {\n    width: 100%;\n    margin: 10px 0px;\n    color: #ffffff !important;\n  }\n\n  .md-input-container label {\n    color: #ffffff !important;\n    font-weight: bold !important;\n  }\n\n  /* Ensure the option text appears white */\n  md-select .md-select-value,\n  md-option {\n    color: #ffffff !important;\n  }\n\n  .button-container {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 0 10px;\n    box-sizing: border-box;\n  }\n\n  .button-container button {\n    width: 100%;\n    margin-top: 10px;\n  }\n\n  .button-container button:first-child {\n    margin-top: 20px;\n  }\n\n  .third-row {\n    margin-bottom: 30px;\n  }\n\n  .result-display {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    color: white;\n    margin: 15px 0;\n  }\n\n  .result-value {\n    font-weight: bold;\n    color: #ffcc00;\n  }\n</style>\n\n<!-- HTML form structure -->\n<form id=\"myForm2\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n  <div class=\"form-container\">\n    <!-- Maneuver type field (only one option: Impulse) -->\n    <div class=\"parameters-row\">\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_maneuver\">Maneuver Type</label>\n          <md-select ng-model=\"msg.payload.maneuverType\" id=\"select_20\" name=\"maneuverType\"\n            ng-change=\"send({payload: msg.payload})\">\n            <md-option value=\"Impulse\">Impulse</md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </div>\n\n    <!-- DV and Surface fields -->\n    <div class=\"parameters-row\">\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_dv\">DV (m/s)</label>\n          <input type=\"text\" id=\"form2_dv\" name=\"dv\" ng-model=\"msg.payload.dv\" ng-change=\"send({payload: msg.payload})\">\n        </md-input-container>\n      </div>\n\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_isp\">ISP (s)</label>\n          <input type=\"text\" id=\"form2_isp\" name=\"isp\" ng-model=\"msg.payload.isp\" ng-change=\"send({payload: msg.payload})\">\n        </md-input-container>\n      </div>\n    </div>\n\n\n  </div>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 230,
        "y": 940,
        "wires": [
            [
                "93e49120f2bc6a7a",
                "b935ea55e093ecc2",
                "9b7cb58463a802fc",
                "5513b9091d2e24c5",
                "e34d92e03eba1e82"
            ]
        ]
    },
    {
        "id": "8d4db535cb7ae899",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 900,
        "wires": []
    },
    {
        "id": "ac2d1e6842146c79",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 860,
        "wires": []
    },
    {
        "id": "c625e2f7c8e0d2bc",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 1000,
        "wires": []
    },
    {
        "id": "586fa5aca4b3cb55",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1180,
        "wires": []
    },
    {
        "id": "0550f34b3cf39fc6",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e8c7ea1a8c95075e",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 580,
        "wires": []
    },
    {
        "id": "a98c4f4529487caf",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 520,
        "wires": []
    },
    {
        "id": "86a9a02d685e29c3",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 700,
        "wires": []
    },
    {
        "id": "8ba73265de457a06",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "c8a7959a4b0f55f9",
        "name": "Affichage Conso",
        "order": 6,
        "width": 10,
        "height": 2,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Affichage Ergols</title>\n   \n    <!-- Style pour masquer la barre de défilement tout en permettant le défilement -->\n    <style>\n        /* Conteneur principal pour masquer la barre de défilement */\n        .scroll-container {\n            height: 100vh;\n            overflow-y: scroll; /* Activer le défilement vertical */\n            scrollbar-width: none; /* Masquer la barre pour Firefox */\n        }\n\n        /* Masquer la barre de défilement pour Chrome, Safari, etc. */\n        .scroll-container::-webkit-scrollbar {\n            display: none; /* Masquer la barre de défilement */\n        }\n    </style>\n</head>\n\n<body>\n        <!-- Conteneur principal avec défilement masqué -->\n    <div class=\"scroll-container\">\n    <!-- Section pour afficher Ergols restants -->\n    <div class=\"result-display\">\n        Ergols disponibles avant maneuvre (kg) : <span class=\"form2_ergolRemaining result-value\">--</span>\n    </div>\n\n    <!-- Section pour afficher Consommation d'ergols -->\n    <div class=\"result-display\">\n        Consommation d'ergols (kg) : <span class=\"form2_ergolResult result-value\">--</span>\n    </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        (function(scope) {\n            // Utiliser $watch pour surveiller les changements dans le payload\n            scope.$watch('msg.payload', function(payload) {\n                console.log(\"Payload reçu :\", payload);  // Pour vérifier si le payload est bien reçu\n                if (payload) {\n                     // Définissez ici la valeur des ergols restants (valeur statique à adapter selon le besoin)\n                    let ergolsRestants = payload.path_14[2]; // Exemple de valeur statique (à remplacer par une donnée dynamique si nécessaire)\n\n                    // Mise à jour de la valeur \"Ergols restants\"\n                    let formattedErgolsRestants = ergolsRestants.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    let remainingElements = document.getElementsByClassName(\"form2_ergolRemaining\");\n                    for (let i = 0; i < remainingElements.length; i++) {\n                        remainingElements[i].textContent = formattedErgolsRestants + \" kg\";\n            }\n                    let consommation = payload.path_15[0].consommationErgols;\n                    \n                    // Formattage en notation française\n                    let formattedConsommation = consommation.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    \n                    // Mettre à jour toutes les instances de consommation d'ergols\n                    let elements = document.getElementsByClassName(\"form2_ergolResult\");\n                    for (let i = 0; i < elements.length; i++) {\n                        elements[i].textContent = formattedConsommation + \" kg\";\n                    }\n                } else {\n                    console.log(\"Payload non valide ou consommationErgols manquant\");\n                }\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 460,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "9b7cb58463a802fc",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 1000,
        "wires": []
    },
    {
        "id": "93e49120f2bc6a7a",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 940,
        "wires": [
            [
                "229e955885708815",
                "0972fa72a9e8da92"
            ]
        ]
    },
    {
        "id": "74309c559640a365",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && rm -rf Ergols3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 230,
        "y": 380,
        "wires": [
            [],
            [
                "7a9fc66d4bb725af"
            ],
            [
                "159348dc70c4c0eb"
            ]
        ]
    },
    {
        "id": "229e955885708815",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[\"path_11\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 700,
        "y": 1000,
        "wires": [
            [
                "8dc8939366aec4aa",
                "cb075aa8f48ac20e"
            ],
            []
        ]
    },
    {
        "id": "0972fa72a9e8da92",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1060,
        "wires": []
    },
    {
        "id": "159348dc70c4c0eb",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 480,
        "wires": []
    },
    {
        "id": "7a9fc66d4bb725af",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 420,
        "wires": []
    },
    {
        "id": "8dc8939366aec4aa",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Ergols3.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar path11 = (msg.paths && msg.paths.path_11) ? msg.paths.path_11 : {};\nvar pathArray2 = (msg.paths && msg.paths.path_13) ? msg.paths.path_13 : [0.0,0.0,0.0];\n\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray2[0] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray2[1] || 0; // Troisième élément ou 0 si non défini\nvar DV = path11.dv || 0; // Quatrième élément ou 0 si non défini\nvar isp = path11.isp|| 0;// Premier élément ou 0 si non défini\nvar maneuvertype = path11.maneuverType  || \"Unknown\"; // Deuxième élément ou 0 si non défini\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"DryMass, ErgolMass, DV, ManeuverType, ISP\",\n    drymass, ergolmass, DV, maneuvertype, isp\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1120,
        "wires": [
            [
                "3591b0f387a69e60",
                "a8faf6e623fe22df",
                "183f1246f0d1b817"
            ]
        ]
    },
    {
        "id": "183f1246f0d1b817",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Ergols3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 1200,
        "wires": [
            [
                "571f0b470b27698d",
                "e3bd9ac64f058046"
            ]
        ]
    },
    {
        "id": "571f0b470b27698d",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1030,
        "y": 1380,
        "wires": [
            [
                "4c26779eead3f43c",
                "13deb8cf44310477"
            ]
        ]
    },
    {
        "id": "e3bd9ac64f058046",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 1200,
        "wires": []
    },
    {
        "id": "13deb8cf44310477",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 1340,
        "wires": []
    },
    {
        "id": "4c26779eead3f43c",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1350,
        "y": 1380,
        "wires": [
            [
                "d6c113c2c560a4a5"
            ]
        ]
    },
    {
        "id": "d6c113c2c560a4a5",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1550,
        "y": 1380,
        "wires": [
            [
                "06ce127725587857"
            ]
        ]
    },
    {
        "id": "06ce127725587857",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red1 -DcommandParameter=consommationErgols -jar ImpulseManeuver.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 1970,
        "y": 1380,
        "wires": [
            [
                "abe227e000e5214e"
            ],
            [],
            []
        ]
    },
    {
        "id": "abe227e000e5214e",
        "type": "file in",
        "z": "4f2d767445be8316",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ConsommationErgols3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2250,
        "y": 1360,
        "wires": [
            [
                "048cb8621871cf0e"
            ]
        ]
    },
    {
        "id": "048cb8621871cf0e",
        "type": "join",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2430,
        "y": 1360,
        "wires": [
            [
                "0d16707ea63b4a5b"
            ]
        ]
    },
    {
        "id": "0d16707ea63b4a5b",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 1360,
        "wires": [
            [
                "30adaf6da3462727",
                "7fe5088056024a67",
                "0cb1e8511eb701a8"
            ]
        ]
    },
    {
        "id": "7fe5088056024a67",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2810,
        "y": 1420,
        "wires": []
    },
    {
        "id": "30adaf6da3462727",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.consommationErgols = parseFloat(msg.payload[n-1])\n\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 1360,
        "wires": [
            [
                "72f52d0e904cfb59",
                "5ec869069701aaae"
            ]
        ]
    },
    {
        "id": "72f52d0e904cfb59",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3090,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5ec869069701aaae",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Ergols out",
        "mode": "link",
        "links": [
            "7de63f3634ead021"
        ],
        "x": 3075,
        "y": 1380,
        "wires": []
    },
    {
        "id": "56cd0ba8f832bfb2",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 1360,
        "wires": []
    },
    {
        "id": "7de63f3634ead021",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "Ergols in",
        "links": [
            "5ec869069701aaae"
        ],
        "x": 95,
        "y": 1360,
        "wires": [
            [
                "56cd0ba8f832bfb2",
                "8f07519cecb26ee3",
                "7ee6fad0ea4d9243",
                "dd666ed4e8e7046a"
            ]
        ]
    },
    {
        "id": "0925203471b2eb39",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4390,
        "y": 220,
        "wires": []
    },
    {
        "id": "dfe4833461b38e5c",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "ergols",
        "func": "if (msg.payload && msg.payload[0]) {\n    // Assurez-vous que les propriétés existent et ne sont pas null avant de les insérer dans le tableau\n    const dry_mass = msg.payload[0].dry_mass !== undefined ? msg.payload[0].dry_mass : 0;\n    const ergol_mass = msg.payload[0].ergol_mass !== undefined ? msg.payload[0].ergol_mass : 0;\n    const ergol_consumption = msg.payload[0].ergol_consumption !== null && msg.payload[0].ergol_consumption !== undefined ? msg.payload[0].ergol_consumption : 0.0;\n\n    // Créer un tableau avec les valeurs\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"Le payload ne contient pas les données attendues.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 940,
        "wires": [
            [
                "e49b7b92d6a879ee"
            ]
        ]
    },
    {
        "id": "e49b7b92d6a879ee",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1250,
        "y": 960,
        "wires": [
            [
                "62959f0c03cc43d6",
                "d513e4df752f7c2a"
            ]
        ]
    },
    {
        "id": "62959f0c03cc43d6",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "object to array",
        "func": "// Découper le CSV en lignes\nlet csvData = msg.payload.split('\\n');\n\n// Vérifier si la deuxième ligne existe\nif (csvData.length > 1) {\n    // Récupérer la deuxième ligne (index 1)\n    let secondLine = csvData[1].trim();\n\n    // Découper la deuxième ligne par espaces ou tabulations\n    let values = secondLine.split(/\\s+/); // Utilisation de \\s+ pour capturer les espaces multiples\n\n    // Convertir les valeurs en nombres (si applicable)\n    let dry_mass = parseFloat(values[0]) || 0;\n    let ergol_mass = parseFloat(values[1]) || 0;\n    let ergol_consumption = parseFloat(values[2]) || 0;\n\n    // Placer les valeurs dans un tableau\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"La deuxième ligne n'existe pas.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1000,
        "wires": [
            [
                "bd215d37d4ab979c"
            ]
        ]
    },
    {
        "id": "bd215d37d4ab979c",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 1080,
        "wires": [
            [
                "229e955885708815",
                "83465f7ff9726ae7",
                "15a9819528912f2e"
            ]
        ]
    },
    {
        "id": "83465f7ff9726ae7",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "PATH 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d5d44c7751055fde",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 760,
        "wires": []
    },
    {
        "id": "d513e4df752f7c2a",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1120,
        "wires": []
    },
    {
        "id": "420b489607adb100",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4870,
        "y": 720,
        "wires": []
    },
    {
        "id": "4570b59cbe263a1a",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "In maneuvre prédéfinie",
        "links": [
            "84b5da682c47b7e7",
            "adfd078d23f1890b"
        ],
        "x": 4655,
        "y": 400,
        "wires": [
            [
                "e9ec1d6bef1279cc",
                "96e84a62bf26f96a",
                "20ccdd50cada8723"
            ]
        ]
    },
    {
        "id": "0f7bc9bf76d66d24",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "ERGOLS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 1180,
        "wires": []
    },
    {
        "id": "8f07519cecb26ee3",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_15",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_15",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "3ca85f9bfbb7a92e",
                "3591b0f387a69e60"
            ]
        ]
    },
    {
        "id": "3591b0f387a69e60",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "e868e0adb162058d",
                "3ca85f9bfbb7a92e"
            ]
        ]
    },
    {
        "id": "3ca85f9bfbb7a92e",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[\"path_14\",\"path_15\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 220,
        "y": 1080,
        "wires": [
            [
                "86b7288ba0a120c2"
            ],
            []
        ]
    },
    {
        "id": "e868e0adb162058d",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1280,
        "wires": []
    },
    {
        "id": "86b7288ba0a120c2",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "// Suppose que msg.payload contient déjà des informations\nlet paths = msg.paths; // Supposons que les chemins sont dans msg.paths\n\n// Ajouter les informations de paths dans payload\nmsg.payload = paths;\n\n// Retourner le message avec paths inclus dans payload\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "0f7bc9bf76d66d24",
                "8ba73265de457a06"
            ]
        ]
    },
    {
        "id": "df0db872c03bcd07",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "Ergol Mass Update",
        "links": [
            "2a1e9040f57c85ee"
        ],
        "x": 145,
        "y": 680,
        "wires": [
            [
                "d31ceb01c6a5c98e",
                "b664ed0eb4a7f451"
            ]
        ]
    },
    {
        "id": "d31ceb01c6a5c98e",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 270,
        "y": 720,
        "wires": [
            [
                "8dc8939366aec4aa",
                "93e49120f2bc6a7a"
            ]
        ]
    },
    {
        "id": "a8faf6e623fe22df",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1200,
        "wires": []
    },
    {
        "id": "cb075aa8f48ac20e",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "PATH DV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 960,
        "wires": []
    },
    {
        "id": "b664ed0eb4a7f451",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 270,
        "y": 660,
        "wires": [
            [
                "5513b9091d2e24c5"
            ]
        ]
    },
    {
        "id": "7ee6fad0ea4d9243",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && rm -rf ConsommationErgols3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 370,
        "y": 1420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "0cb1e8511eb701a8",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_16",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_16",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2750,
        "y": 1300,
        "wires": [
            [
                "d915889dbf810084"
            ]
        ]
    },
    {
        "id": "d915889dbf810084",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Wait result",
        "mode": "link",
        "links": [
            "354a91cf489b681d"
        ],
        "x": 2885,
        "y": 1300,
        "wires": []
    },
    {
        "id": "354a91cf489b681d",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "wait result",
        "links": [
            "d915889dbf810084"
        ],
        "x": 605,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "2a9c46302c289eb8",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 360,
        "wires": []
    },
    {
        "id": "9195d34086babaf8",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "PATH 1 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3020,
        "y": 680,
        "wires": []
    },
    {
        "id": "5eab3d9de23d87ae",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "PATH 2 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3220,
        "y": 940,
        "wires": []
    },
    {
        "id": "a1c7b890280b30a7",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4710,
        "y": 500,
        "wires": []
    },
    {
        "id": "4a06bfb5f6401b99",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup33', topic: msg.payload };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 540,
        "wires": [
            [
                "07eace0d52de4fe2",
                "01ec2e5ddc1eb73c"
            ]
        ]
    },
    {
        "id": "a6d0d2d64344baea",
        "type": "switch",
        "z": "4f2d767445be8316",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui33",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 600,
        "wires": [
            [
                "5513b9091d2e24c5",
                "c531a4c12d95e6c2",
                "2fa3cd0d5cd71d34",
                "024a9d33e7667a6d"
            ]
        ]
    },
    {
        "id": "e9ec1d6bef1279cc",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cp red1-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4540,
        "y": 80,
        "wires": [
            [
                "cfbe5cd742c578ea"
            ],
            [
                "cfbe5cd742c578ea"
            ],
            []
        ]
    },
    {
        "id": "cfbe5cd742c578ea",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST_SAVE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4650,
        "y": 140,
        "wires": []
    },
    {
        "id": "96e84a62bf26f96a",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST AFTER MANEUVER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 220,
        "wires": []
    },
    {
        "id": "20ccdd50cada8723",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "echange",
        "func": "// Define helper functions outside the main function for reuse\nfunction formatNumber(value) {\n    if (typeof value === 'string') {\n        // Remove leading zeros and convert to float\n        let num = parseFloat(value);\n        // If parsing fails, return the original value\n        if (isNaN(num)) return value;\n        return num.toFixed(3);\n    } else if (typeof value === 'number') {\n        return value.toFixed(3);\n    }\n    return value; // Return as is if not string or number\n}\n\nfunction formatEccentricity(value) {\n    if (typeof value === 'string') {\n        // Parse the string as an integer\n        let intVal = parseInt(value, 10);\n        if (isNaN(intVal)) return value;\n        // Multiply by 1e-7 and format in exponential notation with three decimals\n        return (intVal * 1e-7).toExponential(3).toUpperCase();\n    } else if (typeof value === 'number') {\n        return (value * 1e-7).toExponential(3).toUpperCase();\n    }\n    return value; // Return as is if not string or number\n}\n\n// Main function to process the message\nfunction processMessage(msg) {\n    // Check if msg.payload exists\n    if (!msg.payload || !Array.isArray(msg.payload)) {\n        node.error(\"Invalid payload structure. Expected an array.\", msg);\n        return msg;\n    }\n    \n    // Create a new array to store the formatted results\n    let newPayload = [];\n    \n    // Process each item in the payload array\n    msg.payload.forEach((item, index) => {\n        if (item && typeof item === 'object') {\n            // Handle the case where the target fields are in item.payload\n            if (typeof item.payload === 'object' && item.payload !== null && item.payload.version) {\n                let formattedPayload = formatItem(item.payload);\n                // Create a new object with the formatted payload\n                newPayload[index] = formattedPayload;\n            } \n            // Handle the case where the target fields are directly in the item\n            else if (item.version) {\n                newPayload[index] = formatItem(item);\n            }\n            else {\n                // If no version field is found, preserve the original item\n                newPayload[index] = item;\n            }\n        } else {\n            // If the item is not an object, preserve it as is\n            newPayload[index] = item;\n        }\n    });\n    \n    // Replace the original payload with the formatted one\n    newPayload[1] = \"\";\n    msg.payload = newPayload;\n    \n    return msg;\n}\n\n// Function to format fields in an item and return a new formatted object\nfunction formatItem(item) {\n    // Create a new object to avoid modifying the original\n    let formattedItem = {...item};\n    \n    // Format 'incli' if it exists\n    if (formattedItem.hasOwnProperty('incli')) {\n        formattedItem.incli = formatNumber(formattedItem.incli);\n    }\n    // Format 'raan' if it exists\n    if (formattedItem.hasOwnProperty('raan')) {\n        formattedItem.raan = formatNumber(formattedItem.raan);\n    }\n    // Format 'ecc' if it exists\n    if (formattedItem.hasOwnProperty('ecc')) {\n        formattedItem.ecc = formatEccentricity(formattedItem.ecc);\n    }\n    // Format 'aop' if it exists\n    if (formattedItem.hasOwnProperty('aop')) {\n        formattedItem.aop = formatNumber(formattedItem.aop);\n    }\n    // Format 'meana' if it exists\n    if (formattedItem.hasOwnProperty('meana')) {\n        formattedItem.meana = formatNumber(formattedItem.meana);\n    }\n    // Format 'mean' if it exists\n    if (formattedItem.hasOwnProperty('mean')) {\n        formattedItem.mean = formatNumber(formattedItem.mean);\n    }\n    // Format 'dry_mass' if it exists\n    if (formattedItem.hasOwnProperty('dry_mass')) {\n        formattedItem.dry_mass = formatNumber(formattedItem.dry_mass);\n    }\n    // Format 'ergol_mass' if it exists\n    if (formattedItem.hasOwnProperty('ergol_mass')) {\n        formattedItem.ergol_mass = formatNumber(formattedItem.ergol_mass);\n    }\n    // Format 'ergol_consumption' if it exists\n    if (formattedItem.hasOwnProperty('ergol_consumption')) {\n        formattedItem.ergol_consumption = formatNumber(formattedItem.ergol_consumption);\n    }\n    \n    return formattedItem;\n}\n\n// Process the incoming message\nreturn processMessage(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4760,
        "y": 420,
        "wires": [
            [
                "944c87b4c4bfac96"
            ]
        ]
    },
    {
        "id": "d87c198169f5a96a",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "echange",
        "func": "// Check if msg.payload exists and is an array with at least two elements\nif (msg.payload && Array.isArray(msg.payload) && msg.payload.length >= 2) {\n\n    // Define a helper function to format numbers:\n    // Removes leading zeros and formats to two decimal places\n    function formatNumber(value) {\n        if (typeof value === 'string') {\n            // Remove leading zeros and convert to float\n            let num = parseFloat(value);\n            // If parsing fails, return the original value\n            if (isNaN(num)) return value;\n            return num.toFixed(3);\n        } else if (typeof value === 'number') {\n            return value.toFixed(3);\n        }\n        return value; // Return as is if not string or number\n    }\n\n    // Define a helper function to format eccentricity to scientific notation\n    function formatEccentricity(value) {\n        if (typeof value === 'string') {\n            // Parse the string as an integer\n            let intVal = parseInt(value, 10);\n            if (isNaN(intVal)) return value;\n            // Multiply by 1e-7 and format in exponential notation with two decimals\n            return (intVal * 1e-7).toExponential(3).toUpperCase();\n        } else if (typeof value === 'number') {\n            return (value * 1e-7).toExponential(3).toUpperCase();\n        }\n        return value; // Return as is if not string or number\n    }\n\n    // Iterate over each object in the payload array\n    msg.payload.forEach((item, index) => {\n        // Check if the item has the 'version' field\n        if (item.version) {\n            // Format 'incli' if it exists\n            if (item.hasOwnProperty('incli')) {\n                item.incli = formatNumber(item.incli);\n            }\n\n            // Format 'raan' if it exists\n            if (item.hasOwnProperty('raan')) {\n                item.raan = formatNumber(item.raan);\n            }\n\n            // Format 'ecc' if it exists\n            if (item.hasOwnProperty('ecc')) {\n                item.ecc = formatEccentricity(item.ecc);\n            }\n\n            // Format 'aop' if it exists\n            if (item.hasOwnProperty('aop')) {\n                item.aop = formatNumber(item.aop);\n            }\n\n            // Format 'meana' if it exists\n            if (item.hasOwnProperty('meana')) {\n                item.meana = formatNumber(item.meana);\n            }\n\n            // Format 'mean' if it exists\n            if (item.hasOwnProperty('mean')) {\n                item.mean = formatNumber(item.mean);\n            }\n\n            // Format 'dry_mass' if it exists\n            if (item.hasOwnProperty('dry_mass')) {\n                item.dry_mass = formatNumber(item.dry_mass);\n            }\n\n            // Format 'ergol_mass' if it exists\n            if (item.hasOwnProperty('ergol_mass')) {\n                item.ergol_mass = formatNumber(item.ergol_mass);\n            }\n\n            // Optionally, format 'ergol_consumption' if it exists\n            if (item.hasOwnProperty('ergol_consumption')) {\n                // Assuming you want to format it to two decimal places\n                if (typeof item.ergol_consumption === 'string' || typeof item.ergol_consumption === 'number') {\n                    item.ergol_consumption = formatNumber(item.ergol_consumption);\n                }\n            }\n\n            // Add any additional fields you wish to format here\n        }\n    });\n\n    // After formatting, ensure that the payload array still has two elements\n    // (This step is optional since we're modifying the existing objects)\n    if (msg.payload.length !== 2) {\n        node.warn(\"Payload array does not contain exactly two elements.\");\n    }\n\n} else {\n    // Handle cases where payload is not as expected\n    node.error(\"Invalid payload structure. Expected an array with at least two elements.\", msg);\n}\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4860,
        "y": 480,
        "wires": [
            [
                "944c87b4c4bfac96"
            ]
        ]
    },
    {
        "id": "c531a4c12d95e6c2",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST SWITCH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 680,
        "wires": []
    },
    {
        "id": "2fa3cd0d5cd71d34",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "object to array",
        "func": "msg.payload=msg.topic;\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 540,
        "wires": [
            [
                "2e8a84addd093a45",
                "223ef7149c8782d4",
                "bc1ca184c9da8666"
            ]
        ]
    },
    {
        "id": "2e8a84addd093a45",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST CONVERT PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 520,
        "wires": []
    },
    {
        "id": "07eace0d52de4fe2",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST TRIGGER MANUAL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 440,
        "wires": []
    },
    {
        "id": "1173deafe80a9948",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 640,
        "wires": []
    },
    {
        "id": "ab78159c4ce3225b",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "",
        "links": [
            "60bab848a6e23861",
            "0a415400da9b3f54",
            "f83637b951242d2d",
            "4f0105eee79139d2",
            "eed0fd174995d5b0",
            "655ad19276a8f599",
            "53cadd4ff784c659",
            "d88388a251a33878",
            "79fb1054f6de18d0",
            "8e4842d5d9999187",
            "85667f2df171a6b7",
            "4ed49ade6926a5ea"
        ],
        "x": 4435,
        "y": 620,
        "wires": [
            [
                "2010d3d1f4d085c5",
                "4ebb9214103c13bf"
            ]
        ]
    },
    {
        "id": "2010d3d1f4d085c5",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "echange",
        "func": "msg.payload[0] = \"\";\n\n// Ensure the second payload element is an empty string as per your original logic\nmsg.payload[1] = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4600,
        "y": 580,
        "wires": [
            [
                "944c87b4c4bfac96",
                "8190a6b61c66d9e5"
            ]
        ]
    },
    {
        "id": "8190a6b61c66d9e5",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4610,
        "y": 640,
        "wires": []
    },
    {
        "id": "4ebb9214103c13bf",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4470,
        "y": 500,
        "wires": []
    },
    {
        "id": "4146094f2cac81cc",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "3befc064653e026e",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Keeping all the original styles */\n    md-card[node-id=\"15ce479d884995ab\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n\n    /* Modal Overlay with improved transitions */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    /* Modal Content with transform animation */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n\n    /* Red Rectangle Inside the Modal Content */\n    .red-rectangle {\n      width: 100px;\n      height: 50px;\n      background-color: red;\n      margin: 20px auto;\n    }\n\n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n\n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n\n    /* Oui Button */\n    #ouiBtn2 {\n      background-color: #4CAF50;\n    }\n\n    #ouiBtn2:hover {\n      background-color: #45a049;\n    }\n\n    /* Non Button */\n    #nonBtn2 {\n      background-color: #f44336;\n    }\n\n    #nonBtn2:hover {\n      background-color: #da190b;\n    }\n\n    /* Keeping all the form styles */\n    .hidden { display: none; }\n    \n    .scrollable-container {\n      max-height: 80vh;\n      overflow-y: auto;\n      padding-right: 10px;\n      scrollbar-width: none;\n      -ms-overflow-style: none;\n    }\n    \n    .scrollable-container::-webkit-scrollbar {\n      display: none;\n    }\n\n    .form-group {\n      margin-bottom: 20px;\n    }\n\n    .form-group label {\n      display: block;\n      margin-bottom: 10px;\n      font-weight: normal;\n      color: #fff;\n      padding-left: 25px;\n    }\n\n    .form-group input,\n    .form-group select {\n      width: 90%;\n      padding: 8px 0;\n      box-sizing: border-box;\n      border: none;\n      background-color: #212c31;\n      color: #fff;\n      border-bottom: 2px solid #666;\n      margin: 0 auto;\n      display: block;\n    }\n\n    .form-group input:focus,\n    .form-group select:focus {\n      outline: none;\n      border-bottom: 2px solid #888;\n    }\n\n    .form-group select option {\n      background-color: #212c31;\n      color: #fff;\n    }\n\n    #formTitle {\n      font-size: 18px;\n      font-weight: normal;\n      color: #fff;\n      margin-top: 25px;\n      margin-bottom: 30px;\n      margin-left: 25px;\n    }\n\n    #inputField {\n      margin-top: 20px;\n    }\n\n    .spacer {\n      height: 30px;\n    }\n\n    #submitButton {\n      margin-top: 20px;\n      margin-left: 25px;\n      padding: 10px 20px;\n      font-size: 16px;\n      font-weight: normal;\n      color: #fff;\n      background-color: rgb(0, 86, 122);\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: background-color 0.3s, transform 0.2s;\n    }\n\n    #submitButton:hover {\n      background-color: rgb(0, 106, 152);\n    }\n\n    #submitButton:active {\n      background-color: rgb(0, 66, 92);\n      transform: scale(0.98);\n    }\n\n    #lastSubmitted {\n      margin-top: 50px;\n      padding: 15px;\n      border: 1px solid #444;\n      border-radius: 4px;\n      background-color: #212c31;\n      color: #fff;\n    }\n\n    #lastSubmitted h3 {\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    #lastSubmitted ul {\n      list-style-type: disc;\n      padding-left: 20px;\n    }\n\n    #lastSubmitted li {\n      margin-bottom: 5px;\n      color: #ddd;\n    }\n\n    #lastSubmitted p {\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    #lastSubmitted ul li strong {\n      color: #fff;\n    }\n  </style>\n</head>\n<body>\n  <md-card node-id=\"15ce479d884995ab\">\n  </md-card>\n\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n      <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Cette action déclenchera une manoeuvre manuelle à partir des paramètres entrés.<br><br>\n        Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn2\">Oui</button>\n        <button id=\"nonBtn2\">Non</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal2');\n      var originalMsg = null;\n\n      function showModal(msg) {\n        originalMsg = msg;\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n\n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n            originalMsg = null;\n          }\n        });\n      }\n\n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState2') {\n          if (event.newValue === 'show') {\n            showModal(JSON.parse(localStorage.getItem('modalMsg2')));\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n\n      // Watch for incoming messages from Node-RED\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState2', 'show');\n          localStorage.setItem('modalMsg2', JSON.stringify(msg));\n          showModal(msg);\n        }\n      });\n\n      // Handle \"Oui\" button click\n      document.getElementById('ouiBtn2').addEventListener('click', function() {\n        var responseMsg = originalMsg ? \n          { payload: 'oui', topic: originalMsg.topic } : \n          { payload: 'oui' };\n        scope.send(responseMsg);\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n\n      // Handle \"Non\" button click\n      document.getElementById('nonBtn2').addEventListener('click', function() {\n        var responseMsg = originalMsg ? \n          { payload: 'non', topic: originalMsg.topic } : \n          { payload: 'non' };\n        scope.send(responseMsg);\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "d1472c6b216d2762",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "d": true,
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n  /* CSS style for labels */\n  #select_20 .md-select-value span,\n  #select_20 .md-text,\n  #select_25 .md-select-value span,\n  #select_25 .md-text {\n    color: #ffffff !important;\n  }\n</style>\n\n<md-input-container>\n  <label for=\"maneuver\">Maneuver</label>\n  <md-select ng-model=\"maneuver\" id=\"select_20\">\n    <md-option value=\"Impulse\">Impulse</md-option>\n    <md-option value=\"Continuous\">Continuous</md-option>\n  </md-select>\n</md-input-container>\n\n<md-input-container>\n  <label for=\"integrator\">Integrator</label>\n  <md-select ng-model=\"integrator\" style=\"color: #ffffff !important;\" id=\"select_25\">\n    <md-option value=\"RK4\">RungeKutta4</md-option>\n    <md-option value=\"DP\">DormandPrince</md-option>\n  </md-select>\n</md-input-container>\n\n<br>\n\n<button ng-click=\"send({payload: {maneuverType: maneuver, integrator: integrator}})\" class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" id=\"thrustButton\">Submit</button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "0c891626d5f6e170",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": ": > /app/maneuver-manager/Result3.txt && : > /app/maneuver-manager/PostManeuverDate3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3150,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "aa80dd655c7beba9",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate3.txt",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3430,
        "y": 1220,
        "wires": [
            [
                "8a266222bba8516a"
            ],
            [],
            []
        ]
    },
    {
        "id": "8a266222bba8516a",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3410,
        "y": 1120,
        "wires": [
            [
                "6391b61af41d2072"
            ]
        ]
    },
    {
        "id": "6391b61af41d2072",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[\"path_11\", \"path_12\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3640,
        "y": 1120,
        "wires": [
            [
                "6ce0d28b1e2eef53"
            ],
            []
        ]
    },
    {
        "id": "6ce0d28b1e2eef53",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "var max = 6;\nvar random = Math.floor(Math.random() * max);\n\n// Use the message from path_12 for error analysis\nvar errorPayload = msg.paths && msg.paths.path_12 ? msg.paths.path_12 : \"\";\n\nif (errorPayload.includes(\"hyperbolic orbits cannot be handled\")) {\n    if(random == 0){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";\n    }\n    else if(random == 1){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";\n    }\n    else if(random == 2){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Are you deserting?\";\n    }\n    else if(random == 3){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. You aren't qualified for interplanetary flight!\";\n    }\n    else {\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. No French assets in this direction!\";\n    }\n} \nelse if (errorPayload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (errorPayload.includes(\"ERGOL\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (errorPayload.includes(\"Initial date must\")) {\n    msg.errorMessage = \"**Temporal error :** Maneuver order is anterior to last apside reached !\";\nmsg.errorMessage += \" | Last apside: \" + msg.paths.path_11;\n    \n} \nelse if (errorPayload.includes(\"Eccentricity\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver !\";\n} \nelse if (errorPayload.includes(\"parabolic or hyperbolic orbit\")) {\n    msg.errorMessage = \"**Incorrect Delta-V:** The maneuver results in a hyperbolic orbit !\";\n} \nelse {\n    msg.errorMessage = \"Maneuver aborted !\";\n}\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3805,
        "y": 1128,
        "wires": [
            [
                "57800d22ef942332",
                "af34e1ddef02c0df"
            ]
        ]
    },
    {
        "id": "57800d22ef942332",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3950,
        "y": 1140,
        "wires": []
    },
    {
        "id": "cc8ac76d8461ea4b",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3750,
        "y": 1060,
        "wires": [
            [
                "6391b61af41d2072"
            ]
        ]
    },
    {
        "id": "af34e1ddef02c0df",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 3935,
        "y": 1180,
        "wires": []
    },
    {
        "id": "01ec2e5ddc1eb73c",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "6258723b1d975706",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f",
            "1a12589aeb64156f"
        ],
        "x": 105,
        "y": 480,
        "wires": []
    },
    {
        "id": "87f2976ba754a8b9",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "",
        "links": [
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "94a8919ad8194b6f",
            "b69bea8abb1b280f",
            "b8e26b39226639eb",
            "2284c0160c191b60"
        ],
        "x": 305,
        "y": 560,
        "wires": [
            [
                "a6d0d2d64344baea"
            ]
        ]
    },
    {
        "id": "024a9d33e7667a6d",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST POST ACCEPT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 520,
        "wires": []
    },
    {
        "id": "eff471ab8387163b",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "// This example sends a message to trigger a reload\nmsg.payload = { reload: true };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3260,
        "y": 460,
        "wires": [
            [
                "f3e01cf90fd593d1",
                "770fe6f3a74a1d4b"
            ]
        ]
    },
    {
        "id": "f3e01cf90fd593d1",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3460,
        "y": 580,
        "wires": [
            [
                "01ec4dfe367f5c8a"
            ]
        ]
    },
    {
        "id": "01ec4dfe367f5c8a",
        "type": "websocket out",
        "z": "4f2d767445be8316",
        "name": "reload",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 3530,
        "y": 640,
        "wires": []
    },
    {
        "id": "4ba7454d1b0ec7d5",
        "type": "inject",
        "z": "4f2d767445be8316",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3120,
        "y": 560,
        "wires": [
            [
                "eff471ab8387163b"
            ]
        ]
    },
    {
        "id": "173cef215dee3fac",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager && ./clear.sh red1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3260,
        "y": 860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "19dee0ea29a053a4",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4670,
        "y": 720,
        "wires": [
            [
                "5c452bf7944dd5df"
            ]
        ]
    },
    {
        "id": "645cbf1301ad628f",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "",
        "links": [
            "2051d5b661aea925"
        ],
        "x": 2185,
        "y": 800,
        "wires": [
            [
                "b2cabf58997e9d9c",
                "9dbdbed51647f0b1"
            ]
        ]
    },
    {
        "id": "17b47c9528ffbaba",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_10\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1",
        "exactOrder": "true",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2580,
        "y": 800,
        "wires": [
            [
                "8a6a79b11357377f",
                "ec1a6ca22c61f729",
                "9c65cef95909529e",
                "bf6e00d19d81b035"
            ],
            []
        ]
    },
    {
        "id": "bc1ca184c9da8666",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 759,
        "y": 477,
        "wires": [
            [
                "2051d5b661aea925"
            ]
        ]
    },
    {
        "id": "2051d5b661aea925",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Submit Manoeuver r1",
        "mode": "link",
        "links": [
            "645cbf1301ad628f"
        ],
        "x": 879,
        "y": 477,
        "wires": []
    },
    {
        "id": "770fe6f3a74a1d4b",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3410,
        "y": 400,
        "wires": []
    },
    {
        "id": "8a6a79b11357377f",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2370,
        "y": 760,
        "wires": [
            [
                "064281fda65cc176"
            ]
        ]
    },
    {
        "id": "064281fda65cc176",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2650,
        "y": 720,
        "wires": [
            [
                "bf6e00d19d81b035"
            ]
        ]
    },
    {
        "id": "5835c48cc1b16c66",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager && ./remove_two_lines.sh red1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4700,
        "y": 1060,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ca9db7a635b99391",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "AffichageLastManeuverDate r1",
        "mode": "link",
        "links": [
            "e1f765a663a80a9e"
        ],
        "x": 4625,
        "y": 780,
        "wires": []
    },
    {
        "id": "efd2c865503dcff7",
        "type": "inject",
        "z": "4f2d767445be8316",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4360,
        "y": 1060,
        "wires": [
            [
                "5835c48cc1b16c66"
            ]
        ]
    },
    {
        "id": "cae6525fe787fdab",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "msg.payload = { \n    isp: '',\n    dv: '' \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 880,
        "wires": [
            [
                "905d8b0581e760c7"
            ]
        ]
    },
    {
        "id": "42f281ba75293a37",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "reset fields",
        "mode": "link",
        "links": [
            "1601408fe84256a3"
        ],
        "x": 3715,
        "y": 720,
        "wires": []
    },
    {
        "id": "1601408fe84256a3",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "",
        "links": [
            "42f281ba75293a37"
        ],
        "x": 155,
        "y": 820,
        "wires": [
            [
                "cae6525fe787fdab"
            ]
        ]
    },
    {
        "id": "2362705d7baa151b",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "SAVE TRIGGER",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 3515,
        "y": 720,
        "wires": []
    },
    {
        "id": "e70d55513db45087",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "r2 timesettermaneuver IN",
        "links": [
            "51ecbdb6f445d9e7",
            "00f5602bb540900e"
        ],
        "x": 535,
        "y": 2400,
        "wires": [
            [
                "fce659d4e96d053a",
                "c5b045421402dc8b",
                "ef842697ed5fb7ad"
            ]
        ]
    },
    {
        "id": "fce659d4e96d053a",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 2400,
        "wires": [
            [
                "ea64906b3b1384cb",
                "5e4dd8cca2ae4c35"
            ]
        ]
    },
    {
        "id": "4cd9c72df23e8462",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2300,
        "wires": [
            [
                "ea64906b3b1384cb",
                "75e540d868333954"
            ]
        ]
    },
    {
        "id": "ea64906b3b1384cb",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1080,
        "y": 2380,
        "wires": [
            [
                "aaf16cbd25747b0d"
            ],
            []
        ]
    },
    {
        "id": "aaf16cbd25747b0d",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 2380,
        "wires": [
            [
                "580a69fe777bc63d",
                "a5808cdebb40739a",
                "6ace64b8cd0f4fc1"
            ]
        ]
    },
    {
        "id": "56d76d2292c99351",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 2280,
        "wires": [
            [
                "101a0e4da41e9241"
            ]
        ]
    },
    {
        "id": "101a0e4da41e9241",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], msg.paths.path_6[0].dx, msg.paths.path_6[0].dy, msg.paths.path_6[0].dz, msg.paths.path_6[0].dura]; 0\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 2280,
        "wires": [
            [
                "57eb102f8847fb7b"
            ]
        ]
    },
    {
        "id": "63fdf65ff5ff3a2c",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_6",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_6",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2160,
        "wires": [
            [
                "ce61661711c4d348",
                "95203c4ba3fa81a5"
            ]
        ]
    },
    {
        "id": "580a69fe777bc63d",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 2320,
        "wires": [
            [
                "ce61661711c4d348",
                "053ff452eb5637cb",
                "2de224db14b8bbea"
            ]
        ]
    },
    {
        "id": "ce61661711c4d348",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_6\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1660,
        "y": 2260,
        "wires": [
            [
                "56d76d2292c99351"
            ],
            []
        ]
    },
    {
        "id": "57eb102f8847fb7b",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2390,
        "y": 2280,
        "wires": [
            [
                "5a4cb98e1a85610c"
            ]
        ]
    },
    {
        "id": "5a4cb98e1a85610c",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2590,
        "y": 2280,
        "wires": [
            [
                "6a52ed472aa056ad"
            ]
        ]
    },
    {
        "id": "6a52ed472aa056ad",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2820,
        "y": 2280,
        "wires": [
            [
                "eacb1b2683a66e82",
                "dbe6a649a19f472d"
            ]
        ]
    },
    {
        "id": "7ef377380679c0c1",
        "type": "ui_form",
        "z": "4f2d767445be8316",
        "d": true,
        "name": "",
        "label": "BLUE1-Vehicle-Continuous",
        "group": "5a7810372552815e",
        "order": 2,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Dry mass (kg)",
                "value": "drymass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Ergol mass (kg)",
                "value": "ergolmass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Thrust (N)",
                "value": "thrust",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (s)",
                "value": "isp",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Surf Ref (m²)",
                "value": "surfref",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "drymass": "",
            "ergolmass": "",
            "thrust": "",
            "isp": "",
            "surfref": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 400,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "f129b3b435b44bda",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 2560,
        "wires": [
            [
                "a8d0bd9ed71ed9a3",
                "6562b8421c0ef7db"
            ]
        ]
    },
    {
        "id": "c62b8d64e93512b9",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 2600,
        "wires": [
            [
                "a8d0bd9ed71ed9a3",
                "27e377d8711ed104"
            ]
        ]
    },
    {
        "id": "a8d0bd9ed71ed9a3",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_1\", \"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1720,
        "y": 2560,
        "wires": [
            [
                "c9ecb4712414cf25",
                "24d835717a1a1823"
            ],
            []
        ]
    },
    {
        "id": "65c1ed2fd7671192",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2540,
        "wires": [
            [
                "8a5c7ba7c2b8607b"
            ]
        ]
    },
    {
        "id": "ef842697ed5fb7ad",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "query for r2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2460,
        "wires": [
            [
                "bfe8658584fc33d4"
            ]
        ]
    },
    {
        "id": "bfe8658584fc33d4",
        "type": "mongodb in",
        "z": "4f2d767445be8316",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 780,
        "y": 2540,
        "wires": [
            [
                "65c1ed2fd7671192",
                "8f0b06f17d541aed",
                "b44774bc8c40ad7a",
                "dca556aea5b98d99"
            ]
        ]
    },
    {
        "id": "8a5c7ba7c2b8607b",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1190,
        "y": 2540,
        "wires": [
            [
                "73a258458e5ed6b6"
            ]
        ]
    },
    {
        "id": "a5808cdebb40739a",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 2520,
        "wires": [
            [
                "a8d0bd9ed71ed9a3",
                "b3015dbef9a5bca6"
            ]
        ]
    },
    {
        "id": "a080b46a6d2b70d4",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2110,
        "y": 2620,
        "wires": [
            [
                "ec805459256c13c8",
                "9d46b8dfd22cf2f6"
            ]
        ]
    },
    {
        "id": "ec805459256c13c8",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2290,
        "y": 2640,
        "wires": [
            [
                "efc9e422de5dabee"
            ]
        ]
    },
    {
        "id": "efc9e422de5dabee",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2550,
        "y": 2640,
        "wires": [
            [
                "88522ffa0ea73e9e",
                "9bd65ba0c569baaa"
            ]
        ]
    },
    {
        "id": "6c53bdb38643a42f",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 2620,
        "wires": [
            [
                "a080b46a6d2b70d4",
                "ad589733e0fb8892"
            ]
        ]
    },
    {
        "id": "88522ffa0ea73e9e",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "time of maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*1.0;\n\nvar myDate = new Date(datecurrent);\ndate= (myDate.toGMTString());\n\n\nmsg.payload = date\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2870,
        "y": 2620,
        "wires": [
            [
                "9f862f6a2c0fe424"
            ]
        ]
    },
    {
        "id": "9fd84aa8d414ab27",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red2 -DcommandParameter=executeManeuver -jar ImpulseManeuver.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3470,
        "y": 2440,
        "wires": [
            [
                "7e96283b8993c3e1",
                "f7659d222b90649c",
                "9714d02f0df51fd9",
                "817685086da2dd5b",
                "521d4675218adba5"
            ],
            [
                "f9e580e64dca06e9",
                "f2a8c1c00288dd8e",
                "0b6d6b79295f4975",
                "387944da81ef17d0",
                "d38e791231f1e05b",
                "9714d02f0df51fd9"
            ],
            []
        ]
    },
    {
        "id": "eacb1b2683a66e82",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2770,
        "y": 2420,
        "wires": [
            [
                "deae7fb8f1b162c2"
            ]
        ]
    },
    {
        "id": "9f862f6a2c0fe424",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2790,
        "y": 2500,
        "wires": [
            [
                "deae7fb8f1b162c2",
                "f653d256926ae723"
            ]
        ]
    },
    {
        "id": "deae7fb8f1b162c2",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\", \"path_10\"]",
        "pathsToExpire": "[ \"path_4\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "900",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3220,
        "y": 2460,
        "wires": [
            [
                "9fd84aa8d414ab27",
                "f3c084681a87e2d7",
                "83a734246c49f669"
            ],
            []
        ]
    },
    {
        "id": "44645472d13e8f6f",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "RAZ Result injection",
        "func": "msg.payload = null\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 2080,
        "wires": [
            [
                "7ca2e21ac4a428ca"
            ]
        ]
    },
    {
        "id": "7ca2e21ac4a428ca",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1910,
        "y": 2080,
        "wires": [
            [
                "639cdee72039c1d8"
            ]
        ]
    },
    {
        "id": "639cdee72039c1d8",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Result-RAZ",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2170,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "189d54aceb430a8f",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Result4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 2080,
        "wires": [
            [
                "44645472d13e8f6f"
            ]
        ]
    },
    {
        "id": "7e96283b8993c3e1",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "query to read Result4.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 2320,
        "wires": [
            [
                "b1c8372ea6768b35"
            ]
        ]
    },
    {
        "id": "b1c8372ea6768b35",
        "type": "file in",
        "z": "4f2d767445be8316",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4050,
        "y": 2340,
        "wires": [
            [
                "47f1b7b08ab0cf14",
                "28a775290b1c2381"
            ]
        ]
    },
    {
        "id": "47f1b7b08ab0cf14",
        "type": "join",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4230,
        "y": 2320,
        "wires": [
            [
                "e329ae8a9e5f0977"
            ]
        ]
    },
    {
        "id": "e329ae8a9e5f0977",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3770,
        "y": 2480,
        "wires": [
            [
                "5b554ee84db3939c",
                "28a775290b1c2381"
            ]
        ]
    },
    {
        "id": "5b554ee84db3939c",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n-12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4000,
        "y": 2440,
        "wires": [
            [
                "ad6497ed5ffa2459",
                "28a775290b1c2381"
            ]
        ]
    },
    {
        "id": "ad6497ed5ffa2459",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass=msg.payload[0].ergolmass;\ngs.dry_mass=msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4190,
        "y": 2520,
        "wires": [
            [
                "e194e0f82511d5ad"
            ]
        ]
    },
    {
        "id": "c3b11c0252e10c76",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "update all for R2 OUT",
        "mode": "link",
        "links": [
            "73dd4bb1ee938070"
        ],
        "x": 4735,
        "y": 2420,
        "wires": []
    },
    {
        "id": "9bd65ba0c569baaa",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "time of post-maneuver",
        "func": "var datecurrent = msg.paths.path_3[2]+1000*1.0;\n\n\nmsg.payload = datecurrent\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 2760,
        "wires": [
            [
                "a31ff8fbefb1ec2d",
                "5ecfc911f6d78040"
            ]
        ]
    },
    {
        "id": "a31ff8fbefb1ec2d",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2910,
        "y": 2760,
        "wires": [
            [
                "3f87db61f6711ded"
            ]
        ]
    },
    {
        "id": "3f87db61f6711ded",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 2800,
        "wires": [
            [
                "970e2149db792f72"
            ]
        ]
    },
    {
        "id": "970e2149db792f72",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "query to fill r2 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2870,
        "y": 2800,
        "wires": [
            [
                "0d347554bcaeed5e"
            ]
        ]
    },
    {
        "id": "0d347554bcaeed5e",
        "type": "split",
        "z": "4f2d767445be8316",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2650,
        "y": 2840,
        "wires": [
            [
                "f00a5769b41874b2"
            ]
        ]
    },
    {
        "id": "f00a5769b41874b2",
        "type": "mongodb out",
        "z": "4f2d767445be8316",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert r2 time tle mongo",
        "collection": "peritimer2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 2830,
        "y": 2840,
        "wires": []
    },
    {
        "id": "329a456e800a1d72",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Tle b1-postMan-OUT",
        "mode": "link",
        "links": [
            "3cda6a28825e07b9"
        ],
        "x": 4375,
        "y": 2620,
        "wires": []
    },
    {
        "id": "f09107745e1edda5",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4390,
        "y": 2580,
        "wires": [
            [
                "329a456e800a1d72"
            ]
        ]
    },
    {
        "id": "c7214304b8ccb86b",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "MMB1",
        "info": "",
        "x": 590,
        "y": 1980,
        "wires": []
    },
    {
        "id": "787ebe2e6d14e617",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 340,
        "y": 1900,
        "wires": []
    },
    {
        "id": "c7bd7dce7e4adb77",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 460,
        "y": 1980,
        "wires": []
    },
    {
        "id": "23e2c85cd9125474",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 200,
        "y": 1940,
        "wires": []
    },
    {
        "id": "0f67bc8ad479c65a",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 520,
        "y": 1900,
        "wires": []
    },
    {
        "id": "5ecfc911f6d78040",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "red2-date-storage",
        "filename": "red2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2930,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "b358939ecd5b891c",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 500,
        "y": 1940,
        "wires": []
    },
    {
        "id": "f17dd3761d684daf",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1880,
        "y": 2460,
        "wires": []
    },
    {
        "id": "3e6e181470d49254",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Thrust param + Manoeuver Delay",
        "info": "",
        "x": 1350,
        "y": 2240,
        "wires": []
    },
    {
        "id": "5390568a3f5d6416",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "Here we store the new start date because the positions of the satellite before the manoeuver  are now false",
        "info": "",
        "x": 2620,
        "y": 2900,
        "wires": []
    },
    {
        "id": "e3fb8b7bf24753d8",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4820,
        "y": 2300,
        "wires": [
            [
                "e6e9315678aeacdd",
                "a727a7080538b9fc"
            ]
        ]
    },
    {
        "id": "1a2bc78f711d32bb",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "fabrication de la string",
        "info": "",
        "x": 4000,
        "y": 2640,
        "wires": []
    },
    {
        "id": "dd8a19d7f1ff0c08",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 1270,
        "y": 2420,
        "wires": []
    },
    {
        "id": "2513225cd1126549",
        "type": "catch",
        "z": "4f2d767445be8316",
        "name": "",
        "scope": [
            "9fd84aa8d414ab27"
        ],
        "uncaught": false,
        "x": 3390,
        "y": 2640,
        "wires": [
            [
                "f9e580e64dca06e9"
            ]
        ]
    },
    {
        "id": "e194e0f82511d5ad",
        "type": "switch",
        "z": "4f2d767445be8316",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4460,
        "y": 2520,
        "wires": [
            [
                "a15e15e73c43196f",
                "c3b11c0252e10c76",
                "0b35bb34f948e36a",
                "1bd818338232a1c9",
                "ab8b16e9f3637a99",
                "08bce8f52ec84f7a",
                "9e6ba28adfe3bfe2"
            ],
            [
                "880c3473f5d302ec"
            ]
        ]
    },
    {
        "id": "1baa1298c369abf3",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4490,
        "y": 2340,
        "wires": []
    },
    {
        "id": "9481156953c709f7",
        "type": "ui_table",
        "z": "4f2d767445be8316",
        "group": "d4e830c4b00daeae",
        "name": "TLE display",
        "order": 1,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "version",
                "title": "Ver.",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "incli",
                "title": "Incli (°)",
                "width": "82",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "raan",
                "title": "RAAN (°)",
                "width": "95",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ecc",
                "title": "Ecc",
                "width": "75",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "aop",
                "title": "AoP (°)",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "meana",
                "title": "M.Ano",
                "width": "85",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "mean",
                "title": "M.Motion",
                "width": "101",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ergol_mass",
                "title": "Ergols (kg)",
                "width": "108",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 4910,
        "y": 1920,
        "wires": []
    },
    {
        "id": "2e531917890131b6",
        "type": "join",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4830,
        "y": 2220,
        "wires": [
            [
                "84bcf89de79282de",
                "4a1df1a92755fd2e"
            ]
        ]
    },
    {
        "id": "e6e9315678aeacdd",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4830,
        "y": 2260,
        "wires": [
            [
                "2e531917890131b6"
            ]
        ]
    },
    {
        "id": "dbbefaf13a0443f7",
        "type": "file in",
        "z": "4f2d767445be8316",
        "name": "read red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4080,
        "y": 1980,
        "wires": [
            [
                "a5c334c839c3438c",
                "4788bc97108c7c93"
            ]
        ]
    },
    {
        "id": "cd60cf311303a815",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Old tle storage",
        "filename": "red2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4100,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "a5c334c839c3438c",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4130,
        "y": 2060,
        "wires": [
            [
                "cd60cf311303a815",
                "563080cf85ba825f"
            ]
        ]
    },
    {
        "id": "a6f09ed8db237c6b",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "11/05/23",
        "info": "",
        "x": 4560,
        "y": 2180,
        "wires": []
    },
    {
        "id": "7e949ae8d0015c6d",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "TLE visualizer R2",
        "links": [
            "68f8a4538f23291d"
        ],
        "x": 3615,
        "y": 1880,
        "wires": [
            [
                "839cf1f3af75d4a1",
                "dbbefaf13a0443f7"
            ]
        ]
    },
    {
        "id": "5c32c9383df2de25",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "TLE visualizer R2 out",
        "mode": "link",
        "links": [
            "65d2f35495558a56"
        ],
        "x": 4835,
        "y": 2020,
        "wires": []
    },
    {
        "id": "563080cf85ba825f",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4310,
        "y": 2060,
        "wires": [
            [
                "43504cbbaca1c077"
            ]
        ]
    },
    {
        "id": "43504cbbaca1c077",
        "type": "join",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4460,
        "y": 2020,
        "wires": [
            [
                "ea93f4828a416faa",
                "23f1ff8ab06c3738",
                "610a95a2e41e5893"
            ]
        ]
    },
    {
        "id": "90400eca16efe7a9",
        "type": "switch",
        "z": "4f2d767445be8316",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Init TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4740,
        "y": 2020,
        "wires": [
            [
                "5c32c9383df2de25"
            ]
        ]
    },
    {
        "id": "ea93f4828a416faa",
        "type": "split",
        "z": "4f2d767445be8316",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4600,
        "y": 2020,
        "wires": [
            [
                "90400eca16efe7a9",
                "a3a04f2be60fd452"
            ]
        ]
    },
    {
        "id": "1bd818338232a1c9",
        "type": "file in",
        "z": "4f2d767445be8316",
        "name": "read red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4040,
        "y": 2180,
        "wires": [
            [
                "92229ec3dc51827e"
            ]
        ]
    },
    {
        "id": "92229ec3dc51827e",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4090,
        "y": 2220,
        "wires": [
            [
                "47e129c17fe9c82f",
                "6d9c36f95ba2ddb7"
            ]
        ]
    },
    {
        "id": "47e129c17fe9c82f",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Old tle storage",
        "filename": "red2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4200,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "23f1ff8ab06c3738",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "echange",
        "func": "if (msg.payload[0].version === \"New TLE\") {\n    // Create a copy of the first payload object to avoid mutating the original directly\n    var tmp = { ...msg.payload[0] };\n\n    // Helper function to remove leading zeros and format to two decimal places\n    function formatNumber(value) {\n        return parseFloat(value).toFixed(3);\n    }\n\n    // Format 'incli' from \"002.0000\" to \"2.00\"\n    tmp.incli = formatNumber(tmp.incli);\n\n    // Format 'raan' from \"003.0000\" to \"3.00\"\n    tmp.raan = formatNumber(tmp.raan);\n\n    // Format 'ecc' from \"0000001\" to \"1.00E-7\"\n    // Assuming \"0000001\" represents 1e-7\n    tmp.ecc = (parseInt(tmp.ecc, 10) * 1e-7).toExponential(3).toUpperCase();\n\n    // Format 'aop' from \"003.0000\" to \"3.00\"\n    tmp.aop = formatNumber(tmp.aop);\n\n    // Format 'meana' from \"003.0000\" to \"3.00\"\n    tmp.meana = formatNumber(tmp.meana);\n\n    // Format 'mean' from \"15.83035000000000\" to \"15.83\"\n    tmp.mean = parseFloat(tmp.mean).toFixed(3);\n\n    // Format 'dry_mass' from \"1000.00000\" to \"1000.00\"\n    tmp.dry_mass = parseFloat(tmp.dry_mass).toFixed(3);\n\n    // Format 'ergol_mass' from \"4000.00000\" to \"4000.00\"\n    tmp.ergol_mass = parseFloat(tmp.ergol_mass).toFixed(3);\n\n    // Update the payload with the formatted object\n    msg.payload[0] = tmp;\n\n    // Ensure the second payload element is an empty string as per your original logic\n    msg.payload[1] = \"\";\n}\nelse {\n    // Create a copy of the first payload object to avoid mutating the original directly\n    var tmp = { ...msg.payload[0] };\n\n    // Helper function to remove leading zeros and format to two decimal places\n    function formatNumber(value) {\n        return parseFloat(value).toFixed(3);\n    }\n\n    // Format 'incli' from \"002.0000\" to \"2.00\"\n    tmp.incli = formatNumber(tmp.incli);\n\n    // Format 'raan' from \"003.0000\" to \"3.00\"\n    tmp.raan = formatNumber(tmp.raan);\n\n    // Format 'ecc' from \"0000001\" to \"1.00E-7\"\n    // Assuming \"0000001\" represents 1e-7\n    tmp.ecc = (parseInt(tmp.ecc, 10) * 1e-7).toExponential(3).toUpperCase();\n\n    // Format 'aop' from \"003.0000\" to \"3.00\"\n    tmp.aop = formatNumber(tmp.aop);\n\n    // Format 'meana' from \"003.0000\" to \"3.00\"\n    tmp.meana = formatNumber(tmp.meana);\n\n    // Format 'mean' from \"15.83035000000000\" to \"15.83\"\n    tmp.mean = parseFloat(tmp.mean).toFixed(3);\n\n    // Format 'dry_mass' from \"1000.00000\" to \"1000.00\"\n    tmp.dry_mass = parseFloat(tmp.dry_mass).toFixed(2);\n\n    // Format 'ergol_mass' from \"4000.00000\" to \"4000.00\"\n    tmp.ergol_mass = parseFloat(tmp.ergol_mass).toFixed(2);\n\n    // Update the payload with the formatted object\n    msg.payload[0] = tmp;\n\n    // Ensure the second payload element is an empty string as per your original logic\n    msg.payload[1] = \"\";\n\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4600,
        "y": 2100,
        "wires": [
            [
                "7e0bf1da6e07d23c",
                "9481156953c709f7"
            ]
        ]
    },
    {
        "id": "73a258458e5ed6b6",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2580,
        "wires": [
            [
                "c62b8d64e93512b9"
            ]
        ]
    },
    {
        "id": "c9ecb4712414cf25",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Data4.txt format",
        "func": "var N; // Mean motion in rev/day\nvar n; // See the expression later \nvar a; // Semi-major axis\nvar acube; // acube = a³ \nvar e; // Eccentricity\n\nvar mu = 398600.4418;\n// var mu = 398600; // Earth's standard gravitational parameter\n// var J = 86164; // Wrong value changed on the 240523\nvar J = 86400; // A day expressed in seconds \n\nN = msg.paths.path_2[7]; // The mean motion in rev/day\nn = 2 * Math.PI * N / J; // n = 2π/T where T = J/N\nacube = mu / (n * n); // acube = a³ \na = Math.cbrt(acube); // Compute the cubic root for a\ne = Number(msg.paths.path_2[4]) / 10000000; // Convert TLE formatted eccentricity to a real number \ne = e.toFixed(7);\n\n// Initialize variables with default values\nvar durastop = msg.paths.path_3[0] + 1.0 + 1.0;\nvar thrust = \"0\";\nvar dv = \"0\";\nvar isp = \"0\";\nvar drymass = \"0\";\nvar ergolmass = \"0\";\nvar surface = \"0\";\nvar myDate = new Date(msg.paths.path_3[1]);\nDATE = myDate.toISOString(); // Format the date to ISO string\n\n// CORRECTION 050723\n// Removed unnecessary and inaccurate date parsing code\n\n// Assign values if they are valid numbers\nif (!isNaN(msg.isp)) { isp = msg.isp; }\nif (!isNaN(msg.dv)) { dv = msg.dv; }\nif (!isNaN(msg.paths.path_13[1])) { ergolmass = msg.paths.path_13[1]; }\nif (!isNaN(msg.paths.path_13[0])) { drymass = msg.paths.path_13[0]; }\n\n// **New Addition: Set maneuverType to \"Impulse\" if it's not provided**\nif (msg.maneuverType == null || msg.maneuverType === undefined || msg.maneuverType === \"\") {\n    msg.maneuverType = \"Impulse\";\n}\n\nmsg.payload = [\n    \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thrust, ISP, Ergol mass, Simu duration stop, ManeuverType, DV\",\n    DATE,\n    a,\n    e,\n    msg.paths.path_2[2],\n    msg.paths.path_2[3],\n    msg.paths.path_2[5],\n    msg.paths.path_2[6],\n    drymass,\n    surface,\n    thrust,\n    isp,\n    ergolmass,\n    durastop,\n    msg.maneuverType, // Now guaranteed to have a value\n    dv\n];\n\n// 03/05/2023 I had to change the column to take the AoP from it was coded column 7 I changed for 8 because 7 is a blank space \nreturn msg;\n\n// 160523 I changed the access to the orbital \n// parameters they are in the payload in an array\n// \"2010-01-01T11:59:26.000\"\n\n// This function was changed on the 240523 because of wrong values on the J (duration of a day in seconds) \n// And to improve the readability\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 2620,
        "wires": [
            [
                "6c53bdb38643a42f"
            ]
        ]
    },
    {
        "id": "9581bfe4d6342039",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 2240,
        "wires": [
            [
                "3b338532cd26bea0"
            ]
        ]
    },
    {
        "id": "3b338532cd26bea0",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2240,
        "wires": [
            [
                "4cd9c72df23e8462",
                "5c3f5aa5c0dd327a"
            ]
        ]
    },
    {
        "id": "8f0b06f17d541aed",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2500,
        "wires": [
            [
                "a3331d081524b71c"
            ]
        ]
    },
    {
        "id": "a3331d081524b71c",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1250,
        "y": 2460,
        "wires": [
            [
                "9581bfe4d6342039"
            ]
        ]
    },
    {
        "id": "8022a41515906abd",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 270,
        "y": 1980,
        "wires": []
    },
    {
        "id": "ddc4c0aaa9acfc6b",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 90,
        "y": 1980,
        "wires": []
    },
    {
        "id": "839cf1f3af75d4a1",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Init TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3920,
        "y": 1880,
        "wires": [
            [
                "43504cbbaca1c077",
                "a0b513c4d6dc1c5a"
            ]
        ]
    },
    {
        "id": "6d9c36f95ba2ddb7",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4350,
        "y": 2220,
        "wires": [
            [
                "2e531917890131b6"
            ]
        ]
    },
    {
        "id": "f9e580e64dca06e9",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3740,
        "y": 2640,
        "wires": []
    },
    {
        "id": "4788bc97108c7c93",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4450,
        "y": 1960,
        "wires": []
    },
    {
        "id": "6ace64b8cd0f4fc1",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 2380,
        "wires": []
    },
    {
        "id": "5e4dd8cca2ae4c35",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 2460,
        "wires": []
    },
    {
        "id": "75e540d868333954",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2300,
        "wires": []
    },
    {
        "id": "62f90f1daf887a3d",
        "type": "comment",
        "z": "4f2d767445be8316",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 170,
        "y": 1900,
        "wires": []
    },
    {
        "id": "0b35bb34f948e36a",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4190,
        "y": 2580,
        "wires": [
            [
                "f09107745e1edda5"
            ]
        ]
    },
    {
        "id": "28a775290b1c2381",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4210,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a15e15e73c43196f",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4740,
        "y": 2480,
        "wires": [
            [
                "54294771baa915d5"
            ]
        ]
    },
    {
        "id": "54294771baa915d5",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 4715,
        "y": 2540,
        "wires": []
    },
    {
        "id": "f2a8c1c00288dd8e",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "var max=6;\nvar random = Math.floor(Math.random() * max);\n\nif (msg.payload.includes(\"hyperbolic orbits cannot be handled\")){\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3800,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "901bcd91824815fb",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 3895,
        "y": 2560,
        "wires": []
    },
    {
        "id": "f155ce11110594d6",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4080,
        "y": 1820,
        "wires": [
            [
                "dbbefaf13a0443f7"
            ]
        ]
    },
    {
        "id": "2f43a4d46c3ddcfd",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4070,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5c8e8f7d7ecb286e",
        "type": "catch",
        "z": "4f2d767445be8316",
        "name": "",
        "scope": [
            "dbbefaf13a0443f7"
        ],
        "uncaught": false,
        "x": 3730,
        "y": 1760,
        "wires": [
            [
                "f155ce11110594d6",
                "2f43a4d46c3ddcfd"
            ]
        ]
    },
    {
        "id": "ff939670fb398477",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Orientation computing",
        "func": "\nvar Dx;\nvar Dy;\nvar Dz;\n\n// theta is related to Dz it is the angle around x or y \n\n//PREPARATION STEP\n\n// theta est le complement a 90 de beta\nvar theta = 90 - msg.payload.beta\n// converting theta to rad and computing\n//the vector composition of the thrust\nDx = 1*Math.sin(theta*Math.PI/180)*Math.cos(msg.payload.alpha*Math.PI/180);\nDy = 1*Math.sin(theta*Math.PI/180)*Math.sin(msg.payload.alpha*Math.PI/180);\nDz = 1*Math.cos(theta*Math.PI/180)\n\nvar tab = []\nvar gs = {}\n\ngs.dx = Dx\ngs.dy = Dy\ngs.dz = Dz\ngs.dura = msg.payload.duration\n\n\ntab.push(gs)\nmsg.body = msg.payload\nmsg.payload = tab\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2080,
        "wires": [
            [
                "189d54aceb430a8f",
                "d9dfa611f78f1a9a"
            ]
        ]
    },
    {
        "id": "6a5e5fe5d08cfc1c",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "7465a3d35f5541d7",
        "name": "Thrust-Orientation",
        "order": 1,
        "width": 10,
        "height": 6,
        "format": "<!-- Load Three.js -->\n<script id=\"libraryThreeDL\" src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n\n<div id=\"angle-input\" style=\"display: flex; justify-content: center; align-items: center;\">\n    <label for=\"alpha\">Alpha (°): </label>\n    <input type=\"number\" id=\"alpha\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n\n    <label for=\"beta\">Beta (°): </label>\n    <input type=\"number\" id=\"beta\" step=\"1\" min=\"0\" max=\"360\" value=\"0\">\n</div>\n<button id=\"thrustButton\">Thrust Orientation</button>\n<div id=\"canvas-container\" style=\"display: flex; justify-content: center; align-items: center;\"></div>\n\n<script >\n//document.addEventListener(\"DOMContentLoaded\", function() {\nfunction chargerLibrairie(url,callback) {\n    var script = document.createElement('script');\n    script.type='text/javascript';\n    script.src=url;\n    script.onload=callback;\n\n    document.head.appendChild(script);\n}\n\n(function(scope) {\n    \n    chargerLibrairie('https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js',function (){\n    \n    var button = document.getElementById(\"thrustButton\");\n    button.style.backgroundColor = \"firebrick\"; // Blue background color\n    button.style.color = \"#ffffff\"; // White text color\n    button.style.border = \"none\"; // Remove border\n    button.style.padding = \"10px 20px\"; // Add padding for better appearance\n     button.style.borderRadius = \"2px\"; // Add rounded edges\n  //  console.log(scope);\n    var alphaInput = document.getElementById(\"alpha\");\n    var betaInput = document.getElementById(\"beta\");\n    var durationInput = 1;\n    var canvasContainer = document.getElementById(\"canvas-container\");\n\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    var noderedStandardUnit = 48;// Nodered unit in pixels\n\n    var heightOfWidget = Number(scope.height)*noderedStandardUnit\n    var widthOfWidget=Number(scope.width)*noderedStandardUnit\n\n\n    renderer.setSize(widthOfWidget,heightOfWidget- noderedStandardUnit);\n    \n    canvasContainer.appendChild(renderer.domElement);\n    renderer.setClearColor(new THREE.Color(0x212C31));\n    // add the cubesat\n\n\n//CUBE SATELLITE\n    var cubeside=1\n    var geometry = new THREE.BoxBufferGeometry(cubeside,cubeside,cubeside);\n    var material = new THREE.MeshStandardMaterial({\n    color: 0x929292,          // Base color of the metal\n    metalness: 0.7,             // Set to 1 for a full metallic surface\n    roughness: 0.5,           // Adjust the roughness to control reflection blur\n    \n    });\n   //var material = new THREE.MeshStandardMaterial({ color: 0xAAAAAA, metalness: 1, roughness: 0.5 });\n    //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n     \n    alphaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    alphaInput.style.color = \"#ffffff\"; // White text color\n    betaInput.style.backgroundColor = \"transparent\"; // Same color as the background\n    betaInput.style.color = \"#ffffff\"; // White text color\n   \n//ARROWS\n    var arrowOrigin = new THREE.Vector3(0, 0, 0);\n    var arrowDirection = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionX = new THREE.Vector3(0, 1, 0); // Initial direction\n    var arrowDirectionY = new THREE.Vector3(0, 0, 1); // Initial direction\n    var arrowDirectionZ = new THREE.Vector3(1, 0, 0); // Initial direction\n    var arrowLength = 1.4; // Length of the arrow\n    var arrowLengthUnit = 1; // Length of the arrow\n    var arrowColorRed = 0xff0000; // Red color\n    var arrowColorYellow = 0xffff00; // Yellow color\n    var arrowColorBlue = 0x0000ff; // Blue color\n    var arrowColorGreen = 0x00ff00; //Green color\n    var arrowHelper = new THREE.ArrowHelper(arrowDirection, arrowOrigin, arrowLength, arrowColorYellow);\n    var arrowHelperX = new THREE.ArrowHelper(arrowDirectionX, arrowOrigin,arrowLengthUnit, arrowColorRed);\n    var arrowHelperY = new THREE.ArrowHelper(arrowDirectionY, arrowOrigin, arrowLengthUnit, arrowColorGreen);\n    var arrowHelperZ = new THREE.ArrowHelper(arrowDirectionZ, arrowOrigin, arrowLengthUnit, arrowColorBlue);\n    \n    scene.add(arrowHelper);\n    scene.add(arrowHelperX);\n    scene.add(arrowHelperY);\n    scene.add(arrowHelperZ);\n    \n//CAMERA POSITION\n\n    camera.position.set(1.6,1.6,1.6); // Set position like this\n    camera.lookAt(new THREE.Vector3(0,0,0)); // Set look at coordinate like this\n    \n//TRAJECTORY\n\n    const ringgeometry = new THREE.RingGeometry( 36, 36.02, 90 ); \n    const ringmaterial = new THREE.MeshBasicMaterial( { color: 0xffffff, side: THREE.DoubleSide } );\n    const mesh = new THREE.Mesh( ringgeometry, ringmaterial );\n    mesh.position.set(-36, 0, 0);\n    scene.add( mesh );\n    \n//EARTH\n\n    var sphereGeometry = new THREE.SphereBufferGeometry(34, 32, 32);\n    var sphereMaterial = new THREE.MeshStandardMaterial({\n    color: 0x002654,          // Base color of the metal\n    metalness: 0,             // Set to 1 for a full metallic surface\n    roughness: 0.5           // Adjust the roughness to control reflection blur\n\n    });\n    //var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x021437 });\n    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n    sphere.position.set(-36, 0, 0); // Position the sphere along the -X axis\n    scene.add(sphere);\n    \n//SUN DIRECTIONAL LIGHT\n    \n    const directionalLight = new THREE.DirectionalLight( 0xffffff, 1 );\n    directionalLight.position.set(15,5,5);\n    scene.add( directionalLight );\n    ambient = new THREE.AmbientLight(0xffffff, 0.2);\n    scene.add(ambient);\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n\n        // Obtenir les valeurs d'alpha et beta en radians\n        var alpha = alphaInput.value * Math.PI / 180;\n        var beta = betaInput.value * Math.PI / 180;\n        \n        // Calculate THETA\n        var theta = Math.PI / 2 - beta;\n\n        // Compute coordinates \n        var y = Math.sin(theta) * Math.cos(alpha);\n        var z = Math.sin(theta) * Math.sin(alpha);\n        var x = Math.cos(theta);\n\n        // Up dates direction of the arrow \n        arrowHelper.setDirection(new THREE.Vector3(x, y, z));\n        cube.lookAt(new THREE.Vector3(x, y, z))\n        renderer.render(scene, camera);\n    }\n\n    function updateOrientation(scope) {\n        animate();\n\n        var alpha = parseFloat(alphaInput.value);\n        var beta = parseFloat(betaInput.value);\n        var duration= durationInput;\n        // Send output (Alpha Beta)\n        scope.send({ payload: { alpha: alpha, beta: beta, duration: duration } });\n    }\n\n    animate();\n\n    document.getElementById(\"thrustButton\").addEventListener(\"click\", function() {\n        updateOrientation(scope);\n    });\n\n    });\n//window.onload = function() {\n//document.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    \n\n\n})(scope);\n//}); \n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 2080,
        "wires": [
            [
                "ff939670fb398477",
                "43d96588839e3dd2",
                "1dd239f090ba0c63",
                "25fdc93f73b53a43"
            ]
        ]
    },
    {
        "id": "24d835717a1a1823",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 2560,
        "wires": []
    },
    {
        "id": "43d96588839e3dd2",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "ORientation",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 2180,
        "wires": []
    },
    {
        "id": "f7659d222b90649c",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3580,
        "y": 2160,
        "wires": []
    },
    {
        "id": "37a710b22e9a9cb5",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 2500,
        "wires": []
    },
    {
        "id": "eb9cec120b4a7641",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "7465a3d35f5541d7",
        "name": "RED 2 Vehicule template",
        "order": 5,
        "width": 10,
        "height": "3",
        "format": "<style>\n  .form-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    margin-top: 35px;\n  }\n\n  .parameters-row {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 10px;\n    margin-top: 20px;\n  }\n\n  .column {\n    flex: 1;\n    padding: 0 10px;\n    max-width: 300px;\n    box-sizing: border-box;\n  }\n\n  .md-input-container {\n    width: 100%;\n    margin: 10px 0px;\n    color: #ffffff !important;\n  }\n\n  .md-input-container label {\n    color: #ffffff !important;\n    font-weight: bold !important;\n  }\n\n  /* Ensure the option text appears white */\n  md-select .md-select-value,\n  md-option {\n    color: #ffffff !important;\n  }\n\n  .button-container {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 0 10px;\n    box-sizing: border-box;\n  }\n\n  .button-container button {\n    width: 100%;\n    margin-top: 10px;\n  }\n\n  .button-container button:first-child {\n    margin-top: 20px;\n  }\n\n  .third-row {\n    margin-bottom: 30px;\n  }\n\n  .result-display {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    color: white;\n    margin: 15px 0;\n  }\n\n  .result-value {\n    font-weight: bold;\n    color: #ffcc00;\n  }\n</style>\n\n<!-- HTML form structure -->\n<form id=\"myForm2\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n  <div class=\"form-container\">\n    <!-- Maneuver type field (only one option: Impulse) -->\n    <div class=\"parameters-row\">\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_maneuver\">Maneuver Type</label>\n          <md-select ng-model=\"msg.payload.maneuverType\" id=\"select_20\" name=\"maneuverType\"\n            ng-change=\"send({payload: msg.payload})\">\n            <md-option value=\"Impulse\">Impulse</md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </div>\n\n    <!-- DV and Surface fields -->\n    <div class=\"parameters-row\">\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_dv\">DV (m/s)</label>\n          <input type=\"text\" id=\"form2_dv\" name=\"dv\" ng-model=\"msg.payload.dv\" ng-change=\"send({payload: msg.payload})\">\n        </md-input-container>\n      </div>\n\n      <div class=\"column\">\n        <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n          <label for=\"form2_isp\">ISP (s)</label>\n          <input type=\"text\" id=\"form2_isp\" name=\"isp\" ng-model=\"msg.payload.isp\" ng-change=\"send({payload: msg.payload})\">\n        </md-input-container>\n      </div>\n    </div>\n\n\n  </div>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "d68c19da2cbcb228",
                "0c043351d6ba9fe0",
                "37a710b22e9a9cb5",
                "35286ee49bc63ab1",
                "ef842697ed5fb7ad"
            ]
        ]
    },
    {
        "id": "9d46b8dfd22cf2f6",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 2560,
        "wires": []
    },
    {
        "id": "ad589733e0fb8892",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2150,
        "y": 2520,
        "wires": []
    },
    {
        "id": "27e377d8711ed104",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 2660,
        "wires": []
    },
    {
        "id": "6562b8421c0ef7db",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 2840,
        "wires": []
    },
    {
        "id": "b3015dbef9a5bca6",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 2700,
        "wires": []
    },
    {
        "id": "5c3f5aa5c0dd327a",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 2240,
        "wires": []
    },
    {
        "id": "95203c4ba3fa81a5",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 2180,
        "wires": []
    },
    {
        "id": "053ff452eb5637cb",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 2360,
        "wires": []
    },
    {
        "id": "d68c19da2cbcb228",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "7465a3d35f5541d7",
        "name": "RED2 Vehicule Submit",
        "order": 8,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n        background-color: firebrick; /* Default background color */\n        color: white; /* Optional: sets text color */\n        border: none; /* Optional: removes default border */\n        padding: 10px; /* Optional: adds some padding */\n        cursor: pointer; /* Optional: changes cursor on hover */\n    }\n\n    .button-container button:hover {\n        background-color: red; /* Background color on hover */\n    }\n\n    .button-container button:first-child {\n        margin-top: 20px;\n    }\n    \n    #submitButtonb1 {\n  background-color: firebrick !important; /* Default background color */\n  color: white !important;\n  border: none !important;\n  padding: 10px !important;\n  cursor: pointer !important;\n}\n\n#submitButtonb1:hover {\n  background-color: red !important; /* Background color on hover */\n}\n\n</style>\n\n<div class=\"button-container\">\n    <!-- Utilisation de ng-click pour envoyer msg.payload au clic -->\n    <button type=\"submit\" id=\"submitButtonb1\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">\n        Submit\n    </button>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 2260,
        "wires": [
            [
                "94fb767fbcb82fe1",
                "8b7799769d23a17f"
            ]
        ]
    },
    {
        "id": "cd53eee9d3258b36",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "7465a3d35f5541d7",
        "name": "Affichage Conso",
        "order": 6,
        "width": 10,
        "height": 2,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Affichage Ergols</title>\n   \n    <!-- Style pour masquer la barre de défilement tout en permettant le défilement -->\n    <style>\n        /* Conteneur principal pour masquer la barre de défilement */\n        .scroll-container {\n            height: 100vh;\n            overflow-y: scroll; /* Activer le défilement vertical */\n            scrollbar-width: none; /* Masquer la barre pour Firefox */\n        }\n\n        /* Masquer la barre de défilement pour Chrome, Safari, etc. */\n        .scroll-container::-webkit-scrollbar {\n            display: none; /* Masquer la barre de défilement */\n        }\n    </style>\n</head>\n\n<body>\n        <!-- Conteneur principal avec défilement masqué -->\n    <div class=\"scroll-container\">\n    <!-- Section pour afficher Ergols restants -->\n    <div class=\"result-display\">\n        Ergols disponibles avant maneuvre (kg) : <span class=\"form2_ergolRemaining result-value\">--</span>\n    </div>\n\n    <!-- Section pour afficher Consommation d'ergols -->\n    <div class=\"result-display\">\n        Consommation d'ergols (kg) : <span class=\"form2_ergolResult result-value\">--</span>\n    </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        (function(scope) {\n            // Utiliser $watch pour surveiller les changements dans le payload\n            scope.$watch('msg.payload', function(payload) {\n                console.log(\"Payload reçu :\", payload);  // Pour vérifier si le payload est bien reçu\n                if (payload) {\n                     // Définissez ici la valeur des ergols restants (valeur statique à adapter selon le besoin)\n                    let ergolsRestants = payload.path_14[2]; // Exemple de valeur statique (à remplacer par une donnée dynamique si nécessaire)\n\n                    // Mise à jour de la valeur \"Ergols restants\"\n                    let formattedErgolsRestants = ergolsRestants.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    let remainingElements = document.getElementsByClassName(\"form2_ergolRemaining\");\n                    for (let i = 0; i < remainingElements.length; i++) {\n                        remainingElements[i].textContent = formattedErgolsRestants + \" kg\";\n            }\n                    let consommation = payload.path_15[0].consommationErgols;\n                    \n                    // Formattage en notation française\n                    let formattedConsommation = consommation.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    \n                    // Mettre à jour toutes les instances de consommation d'ergols\n                    let elements = document.getElementsByClassName(\"form2_ergolResult\");\n                    for (let i = 0; i < elements.length; i++) {\n                        elements[i].textContent = formattedConsommation + \" kg\";\n                    }\n                } else {\n                    console.log(\"Payload non valide ou consommationErgols manquant\");\n                }\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "35286ee49bc63ab1",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 2660,
        "wires": []
    },
    {
        "id": "0c043351d6ba9fe0",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 2600,
        "wires": [
            [
                "c5c93ce0aad95adc",
                "f4d75dd5dfeb5ece"
            ]
        ]
    },
    {
        "id": "199420b987aa1b5d",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && rm -rf Ergols4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 230,
        "y": 2040,
        "wires": [
            [],
            [
                "1949feb774a044c7"
            ],
            [
                "9b8f83154976c5a9"
            ]
        ]
    },
    {
        "id": "c5c93ce0aad95adc",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[\"path_11\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 680,
        "y": 2660,
        "wires": [
            [
                "b0bb54a8154b505c",
                "c1ed1effd7c2aeb6"
            ],
            []
        ]
    },
    {
        "id": "f4d75dd5dfeb5ece",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 2720,
        "wires": []
    },
    {
        "id": "9b8f83154976c5a9",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 2140,
        "wires": []
    },
    {
        "id": "1949feb774a044c7",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 2080,
        "wires": []
    },
    {
        "id": "b0bb54a8154b505c",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Ergols4.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar path11 = (msg.paths && msg.paths.path_11) ? msg.paths.path_11 : {};\nvar pathArray2 = (msg.paths && msg.paths.path_13) ? msg.paths.path_13 : [0.0,0.0,0.0];\n\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray2[0] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray2[1] || 0; // Troisième élément ou 0 si non défini\nvar DV = path11.dv || 0; // Quatrième élément ou 0 si non défini\nvar isp = path11.isp|| 0;// Premier élément ou 0 si non défini\nvar maneuvertype = path11.maneuverType  || \"Unknown\"; // Deuxième élément ou 0 si non défini\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"DryMass, ErgolMass, DV, ManeuverType, ISP\",\n    drymass, ergolmass, DV, maneuvertype, isp\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2780,
        "wires": [
            [
                "ef411dc55acd68a4",
                "0d937895c7d911ae",
                "befe7f215bab4057"
            ]
        ]
    },
    {
        "id": "befe7f215bab4057",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Ergols4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 2860,
        "wires": [
            [
                "0ee8e9a7bb12cc45",
                "74532d7fd23329d3"
            ]
        ]
    },
    {
        "id": "0ee8e9a7bb12cc45",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1010,
        "y": 3040,
        "wires": [
            [
                "c7d831d75ca96d7d",
                "aa05eb430d0b4546"
            ]
        ]
    },
    {
        "id": "74532d7fd23329d3",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 2860,
        "wires": []
    },
    {
        "id": "aa05eb430d0b4546",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 3000,
        "wires": []
    },
    {
        "id": "c7d831d75ca96d7d",
        "type": "json",
        "z": "4f2d767445be8316",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1330,
        "y": 3040,
        "wires": [
            [
                "70b33f1f07060d0f"
            ]
        ]
    },
    {
        "id": "70b33f1f07060d0f",
        "type": "file",
        "z": "4f2d767445be8316",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1530,
        "y": 3040,
        "wires": [
            [
                "4730b8dd5fbae393"
            ]
        ]
    },
    {
        "id": "4730b8dd5fbae393",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red2 -DcommandParameter=consommationErgols -jar ImpulseManeuver.jar",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 1950,
        "y": 3040,
        "wires": [
            [
                "82cd10275ad0cb80"
            ],
            [],
            []
        ]
    },
    {
        "id": "82cd10275ad0cb80",
        "type": "file in",
        "z": "4f2d767445be8316",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ConsommationErgols4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2230,
        "y": 3020,
        "wires": [
            [
                "97ef7ed83ecda44a"
            ]
        ]
    },
    {
        "id": "97ef7ed83ecda44a",
        "type": "join",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2410,
        "y": 3020,
        "wires": [
            [
                "9ff23f380b2dd8df"
            ]
        ]
    },
    {
        "id": "9ff23f380b2dd8df",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 3020,
        "wires": [
            [
                "af597d57b83130b1",
                "05f5308c88c526f3",
                "b4fa9b548c537520"
            ]
        ]
    },
    {
        "id": "05f5308c88c526f3",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2790,
        "y": 3080,
        "wires": []
    },
    {
        "id": "af597d57b83130b1",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.consommationErgols = parseFloat(msg.payload[n-1])\n\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 3020,
        "wires": [
            [
                "27bee5459e348fec",
                "e9ca1c6a25615c20"
            ]
        ]
    },
    {
        "id": "27bee5459e348fec",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3070,
        "y": 2960,
        "wires": []
    },
    {
        "id": "e9ca1c6a25615c20",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Ergols out",
        "mode": "link",
        "links": [
            "5c13c905e3b13b67"
        ],
        "x": 3055,
        "y": 3040,
        "wires": []
    },
    {
        "id": "421d5b4632205ca3",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 3020,
        "wires": []
    },
    {
        "id": "5c13c905e3b13b67",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "Ergols in",
        "links": [
            "e9ca1c6a25615c20"
        ],
        "x": 75,
        "y": 3020,
        "wires": [
            [
                "421d5b4632205ca3",
                "8f1658a82b85d3ae",
                "501961298eb00fac",
                "a9e21c8a1fcc5c4f"
            ]
        ]
    },
    {
        "id": "a0b513c4d6dc1c5a",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4370,
        "y": 1880,
        "wires": []
    },
    {
        "id": "b44774bc8c40ad7a",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "ergols",
        "func": "if (msg.payload && msg.payload[0]) {\n    // Assurez-vous que les propriétés existent et ne sont pas null avant de les insérer dans le tableau\n    const dry_mass = msg.payload[0].dry_mass !== undefined ? msg.payload[0].dry_mass : 0;\n    const ergol_mass = msg.payload[0].ergol_mass !== undefined ? msg.payload[0].ergol_mass : 0;\n    const ergol_consumption = msg.payload[0].ergol_consumption !== null && msg.payload[0].ergol_consumption !== undefined ? msg.payload[0].ergol_consumption : 0.0;\n\n    // Créer un tableau avec les valeurs\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"Le payload ne contient pas les données attendues.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2600,
        "wires": [
            [
                "b419cf27c129cbeb"
            ]
        ]
    },
    {
        "id": "b419cf27c129cbeb",
        "type": "csv",
        "z": "4f2d767445be8316",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1230,
        "y": 2620,
        "wires": [
            [
                "1faedb709a3a0031",
                "833df24055092a3f"
            ]
        ]
    },
    {
        "id": "1faedb709a3a0031",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "object to array",
        "func": "// Découper le CSV en lignes\nlet csvData = msg.payload.split('\\n');\n\n// Vérifier si la deuxième ligne existe\nif (csvData.length > 1) {\n    // Récupérer la deuxième ligne (index 1)\n    let secondLine = csvData[1].trim();\n\n    // Découper la deuxième ligne par espaces ou tabulations\n    let values = secondLine.split(/\\s+/); // Utilisation de \\s+ pour capturer les espaces multiples\n\n    // Convertir les valeurs en nombres (si applicable)\n    let dry_mass = parseFloat(values[0]) || 0;\n    let ergol_mass = parseFloat(values[1]) || 0;\n    let ergol_consumption = parseFloat(values[2]) || 0;\n\n    // Placer les valeurs dans un tableau\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"La deuxième ligne n'existe pas.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 2660,
        "wires": [
            [
                "31f18066c0520f8f"
            ]
        ]
    },
    {
        "id": "31f18066c0520f8f",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 2740,
        "wires": [
            [
                "c5c93ce0aad95adc",
                "a215a048e5c1c23d",
                "a8d0bd9ed71ed9a3"
            ]
        ]
    },
    {
        "id": "a215a048e5c1c23d",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "PATH 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 2720,
        "wires": []
    },
    {
        "id": "dca556aea5b98d99",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 2420,
        "wires": []
    },
    {
        "id": "833df24055092a3f",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 2780,
        "wires": []
    },
    {
        "id": "a727a7080538b9fc",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4850,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d4add07ec86f7324",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "In maneuvre prédéfinie",
        "links": [
            "0ef08be962cfc6a0",
            "510909bf9ff03e69"
        ],
        "x": 4605,
        "y": 2060,
        "wires": [
            [
                "42105397b3e625c0",
                "5766eb88d289b95e",
                "72c9428ba5e2ec00"
            ]
        ]
    },
    {
        "id": "c80bbff4fa2c9912",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "ERGOLS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 2840,
        "wires": []
    },
    {
        "id": "8f1658a82b85d3ae",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_15",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_15",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 2940,
        "wires": [
            [
                "ddb991d8e67b99e5",
                "ef411dc55acd68a4"
            ]
        ]
    },
    {
        "id": "ef411dc55acd68a4",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 2840,
        "wires": [
            [
                "fb15736eda67170c",
                "ddb991d8e67b99e5"
            ]
        ]
    },
    {
        "id": "ddb991d8e67b99e5",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[\"path_14\",\"path_15\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 200,
        "y": 2740,
        "wires": [
            [
                "b0a633c454d7ead3"
            ],
            []
        ]
    },
    {
        "id": "fb15736eda67170c",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 2940,
        "wires": []
    },
    {
        "id": "b0a633c454d7ead3",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "// Suppose que msg.payload contient déjà des informations\nlet paths = msg.paths; // Supposons que les chemins sont dans msg.paths\n\n// Ajouter les informations de paths dans payload\nmsg.payload = paths;\n\n// Retourner le message avec paths inclus dans payload\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 2660,
        "wires": [
            [
                "c80bbff4fa2c9912",
                "cd53eee9d3258b36"
            ]
        ]
    },
    {
        "id": "1711c1cc796f7940",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "Ergol Mass Update",
        "links": [
            "8d0aa4bce003bc30"
        ],
        "x": 135,
        "y": 2340,
        "wires": [
            [
                "70560cdde892992d",
                "ea1125f52d271736"
            ]
        ]
    },
    {
        "id": "70560cdde892992d",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 2380,
        "wires": [
            [
                "b0bb54a8154b505c",
                "0c043351d6ba9fe0"
            ]
        ]
    },
    {
        "id": "0d937895c7d911ae",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2860,
        "wires": []
    },
    {
        "id": "c1ed1effd7c2aeb6",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "PATH DV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 2620,
        "wires": []
    },
    {
        "id": "ea1125f52d271736",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 2320,
        "wires": [
            [
                "ef842697ed5fb7ad"
            ]
        ]
    },
    {
        "id": "501961298eb00fac",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && rm -rf ConsommationErgols4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 3080,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b4fa9b548c537520",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_16",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_16",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2730,
        "y": 2960,
        "wires": [
            [
                "ddf73b70bfc1ba35"
            ]
        ]
    },
    {
        "id": "ddf73b70bfc1ba35",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Wait result",
        "mode": "link",
        "links": [
            "b3f38bb87fa0caee"
        ],
        "x": 2865,
        "y": 2960,
        "wires": []
    },
    {
        "id": "b3f38bb87fa0caee",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "wait result",
        "links": [
            "ddf73b70bfc1ba35"
        ],
        "x": 585,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "1dd239f090ba0c63",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 2020,
        "wires": []
    },
    {
        "id": "dbe6a649a19f472d",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "PATH 1 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3000,
        "y": 2340,
        "wires": []
    },
    {
        "id": "f653d256926ae723",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "PATH 2 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3200,
        "y": 2600,
        "wires": []
    },
    {
        "id": "7e0bf1da6e07d23c",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4690,
        "y": 2160,
        "wires": []
    },
    {
        "id": "94fb767fbcb82fe1",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup43', topic: msg.payload };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 2200,
        "wires": [
            [
                "718310a67b8f071c",
                "543b064cda3e254c"
            ]
        ]
    },
    {
        "id": "70e571bcf7df90fa",
        "type": "switch",
        "z": "4f2d767445be8316",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui43",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 2260,
        "wires": [
            [
                "ef842697ed5fb7ad",
                "23e1ee2c2adbd330",
                "c5b045421402dc8b",
                "05ef6008a918cba4"
            ]
        ]
    },
    {
        "id": "42105397b3e625c0",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cp red2-tle-storage.json /app/jsatorb-rest-api/files/default_Sat/Data/Manoeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4500,
        "y": 1700,
        "wires": [
            [
                "be6b4110dcf30868"
            ],
            [
                "be6b4110dcf30868"
            ],
            []
        ]
    },
    {
        "id": "be6b4110dcf30868",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST_SAVE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4630,
        "y": 1800,
        "wires": []
    },
    {
        "id": "5766eb88d289b95e",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST AFTER MANEUVER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4740,
        "y": 1880,
        "wires": []
    },
    {
        "id": "72c9428ba5e2ec00",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "echange",
        "func": "// Define helper functions outside the main function for reuse\nfunction formatNumber(value) {\n    if (typeof value === 'string') {\n        // Remove leading zeros and convert to float\n        let num = parseFloat(value);\n        // If parsing fails, return the original value\n        if (isNaN(num)) return value;\n        return num.toFixed(3);\n    } else if (typeof value === 'number') {\n        return value.toFixed(3);\n    }\n    return value; // Return as is if not string or number\n}\n\nfunction formatEccentricity(value) {\n    if (typeof value === 'string') {\n        // Parse the string as an integer\n        let intVal = parseInt(value, 10);\n        if (isNaN(intVal)) return value;\n        // Multiply by 1e-7 and format in exponential notation with three decimals\n        return (intVal * 1e-7).toExponential(3).toUpperCase();\n    } else if (typeof value === 'number') {\n        return (value * 1e-7).toExponential(3).toUpperCase();\n    }\n    return value; // Return as is if not string or number\n}\n\n// Main function to process the message\nfunction processMessage(msg) {\n    // Check if msg.payload exists\n    if (!msg.payload || !Array.isArray(msg.payload)) {\n        node.error(\"Invalid payload structure. Expected an array.\", msg);\n        return msg;\n    }\n    \n    // Create a new array to store the formatted results\n    let newPayload = [];\n    \n    // Process each item in the payload array\n    msg.payload.forEach((item, index) => {\n        if (item && typeof item === 'object') {\n            // Handle the case where the target fields are in item.payload\n            if (typeof item.payload === 'object' && item.payload !== null && item.payload.version) {\n                let formattedPayload = formatItem(item.payload);\n                // Create a new object with the formatted payload\n                newPayload[index] = formattedPayload;\n            } \n            // Handle the case where the target fields are directly in the item\n            else if (item.version) {\n                newPayload[index] = formatItem(item);\n            }\n            else {\n                // If no version field is found, preserve the original item\n                newPayload[index] = item;\n            }\n        } else {\n            // If the item is not an object, preserve it as is\n            newPayload[index] = item;\n        }\n    });\n    \n    // Replace the original payload with the formatted one\n    newPayload[1] = \"\";\n    msg.payload = newPayload;\n    \n    return msg;\n}\n\n// Function to format fields in an item and return a new formatted object\nfunction formatItem(item) {\n    // Create a new object to avoid modifying the original\n    let formattedItem = {...item};\n    \n    // Format 'incli' if it exists\n    if (formattedItem.hasOwnProperty('incli')) {\n        formattedItem.incli = formatNumber(formattedItem.incli);\n    }\n    // Format 'raan' if it exists\n    if (formattedItem.hasOwnProperty('raan')) {\n        formattedItem.raan = formatNumber(formattedItem.raan);\n    }\n    // Format 'ecc' if it exists\n    if (formattedItem.hasOwnProperty('ecc')) {\n        formattedItem.ecc = formatEccentricity(formattedItem.ecc);\n    }\n    // Format 'aop' if it exists\n    if (formattedItem.hasOwnProperty('aop')) {\n        formattedItem.aop = formatNumber(formattedItem.aop);\n    }\n    // Format 'meana' if it exists\n    if (formattedItem.hasOwnProperty('meana')) {\n        formattedItem.meana = formatNumber(formattedItem.meana);\n    }\n    // Format 'mean' if it exists\n    if (formattedItem.hasOwnProperty('mean')) {\n        formattedItem.mean = formatNumber(formattedItem.mean);\n    }\n    // Format 'dry_mass' if it exists\n    if (formattedItem.hasOwnProperty('dry_mass')) {\n        formattedItem.dry_mass = formatNumber(formattedItem.dry_mass);\n    }\n    // Format 'ergol_mass' if it exists\n    if (formattedItem.hasOwnProperty('ergol_mass')) {\n        formattedItem.ergol_mass = formatNumber(formattedItem.ergol_mass);\n    }\n    // Format 'ergol_consumption' if it exists\n    if (formattedItem.hasOwnProperty('ergol_consumption')) {\n        formattedItem.ergol_consumption = formatNumber(formattedItem.ergol_consumption);\n    }\n    \n    return formattedItem;\n}\n\n// Process the incoming message\nreturn processMessage(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4740,
        "y": 2080,
        "wires": [
            [
                "9481156953c709f7"
            ]
        ]
    },
    {
        "id": "84bcf89de79282de",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "echange",
        "func": "// Check if msg.payload exists and is an array with at least two elements\nif (msg.payload && Array.isArray(msg.payload) && msg.payload.length >= 2) {\n\n    // Define a helper function to format numbers:\n    // Removes leading zeros and formats to two decimal places\n    function formatNumber(value) {\n        if (typeof value === 'string') {\n            // Remove leading zeros and convert to float\n            let num = parseFloat(value);\n            // If parsing fails, return the original value\n            if (isNaN(num)) return value;\n            return num.toFixed(3);\n        } else if (typeof value === 'number') {\n            return value.toFixed(3);\n        }\n        return value; // Return as is if not string or number\n    }\n\n    // Define a helper function to format eccentricity to scientific notation\n    function formatEccentricity(value) {\n        if (typeof value === 'string') {\n            // Parse the string as an integer\n            let intVal = parseInt(value, 10);\n            if (isNaN(intVal)) return value;\n            // Multiply by 1e-7 and format in exponential notation with two decimals\n            return (intVal * 1e-7).toExponential(3).toUpperCase();\n        } else if (typeof value === 'number') {\n            return (value * 1e-7).toExponential(3).toUpperCase();\n        }\n        return value; // Return as is if not string or number\n    }\n\n    // Iterate over each object in the payload array\n    msg.payload.forEach((item, index) => {\n        // Check if the item has the 'version' field\n        if (item.version) {\n            // Format 'incli' if it exists\n            if (item.hasOwnProperty('incli')) {\n                item.incli = formatNumber(item.incli);\n            }\n\n            // Format 'raan' if it exists\n            if (item.hasOwnProperty('raan')) {\n                item.raan = formatNumber(item.raan);\n            }\n\n            // Format 'ecc' if it exists\n            if (item.hasOwnProperty('ecc')) {\n                item.ecc = formatEccentricity(item.ecc);\n            }\n\n            // Format 'aop' if it exists\n            if (item.hasOwnProperty('aop')) {\n                item.aop = formatNumber(item.aop);\n            }\n\n            // Format 'meana' if it exists\n            if (item.hasOwnProperty('meana')) {\n                item.meana = formatNumber(item.meana);\n            }\n\n            // Format 'mean' if it exists\n            if (item.hasOwnProperty('mean')) {\n                item.mean = formatNumber(item.mean);\n            }\n\n            // Format 'dry_mass' if it exists\n            if (item.hasOwnProperty('dry_mass')) {\n                item.dry_mass = formatNumber(item.dry_mass);\n            }\n\n            // Format 'ergol_mass' if it exists\n            if (item.hasOwnProperty('ergol_mass')) {\n                item.ergol_mass = formatNumber(item.ergol_mass);\n            }\n\n            // Optionally, format 'ergol_consumption' if it exists\n            if (item.hasOwnProperty('ergol_consumption')) {\n                // Assuming you want to format it to two decimal places\n                if (typeof item.ergol_consumption === 'string' || typeof item.ergol_consumption === 'number') {\n                    item.ergol_consumption = formatNumber(item.ergol_consumption);\n                }\n            }\n\n            // Add any additional fields you wish to format here\n        }\n    });\n\n    // After formatting, ensure that the payload array still has two elements\n    // (This step is optional since we're modifying the existing objects)\n    if (msg.payload.length !== 2) {\n        node.warn(\"Payload array does not contain exactly two elements.\");\n    }\n\n} else {\n    // Handle cases where payload is not as expected\n    node.error(\"Invalid payload structure. Expected an array with at least two elements.\", msg);\n}\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4840,
        "y": 2140,
        "wires": [
            [
                "9481156953c709f7"
            ]
        ]
    },
    {
        "id": "23e1ee2c2adbd330",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST SWITCH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 2340,
        "wires": []
    },
    {
        "id": "c5b045421402dc8b",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "object to array",
        "func": "msg.payload=msg.topic;\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2200,
        "wires": [
            [
                "86fb963e74add920",
                "f129b3b435b44bda",
                "a4b843c70a0a73e6"
            ]
        ]
    },
    {
        "id": "86fb963e74add920",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST CONVERT PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 2180,
        "wires": []
    },
    {
        "id": "718310a67b8f071c",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST TRIGGER MANUAL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 200,
        "y": 2100,
        "wires": []
    },
    {
        "id": "8b7799769d23a17f",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 2300,
        "wires": []
    },
    {
        "id": "38e7dd3d89aea720",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "",
        "links": [
            "60bab848a6e23861",
            "0a415400da9b3f54",
            "f83637b951242d2d",
            "4f0105eee79139d2",
            "eed0fd174995d5b0",
            "655ad19276a8f599",
            "53cadd4ff784c659",
            "d88388a251a33878",
            "79fb1054f6de18d0",
            "8e4842d5d9999187",
            "85667f2df171a6b7",
            "4ed49ade6926a5ea"
        ],
        "x": 4445,
        "y": 2260,
        "wires": [
            [
                "859ea675ba2a1202",
                "814811cdc09cc7f0"
            ]
        ]
    },
    {
        "id": "859ea675ba2a1202",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "echange",
        "func": "msg.payload[0] = \"\";\n\n// Ensure the second payload element is an empty string as per your original logic\nmsg.payload[1] = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4580,
        "y": 2240,
        "wires": [
            [
                "9481156953c709f7",
                "db0987885508a3d7"
            ]
        ]
    },
    {
        "id": "db0987885508a3d7",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4590,
        "y": 2300,
        "wires": []
    },
    {
        "id": "814811cdc09cc7f0",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4450,
        "y": 2160,
        "wires": []
    },
    {
        "id": "0969f323233e8e09",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "a1e2900e2867cd47",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    /* Keeping all the original styles */\n    md-card[node-id=\"15ce479d884995ab\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n\n    /* Modal Overlay with improved transitions */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    /* Modal Content with transform animation */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s ease;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n\n    /* Red Rectangle Inside the Modal Content */\n    .red-rectangle {\n      width: 100px;\n      height: 50px;\n      background-color: red;\n      margin: 20px auto;\n    }\n\n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n\n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n\n    /* Oui Button */\n    #ouiBtn2 {\n      background-color: #4CAF50;\n    }\n\n    #ouiBtn2:hover {\n      background-color: #45a049;\n    }\n\n    /* Non Button */\n    #nonBtn2 {\n      background-color: #f44336;\n    }\n\n    #nonBtn2:hover {\n      background-color: #da190b;\n    }\n\n    /* Keeping all the form styles */\n    .hidden { display: none; }\n    \n    .scrollable-container {\n      max-height: 80vh;\n      overflow-y: auto;\n      padding-right: 10px;\n      scrollbar-width: none;\n      -ms-overflow-style: none;\n    }\n    \n    .scrollable-container::-webkit-scrollbar {\n      display: none;\n    }\n\n    .form-group {\n      margin-bottom: 20px;\n    }\n\n    .form-group label {\n      display: block;\n      margin-bottom: 10px;\n      font-weight: normal;\n      color: #fff;\n      padding-left: 25px;\n    }\n\n    .form-group input,\n    .form-group select {\n      width: 90%;\n      padding: 8px 0;\n      box-sizing: border-box;\n      border: none;\n      background-color: #212c31;\n      color: #fff;\n      border-bottom: 2px solid #666;\n      margin: 0 auto;\n      display: block;\n    }\n\n    .form-group input:focus,\n    .form-group select:focus {\n      outline: none;\n      border-bottom: 2px solid #888;\n    }\n\n    .form-group select option {\n      background-color: #212c31;\n      color: #fff;\n    }\n\n    #formTitle {\n      font-size: 18px;\n      font-weight: normal;\n      color: #fff;\n      margin-top: 25px;\n      margin-bottom: 30px;\n      margin-left: 25px;\n    }\n\n    #inputField {\n      margin-top: 20px;\n    }\n\n    .spacer {\n      height: 30px;\n    }\n\n    #submitButton {\n      margin-top: 20px;\n      margin-left: 25px;\n      padding: 10px 20px;\n      font-size: 16px;\n      font-weight: normal;\n      color: #fff;\n      background-color: rgb(0, 86, 122);\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: background-color 0.3s, transform 0.2s;\n    }\n\n    #submitButton:hover {\n      background-color: rgb(0, 106, 152);\n    }\n\n    #submitButton:active {\n      background-color: rgb(0, 66, 92);\n      transform: scale(0.98);\n    }\n\n    #lastSubmitted {\n      margin-top: 50px;\n      padding: 15px;\n      border: 1px solid #444;\n      border-radius: 4px;\n      background-color: #212c31;\n      color: #fff;\n    }\n\n    #lastSubmitted h3 {\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    #lastSubmitted ul {\n      list-style-type: disc;\n      padding-left: 20px;\n    }\n\n    #lastSubmitted li {\n      margin-bottom: 5px;\n      color: #ddd;\n    }\n\n    #lastSubmitted p {\n      margin-bottom: 10px;\n      color: #fff;\n    }\n\n    #lastSubmitted ul li strong {\n      color: #fff;\n    }\n  </style>\n</head>\n<body>\n  <md-card node-id=\"15ce479d884995ab\">\n  </md-card>\n\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal2\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n      <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Cette action déclenchera une manoeuvre manuelle à partir des paramètres entrés.<br><br>\n        Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn2\">Oui</button>\n        <button id=\"nonBtn2\">Non</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- JavaScript to Control Modal -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal2');\n      var originalMsg = null;\n\n      function showModal(msg) {\n        originalMsg = msg;\n        modal.style.display = 'block';\n        // Force a reflow before adding the show class\n        modal.offsetHeight;\n        modal.classList.add('show');\n      }\n\n      function hideModal() {\n        modal.classList.remove('show');\n        // Wait for transitions to complete before hiding\n        modal.addEventListener('transitionend', function handler(e) {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handler);\n            originalMsg = null;\n          }\n        });\n      }\n\n      // Listen for localStorage events to sync modal state across tabs\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState2') {\n          if (event.newValue === 'show') {\n            showModal(JSON.parse(localStorage.getItem('modalMsg2')));\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n\n      // Watch for incoming messages from Node-RED\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState2', 'show');\n          localStorage.setItem('modalMsg2', JSON.stringify(msg));\n          showModal(msg);\n        }\n      });\n\n      // Handle \"Oui\" button click\n      document.getElementById('ouiBtn2').addEventListener('click', function() {\n        var responseMsg = originalMsg ? \n          { payload: 'oui', topic: originalMsg.topic } : \n          { payload: 'oui' };\n        scope.send(responseMsg);\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n\n      // Handle \"Non\" button click\n      document.getElementById('nonBtn2').addEventListener('click', function() {\n        var responseMsg = originalMsg ? \n          { payload: 'non', topic: originalMsg.topic } : \n          { payload: 'non' };\n        scope.send(responseMsg);\n        localStorage.setItem('modalState2', 'hide');\n        hideModal();\n      });\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 320,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "550efc0b705202ba",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "d": true,
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n  /* CSS style for labels */\n  #select_20 .md-select-value span,\n  #select_20 .md-text,\n  #select_25 .md-select-value span,\n  #select_25 .md-text {\n    color: #ffffff !important;\n  }\n</style>\n\n<md-input-container>\n  <label for=\"maneuver\">Maneuver</label>\n  <md-select ng-model=\"maneuver\" id=\"select_20\">\n    <md-option value=\"Impulse\">Impulse</md-option>\n    <md-option value=\"Continuous\">Continuous</md-option>\n  </md-select>\n</md-input-container>\n\n<md-input-container>\n  <label for=\"integrator\">Integrator</label>\n  <md-select ng-model=\"integrator\" style=\"color: #ffffff !important;\" id=\"select_25\">\n    <md-option value=\"RK4\">RungeKutta4</md-option>\n    <md-option value=\"DP\">DormandPrince</md-option>\n  </md-select>\n</md-input-container>\n\n<br>\n\n<button ng-click=\"send({payload: {maneuverType: maneuver, integrator: integrator}})\" class=\"md-raised nr-dashboard-form-button md-button md-ink-ripple\" id=\"thrustButton\">Submit</button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "f3c084681a87e2d7",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": ": > /app/maneuver-manager/Result4.txt && : > /app/maneuver-manager/PostManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3130,
        "y": 2380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "387944da81ef17d0",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate4.txt",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3410,
        "y": 2880,
        "wires": [
            [
                "b4295878f9b30b3b"
            ],
            [],
            []
        ]
    },
    {
        "id": "b4295878f9b30b3b",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3390,
        "y": 2780,
        "wires": [
            [
                "15813e2194ac4081"
            ]
        ]
    },
    {
        "id": "15813e2194ac4081",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[\"path_11\", \"path_12\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3620,
        "y": 2780,
        "wires": [
            [
                "85d80f2b9d0eb347"
            ],
            []
        ]
    },
    {
        "id": "85d80f2b9d0eb347",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "var max = 6;\nvar random = Math.floor(Math.random() * max);\n\n// Use the message from path_12 for error analysis\nvar errorPayload = msg.paths && msg.paths.path_12 ? msg.paths.path_12 : \"\";\n\nif (errorPayload.includes(\"hyperbolic orbits cannot be handled\")) {\n    if(random == 0){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";\n    }\n    else if(random == 1){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";\n    }\n    else if(random == 2){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. Are you deserting?\";\n    }\n    else if(random == 3){\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. You aren't qualified for interplanetary flight!\";\n    }\n    else {\n        msg.errorMessage = \"Maneuver aborted, hyperbolic trajectory. No French assets in this direction!\";\n    }\n} \nelse if (errorPayload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (errorPayload.includes(\"ERGOL\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (errorPayload.includes(\"Initial date must\")) {\n    msg.errorMessage = \"**Temporal error :** Maneuver order is anterior to last apside reached !\";\nmsg.errorMessage += \" | Last apside: \" + msg.paths.path_11;\n    \n} \nelse if (errorPayload.includes(\"Eccentricity\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver !\";\n} \nelse if (errorPayload.includes(\"parabolic or hyperbolic orbit\")) {\n    msg.errorMessage = \"**Incorrect Delta-V:** The maneuver results in a hyperbolic orbit !\";\n} \nelse {\n    msg.errorMessage = \"Maneuver aborted !\";\n}\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3785,
        "y": 2788,
        "wires": [
            [
                "62e277c1dc91f0c4",
                "77f6c6f00b9b6bd9"
            ]
        ]
    },
    {
        "id": "62e277c1dc91f0c4",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3930,
        "y": 2800,
        "wires": []
    },
    {
        "id": "0b6d6b79295f4975",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 2720,
        "wires": [
            [
                "15813e2194ac4081"
            ]
        ]
    },
    {
        "id": "77f6c6f00b9b6bd9",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 3915,
        "y": 2840,
        "wires": []
    },
    {
        "id": "543b064cda3e254c",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "6258723b1d975706",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f",
            "1a12589aeb64156f"
        ],
        "x": 95,
        "y": 2140,
        "wires": []
    },
    {
        "id": "bc94d3bf8d4209a4",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "",
        "links": [
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "94a8919ad8194b6f",
            "b69bea8abb1b280f",
            "b8e26b39226639eb",
            "2284c0160c191b60"
        ],
        "x": 305,
        "y": 2220,
        "wires": [
            [
                "70e571bcf7df90fa"
            ]
        ]
    },
    {
        "id": "05ef6008a918cba4",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST POST ACCEPT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 2180,
        "wires": []
    },
    {
        "id": "d38e791231f1e05b",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "// This example sends a message to trigger a reload\nmsg.payload = { reload: true };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3240,
        "y": 2120,
        "wires": [
            [
                "5554e8cf3ae626aa",
                "e442309d2474ba40"
            ]
        ]
    },
    {
        "id": "5554e8cf3ae626aa",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3440,
        "y": 2240,
        "wires": [
            [
                "ac701daea5f839e5"
            ]
        ]
    },
    {
        "id": "ac701daea5f839e5",
        "type": "websocket out",
        "z": "4f2d767445be8316",
        "name": "reload",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 3510,
        "y": 2300,
        "wires": []
    },
    {
        "id": "77e2ca2242d9105d",
        "type": "inject",
        "z": "4f2d767445be8316",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2960,
        "y": 2120,
        "wires": [
            [
                "d38e791231f1e05b"
            ]
        ]
    },
    {
        "id": "83a734246c49f669",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager && ./clear.sh red2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3240,
        "y": 2520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ab8b16e9f3637a99",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4650,
        "y": 2380,
        "wires": [
            [
                "e3fb8b7bf24753d8"
            ]
        ]
    },
    {
        "id": "58394f4348b27dd7",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "",
        "links": [
            "2c30c805f430da98"
        ],
        "x": 2155,
        "y": 2460,
        "wires": [
            [
                "4b0932d314e5b349",
                "9c8eb75d9cc569d4"
            ]
        ]
    },
    {
        "id": "d806d37a9c34277c",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_10\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1",
        "exactOrder": "true",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2590,
        "y": 2460,
        "wires": [
            [
                "aac6ea0cf9564ea2",
                "eacb1b2683a66e82",
                "9f862f6a2c0fe424",
                "deae7fb8f1b162c2"
            ],
            []
        ]
    },
    {
        "id": "a4b843c70a0a73e6",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 739,
        "y": 2137,
        "wires": [
            [
                "2c30c805f430da98"
            ]
        ]
    },
    {
        "id": "2c30c805f430da98",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Submit Manoeuver",
        "mode": "link",
        "links": [
            "58394f4348b27dd7"
        ],
        "x": 859,
        "y": 2137,
        "wires": []
    },
    {
        "id": "e442309d2474ba40",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3390,
        "y": 2060,
        "wires": []
    },
    {
        "id": "aac6ea0cf9564ea2",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2350,
        "y": 2420,
        "wires": [
            [
                "17e787183506842d"
            ]
        ]
    },
    {
        "id": "17e787183506842d",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 2380,
        "wires": [
            [
                "deae7fb8f1b162c2"
            ]
        ]
    },
    {
        "id": "880c3473f5d302ec",
        "type": "exec",
        "z": "4f2d767445be8316",
        "command": "cd /app/maneuver-manager && ./remove_two_lines.sh red2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 4680,
        "y": 2720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "08bce8f52ec84f7a",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "AffichageLastManeuverDate r2",
        "mode": "link",
        "links": [
            "be1f3f44481fcb31"
        ],
        "x": 4395,
        "y": 2380,
        "wires": []
    },
    {
        "id": "3175a73350483e56",
        "type": "inject",
        "z": "4f2d767445be8316",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4340,
        "y": 2780,
        "wires": [
            [
                "880c3473f5d302ec"
            ]
        ]
    },
    {
        "id": "2363261e43f2e2fb",
        "type": "function",
        "z": "4f2d767445be8316",
        "name": "",
        "func": "msg.payload = { \n    isp: '',\n    dv: '' \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 2540,
        "wires": [
            [
                "eb9cec120b4a7641"
            ]
        ]
    },
    {
        "id": "9714d02f0df51fd9",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "reset fields",
        "mode": "link",
        "links": [
            "81e14e90a6632eb8"
        ],
        "x": 3705,
        "y": 2420,
        "wires": []
    },
    {
        "id": "81e14e90a6632eb8",
        "type": "link in",
        "z": "4f2d767445be8316",
        "name": "",
        "links": [
            "9714d02f0df51fd9"
        ],
        "x": 125,
        "y": 2480,
        "wires": [
            [
                "2363261e43f2e2fb"
            ]
        ]
    },
    {
        "id": "817685086da2dd5b",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "SAVE TRIGGER",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 3495,
        "y": 2380,
        "wires": []
    },
    {
        "id": "bf24afc835dc2b5b",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4590,
        "y": 320,
        "wires": []
    },
    {
        "id": "610a95a2e41e5893",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4590,
        "y": 1980,
        "wires": []
    },
    {
        "id": "a3a04f2be60fd452",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4750,
        "y": 1980,
        "wires": []
    },
    {
        "id": "e34d92e03eba1e82",
        "type": "ui_template",
        "z": "4f2d767445be8316",
        "group": "c8a7959a4b0f55f9",
        "name": "RED1 Vehicule Submit",
        "order": 8,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n        background-color: firebrick; /* Default background color */\n        color: white; /* Optional: sets text color */\n        border: none; /* Optional: removes default border */\n        padding: 10px; /* Optional: adds some padding */\n        cursor: pointer; /* Optional: changes cursor on hover */\n    }\n\n    .button-container button:hover {\n        background-color: red; /* Background color on hover */\n    }\n\n    .button-container button:first-child {\n        margin-top: 20px;\n    }\n    \n    #submitButtonb1 {\n  background-color: firebrick !important; /* Default background color */\n  color: white !important;\n  border: none !important;\n  padding: 10px !important;\n  cursor: pointer !important;\n}\n\n#submitButtonb1:hover {\n  background-color: red !important; /* Background color on hover */\n}\n\n</style>\n\n<div class=\"button-container\">\n    <!-- Utilisation de ng-click pour envoyer msg.payload au clic -->\n    <button type=\"submit\" id=\"submitButtonb1\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">\n        Submit\n    </button>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "4a06bfb5f6401b99",
                "1173deafe80a9948"
            ]
        ]
    },
    {
        "id": "4a1df1a92755fd2e",
        "type": "debug",
        "z": "4f2d767445be8316",
        "name": "TEST MASS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4970,
        "y": 2240,
        "wires": []
    },
    {
        "id": "a21f4f8b72bc90c4",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "1250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4700,
        "y": 960,
        "wires": [
            [
                "037a0cfd89201e02"
            ]
        ]
    },
    {
        "id": "037a0cfd89201e02",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "link",
        "links": [
            "ed20cce57f1ac24a"
        ],
        "x": 4805,
        "y": 980,
        "wires": []
    },
    {
        "id": "9e6ba28adfe3bfe2",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "1250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4680,
        "y": 2600,
        "wires": [
            [
                "2b17ae83d8e3dea7"
            ]
        ]
    },
    {
        "id": "2b17ae83d8e3dea7",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "",
        "mode": "link",
        "links": [
            "ed20cce57f1ac24a"
        ],
        "x": 4805,
        "y": 2600,
        "wires": []
    },
    {
        "id": "b2cabf58997e9d9c",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2410,
        "y": 800,
        "wires": [
            [
                "17b47c9528ffbaba"
            ]
        ]
    },
    {
        "id": "4b0932d314e5b349",
        "type": "delay",
        "z": "4f2d767445be8316",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2370,
        "y": 2460,
        "wires": [
            [
                "d806d37a9c34277c"
            ]
        ]
    },
    {
        "id": "ef488a750c5c550e",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Trigger Manoeuver Order By Time 3",
        "mode": "link",
        "links": [
            "9306581339269433"
        ],
        "x": 815,
        "y": 360,
        "wires": []
    },
    {
        "id": "dd666ed4e8e7046a",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Trigger Manoeuver Order By Mass 3",
        "mode": "link",
        "links": [
            "9306581339269433"
        ],
        "x": 145,
        "y": 1300,
        "wires": []
    },
    {
        "id": "9dbdbed51647f0b1",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Triger ManeuverOrder 3",
        "mode": "link",
        "links": [
            "9306581339269433"
        ],
        "x": 2245,
        "y": 740,
        "wires": []
    },
    {
        "id": "9c8eb75d9cc569d4",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Triger ManeuverOrder 4",
        "mode": "link",
        "links": [
            "d4581263b71a62f1"
        ],
        "x": 2205,
        "y": 2400,
        "wires": []
    },
    {
        "id": "a9e21c8a1fcc5c4f",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Trigger Manoeuver Order By Mass 4",
        "mode": "link",
        "links": [
            "d4581263b71a62f1"
        ],
        "x": 77,
        "y": 2963,
        "wires": []
    },
    {
        "id": "25fdc93f73b53a43",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "Trigger Manoeuver Order By Time 4",
        "mode": "link",
        "links": [
            "d4581263b71a62f1"
        ],
        "x": 885,
        "y": 2020,
        "wires": []
    },
    {
        "id": "d9dfa611f78f1a9a",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_69",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_69",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2120,
        "wires": [
            [
                "2de224db14b8bbea"
            ]
        ]
    },
    {
        "id": "2de224db14b8bbea",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_69\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1340,
        "y": 2120,
        "wires": [
            [
                "63fdf65ff5ff3a2c"
            ],
            []
        ]
    },
    {
        "id": "615999b336343ec8",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "Set path_69",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_69",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 460,
        "wires": [
            [
                "e2a75452be14bfaa"
            ]
        ]
    },
    {
        "id": "e2a75452be14bfaa",
        "type": "join-wait",
        "z": "4f2d767445be8316",
        "name": "",
        "paths": "[ \"path_69\", \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "096511bb842ff0a0"
            ],
            []
        ]
    },
    {
        "id": "17903653f6e421d0",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "label red1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "red1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3280,
        "y": 660,
        "wires": [
            [
                "070ab495b74db407"
            ]
        ]
    },
    {
        "id": "521d4675218adba5",
        "type": "change",
        "z": "4f2d767445be8316",
        "name": "label red2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "red2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3220,
        "y": 2320,
        "wires": [
            [
                "318469320d496c6d"
            ]
        ]
    },
    {
        "id": "070ab495b74db407",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "save last red1",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 3405,
        "y": 660,
        "wires": []
    },
    {
        "id": "318469320d496c6d",
        "type": "link out",
        "z": "4f2d767445be8316",
        "name": "save last red2",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 3355,
        "y": 2320,
        "wires": []
    },
    {
        "id": "8671293235efd906",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "b1 timesettermaneuver IN",
        "links": [
            "9958904edb2cfd1b",
            "e91677f207467ea6"
        ],
        "x": 455,
        "y": 500,
        "wires": [
            [
                "89cccb8873a021a9"
            ]
        ]
    },
    {
        "id": "89cccb8873a021a9",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 500,
        "wires": [
            [
                "81360080a810ac84",
                "cf6cf60acba12a97",
                "ed32ef726f35154e"
            ]
        ]
    },
    {
        "id": "684c9386ebd3ba4f",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 440,
        "wires": [
            [
                "81360080a810ac84",
                "a8e3380b782302ad"
            ]
        ]
    },
    {
        "id": "81360080a810ac84",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 800,
        "y": 500,
        "wires": [
            [
                "7bc7a60c74b860af"
            ],
            []
        ]
    },
    {
        "id": "7bc7a60c74b860af",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "deb526349c9fe312",
                "3060a286b6d42d62",
                "ef474c39a9cca656"
            ]
        ]
    },
    {
        "id": "56a3263310d1435a",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 460,
        "wires": [
            [
                "ccf67d9636903b7f"
            ]
        ]
    },
    {
        "id": "ccf67d9636903b7f",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], 1, 0, 0, 1];\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 460,
        "wires": [
            [
                "e89b08bd138e5eca"
            ]
        ]
    },
    {
        "id": "deb526349c9fe312",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "d3abc71c23aa4401",
                "c44a36e11053e5e3"
            ]
        ]
    },
    {
        "id": "d3abc71c23aa4401",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[ \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "56a3263310d1435a"
            ],
            []
        ]
    },
    {
        "id": "e89b08bd138e5eca",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1950,
        "y": 460,
        "wires": [
            [
                "619f4f5387dff7b1"
            ]
        ]
    },
    {
        "id": "619f4f5387dff7b1",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2110,
        "y": 460,
        "wires": [
            [
                "261d83f2a7d61392"
            ]
        ]
    },
    {
        "id": "261d83f2a7d61392",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2320,
        "y": 460,
        "wires": [
            [
                "631492903f161c34"
            ]
        ]
    },
    {
        "id": "f7266902cd674aa6",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 640,
        "wires": [
            [
                "beb47c9292309997",
                "7d8c2eddd95508cd"
            ]
        ]
    },
    {
        "id": "1d06045d40dd2be5",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 780,
        "wires": [
            [
                "beb47c9292309997",
                "7cb176652427f7da",
                "ba521d9737df82b4",
                "7f69cd7e7a9bc3c8"
            ]
        ]
    },
    {
        "id": "beb47c9292309997",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_8\",\"path_1\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1400,
        "y": 640,
        "wires": [
            [
                "743472a45850c4dd",
                "376d38913d228b23"
            ],
            []
        ]
    },
    {
        "id": "f652294c3607b16f",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 700,
        "wires": [
            [
                "930b0ff7f017808e"
            ]
        ]
    },
    {
        "id": "f6467cd061d53b66",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "query for b1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 800,
        "wires": [
            [
                "5ef4c03b399fc03a"
            ]
        ]
    },
    {
        "id": "5ef4c03b399fc03a",
        "type": "mongodb in",
        "z": "62c122b2f65be8e8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 500,
        "y": 700,
        "wires": [
            [
                "f4f4ad48c6a1f2b8",
                "f652294c3607b16f",
                "215206a3aeb264ec",
                "3c825207fee4ca5f"
            ]
        ]
    },
    {
        "id": "930b0ff7f017808e",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1010,
        "y": 700,
        "wires": [
            [
                "0b6ae69a01a4736f"
            ]
        ]
    },
    {
        "id": "3060a286b6d42d62",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 540,
        "wires": [
            [
                "beb47c9292309997",
                "30c67a802830c95a",
                "7f69cd7e7a9bc3c8"
            ]
        ]
    },
    {
        "id": "7567abc6396329f5",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1870,
        "y": 740,
        "wires": [
            [
                "3b83c99aea41f02f",
                "451ec40ff3a3aca9"
            ]
        ]
    },
    {
        "id": "3b83c99aea41f02f",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2070,
        "y": 740,
        "wires": [
            [
                "53f64c144e442012"
            ]
        ]
    },
    {
        "id": "53f64c144e442012",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2330,
        "y": 740,
        "wires": [
            [
                "f7e4d9ab62d23e5b"
            ]
        ]
    },
    {
        "id": "9305601211366f61",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 700,
        "wires": [
            [
                "7567abc6396329f5",
                "147f7ffff053791c"
            ]
        ]
    },
    {
        "id": "00325a39c1ef33ec",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue1 -DcommandParameter=\"compute\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3050,
        "y": 600,
        "wires": [
            [
                "3a61723cb2abf084",
                "2dcfe8363b104e79",
                "3379719556e6a94d",
                "c65be597104be6e8",
                "0a9925746442b359"
            ],
            [
                "578291c05871e319",
                "aa706eae4564b922",
                "2dcfe8363b104e79",
                "0d75b758b7f0c7e7",
                "8564f2e341859e7b",
                "3aeb71b8b1a7da15",
                "7bffa0cb4f0760dc"
            ],
            []
        ]
    },
    {
        "id": "631492903f161c34",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 520,
        "wires": [
            [
                "c4f07d2b82b3ec34",
                "06741cfab2861a76"
            ]
        ]
    },
    {
        "id": "f7e4d9ab62d23e5b",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2530,
        "y": 620,
        "wires": [
            [
                "c4f07d2b82b3ec34",
                "74db5c8c7c8c7128"
            ]
        ]
    },
    {
        "id": "c4f07d2b82b3ec34",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\",\"path_10\"]",
        "pathsToExpire": "[ \"path_4\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "900",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2740,
        "y": 600,
        "wires": [
            [
                "5f22ec0aef8de3ce",
                "80a28c341337e960",
                "b77ce04123d2e9ff",
                "00325a39c1ef33ec",
                "9d6337d407500fc3"
            ],
            []
        ]
    },
    {
        "id": "3379719556e6a94d",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3490,
        "y": 400,
        "wires": [
            [
                "1c1aa1f8a12ddf31"
            ]
        ]
    },
    {
        "id": "1c1aa1f8a12ddf31",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3730,
        "y": 400,
        "wires": [
            [
                "d6a752ed66ac3df0"
            ]
        ]
    },
    {
        "id": "d6a752ed66ac3df0",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3890,
        "y": 440,
        "wires": [
            [
                "811b90a064ae5a8c"
            ]
        ]
    },
    {
        "id": "811b90a064ae5a8c",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3610,
        "y": 460,
        "wires": [
            [
                "ead1e720fa23bfc5"
            ]
        ]
    },
    {
        "id": "ead1e720fa23bfc5",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 520,
        "wires": [
            [
                "203eb4e56033374a"
            ]
        ]
    },
    {
        "id": "203eb4e56033374a",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3750,
        "y": 580,
        "wires": [
            [
                "bd17ed80315e78dc"
            ]
        ]
    },
    {
        "id": "b0fd1f59d6cae965",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "update all for B1 OUT",
        "mode": "link",
        "links": [
            "5c3232735d2e2038",
            "4ac641f2a3d366c5",
            "f97955cb1a90dca4",
            "1168e0151a783577",
            "4d4d54a87a2bb310"
        ],
        "x": 4285,
        "y": 520,
        "wires": []
    },
    {
        "id": "8f8bf13f7eea8167",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "time of post-maneuver",
        "func": "// Ensure msg.body is an array\nif (!Array.isArray(msg.body)) {\n    node.error(\"msg.body is not an array\");\n    return null;\n}\n\nvar n = msg.body.length;\nvar datecurrent = null;\n\n// Loop backwards through msg.body to find the last non-empty element\nfor (var i = n - 1; i >= 0; i--) {\n    if (msg.body[i] !== \"\") {\n        datecurrent = msg.body[i];\n        break;\n    }\n}\n\n// Set msg.payload to the found value (or null if none found)\nmsg.payload = datecurrent;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 760,
        "wires": [
            [
                "e8ef3c59447657a0",
                "9dc70342bee48751",
                "b8fc8806da26523d",
                "3a521dae2e2dff19"
            ]
        ]
    },
    {
        "id": "e8ef3c59447657a0",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3810,
        "y": 780,
        "wires": [
            [
                "b749ebcf2b4a9499"
            ]
        ]
    },
    {
        "id": "b749ebcf2b4a9499",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3980,
        "y": 780,
        "wires": [
            [
                "268db098e3fc1a53"
            ]
        ]
    },
    {
        "id": "268db098e3fc1a53",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "query to fill b1 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3570,
        "y": 840,
        "wires": [
            [
                "197d851f2101ea6f",
                "5552bdc402444e0c"
            ]
        ]
    },
    {
        "id": "197d851f2101ea6f",
        "type": "split",
        "z": "62c122b2f65be8e8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3790,
        "y": 840,
        "wires": [
            [
                "46ddb0b08285a3a5",
                "b5a85663cb34a075"
            ]
        ]
    },
    {
        "id": "46ddb0b08285a3a5",
        "type": "mongodb out",
        "z": "62c122b2f65be8e8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert b1 time tle mongo",
        "collection": "peritimeb1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4070,
        "y": 840,
        "wires": []
    },
    {
        "id": "1193b78067b14d31",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Tle b1-postMan-OUT",
        "mode": "link",
        "links": [
            "17bd6cd48b2a4ff4",
            "eaa764a3200e5895",
            "8c549ce61c13f241",
            "ce4f0fdb27bdb44e",
            "56e6a629bd1f59e2",
            "5b95d42e7eac28c8",
            "e24933176e964d7d",
            "5c2d917dc0d2c6f9"
        ],
        "x": 4475,
        "y": 700,
        "wires": []
    },
    {
        "id": "ea110acbcb1d6a0c",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4270,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "e83ca0a77889c522",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "MMB1",
        "info": "",
        "x": 230,
        "y": 20,
        "wires": []
    },
    {
        "id": "883a8d6c0c90704c",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 220,
        "y": 320,
        "wires": []
    },
    {
        "id": "f6413f09cb7814da",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 100,
        "y": 400,
        "wires": []
    },
    {
        "id": "2e63dfdc52577a49",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 160,
        "y": 480,
        "wires": []
    },
    {
        "id": "718cecde07959565",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 140,
        "y": 360,
        "wires": []
    },
    {
        "id": "9dc70342bee48751",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "blue1-date-storage",
        "filename": "blue1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3970,
        "y": 740,
        "wires": [
            [
                "e05f41692f96e018"
            ]
        ]
    },
    {
        "id": "153f83ed6747d217",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "3472b4d9ef8dbe4d",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1560,
        "y": 360,
        "wires": []
    },
    {
        "id": "e295f3d0449a1f23",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3880,
        "y": 500,
        "wires": [
            [
                "4476b12dff43245d",
                "052eb0428ccba48a"
            ]
        ]
    },
    {
        "id": "2a0f210cd790ddc1",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "fabrication de la string",
        "info": "",
        "x": 3780,
        "y": 620,
        "wires": []
    },
    {
        "id": "21dd6d37b3129b01",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 790,
        "y": 560,
        "wires": []
    },
    {
        "id": "6672409bbe10b033",
        "type": "catch",
        "z": "62c122b2f65be8e8",
        "name": "",
        "scope": [
            "00325a39c1ef33ec"
        ],
        "uncaught": false,
        "x": 3050,
        "y": 660,
        "wires": [
            [
                "578291c05871e319"
            ]
        ]
    },
    {
        "id": "bd17ed80315e78dc",
        "type": "switch",
        "z": "62c122b2f65be8e8",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4000,
        "y": 580,
        "wires": [
            [
                "d9c5d618a2049df3",
                "f4f1d7fb2f3d5e0e",
                "7237d17ef327f771",
                "b9d622b5be036a82",
                "a4e2d629e88b074d",
                "d8acbef0c018de40"
            ],
            []
        ]
    },
    {
        "id": "7269cdc689dd2cbd",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4090,
        "y": 320,
        "wires": []
    },
    {
        "id": "b51f416e81ec68e6",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4570,
        "y": 280,
        "wires": [
            [
                "afcc0a1cac7ab0bd",
                "67e1131e3c119c91"
            ]
        ]
    },
    {
        "id": "a4dea90911704f7e",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "read blue1-tle-storage",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3640,
        "y": 140,
        "wires": [
            [
                "ddc6bd2af5ce8f98",
                "5c883f431ddd7e69"
            ]
        ]
    },
    {
        "id": "eaa92f0b5870ef65",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Old tle storage",
        "filename": "blue1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3880,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ddc6bd2af5ce8f98",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3850,
        "y": 180,
        "wires": [
            [
                "eaa92f0b5870ef65",
                "cc9540460f72cfd8"
            ]
        ]
    },
    {
        "id": "88eaca904dba129f",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "11/05/23",
        "info": "",
        "x": 4180,
        "y": 240,
        "wires": []
    },
    {
        "id": "803cd8d464314706",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "TLE visualizer B1",
        "links": [
            "d32b325c8b1fc9af"
        ],
        "x": 3405,
        "y": 120,
        "wires": [
            [
                "a4dea90911704f7e",
                "f98205273a0406e6"
            ]
        ]
    },
    {
        "id": "d5816ff9d550b0e0",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "TLE visualizer B1 out",
        "mode": "link",
        "links": [
            "eff4798c71085513"
        ],
        "x": 4825,
        "y": 140,
        "wires": []
    },
    {
        "id": "cc9540460f72cfd8",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4030,
        "y": 180,
        "wires": [
            [
                "d35a61acfcc1f740"
            ]
        ]
    },
    {
        "id": "d35a61acfcc1f740",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4190,
        "y": 140,
        "wires": [
            [
                "bd48a6ffda20de60",
                "0833e95a668d6a60"
            ]
        ]
    },
    {
        "id": "4a43ec1ea84120a0",
        "type": "switch",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4490,
        "y": 140,
        "wires": [
            [
                "d5816ff9d550b0e0"
            ]
        ]
    },
    {
        "id": "bd48a6ffda20de60",
        "type": "split",
        "z": "62c122b2f65be8e8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4350,
        "y": 140,
        "wires": [
            [
                "4a43ec1ea84120a0"
            ]
        ]
    },
    {
        "id": "21a13f8e67ac40ea",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "read blue1-tle-storage",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3680,
        "y": 280,
        "wires": [
            [
                "1f35c81dbefb0364"
            ]
        ]
    },
    {
        "id": "1f35c81dbefb0364",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3870,
        "y": 280,
        "wires": [
            [
                "185a0682bd8c076d",
                "7ddf5bd8ea6540fc"
            ]
        ]
    },
    {
        "id": "185a0682bd8c076d",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Old tle storage",
        "filename": "blue1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3880,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "0833e95a668d6a60",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "echange",
        "func": "\nif(msg.payload[0].version == \"New TLE\" ){\n    var tmp =msg.payload[0];\n    msg.payload[0]= msg.payload[1];\n    msg.payload[1]=tmp;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4340,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "0b6ae69a01a4736f",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 780,
        "wires": [
            [
                "1d06045d40dd2be5"
            ]
        ]
    },
    {
        "id": "376d38913d228b23",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Data.txt format",
        "func": "// Calculations from fixed paths remain unchanged\nvar N; // Mean motion in rev/day\nvar n; // Angular speed [rad/s]\nvar a; // semi-major axis\nvar acube; // a³\nvar e; // eccentricity\n\nvar mu = 398600.4418; // Earth's standard gravitational parameter\nvar J = 86400;      // Seconds in a day\n\n// Get the mean motion from path_2 (position [7] is assumed)\nN = msg.paths.path_2[7];\nn = 2 * Math.PI * N / J;  \nacube = mu / (n * n);\na = Math.cbrt(acube);\ne = Number(msg.paths.path_2[4]) / 10000000;\ne = Number(e.toFixed(7));\n\nvar durastop = msg.paths.path_3[0] + 1.0;\nvar thrust    = \"0\";\nvar dv        = \"0\";\nvar isp       = \"0\";\nvar drymass   = \"0\";\nvar ergolmass = \"0\";\nvar surface   = \"0\";\n\nvar myDate = new Date(msg.paths.path_3[1]);\nvar DATE = myDate.toISOString();\n\n// Vérification des valeurs provenant de path_1 (ou d'autres sources)\nif (!isNaN(msg.isp)) { \n    isp = msg.isp; \n}\nif (!isNaN(msg.paths.path_13[1])) { \n    ergolmass = msg.paths.path_13[1]; \n}\nif (!isNaN(msg.paths.path_13[0])) { \n    drymass = msg.paths.path_13[0]; \n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––\n  GENERIC EXTRA PARAMETER EXTRACTION\n  On suppose que les paramètres supplémentaires (par exemple, \"Maneuver_Type\", \"SMA_2\", \n  ou \"input_5\", \"input_6\", etc.) sont transmis dans un objet contenu dans msg.paths.path_8.\n–––––––––––––––––––––––––––––––––––––––––––––––*/\nvar extraHeaders = [];\nvar extraValues = [];\n\nif (msg.paths && msg.paths.path_8 && typeof msg.paths.path_8 === 'object') {\n  // On récupère les noms et valeurs des propriétés de l'objet extra\n  extraHeaders = Object.keys(msg.paths.path_8);\n  extraValues  = Object.values(msg.paths.path_8);\n} else {\n  node.warn(\"msg.paths.path_8 est indéfini ou non valide, aucun paramètre supplémentaire n'est ajouté.\");\n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––\n  ASSEMBLAGE FINAL DU PAYLOAD\n  La première entrée est une chaîne d'en-tête.\n  On garde les colonnes fixes puis on ajoute les colonnes issues du chemin précédent.\n–––––––––––––––––––––––––––––––––––––––––––––––*/\n// Les colonnes fixes\nvar fixedHeader = \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass\";\n// On ajoute dynamiquement les noms des colonnes supplémentaires, si elles existent\nvar header = fixedHeader + (extraHeaders.length ? \", \" + extraHeaders.join(\", \") : \"\");\n\n// On construit le tableau final en respectant le même format que précédemment\nmsg.payload = [\n  header,\n  DATE,\n  a,\n  e,\n  msg.paths.path_2[2],\n  msg.paths.path_2[3],\n  msg.paths.path_2[5],\n  msg.paths.path_2[6],\n  drymass,\n  surface,\n  thrust,\n  isp,\n  ergolmass\n].concat(extraValues);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 700,
        "wires": [
            [
                "9305601211366f61"
            ]
        ]
    },
    {
        "id": "29bfdae50fa204f2",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 440,
        "wires": [
            [
                "997ba70d100d651b"
            ]
        ]
    },
    {
        "id": "997ba70d100d651b",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 440,
        "wires": [
            [
                "684c9386ebd3ba4f"
            ]
        ]
    },
    {
        "id": "215206a3aeb264ec",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 640,
        "wires": [
            [
                "3bf6afe03f8c1753"
            ]
        ]
    },
    {
        "id": "3bf6afe03f8c1753",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 730,
        "y": 640,
        "wires": [
            [
                "29bfdae50fa204f2"
            ]
        ]
    },
    {
        "id": "bb4fe403722d20f5",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 150,
        "y": 280,
        "wires": []
    },
    {
        "id": "422e2199a0e9f6e4",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 90,
        "y": 320,
        "wires": []
    },
    {
        "id": "f98205273a0406e6",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3640,
        "y": 100,
        "wires": [
            [
                "d35a61acfcc1f740"
            ]
        ]
    },
    {
        "id": "7ddf5bd8ea6540fc",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4090,
        "y": 260,
        "wires": [
            [
                "b51f416e81ec68e6",
                "b75e04c99ae01618"
            ]
        ]
    },
    {
        "id": "578291c05871e319",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3200,
        "y": 660,
        "wires": []
    },
    {
        "id": "5c883f431ddd7e69",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3870,
        "y": 140,
        "wires": []
    },
    {
        "id": "ef474c39a9cca656",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 500,
        "wires": []
    },
    {
        "id": "a8e3380b782302ad",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 440,
        "wires": []
    },
    {
        "id": "e58a31712e1e09ac",
        "type": "comment",
        "z": "62c122b2f65be8e8",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 90,
        "y": 20,
        "wires": []
    },
    {
        "id": "f4f1d7fb2f3d5e0e",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4070,
        "y": 640,
        "wires": [
            [
                "ea110acbcb1d6a0c"
            ]
        ]
    },
    {
        "id": "d9c5d618a2049df3",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4520,
        "y": 660,
        "wires": [
            [
                "b9d622b5be036a82"
            ]
        ]
    },
    {
        "id": "b9d622b5be036a82",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 4465,
        "y": 580,
        "wires": []
    },
    {
        "id": "3985402f9142fff3",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "var max=6;\nvar random = Math.floor(Math.random() * max);\n\nif (msg.payload.includes(\"hyperbolic orbits cannot be handled\")){\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\nelse if (msg.payload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (msg.payload.includes(\"Eccentricity\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver !\";\n}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3420,
        "y": 600,
        "wires": [
            [
                "113ddd11123c9973"
            ]
        ]
    },
    {
        "id": "113ddd11123c9973",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3565,
        "y": 600,
        "wires": []
    },
    {
        "id": "ed730d86acd2cb51",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3660,
        "y": 60,
        "wires": [
            [
                "a4dea90911704f7e"
            ]
        ]
    },
    {
        "id": "ef5a9de34cfafcc3",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3650,
        "y": 20,
        "wires": []
    },
    {
        "id": "dadb28649c2da442",
        "type": "catch",
        "z": "62c122b2f65be8e8",
        "name": "",
        "scope": [
            "a4dea90911704f7e"
        ],
        "uncaught": false,
        "x": 3430,
        "y": 40,
        "wires": [
            [
                "ed730d86acd2cb51",
                "ef5a9de34cfafcc3"
            ]
        ]
    },
    {
        "id": "743472a45850c4dd",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 640,
        "wires": []
    },
    {
        "id": "3a61723cb2abf084",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3400,
        "y": 340,
        "wires": []
    },
    {
        "id": "223710a3861dd9a6",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST ISP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 900,
        "wires": []
    },
    {
        "id": "451ec40ff3a3aca9",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 700,
        "wires": []
    },
    {
        "id": "147f7ffff053791c",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 660,
        "wires": []
    },
    {
        "id": "83b1f06d.d7ddc",
        "type": "ui_template",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "group": "8da1955ffecc49fe",
        "name": "Dynamic Form",
        "order": 3,
        "width": "10",
        "height": "8",
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Manoeuvre Hub</title>\n    <style>\n        /* Apply box-sizing globally */\n        *,\n        *::before,\n        *::after {\n            box-sizing: border-box;\n        }\n\n        /* Classe pour masquer des éléments */\n        .hidden {\n            display: none;\n        }\n\n        /* Example container style (based on your preference) */\n        .scrollable-container {\n            /* If needed, remove or enable scrolling properties here */\n            overflow: hidden;\n        }\n\n        /* Prevent overflow from the body and html if desired */\n        body, html {\n            margin: 0;\n            padding: 0;\n        }\n\n        /* Style des champs de formulaire */\n        .form-group {\n            margin-bottom: 13px;\n        }\n\n        .form-group label {\n            display: block;\n            margin-bottom: 10px;\n            font-weight: normal;\n            color: #fff;\n            padding-left: 25px;\n        }\n\n        .form-group input,\n        .form-group select {\n            width: 90%;\n            padding: 8px 0;\n            border: none;\n            background-color: transparent;\n            color: #fff;\n            border-bottom: 2px solid #666;\n            margin: 0 auto;\n            display: block;\n        }\n\n        .form-group input:focus,\n        .form-group select:focus {\n            outline: none;\n            border-bottom: 2px solid #888;\n        }\n\n        /* Style du titre du formulaire */\n        #formTitle {\n            font-size: 18px;\n            font-weight: normal;\n            color: #fff;\n            margin-top: 23px;\n            margin-bottom: 28px;\n            margin-left: 25px;\n        }\n\n        /* Espace en haut du conteneur de champs de saisie */\n        #inputField {\n            margin-top: 17px;\n        }\n\n        /* Style du bouton de soumission */\n        #submitButton {\n            margin-top: 14px;\n            margin-left: 25px;\n            margin-bottom: 75px;\n            padding: 10px 20px;\n            font-size: 16px;\n            font-weight: normal;\n            color: #fff;\n            background-color: rgb(0, 86, 122);\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            transition: background-color 0.3s, transform 0.2s;\n        }\n\n        #submitButton:hover {\n            background-color: rgb(0, 106, 152);\n        }\n\n        #submitButton:active {\n            background-color: rgb(0, 66, 92);\n            transform: scale(0.98);\n        }\n\n        /* Make the button appear grayed out and change the cursor when disabled */\n        #submitButton:disabled {\n            opacity: 0.5;\n            cursor: not-allowed;\n        }\n\n        /* Style du sélecteur de manoeuvre */\n        #maneuverSelect {\n            border-bottom: 2px solid #666;\n            width: 90%;\n            margin: 0 auto;\n            display: block;\n            background-color: #212c31;\n            color: #fff;\n        }\n\n        #maneuverSelect:focus {\n            outline: none;\n            border-bottom: 2px solid #888;\n        }\n\n        /* Style de la section des derniers paramètres soumis */\n        #lastSubmitted {\n            margin-top: 50px;\n            padding: 15px;\n            border: 1px solid #444;\n            border-radius: 4px;\n            background-color: #212c31;\n            color: #fff;\n        }\n\n        #lastSubmitted h3 {\n            margin-bottom: 10px;\n            color: #fff;\n        }\n\n        #lastSubmitted ul {\n            list-style-type: disc;\n            padding-left: 20px;\n        }\n\n        #lastSubmitted li {\n            margin-bottom: 5px;\n            color: #ddd;\n        }\n\n        #lastSubmitted p {\n            margin-bottom: 10px;\n            color: #fff;\n        }\n\n        #lastSubmitted ul li strong {\n            color: #fff;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"scrollable-container\">\n        <!-- Titre dynamique -->\n        <h2 id=\"formTitle\">Veuillez d'abord sélectionner une manoeuvre</h2>\n\n        <!-- Sélecteur de manoeuvre -->\n        <div class=\"form-group\">\n            <label for=\"maneuverSelect\">Type de manoeuvre :</label>\n            <select id=\"maneuverSelect\" class=\"form-control\">\n                <option value=\"\" disabled selected>-- Choisissez une manoeuvre --</option>\n                <option value=\"Hohmann\">Hohmann</option>\n                <option value=\"Bi-elliptique\">Bi-elliptique</option>\n                <option value=\"Inclinaison\">Inclinaison</option>\n                <option value=\"QLaw\">QLaw</option>\n            </select>\n        </div>\n\n        <!-- Le formulaire -->\n        <form id=\"dynamicForm\">\n            <div id=\"inputField\"></div>\n            <button type=\"button\" id=\"submitButton\" class=\"hidden\">Valider les paramètres</button>\n        </form>\n\n        <!-- Section pour afficher les derniers paramètres soumis -->\n        <div id=\"lastSubmitted\" class=\"hidden\">\n            <h3>Derniers paramètres soumis :</h3>\n            <div id=\"submittedContent\"></div>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n    (function(scope) {\n        var inputField = document.getElementById('inputField');\n        var formTitle = document.getElementById('formTitle');\n        var maneuverSelect = document.getElementById('maneuverSelect');\n        var submitButton = document.getElementById('submitButton');\n        var lastSubmittedSection = document.getElementById('lastSubmitted');\n        var submittedContent = document.getElementById('submittedContent');\n        var selectedPayload = null;\n        var isFormSubmitted = false;\n\n        // Mapping des unités pour chaque champ\n        var fieldUnits = {\n            SMA_2: 'km',\n            SMA_int: 'km'\n        };\n\n        // Générer les champs du formulaire selon la manoeuvre sélectionnée\n        function generateForm(payload) {\n            if (!payload) {\n                inputField.innerHTML = \"\";\n                formTitle.innerText = \"Veuillez d'abord sélectionner une manoeuvre\";\n                submitButton.classList.add('hidden');\n                return;\n            }\n\n            // Met à jour le titre\n            formTitle.innerText = `Saisir les paramètres de la manoeuvre : ${payload}`;\n            selectedPayload = payload;\n\n            let formContent = \"\";\n            if (payload === \"Hohmann\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"SMA_2\">Demi-grand axe final SMA_2 (km)</label>\n                        <input type=\"text\" id=\"SMA_2\" name=\"SMA_2\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                `;\n            } else if (payload === \"Bi-elliptique\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"SMA_int\">Demi-grand axe intermédiaire SMA_int (km)</label>\n                        <input type=\"text\" id=\"SMA_int\" name=\"SMA_int\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"SMA_2\">Demi-grand axe final SMA_2 (km)</label>\n                        <input type=\"text\" id=\"SMA_2\" name=\"SMA_2\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                `;\n            } else if (payload === \"Inclinaison\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"input_5\">Intitulé du champ 5</label>\n                        <input type=\"text\" id=\"input_5\" name=\"input_5\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"input_6\">Intitulé du champ 6</label>\n                        <input type=\"text\" id=\"input_6\" name=\"input_6\" class=\"form-control\" />\n                    </div>\n                `;\n            } else if (payload === \"QLaw\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"input_7\">Intitulé du champ 7</label>\n                        <input type=\"text\" id=\"input_7\" name=\"input_7\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"input_8\">Intitulé du champ 8</label>\n                        <input type=\"text\" id=\"input_8\" name=\"input_8\" class=\"form-control\" />\n                    </div>\n                `;\n            }\n\n            inputField.innerHTML = formContent;\n            submitButton.classList.remove('hidden');\n        }\n\n        // Envoi des données\n        function sendData() {\n            var formData = {};\n            var elements = document.querySelectorAll('#dynamicForm input');\n\n            elements.forEach(function(input) {\n                if (input.name && input.value.trim() !== \"\") {\n                    formData[input.name] = input.value.trim();\n                }\n            });\n\n            var payload = {\n                ManeuverType: selectedPayload,\n                ...formData\n            };\n\n            if (Object.keys(formData).length > 0) {\n                scope.send({ payload: payload });\n                isFormSubmitted = false;\n                displayLastSubmitted(payload);\n\n                // Reset\n                inputField.innerHTML = \"\";\n                formTitle.innerText = \"Veuillez d'abord sélectionner une manoeuvre\";\n                maneuverSelect.value = \"\";\n                submitButton.classList.add('hidden');\n            } else {\n                alert(\"Veuillez remplir les champs avant de soumettre.\");\n            }\n        }\n\n        // Afficher les derniers paramètres soumis\n        function displayLastSubmitted(data) {\n            let htmlContent = `\n                <p><strong>Manoeuvre :</strong> ${data.ManeuverType}</p>\n                <ul>\n            `;\n            for (var key in data) {\n                if (data.hasOwnProperty(key) && key !== \"ManeuverType\") {\n                    var unit = fieldUnits[key] || '';\n                    var displayValue = data[key];\n                    if (unit) {\n                        displayValue += ` ${unit}`;\n                    }\n                    htmlContent += `<li><strong>${formatLabel(key)} :</strong> ${displayValue}</li>`;\n                }\n            }\n            htmlContent += `</ul>`;\n            submittedContent.innerHTML = htmlContent;\n            lastSubmittedSection.classList.remove('hidden');\n        }\n\n        // Formater les labels\n        function formatLabel(key) {\n            return key\n                .replace(/_/g, ' ')\n                .replace(/\\b\\w/g, function(l) { return l.toUpperCase(); });\n        }\n\n        // Gestion locale de la sélection\n        maneuverSelect.addEventListener('change', function() {\n            var payload = this.value;\n            isFormSubmitted = false;\n            generateForm(payload);\n        });\n\n        // Bouton de soumission\n        submitButton.onclick = function() {\n            isFormSubmitted = true;\n            if (inputField.innerHTML.trim() !== \"\") {\n                sendData();\n            } else {\n                alert(\"Veuillez sélectionner une manoeuvre avant de soumettre.\");\n            }\n        };\n\n        // État par défaut: submittable (enabled)\n        submitButton.disabled = false;\n\n        // Observer msg.payload uniquement pour le flag disableSubmit\n        scope.$watch('msg.payload', function(payload) {\n            if (!payload) return;\n\n            // Si disableSubmit est un booléen, on l'applique\n            if (typeof payload.disableSubmit === 'boolean') {\n                submitButton.disabled = payload.disableSubmit;\n            } else {\n                // Sinon, on remet le bouton en état \"enabled\"\n                submitButton.disabled = false;\n            }\n        });\n\n        // Réinitialiser isFormSubmitted après envoi\n        scope.on('input', function(msg) {\n            if (isFormSubmitted) {\n                isFormSubmitted = false;\n            }\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "63ca4e9192c394b5",
                "71d8882a7823592a",
                "f6467cd061d53b66",
                "99e1aef3c6e64f7d",
                "2bd93e5eca5b4dfc",
                "16f7d068cb2b06c1"
            ]
        ]
    },
    {
        "id": "63ca4e9192c394b5",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "05e0662736df112a",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_8",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 260,
        "wires": [
            [
                "7f69cd7e7a9bc3c8",
                "2cec9119e97b47f8",
                "200c4afd697046ea",
                "beb47c9292309997"
            ]
        ]
    },
    {
        "id": "7cb176652427f7da",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "PATH 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 780,
        "wires": []
    },
    {
        "id": "7d8c2eddd95508cd",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 700,
        "wires": []
    },
    {
        "id": "30c67a802830c95a",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "PATH 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 560,
        "wires": []
    },
    {
        "id": "c44a36e11053e5e3",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 400,
        "wires": []
    },
    {
        "id": "06741cfab2861a76",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 480,
        "wires": []
    },
    {
        "id": "74db5c8c7c8c7128",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2940,
        "y": 700,
        "wires": []
    },
    {
        "id": "cf6cf60acba12a97",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 880,
        "wires": []
    },
    {
        "id": "ed32ef726f35154e",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 740,
        "wires": []
    },
    {
        "id": "8eb1d1a16528d020",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "query to read PostManeuverDate.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3470,
        "y": 660,
        "wires": [
            [
                "19a47e11fc3c6fe1"
            ]
        ]
    },
    {
        "id": "19a47e11fc3c6fe1",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/PostManeuverDate.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3750,
        "y": 660,
        "wires": [
            [
                "cdf36124e292e5cf"
            ]
        ]
    },
    {
        "id": "cdf36124e292e5cf",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3810,
        "y": 720,
        "wires": [
            [
                "15b38c2f7e06906f"
            ]
        ]
    },
    {
        "id": "15b38c2f7e06906f",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3310,
        "y": 760,
        "wires": [
            [
                "2f6e1a6a10800b87",
                "8f8bf13f7eea8167"
            ]
        ]
    },
    {
        "id": "2f6e1a6a10800b87",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3320,
        "y": 800,
        "wires": []
    },
    {
        "id": "b5a85663cb34a075",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3470,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "e1ae5f664f559e1c",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1730,
        "y": 500,
        "wires": [
            [
                "6bc75f0fcaf0bbf2"
            ]
        ]
    },
    {
        "id": "6bc75f0fcaf0bbf2",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1890,
        "y": 500,
        "wires": [
            [
                "d7cd0fb48c4e68ea"
            ]
        ]
    },
    {
        "id": "d7cd0fb48c4e68ea",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2070,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3d6003c123ac32d3",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 500,
        "wires": [
            [
                "e1ae5f664f559e1c"
            ]
        ]
    },
    {
        "id": "414c2c6a614a2cbc",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_7\",\"path_8\",\"path_9\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1080,
        "y": 300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bfe5452830b78648",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_9",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_9",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "c82e3de236c784b9"
            ]
        ]
    },
    {
        "id": "5212778ea1516316",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "ManeuverParameters.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar pathArray = (msg.paths && msg.paths.path_2) ? Object.values(msg.paths.path_2) : [0, 0, 0, 0,0,0,0,0];\nvar pathArray2 = (msg.paths && msg.paths.path_10) ? Object.values(msg.paths.path_10) : [0];\n// Try reading path_17 as a single numeric value\nvar path17Val = 0;\nif (msg.paths && msg.paths.path_17 !== undefined) {\n    // Convert whatever is at path_17 into a Number (or default to 0 if invalid)\n    path17Val = Number(msg.paths.path_17) || 0;\n}\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray[1] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray[2] || 0; // Troisième élément ou 0 si non défini\nvar isp = pathArray[3] || 0; // Quatrième élément ou 0 si non défini\nvar maneuvertype = pathArray2[0] || 0; // Premier élément ou 0 si non défini\nvar SMA_2 = pathArray2[1] || 0; // Deuxième élément ou 0 si non défini\n\n// Vérifier si msg.paths.path_2 existe avant d'accéder à ses valeurs\nvar a; // semi-major axis\nvar acube; // acube = a³ \nvar N = (msg.paths && msg.paths.path_2 && msg.paths.path_2[7]) ? Number(msg.paths.path_2[7]) : 0;\nvar mu = 398600.4418;\nvar J = 86400;\nvar n;\n\nn = 2 * Math.PI * N / J;  // n = 2pi/T where T is the period\nacube = mu / (n * n); // acube = a³ \na = path17Val; // Cubic root for semi-major axis // Format de l'excentricité\n\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"ManeuverType, SMA_1,SMA_2\",\n    maneuvertype, a,SMA_2\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 60,
        "wires": [
            [
                "6788139785631a53"
            ]
        ]
    },
    {
        "id": "6788139785631a53",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/ManeuverParameters.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "19127c47643823d6",
                "77407469ceb6f63d"
            ]
        ]
    },
    {
        "id": "19127c47643823d6",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1350,
        "y": 120,
        "wires": [
            [
                "6a519bf645045351",
                "0bd7387e327f4def"
            ]
        ]
    },
    {
        "id": "6a519bf645045351",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1530,
        "y": 140,
        "wires": [
            [
                "8bde20288b52e380"
            ]
        ]
    },
    {
        "id": "8bde20288b52e380",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1710,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "0bd7387e327f4def",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 80,
        "wires": []
    },
    {
        "id": "77407469ceb6f63d",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 40,
        "wires": []
    },
    {
        "id": "d97537415c1c2abf",
        "type": "ui_template",
        "z": "62c122b2f65be8e8",
        "group": "8da1955ffecc49fe",
        "name": "BLUE1 Vehicule template",
        "order": 7,
        "width": 10,
        "height": "1",
        "format": "<style>\n    .form-container2 {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        overflow-x: hidden;\n        margin-top: 1px;\n    }\n\n    .parameters-row {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 5px;\n        margin-top: 5px;\n    }\n\n    .column {\n        flex: 1;\n        padding: 0 10px;\n        max-width: 300px;\n        box-sizing: border-box;\n    }\n\n    .md-input-container {\n        width: 100%;\n        margin: 20px 20px;\n        color: #ffffff !important;\n        \n    }\n\n    .md-input-container label {\n        color: #ffffff !important;\n    }\n\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 10px;\n    }\n\n    .third-row {\n        margin-bottom: 10px;\n    }\n\n    .result-display {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 18px;\n        color: white;\n        margin: 15px 0;\n    }\n\n    .result-value {\n        font-weight: bold;\n        color: #ffcc00;\n    }\n</style>\n\n<!-- HTML form structure -->\n<form id=\"myForm2\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n    <div class=\"form-container2\">\n        <!-- Centered Surface field with a top margin -->\n        <div class=\"parameters-row\">\n            <div class=\"column\">\n                <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n                    <label for=\"form2_isp\">ISP (s)</label>\n                    <input type=\"text\" id=\"form2_isp\" name=\"isp\" ng-model=\"msg.payload.isp\" ng-change=\"send({payload: msg.payload})\">\n                </md-input-container>\n            </div>\n        </div>\n\n    </div>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "223710a3861dd9a6",
                "bfe5452830b78648",
                "472f130ef2b3ab33",
                "f6467cd061d53b66",
                "4908cd2fd3638735",
                "d88aa2c3d7b9507f"
            ]
        ]
    },
    {
        "id": "4908cd2fd3638735",
        "type": "ui_template",
        "z": "62c122b2f65be8e8",
        "group": "8da1955ffecc49fe",
        "name": "BLUE1 Vehicule Submit",
        "order": 9,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 20px;\n    }\n</style>\n\n<div class=\"button-container\">\n    <!-- Utilisation de ng-click pour envoyer msg.payload au clic -->\n    <button type=\"submit\" id=\"submitButtonb1\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">\n    Submit\n  </button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "55e6b5216e7ac6ca"
            ]
        ]
    },
    {
        "id": "ba521d9737df82b4",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_10\",\"path_2\",\"path_17\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 880,
        "y": 120,
        "wires": [
            [
                "5212778ea1516316",
                "b02809e768764d4f"
            ],
            []
        ]
    },
    {
        "id": "c82e3de236c784b9",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 180,
        "wires": []
    },
    {
        "id": "16f7d068cb2b06c1",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 120,
        "wires": [
            [
                "ba521d9737df82b4",
                "483a705947b69a55"
            ]
        ]
    },
    {
        "id": "483a705947b69a55",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "TEST PATh 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 60,
        "wires": []
    },
    {
        "id": "6f411a801e1e7cba",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue1 -DcommandParameter=\"calculateMass\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 2070,
        "y": 40,
        "wires": [
            [
                "cfca41ec9590c964",
                "838e43d3f6a4672a"
            ],
            [
                "2cb4a7f6f1d8edc0"
            ],
            []
        ]
    },
    {
        "id": "cfca41ec9590c964",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ConsommationErgols.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2350,
        "y": 40,
        "wires": [
            [
                "ffad71992b5e5aaf"
            ]
        ]
    },
    {
        "id": "ce85284f4e63ac68",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 40,
        "wires": [
            [
                "f389d41fdfb115cb",
                "44c9cf0c2625d212"
            ]
        ]
    },
    {
        "id": "f389d41fdfb115cb",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.consommationErgols = parseFloat(msg.payload[n-1])\n\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 40,
        "wires": [
            [
                "117ca3af3e2e8e6e",
                "236f9b4d9ae1ab24"
            ]
        ]
    },
    {
        "id": "117ca3af3e2e8e6e",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3210,
        "y": 40,
        "wires": []
    },
    {
        "id": "ffad71992b5e5aaf",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2530,
        "y": 40,
        "wires": [
            [
                "ce85284f4e63ac68"
            ]
        ]
    },
    {
        "id": "177f98f1bfe9845d",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "ErgolsConsommés",
        "links": [
            "236f9b4d9ae1ab24"
        ],
        "x": 45,
        "y": 1260,
        "wires": [
            [
                "62f1c54ca072b46e",
                "d16ced1d634dfe0d",
                "7ae1bbb942260344"
            ]
        ]
    },
    {
        "id": "236f9b4d9ae1ab24",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "ConsommationErgols",
        "mode": "link",
        "links": [
            "177f98f1bfe9845d"
        ],
        "x": 3225,
        "y": 100,
        "wires": []
    },
    {
        "id": "62f1c54ca072b46e",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 150,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d16ced1d634dfe0d",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "command": "cd /app/maneuver-manager/ && rm -rf ConsommationErgols.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 1480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "template_node",
        "type": "ui_template",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "group": "8da1955ffecc49fe",
        "name": "Affichage Conso",
        "order": 8,
        "width": 10,
        "height": 2,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Affichage Ergols</title>\n\n    <!-- Style pour masquer la barre de défilement tout en permettant le défilement -->\n    <style>\n        /* Conteneur principal pour masquer la barre de défilement */\n        .scroll-container {\n            height: 100vh;\n            overflow-y: scroll; /* Activer le défilement vertical */\n            scrollbar-width: none; /* Masquer la barre pour Firefox */\n        }\n\n        /* Masquer la barre de défilement pour Chrome, Safari, etc. */\n        .scroll-container::-webkit-scrollbar {\n            display: none; /* Masquer la barre de défilement */\n        }\n    </style>\n</head>\n\n<body>\n    <!-- Conteneur principal avec défilement masqué -->\n    <div class=\"scroll-container\">\n        <!-- Section pour afficher Ergols restants -->\n        <div class=\"result-display\">\n            Ergols disponibles avant manoeuvre (kg) : <span class=\"form2_ergolRemaining result-value\">--</span>\n        </div>\n\n        <!-- Section pour afficher Consommation d'ergols -->\n        <div class=\"result-display\">\n            Consommation d'ergols (kg) : <span class=\"form2_ergolResult result-value\">--</span>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        (function(customScope) {\n            // Utiliser $watch pour surveiller les changements dans le payload\n            customScope.$watch('msg.payload', function(payload) {\n                console.log(\"Payload reçu :\", payload); // Pour vérifier si le payload est bien reçu\n                if (payload) {\n                    let ergolsRestants;\n                if (Array.isArray(payload.path_14)) {\n                    // Exemple : on récupère l’élément [2] du tableau\n                    // (vous pouvez ajuster si nécessaire)\n                    ergolsRestants = payload.path_14[2];\n                } else if (typeof payload.path_14 === 'object') {\n                    // Si c’est un objet, prendre par exemple la clé \"ergol_mass\"\n                    // ou toute autre clé appropriée\n                    ergolsRestants = parseFloat(payload.path_14.ergol_mass) || 0.0;\n                } else {\n                    console.log(\"path_14 est manquant ou invalide\");\n                    return;\n                }\n\n                    // Mise à jour de la valeur \"Ergols restants\"\n                    let formattedErgolsRestants = ergolsRestants.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    let remainingElements = document.getElementsByClassName(\"form2_ergolRemaining\");\n                    for (let i = 0; i < remainingElements.length; i++) {\n                        remainingElements[i].textContent = formattedErgolsRestants + \" kg\";\n                    }\n\n                    // Récupérer la consommation d'ergols\n                    let consommation;\n                if (Array.isArray(payload.path_15)) {\n                    // Ex : on lit consommationErgols sur l'index [0]\n                    consommation = payload.path_15[0]?.consommationErgols;\n                } else if (typeof payload.path_15 === 'object') {\n                    // Ex : on lit ergol_consumption (ou autre champ)\n                    consommation = parseFloat(payload.path_15.ergol_consumption) || 0.0;\n                } else {\n                    console.log(\"path_15 est manquant ou invalide\");\n                    return;\n                }\n\n                    // Formattage en notation française\n                    let formattedConsommation = consommation.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    \n                    // Mettre à jour toutes les instances de consommation d'ergols\n                    let elements = document.getElementsByClassName(\"form2_ergolResult\");\n                    for (let i = 0; i < elements.length; i++) {\n                        elements[i].textContent = formattedConsommation + \" kg\";\n                    }\n                } else {\n                    console.log(\"Payload non valide ou consommationErgols manquant\");\n                }\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 760,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "b48247a6c9e99f5b",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ManeuverParameters.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1790,
        "y": 100,
        "wires": [
            [
                "d4264fa831055f69"
            ]
        ]
    },
    {
        "id": "d4264fa831055f69",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1970,
        "y": 100,
        "wires": [
            [
                "31760e62c8a1c0ad"
            ]
        ]
    },
    {
        "id": "7158d7749ea2af4b",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Ergols.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar pathArray = (msg.paths && msg.paths.path_11) ? Object.values(msg.paths.path_11) : [0, 0];\nvar pathArray2 = (msg.paths && msg.paths.path_12) ? msg.paths.path_12 : [0];\nvar pathArray3 = (msg.paths && msg.paths.path_13) ? msg.paths.path_13 : [0,0,0];\n\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray3[0] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray3[1] || 0; // Troisième élément ou 0 si non défini\nvar isp = pathArray[0] || 0; // Quatrième élément ou 0 si non défini\nvar maneuvertype = pathArray2[1] || 0; // Premier élément ou 0 si non défini\nvar SMA_1 = pathArray2[2] || 0; // Deuxième élément ou 0 si non défini\nvar SMA_2 = pathArray2[3]\n// Vérifier si msg.paths.path_2 existe avant d'accéder à ses valeurs\nvar a = (msg.paths && msg.paths.path_12 && msg.paths.path_12[2]) ? Number(msg.paths.path_12[2]) : 0;\n\n\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"DryMass, ErgolMass, ISP, ManeuverType, SMA_1, SMA_2\",\n    drymass, ergolmass, isp, maneuvertype, a, SMA_2\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 120,
        "wires": [
            [
                "c890642e78858533",
                "6f409119610bc99d"
            ]
        ]
    },
    {
        "id": "c890642e78858533",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Ergols.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2690,
        "y": 180,
        "wires": [
            [
                "af9b8a6597133ff8",
                "99ea7228a78cc40d"
            ]
        ]
    },
    {
        "id": "af9b8a6597133ff8",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2890,
        "y": 220,
        "wires": [
            [
                "4b87e2b045a69083",
                "52f9e77a7c108474"
            ]
        ]
    },
    {
        "id": "4b87e2b045a69083",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3070,
        "y": 260,
        "wires": [
            [
                "706d9c487ba7a576"
            ]
        ]
    },
    {
        "id": "52f9e77a7c108474",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3050,
        "y": 220,
        "wires": []
    },
    {
        "id": "99ea7228a78cc40d",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2890,
        "y": 180,
        "wires": []
    },
    {
        "id": "706d9c487ba7a576",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3250,
        "y": 260,
        "wires": [
            [
                "a9fc736470b21310"
            ]
        ]
    },
    {
        "id": "472f130ef2b3ab33",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 860,
        "wires": [
            [
                "9508b183803fcf66",
                "4b9aaef563976a12"
            ]
        ]
    },
    {
        "id": "9508b183803fcf66",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_11\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 700,
        "y": 860,
        "wires": [
            [
                "b48247a6c9e99f5b",
                "e1379f52804a63cd"
            ],
            []
        ]
    },
    {
        "id": "2c19236a06a546a5",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2490,
        "y": 80,
        "wires": []
    },
    {
        "id": "31760e62c8a1c0ad",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2190,
        "y": 100,
        "wires": [
            [
                "e1379f52804a63cd",
                "a373b1d45b9ca8d7"
            ]
        ]
    },
    {
        "id": "e1379f52804a63cd",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[ \"path_11\", \"path_12\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2320,
        "y": 160,
        "wires": [
            [
                "2c19236a06a546a5",
                "7aaacf3672ed2153",
                "7158d7749ea2af4b"
            ],
            []
        ]
    },
    {
        "id": "4b9aaef563976a12",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "PATH 11 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 920,
        "wires": []
    },
    {
        "id": "a373b1d45b9ca8d7",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 160,
        "wires": []
    },
    {
        "id": "7aaacf3672ed2153",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST ERGOLS TXT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2340,
        "y": 220,
        "wires": []
    },
    {
        "id": "3461fba45444cbbf",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Sorties Ergols",
        "mode": "link",
        "links": [
            "3a37e486f91568a0"
        ],
        "x": 3525,
        "y": 240,
        "wires": []
    },
    {
        "id": "3a37e486f91568a0",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "Entrée Erglos",
        "links": [
            "3461fba45444cbbf"
        ],
        "x": 1845,
        "y": 40,
        "wires": [
            [
                "6f411a801e1e7cba"
            ]
        ]
    },
    {
        "id": "44c9cf0c2625d212",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2930,
        "y": 100,
        "wires": []
    },
    {
        "id": "a9fc736470b21310",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3410,
        "y": 240,
        "wires": [
            [
                "3461fba45444cbbf"
            ]
        ]
    },
    {
        "id": "71d8882a7823592a",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "command": "cd /app/maneuver-manager/ && rm -rf ManeuverParameters.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b8fc8806da26523d",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3780,
        "y": 900,
        "wires": []
    },
    {
        "id": "3342bd8bf12232e8",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 840,
        "wires": [
            [
                "e1379f52804a63cd",
                "0f137470f5be4c87",
                "beb47c9292309997",
                "7f69cd7e7a9bc3c8"
            ]
        ]
    },
    {
        "id": "3c825207fee4ca5f",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "ergols",
        "func": "if (msg.payload && msg.payload[0]) {\n    // Assurez-vous que les propriétés existent et ne sont pas null avant de les insérer dans le tableau\n    const dry_mass = msg.payload[0].dry_mass !== undefined ? msg.payload[0].dry_mass : 0;\n    const ergol_mass = msg.payload[0].ergol_mass !== undefined ? msg.payload[0].ergol_mass : 0;\n    const ergol_consumption = msg.payload[0].ergol_consumption !== null && msg.payload[0].ergol_consumption !== undefined ? msg.payload[0].ergol_consumption : 0.0;\n\n    // Créer un tableau avec les valeurs\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"Le payload ne contient pas les données attendues.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 800,
        "wires": [
            [
                "968927b7888423b2"
            ]
        ]
    },
    {
        "id": "968927b7888423b2",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 790,
        "y": 800,
        "wires": [
            [
                "f142e00ffaf4540c"
            ]
        ]
    },
    {
        "id": "f142e00ffaf4540c",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "object to array",
        "func": "// Découper le CSV en lignes\nlet csvData = msg.payload.split('\\n');\n\n// Vérifier si la deuxième ligne existe\nif (csvData.length > 1) {\n    // Récupérer la deuxième ligne (index 1)\n    let secondLine = csvData[1].trim();\n\n    // Découper la deuxième ligne par espaces ou tabulations\n    let values = secondLine.split(/\\s+/); // Utilisation de \\s+ pour capturer les espaces multiples\n\n    // Convertir les valeurs en nombres (si applicable)\n    let dry_mass = parseFloat(values[0]) || 0;\n    let ergol_mass = parseFloat(values[1]) || 0;\n    let ergol_consumption = parseFloat(values[2]) || 0;\n\n    // Placer les valeurs dans un tableau\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"La deuxième ligne n'existe pas.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 840,
        "wires": [
            [
                "3342bd8bf12232e8"
            ]
        ]
    },
    {
        "id": "f4f4ad48c6a1f2b8",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST B1 TLE LATEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 980,
        "wires": []
    },
    {
        "id": "0f137470f5be4c87",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "PATH 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 840,
        "wires": []
    },
    {
        "id": "afcc0a1cac7ab0bd",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Out Maneuvre prédéfinie",
        "mode": "link",
        "links": [
            "8d458acac06751d5",
            "b9a06d4ecb7c304d",
            "4de5d0666377ecc1",
            "d3a880f48b073068",
            "b778ce59ad6de1b6"
        ],
        "x": 4805,
        "y": 260,
        "wires": []
    },
    {
        "id": "d0e2f32015266972",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "Ergol Mass Update",
        "links": [
            "e6b1abc87d5a903a",
            "6753438f0a5b99cb",
            "07d8564e89b73a2a",
            "6582a47df26b709c",
            "ed11b52c0d40c469"
        ],
        "x": 155,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "6f409119610bc99d",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "ergols",
        "mode": "link",
        "links": [
            "382b867af2777350",
            "362d0aae8e57995b"
        ],
        "x": 2805,
        "y": 120,
        "wires": []
    },
    {
        "id": "382b867af2777350",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "6f409119610bc99d"
        ],
        "x": 65,
        "y": 740,
        "wires": [
            [
                "32137711dd277203"
            ]
        ]
    },
    {
        "id": "32137711dd277203",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "79375e4e6264f9d4",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1360,
        "wires": [
            [
                "b08943fa3e1348b6",
                "bed27095e2a1a071"
            ]
        ]
    },
    {
        "id": "362d0aae8e57995b",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "",
        "links": [
            "6f409119610bc99d"
        ],
        "x": 365,
        "y": 1300,
        "wires": [
            [
                "79375e4e6264f9d4"
            ]
        ]
    },
    {
        "id": "b08943fa3e1348b6",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "PATH 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1360,
        "wires": []
    },
    {
        "id": "7ae1bbb942260344",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "Set path_15",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_15",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1360,
        "wires": [
            [
                "bed27095e2a1a071",
                "3f7b49b3449bb776",
                "79375e4e6264f9d4"
            ]
        ]
    },
    {
        "id": "bed27095e2a1a071",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "",
        "paths": "[\"path_14\",\"path_15\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 360,
        "y": 1120,
        "wires": [
            [
                "ce61d97b9c64c9b7",
                "69132580263bf62e"
            ],
            []
        ]
    },
    {
        "id": "3f7b49b3449bb776",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "PATH 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ce61d97b9c64c9b7",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "",
        "func": "// Suppose que msg.payload contient déjà des informations\nlet paths = msg.paths; // Supposons que les chemins sont dans msg.paths\n\n// Ajouter les informations de paths dans payload\nmsg.payload = paths;\n\n// Retourner le message avec paths inclus dans payload\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1120,
        "wires": [
            [
                "template_node",
                "658e46ea1a6cf5ce"
            ]
        ]
    },
    {
        "id": "658e46ea1a6cf5ce",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "ergols",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ddc4b0c7c893bdc8",
        "type": "mqtt in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "topic": "resultat/fichier",
        "qos": "2",
        "datatype": "auto",
        "broker": "e688816fa768592b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2310,
        "y": 360,
        "wires": [
            [
                "19136fb0e955a02b",
                "5462a3b7f74b32b7",
                "cda5efb3d2161b38",
                "5789a33e5c594740",
                "b07d5cd3dee5b332"
            ]
        ]
    },
    {
        "id": "19136fb0e955a02b",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "MQTT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 400,
        "wires": []
    },
    {
        "id": "82d61807987a8762",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "TIMESTAMP",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4030,
        "y": 680,
        "wires": []
    },
    {
        "id": "5789a33e5c594740",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2850,
        "y": 360,
        "wires": [
            [
                "8eb1d1a16528d020"
            ]
        ]
    },
    {
        "id": "f0b05f85b99ba599",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4430,
        "y": 800,
        "wires": [
            [
                "8592fe59957aa01c"
            ]
        ]
    },
    {
        "id": "8592fe59957aa01c",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4670,
        "y": 800,
        "wires": [
            [
                "4cacc2ec944b0f38"
            ]
        ]
    },
    {
        "id": "4cacc2ec944b0f38",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4870,
        "y": 800,
        "wires": [
            [
                "d324772fa2c42fa0"
            ]
        ]
    },
    {
        "id": "d324772fa2c42fa0",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4390,
        "y": 860,
        "wires": [
            [
                "ed840a8ae0752f57"
            ]
        ]
    },
    {
        "id": "ed840a8ae0752f57",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4600,
        "y": 860,
        "wires": [
            [
                "36f0ad74c257ed92"
            ]
        ]
    },
    {
        "id": "36f0ad74c257ed92",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4490,
        "y": 920,
        "wires": [
            [
                "d166858a262277ed",
                "d3f208dcf8b4f9b4",
                "24fe8968778075c7"
            ]
        ]
    },
    {
        "id": "d166858a262277ed",
        "type": "switch",
        "z": "62c122b2f65be8e8",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4760,
        "y": 920,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d3f208dcf8b4f9b4",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4750,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e459da4d7a79f366",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "cb9efc3cb62637db",
            "b86ad223f85a4338"
        ],
        "x": 4195,
        "y": 760,
        "wires": [
            [
                "f0b05f85b99ba599",
                "4bd85fe10e18c409",
                "5469ed900594a872",
                "b98d66c960880d1d"
            ]
        ]
    },
    {
        "id": "4bd85fe10e18c409",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4390,
        "y": 760,
        "wires": []
    },
    {
        "id": "6d09eb5c032fcd15",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4640,
        "y": 540,
        "wires": [
            [
                "bb462e6271161d79",
                "3369dae4c3c1a074"
            ]
        ]
    },
    {
        "id": "bb462e6271161d79",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4750,
        "y": 620,
        "wires": []
    },
    {
        "id": "7dea078ea0b25e75",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4650,
        "y": 420,
        "wires": [
            [
                "f35f3c94b2a81171"
            ]
        ]
    },
    {
        "id": "df1a2cc35faafe2f",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "AP Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 460,
        "wires": []
    },
    {
        "id": "6c8f909bf6980924",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4230,
        "y": 300,
        "wires": [
            [
                "b51f416e81ec68e6"
            ]
        ]
    },
    {
        "id": "3369dae4c3c1a074",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": " Load",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4570,
        "y": 340,
        "wires": [
            [
                "4430f0706da411c3",
                "7939cdc5945f4fd0"
            ]
        ]
    },
    {
        "id": "4430f0706da411c3",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4870,
        "y": 340,
        "wires": [
            [
                "2d50c182fbf64d40",
                "c618f96af4e360ba"
            ]
        ]
    },
    {
        "id": "c928e092431a5dad",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 1140,
        "wires": [
            [
                "b5cb911644864de9",
                "baa12de6cc8b0a3b"
            ]
        ]
    },
    {
        "id": "b5cb911644864de9",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4310,
        "y": 1100,
        "wires": [
            [
                "24906f64bd459984",
                "efc2a34a2247cf70"
            ]
        ]
    },
    {
        "id": "efc2a34a2247cf70",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4500,
        "y": 1100,
        "wires": [
            [
                "427b1f9af6e11abe",
                "39ef44c762fe78b1"
            ],
            []
        ]
    },
    {
        "id": "427b1f9af6e11abe",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Data.txt format",
        "func": "// Initialize variables\nvar tab = [];\nvar gs = {};\n\n// Split line #2 of the TLE robustly:\n// - trim() removes any leading/trailing spaces\n// - split(/\\s+/) splits on ANY run of whitespace\nvar tle = msg.payload[2].trim().split(/\\s+/);\n\nvar N;      // Mean motion in rev/day (not used below, just declared)\nvar n;      // ...\nvar a;      // Semi-major axis\nvar acube;  // a^3\nvar e;      // eccentricity\n\n// Earth's standard gravitational parameter, etc.\nvar mu = 398600.4418;\nvar J = 86400; // A day in seconds\n\n// From the TLE array\ngs.incli = String(tle[2]);\ngs.raan  = String(tle[3]);\ngs.ecc   = String(tle[4]);\ngs.aop   = String(tle[5]);\ngs.meana = String(tle[6]);\ngs.mean  = String(tle[7]);\n\n// From the rest of payload\ngs.dry_mass          = parseFloat(msg.payload[3]);\ngs.ergol_consumption = parseFloat(msg.payload[5]);\ngs.ergol_mass        = parseFloat(msg.payload[4]);\n\n// Attach everything back to msg and return\nmsg.payload = gs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4780,
        "y": 1100,
        "wires": [
            [
                "816d6167d0134291",
                "6d09eb5c032fcd15"
            ]
        ]
    },
    {
        "id": "24906f64bd459984",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "LAST TLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4510,
        "y": 1140,
        "wires": []
    },
    {
        "id": "6ddcb4d42a791834",
        "type": "mongodb in",
        "z": "62c122b2f65be8e8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 3800,
        "y": 1140,
        "wires": [
            [
                "ace8629de0b03d66",
                "c928e092431a5dad"
            ]
        ]
    },
    {
        "id": "ace8629de0b03d66",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4030,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5469ed900594a872",
        "type": "trigger",
        "z": "62c122b2f65be8e8",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3590,
        "y": 1140,
        "wires": [
            [
                "6ddcb4d42a791834"
            ]
        ]
    },
    {
        "id": "39ef44c762fe78b1",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4770,
        "y": 1060,
        "wires": []
    },
    {
        "id": "baa12de6cc8b0a3b",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4310,
        "y": 1160,
        "wires": []
    },
    {
        "id": "816d6167d0134291",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4790,
        "y": 1160,
        "wires": []
    },
    {
        "id": "24fe8968778075c7",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4750,
        "y": 960,
        "wires": []
    },
    {
        "id": "7f69cd7e7a9bc3c8",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_2\",\"path_8\",\"path_13\",\"path_18\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1280,
        "y": 960,
        "wires": [
            [
                "8155d4dfe06ccc88",
                "fe0dc9b90e8c1e3c"
            ],
            []
        ]
    },
    {
        "id": "8155d4dfe06ccc88",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "CommandData.txt format",
        "func": "var N;       // Mean motion in rev/day\nvar n;       // Angular speed in rad/s\nvar a;       // semi-major axis\nvar acube;   // a³\nvar e;       // eccentricity\n\nvar mu = 398600.4418; // Earth's standard gravitational parameter\nvar J  = 86400;       // Seconds in a day\n\n// Calculations from path_2\nN     = msg.paths.path_2[7];              // Mean motion [rev/day]\nn     = 2 * Math.PI * N / J;              // Angular speed: n = 2π/T\nacube = mu / (n * n);                     // a³ = μ/n²\ne     = Number(msg.paths.path_2[4]) / 10000000; // Normalize eccentricity from TLE format\ne     = e.toFixed(7);                     // Format eccentricity\n\n// Get the value for 'a' from path_18 (if provided)\nvar path18Val = 0;\nif (msg.paths && msg.paths.path_18 !== undefined) {\n    // Convert the value to a Number (default to 0 if invalid)\n    path18Val = Number(msg.paths.path_18) || 0;\n}\na = path18Val;\n\nvar thrust    = \"0\";\nvar dv        = \"0\";\nvar isp       = \"0\";\nvar drymass   = \"0\";\nvar ergolmass = \"0\";\nvar surface   = \"0\";\nvar DATE      = \"\"; // You can set DATE accordingly if needed\n\n// Set ergolmass and drymass from path_13 if the values are valid numbers\nif (!isNaN(msg.paths.path_13[1])) { ergolmass = msg.paths.path_13[1]; }\nif (!isNaN(msg.paths.path_13[0])) { drymass   = msg.paths.path_13[0]; }\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––––––––––\n  EXTRA PARAMETERS: Dynamic extraction from msg.paths.path_8\n  Instead of hardcoding extra fields (e.g., Maneuver_Type, SMA_2, ecc_2),\n  we build the header and the row dynamically from the object keys/values.\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––*/\nvar extraHeaders = [];\nvar extraValues  = [];\nif (msg.paths && msg.paths.path_8 && typeof msg.paths.path_8 === 'object') {\n    extraHeaders = Object.keys(msg.paths.path_8);\n    extraValues  = Object.values(msg.paths.path_8);\n} else {\n    node.warn(\"msg.paths.path_8 est indéfini ou non valide. Aucun paramètre supplémentaire n'est ajouté.\");\n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––––––––––\n  ASSEMBLE FINAL PAYLOAD\n  The first element is the header string (fixed columns plus extra columns),\n  and the second is the data row (in the same order).\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––*/\n// Fixed header columns\nvar fixedHeader = \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass\";\n\n// Combine fixed header with dynamically extracted extra header columns\nvar header = fixedHeader;\nif (extraHeaders.length > 0) {\n    header += \", \" + extraHeaders.join(\", \");\n}\n\n// Build the fixed portion of the data row\nvar dataRow = [\n    DATE,\n    a,\n    e,\n    msg.paths.path_2[2],\n    msg.paths.path_2[3],\n    msg.paths.path_2[5],\n    msg.paths.path_2[6],\n    drymass,\n    surface,\n    thrust,\n    isp,\n    ergolmass\n];\n\n// Append the extra values dynamically (they could be \"Maneuver_Type\", \"SMA_2\", \"ecc_2\" or others)\ndataRow = dataRow.concat(extraValues);\n\n// Set the final payload with the header as the first element and the data row as the second\nmsg.payload = [ header ].concat(dataRow);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 940,
        "wires": [
            [
                "d21bec32964e5fcf"
            ]
        ]
    },
    {
        "id": "d21bec32964e5fcf",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/CommandData.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 940,
        "wires": [
            [
                "bd8c1f4bc5f224ef"
            ]
        ]
    },
    {
        "id": "bd8c1f4bc5f224ef",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1890,
        "y": 940,
        "wires": [
            [
                "1dbfb873613b7565"
            ]
        ]
    },
    {
        "id": "1dbfb873613b7565",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2070,
        "y": 940,
        "wires": [
            [
                "94128e6fba57298b"
            ]
        ]
    },
    {
        "id": "94128e6fba57298b",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2250,
        "y": 940,
        "wires": [
            [
                "aee1888fde0771c3",
                "5d4b7e391d8645f6"
            ]
        ]
    },
    {
        "id": "fe0dc9b90e8c1e3c",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "comman",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1020,
        "wires": []
    },
    {
        "id": "afb4880d82f0fe9c",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "COMMAND DATA",
        "mode": "link",
        "links": [
            "6555ad21c517f1f4"
        ],
        "x": 2725,
        "y": 940,
        "wires": []
    },
    {
        "id": "aee1888fde0771c3",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue1 -DcommandParameter=\"determineOrbitInstant\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 2490,
        "y": 940,
        "wires": [
            [
                "c762d0d97cecf683",
                "afb4880d82f0fe9c"
            ],
            [
                "3d02ab696cef9505"
            ],
            [
                "984a80ceb22d5c58"
            ]
        ]
    },
    {
        "id": "984a80ceb22d5c58",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "APSIDE RETURN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3d02ab696cef9505",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "APSIDE ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 840,
        "wires": []
    },
    {
        "id": "c762d0d97cecf683",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "APSIDE OBJECT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 780,
        "wires": []
    },
    {
        "id": "b75e04c99ae01618",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TLE BLUE1 BEFORE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4360,
        "y": 240,
        "wires": []
    },
    {
        "id": "36a9ac04f9b32883",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TLE BLUE1 AFTER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4350,
        "y": 360,
        "wires": []
    },
    {
        "id": "2cec9119e97b47f8",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST PATH_8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 320,
        "wires": []
    },
    {
        "id": "268fe802ad4522bf",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a00bc3cfa203492b",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/TimeIntermediateParameters.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 200,
        "wires": [
            [
                "996b2486cd82659c"
            ]
        ]
    },
    {
        "id": "996b2486cd82659c",
        "type": "csv",
        "z": "62c122b2f65be8e8",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1390,
        "y": 200,
        "wires": [
            [
                "af205795341dd5ab"
            ]
        ]
    },
    {
        "id": "af205795341dd5ab",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1570,
        "y": 200,
        "wires": [
            [
                "75366a1c973d929a"
            ]
        ]
    },
    {
        "id": "75366a1c973d929a",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1790,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "200c4afd697046ea",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "TimeIntermediateParameters.txt format",
        "func": "// Retrieve the incoming payload\nvar payload = msg.payload;\n\nif (payload && typeof payload === 'object') {\n    // List of keys to ignore (system keys, etc.)\n    var ignoreKeys = [\"socketid\", \"_msgid\", \"paths\"];\n    \n    // Get all keys from the payload except those in ignoreKeys\n    var keys = Object.keys(payload).filter(function(key) {\n        return ignoreKeys.indexOf(key) === -1;\n    });\n    \n    // Create a header string: a comma separated list of the keys\n    var header = keys.join(\", \");\n    \n    // Get the corresponding values in the same order\n    var values = keys.map(function(key) {\n        return payload[key];\n    });\n    \n    // Set the output payload as an array with the header as the first element\n    // followed by the values\n    msg.payload = [header].concat(values);\n} else {\n    node.warn(\"The incoming payload is undefined or not an object.\");\n    msg.payload = [\"No valid data\"];\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 200,
        "wires": [
            [
                "a00bc3cfa203492b"
            ]
        ]
    },
    {
        "id": "587b221ea8971329",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "ea89cffe40a7a0bf"
        ],
        "x": 2195,
        "y": 1000,
        "wires": [
            [
                "aee1888fde0771c3"
            ]
        ]
    },
    {
        "id": "55e6b5216e7ac6ca",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup15',topic:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 560,
        "wires": [
            [
                "afdd2d9b060d04f7",
                "dbd4a86793f59be1"
            ]
        ]
    },
    {
        "id": "50896f46708a9311",
        "type": "switch",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui15",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "f6467cd061d53b66",
                "ef26788f92456dc9",
                "03f99823ed1f3f9d",
                "c4767724a4611809"
            ]
        ]
    },
    {
        "id": "c4767724a4611809",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST ISP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 560,
        "wires": []
    },
    {
        "id": "afdd2d9b060d04f7",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST POPUP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 520,
        "wires": []
    },
    {
        "id": "ef26788f92456dc9",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Test switch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 580,
        "wires": []
    },
    {
        "id": "03f99823ed1f3f9d",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "object to array",
        "func": "msg.payload=msg.topic;\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 580,
        "wires": [
            [
                "37ea4509d2f47bd3",
                "f7266902cd674aa6",
                "8f8b7db06795bab7"
            ]
        ]
    },
    {
        "id": "37ea4509d2f47bd3",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST CONVERT PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 540,
        "wires": []
    },
    {
        "id": "67e1131e3c119c91",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TLE Maneuver",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4720,
        "y": 220,
        "wires": []
    },
    {
        "id": "fcfef02790e75d9d",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b19eb116a1964a20",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3410,
        "y": 440,
        "wires": []
    },
    {
        "id": "aa706eae4564b922",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "// This example sends a message to trigger a reload\nmsg.payload = { reload: true };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 400,
        "wires": [
            [
                "ca6961cfcbf9a48f"
            ]
        ]
    },
    {
        "id": "28a285408dcfab14",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 440,
        "wires": []
    },
    {
        "id": "6553aee41000b76d",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2320,
        "y": 400,
        "wires": [
            [
                "aa706eae4564b922"
            ]
        ]
    },
    {
        "id": "51620d7bea0bddf1",
        "type": "websocket out",
        "z": "62c122b2f65be8e8",
        "name": "reload",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 2850,
        "y": 400,
        "wires": []
    },
    {
        "id": "77f974e8d31ace30",
        "type": "websocket in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 2120,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2dcfe8363b104e79",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "RESULT MANOEUVER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 460,
        "wires": []
    },
    {
        "id": "3fe123816ee135d5",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3430,
        "y": 520,
        "wires": []
    },
    {
        "id": "8f8b7db06795bab7",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 580,
        "wires": [
            [
                "5215db409c8b0e6f"
            ]
        ]
    },
    {
        "id": "5215db409c8b0e6f",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Submit Manoeuver",
        "mode": "link",
        "links": [
            "0a0e3d82d5bb4aa2",
            "b2ba87f44ec78cde",
            "d888fb97adbc48c7",
            "7a5fdc442e73fe2f",
            "95e641b82b10c0b2"
        ],
        "x": 1305,
        "y": 580,
        "wires": []
    },
    {
        "id": "0a0e3d82d5bb4aa2",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "5215db409c8b0e6f",
            "695d46662047c0aa",
            "761476cb27b49aab",
            "19b3347f754f913f",
            "0660063f0dca6f38"
        ],
        "x": 1895,
        "y": 580,
        "wires": [
            [
                "5da426d062cbfb09"
            ]
        ]
    },
    {
        "id": "8122caee7de98b1b",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[ \"path_10\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1",
        "exactOrder": "true",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2320,
        "y": 580,
        "wires": [
            [
                "c4f07d2b82b3ec34",
                "f3c901a674626b46",
                "631492903f161c34"
            ],
            []
        ]
    },
    {
        "id": "e2af58e3ffd95093",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2690,
        "y": 700,
        "wires": []
    },
    {
        "id": "5552bdc402444e0c",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3680,
        "y": 960,
        "wires": []
    },
    {
        "id": "4476b12dff43245d",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST B1 TLE STORAGE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4430,
        "y": 440,
        "wires": []
    },
    {
        "id": "7237d17ef327f771",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TESTS ERGOLS MAGGLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4260,
        "y": 460,
        "wires": []
    },
    {
        "id": "d0a24943e653824d",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4110,
        "y": 360,
        "wires": [
            [
                "6c8f909bf6980924",
                "36a9ac04f9b32883"
            ]
        ]
    },
    {
        "id": "052eb0428ccba48a",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4180,
        "y": 420,
        "wires": [
            [
                "d0a24943e653824d"
            ]
        ]
    },
    {
        "id": "d4986e33f119a655",
        "type": "ui_template",
        "z": "62c122b2f65be8e8",
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 10,
        "width": "10",
        "height": "3",
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    md-card[node-id=\"d4986e33f119a655\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n\n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      pointer-events: none;\n      transition: all 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n      pointer-events: auto;\n    }\n\n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      will-change: transform;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n\n    /* Red Rectangle */\n    .red-rectangle {\n      width: 100px;\n      height: 50px;\n      background-color: red;\n      margin: 20px auto;\n    }\n\n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button - Original Colors */\n    #ouiBtn15 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn15:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button - Original Colors */\n    #nonBtn15 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn15:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <md-card node-id=\"d4986e33f119a655\">\n  </md-card>\n\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal15\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n      <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Cette action déclenchera une manoeuvre prédéfinie à partir des paramètres entrés.<br><br>\n        Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn15\">Oui</button>\n        <button id=\"nonBtn15\">Non</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- JavaScript -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal15');\n      var originalMsg = null;\n      var isTransitioning = false;\n\n      function showModal(msg) {\n        if (isTransitioning) return;\n        isTransitioning = true;\n        originalMsg = msg;\n        \n        // Reset any ongoing transitions\n        modal.style.display = 'block';\n        window.requestAnimationFrame(() => {\n          window.requestAnimationFrame(() => {\n            modal.classList.add('show');\n            isTransitioning = false;\n          });\n        });\n      }\n\n      function hideModal() {\n        if (isTransitioning) return;\n        isTransitioning = true;\n\n        const handleTransitionEnd = (e) => {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handleTransitionEnd);\n            originalMsg = null;\n            isTransitioning = false;\n          }\n        };\n\n        modal.addEventListener('transitionend', handleTransitionEnd);\n        modal.classList.remove('show');\n      }\n\n      // Cleanup function\n      function cleanup() {\n        modal.classList.remove('show');\n        modal.style.display = 'none';\n        isTransitioning = false;\n        originalMsg = null;\n      }\n\n      // Initialize\n      cleanup();\n\n      // Storage event listener\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState15') {\n          if (event.newValue === 'show') {\n            try {\n              const storedMsg = JSON.parse(localStorage.getItem('modalMsg15'));\n              showModal(storedMsg);\n            } catch (e) {\n              console.error('Error parsing stored message:', e);\n              showModal(null);\n            }\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n\n      // Watch for messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState15', 'show');\n          localStorage.setItem('modalMsg15', JSON.stringify(msg));\n          showModal(msg);\n        }\n      });\n\n      // Button handlers with debouncing\n      let isProcessingClick = false;\n      \n      document.getElementById('ouiBtn15').addEventListener('click', function() {\n        if (isProcessingClick) return;\n        isProcessingClick = true;\n        \n        var responseMsg = originalMsg ? \n          { payload: 'oui', topic: originalMsg.topic } : \n          { payload: 'oui' };\n        \n        scope.send(responseMsg);\n        localStorage.setItem('modalState15', 'hide');\n        hideModal();\n        \n        setTimeout(() => { isProcessingClick = false; }, 300);\n      });\n\n      document.getElementById('nonBtn15').addEventListener('click', function() {\n        if (isProcessingClick) return;\n        isProcessingClick = true;\n        \n        var responseMsg = originalMsg ? \n          { payload: 'non', topic: originalMsg.topic } : \n          { payload: 'non' };\n        \n        scope.send(responseMsg);\n        localStorage.setItem('modalState15', 'hide');\n        hideModal();\n        \n        setTimeout(() => { isProcessingClick = false; }, 300);\n      });\n\n      // Cleanup on unload\n      window.addEventListener('unload', cleanup);\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4a27873faa70f248",
        "type": "ui_template",
        "z": "62c122b2f65be8e8",
        "group": "8da1955ffecc49fe",
        "name": "",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<script>\n  const socketUrl = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/reload`;\n  const ws = new WebSocket(socketUrl);  // Create the WebSocket connection\n\n  ws.onopen = function() {\n      console.log(\"WebSocket connection established.\");\n  };\n\n  ws.onmessage = function(event) {\n      var msg = JSON.parse(event.data);\n      if (msg.reload) {\n          location.reload();\n      }\n  };\n\n  ws.onerror = function(error) {\n      console.error(\"WebSocket error:\", error);\n  };\n\n  ws.onclose = function() {\n      console.log(\"WebSocket connection closed.\");\n  };\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2060,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "5f22ec0aef8de3ce",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "MANEUV_JOIN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2980,
        "y": 780,
        "wires": []
    },
    {
        "id": "0d75b758b7f0c7e7",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate.txt",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2990,
        "y": 1040,
        "wires": [
            [
                "d1f0e990155b2d59"
            ],
            [],
            []
        ]
    },
    {
        "id": "da6af631a115b228",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2920,
        "y": 1100,
        "wires": [
            [
                "0d75b758b7f0c7e7"
            ]
        ]
    },
    {
        "id": "d1f0e990155b2d59",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 940,
        "wires": [
            [
                "d172dfc8cf3b2317",
                "d6d4dbb7b70f7d65"
            ]
        ]
    },
    {
        "id": "8564f2e341859e7b",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3290,
        "y": 880,
        "wires": [
            [
                "d6d4dbb7b70f7d65"
            ]
        ]
    },
    {
        "id": "d172dfc8cf3b2317",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2910,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d6d4dbb7b70f7d65",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_11\", \"path_12\", \"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3180,
        "y": 940,
        "wires": [
            [
                "51d952e2b1b98271"
            ],
            []
        ]
    },
    {
        "id": "340e3cf3de83fd59",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3490,
        "y": 960,
        "wires": []
    },
    {
        "id": "2fe2cd958e5a37da",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3080,
        "y": 840,
        "wires": [
            [
                "8564f2e341859e7b"
            ]
        ]
    },
    {
        "id": "3aeb71b8b1a7da15",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "test STd ERRORS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3450,
        "y": 620,
        "wires": []
    },
    {
        "id": "80a28c341337e960",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "command": ": > /app/maneuver-manager/Result.txt && : > /app/maneuver-manager/PostManeuverDate.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3020,
        "y": 500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5d4b7e391d8645f6",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "command": ": > /app/maneuver-manager/ApsideDates.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2370,
        "y": 860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b77ce04123d2e9ff",
        "type": "exec",
        "z": "62c122b2f65be8e8",
        "command": "cd /app/maneuver-manager && ./clear.sh blue1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2880,
        "y": 1200,
        "wires": [
            [
                "3765136d5fcce485"
            ],
            [
                "3765136d5fcce485"
            ],
            []
        ]
    },
    {
        "id": "3765136d5fcce485",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 1200,
        "wires": []
    },
    {
        "id": "1c386c1486034d97",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3020,
        "y": 560,
        "wires": [
            [
                "00325a39c1ef33ec"
            ]
        ]
    },
    {
        "id": "51d952e2b1b98271",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "const MAX_RANDOM = 6;\nconst randomIndex = Math.floor(Math.random() * MAX_RANDOM);\n\n// Retrieve the error message from path_12\nconst errorPayload = msg.paths?.path_12 || \"\";\n\nif (errorPayload.includes(\"hyperbolic orbits cannot be handled\")) {\n    switch (randomIndex) {\n        case 0:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory detected. Please return to the battlefield, cadet.\";\n            break;\n        case 1:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. Refer to Article L321-7 of the military code.\";\n            break;\n        case 2:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. Are you attempting to desert your duties?\";\n            break;\n        case 3:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. You are not qualified for interplanetary flight.\";\n            break;\n        default:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. No French assets available in this direction.\";\n    }\n} \nelse if (errorPayload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver due to inadequate ergol reserves.\";\n}\nelse if (errorPayload.includes(\"Initial date must be equal to or later\")) {\n    msg.errorMessage = \"**Temporal Error:** The maneuver order is set before the last apsis was reached.\";\n    msg.errorMessage += ` | Last apsis: ${msg.paths.path_11}`;\n} \nelse if (errorPayload.includes(\"horizon\")) {\n    msg.errorMessage = \"**Temporal Error:** The initial date must precede the conclusion of Horizon Time.\";\n    msg.errorMessage += ` | Simulation End Date: ${msg.paths.path_13.enddate}`;\n} \nelse if (errorPayload.includes(\"ccentrici\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver due to invalid eccentricity parameters.\";\n}\nelse {\n    msg.errorMessage = \"Maneuver aborted due to an unspecified error.\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3345,
        "y": 948,
        "wires": [
            [
                "340e3cf3de83fd59",
                "137f9ab28c637801"
            ]
        ]
    },
    {
        "id": "ca6961cfcbf9a48f",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2680,
        "y": 400,
        "wires": [
            [
                "51620d7bea0bddf1"
            ]
        ]
    },
    {
        "id": "c65be597104be6e8",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "AffichageLastManeuverDate",
        "mode": "link",
        "links": [
            "ba46eb9b87200062"
        ],
        "x": 3325,
        "y": 580,
        "wires": []
    },
    {
        "id": "e05f41692f96e018",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4130,
        "y": 720,
        "wires": []
    },
    {
        "id": "8bb5f0424cbd9549",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3320,
        "y": 720,
        "wires": [
            [
                "8eb1d1a16528d020"
            ]
        ]
    },
    {
        "id": "3a521dae2e2dff19",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3610,
        "y": 700,
        "wires": []
    },
    {
        "id": "137f9ab28c637801",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3455,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a4e2d629e88b074d",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3890,
        "y": 540,
        "wires": [
            [
                "e295f3d0449a1f23"
            ]
        ]
    },
    {
        "id": "b98d66c960880d1d",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4450,
        "y": 500,
        "wires": [
            [
                "7dea078ea0b25e75"
            ]
        ]
    },
    {
        "id": "7939cdc5945f4fd0",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Before Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4450,
        "y": 320,
        "wires": []
    },
    {
        "id": "dbd4a86793f59be1",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "36426cd5b9b3bd96",
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f"
        ],
        "x": 75,
        "y": 520,
        "wires": []
    },
    {
        "id": "4cecb2eb42b65e19",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "39dfb7984ba6d244",
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "b69bea8abb1b280f",
            "b8e26b39226639eb"
        ],
        "x": 245,
        "y": 660,
        "wires": [
            [
                "50896f46708a9311",
                "1eee8b872df59bab"
            ]
        ]
    },
    {
        "id": "1eee8b872df59bab",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 660,
        "wires": []
    },
    {
        "id": "f35f3c94b2a81171",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4760,
        "y": 380,
        "wires": [
            [
                "4430f0706da411c3",
                "df1a2cc35faafe2f"
            ]
        ]
    },
    {
        "id": "8a608bef05421f81",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4730,
        "y": 100,
        "wires": []
    },
    {
        "id": "2d50c182fbf64d40",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "echange",
        "func": "// 1) Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    msg.payload = [\"\", \"\"];\n}\n\n// 2) Expand to guarantee at least 2 elements\nwhile (msg.payload.length < 2) {\n    msg.payload.push(\"\");\n}\n\n// 3) Handle possible \"object with .payload\" vs. direct string\nfunction isNonEmpty(val) {\n    return val !== undefined && val !== null && val !== \"\";\n}\n\n// If msg.payload[1] is an object with a payload...\nif (typeof msg.payload[1] === \"object\" && msg.payload[1] !== null) {\n    // Ensure there's a .payload key\n    msg.payload[1].payload = msg.payload[1].payload || \"\";\n    // If .payload is non-empty, copy it to [0].payload (making sure [0] is an object)\n    if (isNonEmpty(msg.payload[1].payload)) {\n        // If msg.payload[0] isn't an object, turn it into one\n        if (typeof msg.payload[0] !== \"object\" || msg.payload[0] === null) {\n            msg.payload[0] = { payload: \"\" };\n        }\n        msg.payload[0].payload = msg.payload[1].payload;\n    }\n    // Always reset [1].payload to empty\n    msg.payload[1].payload = \"\";\n\n// Else if msg.payload[1] is a string...\n} else if (typeof msg.payload[1] === \"string\") {\n    if (isNonEmpty(msg.payload[1])) {\n        // If [0] is object, put the string in [0].payload\n        if (typeof msg.payload[0] === \"object\" && msg.payload[0] !== null) {\n            msg.payload[0].payload = msg.payload[1];\n        } else {\n            // Otherwise, just treat [0] as a string\n            msg.payload[0] = msg.payload[1];\n        }\n    }\n    // Reset [1] to empty string\n    msg.payload[1] = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4740,
        "y": 300,
        "wires": [
            [
                "afcc0a1cac7ab0bd",
                "8a608bef05421f81",
                "69320ccce3e79d25"
            ]
        ]
    },
    {
        "id": "31f798ca995fa575",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2533.015625,
        "y": 553.75,
        "wires": [
            [
                "c4f07d2b82b3ec34"
            ]
        ]
    },
    {
        "id": "f3c901a674626b46",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2290,
        "y": 520,
        "wires": [
            [
                "31f798ca995fa575"
            ]
        ]
    },
    {
        "id": "cd46620f760f4d87",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3430,
        "y": 1280,
        "wires": [
            [
                "e8ea398b5a9a55dd"
            ]
        ]
    },
    {
        "id": "e8ea398b5a9a55dd",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3730,
        "y": 1280,
        "wires": [
            [
                "961ed577908f219e"
            ]
        ]
    },
    {
        "id": "961ed577908f219e",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3910,
        "y": 1280,
        "wires": [
            [
                "dfa6506deaaf4aaf"
            ]
        ]
    },
    {
        "id": "dfa6506deaaf4aaf",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 1340,
        "wires": [
            [
                "e5165b195e5452d1"
            ]
        ]
    },
    {
        "id": "e5165b195e5452d1",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3720,
        "y": 1340,
        "wires": [
            [
                "2e302519fe0a4d38",
                "bd93c5e5bffe2b6d"
            ]
        ]
    },
    {
        "id": "2e302519fe0a4d38",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3750,
        "y": 1400,
        "wires": [
            [
                "3fdc38a684e8bf78"
            ]
        ]
    },
    {
        "id": "3fdc38a684e8bf78",
        "type": "switch",
        "z": "62c122b2f65be8e8",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3980,
        "y": 1400,
        "wires": [
            [
                "509b027aa4e4e00b",
                "bad2231df6b1c213",
                "10d81ed8cdab564b",
                "54368e43a73e888e",
                "d28b93cfb7ff0bfb",
                "c73360e102ecf8c0"
            ],
            [
                "d28b93cfb7ff0bfb"
            ]
        ]
    },
    {
        "id": "bad2231df6b1c213",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3970,
        "y": 1460,
        "wires": [
            [
                "9fd50e05f13b0e15"
            ]
        ]
    },
    {
        "id": "9fd50e05f13b0e15",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3950,
        "y": 1500,
        "wires": [
            [
                "9ecd58b37c7d064f"
            ]
        ]
    },
    {
        "id": "9ecd58b37c7d064f",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Tle b1-postMan-OUT",
        "mode": "link",
        "links": [
            "17bd6cd48b2a4ff4",
            "eaa764a3200e5895",
            "8c549ce61c13f241",
            "ce4f0fdb27bdb44e",
            "56e6a629bd1f59e2",
            "5b95d42e7eac28c8",
            "e24933176e964d7d",
            "5c2d917dc0d2c6f9"
        ],
        "x": 4095,
        "y": 1500,
        "wires": []
    },
    {
        "id": "509b027aa4e4e00b",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "fee1af77c1489c1e",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 4385,
        "y": 1440,
        "wires": []
    },
    {
        "id": "105dd0e61d558cd7",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "8ddc1da8e2207fbf"
        ],
        "x": 3175,
        "y": 1280,
        "wires": [
            [
                "cd46620f760f4d87",
                "bff5f5807b701b78"
            ]
        ]
    },
    {
        "id": "10d81ed8cdab564b",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_999",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_999",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4250,
        "y": 1380,
        "wires": [
            [
                "4471d6e64aee4441"
            ]
        ]
    },
    {
        "id": "4471d6e64aee4441",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "MQTT Signal",
        "mode": "link",
        "links": [
            "19a84037bc7c4db2"
        ],
        "x": 4445,
        "y": 1380,
        "wires": []
    },
    {
        "id": "bff5f5807b701b78",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3220,
        "y": 1420,
        "wires": [
            [
                "6015c622cf79039e",
                "3718425b996ad450"
            ]
        ]
    },
    {
        "id": "83b2c798a4750a91",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "time persistent intermediate",
        "mode": "link",
        "links": [
            "5fcb4e512a728761"
        ],
        "x": 3315,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6015c622cf79039e",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "test inter timre",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3520,
        "y": 1460,
        "wires": []
    },
    {
        "id": "54368e43a73e888e",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "update all for B1 OUT",
        "mode": "link",
        "links": [
            "5c3232735d2e2038",
            "4ac641f2a3d366c5",
            "f97955cb1a90dca4",
            "1168e0151a783577",
            "4d4d54a87a2bb310"
        ],
        "x": 4205,
        "y": 1440,
        "wires": []
    },
    {
        "id": "bd93c5e5bffe2b6d",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "test result.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3930,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d28b93cfb7ff0bfb",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4090,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c73360e102ecf8c0",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4280,
        "y": 1260,
        "wires": [
            [
                "e57cf7b62afb072d"
            ]
        ]
    },
    {
        "id": "e57cf7b62afb072d",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4320,
        "y": 1320,
        "wires": [
            [
                "ce83d7fe6c2397c8"
            ]
        ]
    },
    {
        "id": "ce83d7fe6c2397c8",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4610,
        "y": 1320,
        "wires": []
    },
    {
        "id": "3718425b996ad450",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3210,
        "y": 1380,
        "wires": [
            [
                "83b2c798a4750a91"
            ]
        ]
    },
    {
        "id": "4dd323d4767eefb9",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2940,
        "y": 1420,
        "wires": [
            [
                "bff5f5807b701b78"
            ]
        ]
    },
    {
        "id": "8ddc1da8e2207fbf",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Out resultat 1",
        "mode": "link",
        "links": [
            "105dd0e61d558cd7"
        ],
        "x": 2855,
        "y": 320,
        "wires": []
    },
    {
        "id": "276b5bc85cf798b3",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Prepare Reset Message",
        "func": "msg.reset = true;\nmsg.payload = \"Reset command received\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2590,
        "y": 240,
        "wires": [
            [
                "5462a3b7f74b32b7"
            ]
        ]
    },
    {
        "id": "5462a3b7f74b32b7",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Counter & Loop",
        "func": "// Retrieve the current counter from flow context (default to 0)\nlet count = flow.get('myCounter') || 0;\n\n// Check if this message is a 'reset' or normal 'increment'\nif (msg.reset) {\n    // If reset, set counter to 0\n    count = 0;\n    flow.set('myCounter', count);\n    msg.payload = `Counter reset to ${count}`;\n    return msg;\n}\n\n// Otherwise, increment the counter\ncount += 1;\nflow.set('myCounter', count);\n\n// Update payload with the current count\nmsg.payload = `Counter: ${count}`;\n\n// Define maximum count (optional)\nconst maxCount = 2;\n\nif (count < maxCount) {\n    // Send the count to the debug node and loop back\n    return [null, msg];\n} else {\n    // If max count reached, notify and stop looping\n    msg.payload = \"Done looping, reached \" + maxCount;\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2560,
        "y": 300,
        "wires": [
            [
                "693f780aaa703a62"
            ],
            [
                "cf42ed13b1c646fc",
                "e97de88cfc199c1f",
                "2edd3fed063cccae",
                "0bb87aaeefbd249e"
            ]
        ]
    },
    {
        "id": "693f780aaa703a62",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "Debug Counter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2840,
        "y": 260,
        "wires": []
    },
    {
        "id": "e97de88cfc199c1f",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Output Before Maneuver TLEs",
        "mode": "link",
        "links": [
            "9e8dda907773a785"
        ],
        "x": 2795,
        "y": 320,
        "wires": []
    },
    {
        "id": "9e8dda907773a785",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "e97de88cfc199c1f"
        ],
        "x": 3515,
        "y": 280,
        "wires": [
            [
                "21a13f8e67ac40ea"
            ]
        ]
    },
    {
        "id": "cf42ed13b1c646fc",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "DEBUG COUNTER DOWN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2160,
        "y": 260,
        "wires": []
    },
    {
        "id": "68c5e547e701eb9f",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2300,
        "y": 300,
        "wires": [
            [
                "5462a3b7f74b32b7"
            ]
        ]
    },
    {
        "id": "130c36ae974348a5",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2500,
        "y": 180,
        "wires": [
            [
                "276b5bc85cf798b3"
            ]
        ]
    },
    {
        "id": "9d6337d407500fc3",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "RESET COUNTER",
        "mode": "link",
        "links": [
            "814442e2a482184c"
        ],
        "x": 2845,
        "y": 540,
        "wires": []
    },
    {
        "id": "814442e2a482184c",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "9d6337d407500fc3"
        ],
        "x": 2335,
        "y": 260,
        "wires": [
            [
                "276b5bc85cf798b3"
            ]
        ]
    },
    {
        "id": "dd8c06e4ebbb8f8d",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "0a9925746442b359"
        ],
        "x": 2425,
        "y": 260,
        "wires": [
            [
                "276b5bc85cf798b3"
            ]
        ]
    },
    {
        "id": "0a9925746442b359",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "end function signal",
        "mode": "link",
        "links": [
            "dd8c06e4ebbb8f8d"
        ],
        "x": 3305,
        "y": 540,
        "wires": []
    },
    {
        "id": "2edd3fed063cccae",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "SAVE TRIGGER",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 2845,
        "y": 280,
        "wires": []
    },
    {
        "id": "91e7f1a752e8894f",
        "type": "ui_button",
        "z": "62c122b2f65be8e8",
        "name": "",
        "group": "cbb369e33298cfeb",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "B1 Reset",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#CC0000",
        "className": "",
        "icon": "fa-undo",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 1560,
        "wires": [
            [
                "a51aa660993a5fb7"
            ]
        ]
    },
    {
        "id": "a51aa660993a5fb7",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup18' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1560,
        "wires": [
            [
                "0fcb94c8c9cd7719"
            ]
        ]
    },
    {
        "id": "53a94afcf2c10e28",
        "type": "switch",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui18",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 1560,
        "wires": [
            [
                "bec718485f8041b7"
            ]
        ]
    },
    {
        "id": "0fcb94c8c9cd7719",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "36426cd5b9b3bd96",
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f"
        ],
        "x": 405,
        "y": 1560,
        "wires": []
    },
    {
        "id": "8ab6dad2202e7bc0",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "39dfb7984ba6d244",
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "b69bea8abb1b280f",
            "b8e26b39226639eb"
        ],
        "x": 555,
        "y": 1560,
        "wires": [
            [
                "53a94afcf2c10e28"
            ]
        ]
    },
    {
        "id": "9cc4b860d78770c3",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "msg.payload = { isp: '' };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 840,
        "wires": [
            [
                "d97537415c1c2abf"
            ]
        ]
    },
    {
        "id": "937a453f0ee514db",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 880,
        "wires": [
            [
                "9cc4b860d78770c3"
            ]
        ]
    },
    {
        "id": "d8acbef0c018de40",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "flush isp",
        "mode": "link",
        "links": [
            "e676ba8537425b3e"
        ],
        "x": 4175,
        "y": 520,
        "wires": []
    },
    {
        "id": "e676ba8537425b3e",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "d8acbef0c018de40"
        ],
        "x": 55,
        "y": 920,
        "wires": [
            [
                "9cc4b860d78770c3"
            ]
        ]
    },
    {
        "id": "7bffa0cb4f0760dc",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "flush isp error",
        "mode": "link",
        "links": [
            "221bd5c277ab94b2"
        ],
        "x": 3235,
        "y": 620,
        "wires": []
    },
    {
        "id": "221bd5c277ab94b2",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "flush isp",
        "links": [
            "7bffa0cb4f0760dc"
        ],
        "x": 35,
        "y": 860,
        "wires": [
            [
                "9cc4b860d78770c3"
            ]
        ]
    },
    {
        "id": "5f34bbf158a5d6c2",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 20,
        "wires": []
    },
    {
        "id": "8120719b73b6d9d5",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "blue1-tle-storage-out",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 20,
        "wires": [
            [
                "cc4ce1c84e77858b"
            ]
        ]
    },
    {
        "id": "cc4ce1c84e77858b",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 20,
        "wires": [
            [
                "6f16d5d8b75f0c75"
            ]
        ]
    },
    {
        "id": "6f16d5d8b75f0c75",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "/**\n * Node-RED Function: Compute Semi-Major Axis (SMA) from Mean Motion and Output Only SMA\n *\n * This function:\n * 1. Extracts the 'mean' field from msg.payload (assumed to be in rev/day)\n * 2. Converts 'mean' to Semi-Major Axis (SMA) using Kepler's Third Law\n * 3. Sets msg.payload to the computed SMA (in kilometers), removing all other fields\n *\n * Assumptions:\n * - 'mean' is in revolutions per day (rev/day)\n * - Earth's gravitational parameter (mu) = 398600 km³/s²\n */\n\nif (msg.payload && msg.payload.mean) {\n    // Earth's gravitational parameter (mu) in km^3/s^2\n    const mu = 398600; \n    const secondsPerDay = 86400;\n    const twoPi = 2 * Math.PI;\n\n    // 1. Extract and parse the 'mean' field\n    let meanMotionRevPerDay = parseFloat(msg.payload.mean);\n\n    // Validate the parsed mean motion\n    if (isNaN(meanMotionRevPerDay) || meanMotionRevPerDay <= 0) {\n        node.error(\"Invalid mean motion value: \" + msg.payload.mean);\n        return null; // Stop processing this message\n    }\n\n    // 2. Convert mean motion from rev/day to rad/s\n    let meanMotionRadPerSec = meanMotionRevPerDay * twoPi / secondsPerDay;\n\n    // 3. Compute the orbital period (T) in seconds using T = 2π / n\n    let orbitalPeriod = twoPi / meanMotionRadPerSec; // seconds\n\n    // 4. Compute Semi-Major Axis (a) using Kepler's Third Law:\n    //    a = (mu * T^2 / (4 * pi^2))^(1/3)\n    let aCubed = (mu * Math.pow(orbitalPeriod, 2)) / (4 * Math.PI * Math.PI);\n    let smaKm = Math.pow(aCubed, 1/3); // km\n\n    // Optional: Round SMA to two decimal places for readability\n    smaKm = parseFloat(smaKm.toFixed(2));\n\n    // 5. Set msg.payload to the computed SMA only\n    msg.payload = smaKm;\n\n    // Optional: Log the computed SMA for debugging purposes\n    node.log(\"Computed SMA (km) = \" + smaKm);\n\n    // 6. Return the modified message\n    return msg;\n\n} else {\n    // If 'mean' field is missing, log an error and stop processing\n    node.error(\"No 'mean' field found in msg.payload.\");\n    return null; // Stop processing this message\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 20,
        "wires": [
            [
                "5f34bbf158a5d6c2",
                "5f15cbdab1f93c07"
            ]
        ]
    },
    {
        "id": "5f15cbdab1f93c07",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_17",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_17",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 60,
        "wires": [
            [
                "ba521d9737df82b4",
                "84539b61ca67116d"
            ]
        ]
    },
    {
        "id": "b02809e768764d4f",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST JOIN WAIT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "d88aa2c3d7b9507f",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Retrieve SMA",
        "mode": "link",
        "links": [
            "dce263952929a8b9"
        ],
        "x": 305,
        "y": 760,
        "wires": []
    },
    {
        "id": "dce263952929a8b9",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "d88aa2c3d7b9507f"
        ],
        "x": 305,
        "y": 20,
        "wires": [
            [
                "8120719b73b6d9d5"
            ]
        ]
    },
    {
        "id": "84539b61ca67116d",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "PATH_17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 80,
        "wires": []
    },
    {
        "id": "d77320ef81001454",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "blue1-tle-storage-out",
        "filename": "blue1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 660,
        "y": 1020,
        "wires": [
            [
                "cf48256fee706616"
            ]
        ]
    },
    {
        "id": "cf48256fee706616",
        "type": "json",
        "z": "62c122b2f65be8e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 1020,
        "wires": [
            [
                "067bab7d30219ad8"
            ]
        ]
    },
    {
        "id": "067bab7d30219ad8",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "/**\n * Node-RED Function: Compute Semi-Major Axis (SMA) from Mean Motion and Output Only SMA\n *\n * This function:\n * 1. Extracts the 'mean' field from msg.payload (assumed to be in rev/day)\n * 2. Converts 'mean' to Semi-Major Axis (SMA) using Kepler's Third Law\n * 3. Sets msg.payload to the computed SMA (in kilometers), removing all other fields\n *\n * Assumptions:\n * - 'mean' is in revolutions per day (rev/day)\n * - Earth's gravitational parameter (mu) = 398600 km³/s²\n */\n\nif (msg.payload && msg.payload.mean) {\n    // Earth's gravitational parameter (mu) in km^3/s^2\n    const mu = 398600; \n    const secondsPerDay = 86400;\n    const twoPi = 2 * Math.PI;\n\n    // 1. Extract and parse the 'mean' field\n    let meanMotionRevPerDay = parseFloat(msg.payload.mean);\n\n    // Validate the parsed mean motion\n    if (isNaN(meanMotionRevPerDay) || meanMotionRevPerDay <= 0) {\n        node.error(\"Invalid mean motion value: \" + msg.payload.mean);\n        return null; // Stop processing this message\n    }\n\n    // 2. Convert mean motion from rev/day to rad/s\n    let meanMotionRadPerSec = meanMotionRevPerDay * twoPi / secondsPerDay;\n\n    // 3. Compute the orbital period (T) in seconds using T = 2π / n\n    let orbitalPeriod = twoPi / meanMotionRadPerSec; // seconds\n\n    // 4. Compute Semi-Major Axis (a) using Kepler's Third Law:\n    //    a = (mu * T^2 / (4 * pi^2))^(1/3)\n    let aCubed = (mu * Math.pow(orbitalPeriod, 2)) / (4 * Math.PI * Math.PI);\n    let smaKm = Math.pow(aCubed, 1/3); // km\n\n    // Optional: Round SMA to two decimal places for readability\n    smaKm = parseFloat(smaKm.toFixed(2));\n\n    // 5. Set msg.payload to the computed SMA only\n    msg.payload = smaKm;\n\n    // Optional: Log the computed SMA for debugging purposes\n    node.log(\"Computed SMA (km) = \" + smaKm);\n\n    // 6. Return the modified message\n    return msg;\n\n} else {\n    // If 'mean' field is missing, log an error and stop processing\n    node.error(\"No 'mean' field found in msg.payload.\");\n    return null; // Stop processing this message\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1020,
        "wires": [
            [
                "8c945e06602273cf",
                "7572a696be75af31"
            ]
        ]
    },
    {
        "id": "547168bc297c81a1",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8c945e06602273cf",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_18",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_18",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 960,
        "wires": [
            [
                "7f69cd7e7a9bc3c8",
                "9a4513d1036c14a7",
                "71d733ebf569e6e9"
            ]
        ]
    },
    {
        "id": "9a4513d1036c14a7",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TESRT TRIGGER BDD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3bc6564d0e924c7c",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "triger bdd time b1",
        "links": [
            "3887cd5b1290a0e9"
        ],
        "x": 415,
        "y": 1020,
        "wires": [
            [
                "d77320ef81001454"
            ]
        ]
    },
    {
        "id": "read-file-node",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Prepare File Read",
        "func": "msg.filename = 'app/maneuver-manager/CommandData.txt';\nmsg.action = 'read';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1340,
        "wires": [
            [
                "file-node"
            ]
        ]
    },
    {
        "id": "file-node",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Read/Write CommandData.txt",
        "filename": "/path/to/CommandData.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1370,
        "y": 1320,
        "wires": [
            [
                "update-file-node"
            ]
        ]
    },
    {
        "id": "update-file-node",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Update SMA Value",
        "func": "const lines = msg.payload.split('\\n');\nlines[0] = msg.data.toString();\nmsg.payload = lines.join('\\n');\nmsg.filename = 'CommandData.txt';\nmsg.action = 'write';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 1280,
        "wires": [
            [
                "file-node"
            ]
        ]
    },
    {
        "id": "7572a696be75af31",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1020,
        "wires": []
    },
    {
        "id": "update-content",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Update First Line",
        "func": "const lines = msg.payload.split('\\n');\nlines[0] = msg.data.toString();\nmsg.payload = lines.join('\\n');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1140,
        "wires": [
            [
                "write-file",
                "6f43841d5e79d5f5"
            ]
        ]
    },
    {
        "id": "write-file",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "Write CommandData.txt",
        "filename": "/app/maneuver-manager/CommandData.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1850,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "deeda0c4db8dbc50",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1180,
        "wires": []
    },
    {
        "id": "6f43841d5e79d5f5",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b2e1287bb97b887b",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_19",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_19",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1140,
        "wires": [
            [
                "71d733ebf569e6e9"
            ]
        ]
    },
    {
        "id": "71d733ebf569e6e9",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_18\",\"path_19\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1500,
        "y": 1140,
        "wires": [
            [
                "b5c156860563ee46"
            ],
            []
        ]
    },
    {
        "id": "65900f818cfcc157",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "99e1aef3c6e64f7d",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "Trigger Command Data Update",
        "mode": "link",
        "links": [
            "a341c799a803625b",
            "23c9206d95889228"
        ],
        "x": 345,
        "y": 240,
        "wires": []
    },
    {
        "id": "23c9206d95889228",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "99e1aef3c6e64f7d"
        ],
        "x": 475,
        "y": 940,
        "wires": [
            [
                "d77320ef81001454",
                "6e08418431cc4ceb"
            ]
        ]
    },
    {
        "id": "b5c156860563ee46",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "TEST DEBUG comm data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 1080,
        "wires": []
    },
    {
        "id": "trigger-node",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "Trigger Update",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "6973.97",
        "payloadType": "num",
        "x": 960,
        "y": 1120,
        "wires": [
            [
                "6e08418431cc4ceb"
            ]
        ]
    },
    {
        "id": "6e08418431cc4ceb",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "CommandData.txt",
        "filename": "/app/maneuver-manager/CommandData.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1090,
        "y": 1080,
        "wires": [
            [
                "b2e1287bb97b887b",
                "deeda0c4db8dbc50"
            ]
        ]
    },
    {
        "id": "37ef379253de8380",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2990,
        "y": 900,
        "wires": [
            [
                "d6d4dbb7b70f7d65",
                "7c9276340e56965f"
            ]
        ]
    },
    {
        "id": "a3bb8e61957c2ae6",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "aabb98fe3ab1ba7f"
        ],
        "x": 2825,
        "y": 880,
        "wires": [
            [
                "37ef379253de8380"
            ]
        ]
    },
    {
        "id": "7c9276340e56965f",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 880,
        "wires": []
    },
    {
        "id": "38d4040002c51748",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "abdfdc864bbae5d8"
            ]
        ]
    },
    {
        "id": "abdfdc864bbae5d8",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 240,
        "wires": [
            [
                "83b1f06d.d7ddc"
            ]
        ]
    },
    {
        "id": "09a97cf7ca5252b9",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "Enable / Disable Maneouver button",
        "links": [
            "43b5b85c781ed6ef",
            "95b4e365543cc5c9",
            "e6c5e3517bc15386",
            "a47a9970cbaa9f2b",
            "abf05d09d35e0fa9",
            "e1539e7cd5589eb7",
            "3df79a501f214a11"
        ],
        "x": 335,
        "y": 140,
        "wires": [
            [
                "83b1f06d.d7ddc"
            ]
        ]
    },
    {
        "id": "cda5efb3d2161b38",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 320,
        "wires": [
            [
                "95b4e365543cc5c9"
            ]
        ]
    },
    {
        "id": "95b4e365543cc5c9",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "link",
        "links": [
            "09a97cf7ca5252b9"
        ],
        "x": 2225,
        "y": 320,
        "wires": []
    },
    {
        "id": "39954fbfc7821c9d",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 140,
        "wires": [
            [
                "83b1f06d.d7ddc"
            ]
        ]
    },
    {
        "id": "125d27b796f76d9d",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "39954fbfc7821c9d"
            ]
        ]
    },
    {
        "id": "494fe4243096d496",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "65804949ca66fef8"
        ],
        "x": 2615,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a29237589b6fd288",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3070,
        "y": 360,
        "wires": []
    },
    {
        "id": "b07d5cd3dee5b332",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2710,
        "y": 340,
        "wires": [
            [
                "8ddc1da8e2207fbf"
            ]
        ]
    },
    {
        "id": "bec718485f8041b7",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "LOAD CONF",
        "mode": "link",
        "links": [
            "c5b6b5d0caf2f6de"
        ],
        "x": 795,
        "y": 1560,
        "wires": []
    },
    {
        "id": "f0aeeb9330bd5736",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "name": "",
        "links": [
            "6d68815a456a141b",
            "00f32cd598b46f61"
        ],
        "x": 3925,
        "y": 1960,
        "wires": [
            [
                "1b13d0d5dbb07fbf",
                "91aeaab5889b0eb9",
                "b8a98dcc738831ad",
                "033adfd3118f3c3e"
            ]
        ]
    },
    {
        "id": "6e269a8087941004",
        "type": "mongodb in",
        "z": "62c122b2f65be8e8",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b1tlelatest",
        "collection": "b1tlelatest",
        "operation": "find",
        "x": 3530,
        "y": 2340,
        "wires": [
            [
                "f617c8c1354d5cbe",
                "fa27d19428fc5705"
            ]
        ]
    },
    {
        "id": "fa27d19428fc5705",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3750,
        "y": 2340,
        "wires": [
            [
                "00f49f551db30e1c",
                "f2b78e53bec3d61e"
            ]
        ]
    },
    {
        "id": "f617c8c1354d5cbe",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3760,
        "y": 2400,
        "wires": []
    },
    {
        "id": "f2b78e53bec3d61e",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 2360,
        "wires": []
    },
    {
        "id": "00f49f551db30e1c",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4040,
        "y": 2300,
        "wires": [
            [
                "0955ae4dbce4ac78",
                "9cfcacd689e02f9f"
            ]
        ]
    },
    {
        "id": "9cfcacd689e02f9f",
        "type": "join-wait",
        "z": "62c122b2f65be8e8",
        "name": "",
        "paths": "[\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4230,
        "y": 2300,
        "wires": [
            [
                "5110bc8524817eb5",
                "2bb01a46edef1097"
            ],
            []
        ]
    },
    {
        "id": "0955ae4dbce4ac78",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "LAST TLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4240,
        "y": 2340,
        "wires": []
    },
    {
        "id": "b523d130d65fa3c3",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4520,
        "y": 2360,
        "wires": []
    },
    {
        "id": "5110bc8524817eb5",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Data.txt format",
        "func": "// Initialize variables\nvar tab = [];\nvar gs = {};\n\n// Split line #2 of the TLE robustly:\n// - trim() removes any leading/trailing spaces\n// - split(/\\s+/) splits on ANY run of whitespace\nvar tle = msg.payload[2].trim().split(/\\s+/);\n\nvar N;      // Mean motion in rev/day (not used below, just declared)\nvar n;      // ...\nvar a;      // Semi-major axis\nvar acube;  // a^3\nvar e;      // eccentricity\n\n// Earth's standard gravitational parameter, etc.\nvar mu = 398600.4418;\nvar J = 86400; // A day in seconds\n\n// From the TLE array\ngs.incli = String(tle[2]);\ngs.raan  = String(tle[3]);\ngs.ecc   = String(tle[4]);\ngs.aop   = String(tle[5]);\ngs.meana = String(tle[6]);\ngs.mean  = String(tle[7]);\n\n// From the rest of payload\ngs.dry_mass          = parseFloat(msg.payload[3]);\ngs.ergol_consumption = parseFloat(msg.payload[5]);\ngs.ergol_mass        = parseFloat(msg.payload[4]);\n\n// Attach everything back to msg and return\nmsg.payload = gs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4510,
        "y": 2300,
        "wires": [
            [
                "b523d130d65fa3c3",
                "faf6e3a0f6eb0165"
            ]
        ]
    },
    {
        "id": "2bb01a46edef1097",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4500,
        "y": 2260,
        "wires": []
    },
    {
        "id": "17609622c42d19b2",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4480,
        "y": 2200,
        "wires": []
    },
    {
        "id": "3af04392d1f49f3e",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4480,
        "y": 2160,
        "wires": []
    },
    {
        "id": "cd09c1abac9e3e1f",
        "type": "switch",
        "z": "62c122b2f65be8e8",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4490,
        "y": 2120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9c71ec0de0104af2",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 2120,
        "wires": [
            [
                "cd09c1abac9e3e1f",
                "17609622c42d19b2",
                "3af04392d1f49f3e"
            ]
        ]
    },
    {
        "id": "351503ed43869958",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4120,
        "y": 2060,
        "wires": [
            [
                "befefbce11fc9cfe"
            ]
        ]
    },
    {
        "id": "befefbce11fc9cfe",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4330,
        "y": 2060,
        "wires": [
            [
                "9c71ec0de0104af2"
            ]
        ]
    },
    {
        "id": "1b13d0d5dbb07fbf",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "query to read Result.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4160,
        "y": 2000,
        "wires": [
            [
                "1efef4f50c6b0ba2"
            ]
        ]
    },
    {
        "id": "91aeaab5889b0eb9",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4120,
        "y": 1960,
        "wires": []
    },
    {
        "id": "1efef4f50c6b0ba2",
        "type": "file in",
        "z": "62c122b2f65be8e8",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4400,
        "y": 2000,
        "wires": [
            [
                "e5c508c5fc61a653"
            ]
        ]
    },
    {
        "id": "e5c508c5fc61a653",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4600,
        "y": 2000,
        "wires": [
            [
                "351503ed43869958"
            ]
        ]
    },
    {
        "id": "c8305ca7c73d9680",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4660,
        "y": 1820,
        "wires": []
    },
    {
        "id": "faf6e3a0f6eb0165",
        "type": "file",
        "z": "62c122b2f65be8e8",
        "name": "",
        "filename": "blue1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4370,
        "y": 1740,
        "wires": [
            [
                "c8305ca7c73d9680",
                "e1be04fa7940030d"
            ]
        ]
    },
    {
        "id": "b8a98dcc738831ad",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4180,
        "y": 1700,
        "wires": [
            [
                "4892a26759bf6270"
            ]
        ]
    },
    {
        "id": "1d7fce52d619b906",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "AP Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4570,
        "y": 1660,
        "wires": []
    },
    {
        "id": "c446992b3f43be3b",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4490,
        "y": 1580,
        "wires": [
            [
                "2d5f98b85a669c9f",
                "1d7fce52d619b906"
            ]
        ]
    },
    {
        "id": "4892a26759bf6270",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4380,
        "y": 1620,
        "wires": [
            [
                "c446992b3f43be3b"
            ]
        ]
    },
    {
        "id": "e1be04fa7940030d",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": " Reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4300,
        "y": 1540,
        "wires": [
            [
                "2d5f98b85a669c9f"
            ]
        ]
    },
    {
        "id": "2d5f98b85a669c9f",
        "type": "join",
        "z": "62c122b2f65be8e8",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4600,
        "y": 1540,
        "wires": [
            [
                "75408ba88b9bfc99",
                "2308657e9f8fe4f1"
            ]
        ]
    },
    {
        "id": "75408ba88b9bfc99",
        "type": "function",
        "z": "62c122b2f65be8e8",
        "name": "echange",
        "func": "// 1) Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    msg.payload = [\"\", \"\"];\n}\n\n// 2) Expand to guarantee at least 2 elements\nwhile (msg.payload.length < 2) {\n    msg.payload.push(\"\");\n}\n\n// 3) Handle possible \"object with .payload\" vs. direct string\nfunction isNonEmpty(val) {\n    return val !== undefined && val !== null && val !== \"\";\n}\n\n// If msg.payload[1] is an object with a payload...\nif (typeof msg.payload[1] === \"object\" && msg.payload[1] !== null) {\n    // Ensure there's a .payload key\n    msg.payload[1].payload = msg.payload[1].payload || \"\";\n    // If .payload is non-empty, copy it to [0].payload (making sure [0] is an object)\n    if (isNonEmpty(msg.payload[1].payload)) {\n        // If msg.payload[0] isn't an object, turn it into one\n        if (typeof msg.payload[0] !== \"object\" || msg.payload[0] === null) {\n            msg.payload[0] = { payload: \"\" };\n        }\n        msg.payload[0].payload = msg.payload[1].payload;\n    }\n    // Always reset [1].payload to empty\n    msg.payload[1].payload = \"\";\n\n// Else if msg.payload[1] is a string...\n} else if (typeof msg.payload[1] === \"string\") {\n    if (isNonEmpty(msg.payload[1])) {\n        // If [0] is object, put the string in [0].payload\n        if (typeof msg.payload[0] === \"object\" && msg.payload[0] !== null) {\n            msg.payload[0].payload = msg.payload[1];\n        } else {\n            // Otherwise, just treat [0] as a string\n            msg.payload[0] = msg.payload[1];\n        }\n    }\n    // Reset [1] to empty string\n    msg.payload[1] = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4700,
        "y": 1480,
        "wires": [
            [
                "c697e7932b33da91",
                "b00fda3248bd612d"
            ]
        ]
    },
    {
        "id": "c697e7932b33da91",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "Out Maneuvre prédéfinie",
        "mode": "link",
        "links": [
            "8d458acac06751d5",
            "b9a06d4ecb7c304d",
            "4de5d0666377ecc1",
            "d3a880f48b073068",
            "b778ce59ad6de1b6"
        ],
        "x": 4555,
        "y": 1440,
        "wires": []
    },
    {
        "id": "2bd93e5eca5b4dfc",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "g": "723de58ee792edf6",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 180,
        "wires": [
            [
                "05e0662736df112a"
            ]
        ]
    },
    {
        "id": "7c2077bbeafd3316",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "",
        "links": [
            "3db42ae545d16dbe",
            "5fe6641201072922",
            "1824f7038bbf6a78"
        ],
        "x": 365,
        "y": 1400,
        "wires": [
            [
                "79375e4e6264f9d4"
            ]
        ]
    },
    {
        "id": "69132580263bf62e",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1180,
        "wires": []
    },
    {
        "id": "8878ad8ef3c6a124",
        "type": "link in",
        "z": "62c122b2f65be8e8",
        "g": "7f8477734cd0fd39",
        "name": "",
        "links": [
            "3058f53f34d12d6a",
            "921ef1a8e9d9a5a4",
            "db7d22182f4bd7fa"
        ],
        "x": 155,
        "y": 1280,
        "wires": [
            [
                "7ae1bbb942260344"
            ]
        ]
    },
    {
        "id": "838e43d3f6a4672a",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "ergold",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 60,
        "wires": []
    },
    {
        "id": "2cb4a7f6f1d8edc0",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "debergol",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2320,
        "y": 100,
        "wires": []
    },
    {
        "id": "829c5018f54ff088",
        "type": "inject",
        "z": "62c122b2f65be8e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2440,
        "y": 440,
        "wires": [
            [
                "631492903f161c34"
            ]
        ]
    },
    {
        "id": "5da426d062cbfb09",
        "type": "delay",
        "z": "62c122b2f65be8e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2090,
        "y": 580,
        "wires": [
            [
                "8122caee7de98b1b"
            ]
        ]
    },
    {
        "id": "0bb87aaeefbd249e",
        "type": "change",
        "z": "62c122b2f65be8e8",
        "name": "label blue1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "blue1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2964,
        "y": 298,
        "wires": [
            [
                "640e0c9017e9572c"
            ]
        ]
    },
    {
        "id": "640e0c9017e9572c",
        "type": "link out",
        "z": "62c122b2f65be8e8",
        "name": "save last blue1",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 3075,
        "y": 300,
        "wires": []
    },
    {
        "id": "033adfd3118f3c3e",
        "type": "trigger",
        "z": "62c122b2f65be8e8",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3790,
        "y": 2120,
        "wires": [
            [
                "6e269a8087941004"
            ]
        ]
    },
    {
        "id": "2308657e9f8fe4f1",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4772,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b00fda3248bd612d",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4870,
        "y": 1500,
        "wires": []
    },
    {
        "id": "c618f96af4e360ba",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4930,
        "y": 380,
        "wires": []
    },
    {
        "id": "69320ccce3e79d25",
        "type": "debug",
        "z": "62c122b2f65be8e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4907,
        "y": 294,
        "wires": []
    },
    {
        "id": "da9fec62962b275b",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "b2 timesettermaneuver IN",
        "links": [
            "37ba85f0b8ed5e1b",
            "8e8f8899a93adf9a"
        ],
        "x": 465,
        "y": 560,
        "wires": [
            [
                "59c09ccf34ed2756"
            ]
        ]
    },
    {
        "id": "59c09ccf34ed2756",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 560,
        "wires": [
            [
                "17fc54fca24c9a9b",
                "fca0721d040edf2a",
                "05523a88dd6982c1"
            ]
        ]
    },
    {
        "id": "618cdfd5edc68ee2",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 500,
        "wires": [
            [
                "17fc54fca24c9a9b",
                "0f117d94f8b52130"
            ]
        ]
    },
    {
        "id": "17fc54fca24c9a9b",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 810,
        "y": 560,
        "wires": [
            [
                "a05537505338ee99"
            ],
            []
        ]
    },
    {
        "id": "a05537505338ee99",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 540,
        "wires": [
            [
                "fedf2abf01f83d33",
                "31217e3b0bf111a4",
                "4501f71efc643ce8"
            ]
        ]
    },
    {
        "id": "6f5642eda9795043",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 520,
        "wires": [
            [
                "495ce74a3fa7df1b"
            ]
        ]
    },
    {
        "id": "495ce74a3fa7df1b",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], 1, 0, 0, 1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 520,
        "wires": [
            [
                "56772945b3c6cc34"
            ]
        ]
    },
    {
        "id": "fedf2abf01f83d33",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 460,
        "wires": [
            [
                "08a20b6e4e89ab04",
                "4c5c8d67b5c205c6"
            ]
        ]
    },
    {
        "id": "08a20b6e4e89ab04",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[ \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1390,
        "y": 520,
        "wires": [
            [
                "6f5642eda9795043"
            ],
            []
        ]
    },
    {
        "id": "56772945b3c6cc34",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1960,
        "y": 520,
        "wires": [
            [
                "524dd3f09fd5f3c6"
            ]
        ]
    },
    {
        "id": "524dd3f09fd5f3c6",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2120,
        "y": 520,
        "wires": [
            [
                "9d2fddf829d09389"
            ]
        ]
    },
    {
        "id": "9d2fddf829d09389",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2330,
        "y": 520,
        "wires": [
            [
                "7158c66265fe6028"
            ]
        ]
    },
    {
        "id": "a95bd3321541fd99",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 700,
        "wires": [
            [
                "df1823ed770ab525",
                "619abc8d2a38027e"
            ]
        ]
    },
    {
        "id": "79d0890a503804c5",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 840,
        "wires": [
            [
                "df1823ed770ab525",
                "96742321e46a7a85",
                "23589e9822251517",
                "444b5bc2569af448"
            ]
        ]
    },
    {
        "id": "df1823ed770ab525",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_8\",\"path_1\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1410,
        "y": 700,
        "wires": [
            [
                "2723ca01f0060947",
                "efac092d60fc0f43"
            ],
            []
        ]
    },
    {
        "id": "48641d1991845941",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 760,
        "wires": [
            [
                "a4a757755840e131"
            ]
        ]
    },
    {
        "id": "39353fb8a1dc4a6f",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "query for b2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 860,
        "wires": [
            [
                "0e61b42e2fd4b6f6"
            ]
        ]
    },
    {
        "id": "0e61b42e2fd4b6f6",
        "type": "mongodb in",
        "z": "0b6378c01090c728",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 510,
        "y": 760,
        "wires": [
            [
                "e4ccc9cbddb8cff0",
                "48641d1991845941",
                "fb6fdd44529ed699",
                "acdc6c91a7779715"
            ]
        ]
    },
    {
        "id": "a4a757755840e131",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1020,
        "y": 760,
        "wires": [
            [
                "a0a1d714d3dbc3d9"
            ]
        ]
    },
    {
        "id": "31217e3b0bf111a4",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 600,
        "wires": [
            [
                "df1823ed770ab525",
                "e9825cf6cf10cda5",
                "444b5bc2569af448"
            ]
        ]
    },
    {
        "id": "05998331dad9ee6d",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1880,
        "y": 800,
        "wires": [
            [
                "696ef738ac46f587",
                "61ffb19b424233bc"
            ]
        ]
    },
    {
        "id": "696ef738ac46f587",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2080,
        "y": 800,
        "wires": [
            [
                "0974e695c514715b"
            ]
        ]
    },
    {
        "id": "0974e695c514715b",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2340,
        "y": 800,
        "wires": [
            [
                "375e634f79a0128b"
            ]
        ]
    },
    {
        "id": "cc64e235a8a42a0c",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 760,
        "wires": [
            [
                "05998331dad9ee6d",
                "e4aae852813a309a"
            ]
        ]
    },
    {
        "id": "9e3f92c56d0659b5",
        "type": "exec",
        "z": "0b6378c01090c728",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue2 -DcommandParameter=\"compute\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3060,
        "y": 660,
        "wires": [
            [
                "cfd6f544d00d3e1f",
                "704a12435d81cfbc",
                "38e97007ccaed37f",
                "31845fadbf4e115a",
                "e13dbd5dae4fc261"
            ],
            [
                "d4f62f0d394a181f",
                "a35732083c94adb6",
                "704a12435d81cfbc",
                "baa6fa4830e61a12",
                "8ce44d1c59e59feb",
                "45d0eb89722211e5",
                "e78d263870e57de3"
            ],
            []
        ]
    },
    {
        "id": "7158c66265fe6028",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 580,
        "wires": [
            [
                "569af04fc4b8a348",
                "a65281e033f3b3c1"
            ]
        ]
    },
    {
        "id": "375e634f79a0128b",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 680,
        "wires": [
            [
                "569af04fc4b8a348",
                "228ee28ac51d40e0"
            ]
        ]
    },
    {
        "id": "569af04fc4b8a348",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\",\"path_10\"]",
        "pathsToExpire": "[ \"path_4\"]",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "900",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2750,
        "y": 660,
        "wires": [
            [
                "b0388dbea6663509",
                "09220baa702f3a35",
                "4e1a40a660c8adfe",
                "9e3f92c56d0659b5",
                "be65646a8c88d585"
            ],
            []
        ]
    },
    {
        "id": "38e97007ccaed37f",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "query to read Result2.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 460,
        "wires": [
            [
                "49f771982ed316d8"
            ]
        ]
    },
    {
        "id": "49f771982ed316d8",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3740,
        "y": 460,
        "wires": [
            [
                "dbbb7f99dda150e0"
            ]
        ]
    },
    {
        "id": "dbbb7f99dda150e0",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3900,
        "y": 500,
        "wires": [
            [
                "b618a4997ad6e1b8"
            ]
        ]
    },
    {
        "id": "b618a4997ad6e1b8",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3620,
        "y": 520,
        "wires": [
            [
                "156c010025fc2d47"
            ]
        ]
    },
    {
        "id": "156c010025fc2d47",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 580,
        "wires": [
            [
                "c15b71975e4f7e7a"
            ]
        ]
    },
    {
        "id": "c15b71975e4f7e7a",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 640,
        "wires": [
            [
                "d4dd9a89c054bf34"
            ]
        ]
    },
    {
        "id": "de7bf8b57d7f3c09",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "update all for B1 OUT",
        "mode": "link",
        "links": [
            "4ac641f2a3d366c5",
            "f97955cb1a90dca4",
            "57b7bbaac29962ab",
            "1168e0151a783577",
            "4d4d54a87a2bb310"
        ],
        "x": 4275,
        "y": 600,
        "wires": []
    },
    {
        "id": "cc9edb470e97f06a",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "time of post-maneuver",
        "func": "// Ensure msg.body is an array\nif (!Array.isArray(msg.body)) {\n    node.error(\"msg.body is not an array\");\n    return null;\n}\n\nvar n = msg.body.length;\nvar datecurrent = null;\n\n// Loop backwards through msg.body to find the last non-empty element\nfor (var i = n - 1; i >= 0; i--) {\n    if (msg.body[i] !== \"\") {\n        datecurrent = msg.body[i];\n        break;\n    }\n}\n\n// Set msg.payload to the found value (or null if none found)\nmsg.payload = datecurrent;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 820,
        "wires": [
            [
                "981a7c402d5fd6bb",
                "3a1997c003b0ee82",
                "11c9f5fc3dcbb830",
                "756da04a05fbbe5a"
            ]
        ]
    },
    {
        "id": "981a7c402d5fd6bb",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 840,
        "wires": [
            [
                "efa82241aaf49c90"
            ]
        ]
    },
    {
        "id": "efa82241aaf49c90",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 840,
        "wires": [
            [
                "1021e222210aafab"
            ]
        ]
    },
    {
        "id": "1021e222210aafab",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "query to fill b2 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb2 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 900,
        "wires": [
            [
                "4840c56940ae9f89",
                "944c30c051bd9372"
            ]
        ]
    },
    {
        "id": "4840c56940ae9f89",
        "type": "split",
        "z": "0b6378c01090c728",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3800,
        "y": 900,
        "wires": [
            [
                "3334876ed5fa4e39",
                "bb09e79e1531c69e"
            ]
        ]
    },
    {
        "id": "3334876ed5fa4e39",
        "type": "mongodb out",
        "z": "0b6378c01090c728",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert b2 time tle mongo",
        "collection": "peritimeb2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4080,
        "y": 900,
        "wires": []
    },
    {
        "id": "5c26e06d3cfa23d8",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Tle b1-postMan-OUT",
        "mode": "link",
        "links": [
            "eaa764a3200e5895",
            "8c549ce61c13f241",
            "ce4f0fdb27bdb44e",
            "56e6a629bd1f59e2",
            "5b95d42e7eac28c8",
            "e24933176e964d7d",
            "5c2d917dc0d2c6f9"
        ],
        "x": 4485,
        "y": 760,
        "wires": []
    },
    {
        "id": "cd8264a1001f3910",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "96afcf038a64f155",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "MMB1",
        "info": "",
        "x": 250,
        "y": 20,
        "wires": []
    },
    {
        "id": "f7a5e417bc4c2db5",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 230,
        "y": 380,
        "wires": []
    },
    {
        "id": "4696021475d6fba7",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 110,
        "y": 460,
        "wires": []
    },
    {
        "id": "77cbfd795d3baf68",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 170,
        "y": 540,
        "wires": []
    },
    {
        "id": "9597665bec2ec0e0",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 150,
        "y": 420,
        "wires": []
    },
    {
        "id": "3a1997c003b0ee82",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "blue2-date-storage",
        "filename": "blue2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3980,
        "y": 800,
        "wires": [
            [
                "751203aee7764589"
            ]
        ]
    },
    {
        "id": "3634bbd6d3a1664f",
        "type": "comment",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "4175532dd8ab8f07",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1570,
        "y": 420,
        "wires": []
    },
    {
        "id": "55099c4d526881ef",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 560,
        "wires": [
            [
                "449a4b215914abe4",
                "e0b64ff8fc10b89c"
            ]
        ]
    },
    {
        "id": "febde87d07563d01",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "fabrication de la string",
        "info": "",
        "x": 3790,
        "y": 680,
        "wires": []
    },
    {
        "id": "900c323f2156326c",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 800,
        "y": 620,
        "wires": []
    },
    {
        "id": "1db35e4cb8c60081",
        "type": "catch",
        "z": "0b6378c01090c728",
        "name": "",
        "scope": [
            "9e3f92c56d0659b5"
        ],
        "uncaught": false,
        "x": 3060,
        "y": 720,
        "wires": [
            [
                "d4f62f0d394a181f"
            ]
        ]
    },
    {
        "id": "d4dd9a89c054bf34",
        "type": "switch",
        "z": "0b6378c01090c728",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4010,
        "y": 640,
        "wires": [
            [
                "9ecd112a0864c5b8",
                "58ab9aa518a871c9",
                "8a4a5d709ef071c5",
                "4359c6ab0e03460b",
                "7ea3b10367723047",
                "a776c2e90a803e01"
            ],
            []
        ]
    },
    {
        "id": "f33c9beb98985a7d",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4100,
        "y": 380,
        "wires": []
    },
    {
        "id": "084c7aee1aae4be3",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4580,
        "y": 340,
        "wires": [
            [
                "05f0496bbe241c35",
                "a09a53ed454c9e4a"
            ]
        ]
    },
    {
        "id": "32bc142aa01f342e",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "read blue2-tle-storage",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3650,
        "y": 200,
        "wires": [
            [
                "5931a996ccb7d46d",
                "d8840b061a5d7163"
            ]
        ]
    },
    {
        "id": "6ce9829a7b06b7a6",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Old tle storage",
        "filename": "blue2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5931a996ccb7d46d",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3860,
        "y": 240,
        "wires": [
            [
                "6ce9829a7b06b7a6",
                "f006b9b1b073fc35"
            ]
        ]
    },
    {
        "id": "3937400c5325f846",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "11/05/23",
        "info": "",
        "x": 4190,
        "y": 300,
        "wires": []
    },
    {
        "id": "1d61155a62c41a2d",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "TLE visualizer B2",
        "links": [
            "93d678661c5d817a"
        ],
        "x": 3415,
        "y": 180,
        "wires": [
            [
                "32bc142aa01f342e",
                "2b7bd5fd8fc170c2"
            ]
        ]
    },
    {
        "id": "4cc7535d9d057763",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "TLE visualizer B2 out",
        "mode": "link",
        "links": [
            "491df3b4c3bf3409"
        ],
        "x": 4595,
        "y": 200,
        "wires": []
    },
    {
        "id": "f006b9b1b073fc35",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4040,
        "y": 240,
        "wires": [
            [
                "462326252050f099"
            ]
        ]
    },
    {
        "id": "462326252050f099",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4200,
        "y": 200,
        "wires": [
            [
                "290f466af117a2ed",
                "78afca9232467d1f"
            ]
        ]
    },
    {
        "id": "df7379664f089607",
        "type": "switch",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4500,
        "y": 200,
        "wires": [
            [
                "4cc7535d9d057763"
            ]
        ]
    },
    {
        "id": "290f466af117a2ed",
        "type": "split",
        "z": "0b6378c01090c728",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4360,
        "y": 200,
        "wires": [
            [
                "df7379664f089607"
            ]
        ]
    },
    {
        "id": "e84bfeacdff3c97d",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "read blue2-tle-storage",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3690,
        "y": 340,
        "wires": [
            [
                "18618a7a26726b4d"
            ]
        ]
    },
    {
        "id": "18618a7a26726b4d",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3880,
        "y": 340,
        "wires": [
            [
                "22e975e20b3ffc08",
                "02985c7ea691397b"
            ]
        ]
    },
    {
        "id": "22e975e20b3ffc08",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Old tle storage",
        "filename": "blue2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "78afca9232467d1f",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "echange",
        "func": "\nif(msg.payload[0].version == \"New TLE\" ){\n    var tmp =msg.payload[0];\n    msg.payload[0]= msg.payload[1];\n    msg.payload[1]=tmp;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4360,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a0a1d714d3dbc3d9",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 840,
        "wires": [
            [
                "79d0890a503804c5"
            ]
        ]
    },
    {
        "id": "efac092d60fc0f43",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Data2.txt format",
        "func": "// Calculations from fixed paths remain unchanged\nvar N; // Mean motion in rev/day\nvar n; // Angular speed [rad/s]\nvar a; // semi-major axis\nvar acube; // a³\nvar e; // eccentricity\n\nvar mu = 398600.4418; // Earth's standard gravitational parameter\nvar J = 86400;      // Seconds in a day\n\n// Get the mean motion from path_2 (position [7] is assumed)\nN = msg.paths.path_2[7];\nn = 2 * Math.PI * N / J;  \nacube = mu / (n * n);\na = Math.cbrt(acube);\ne = Number(msg.paths.path_2[4]) / 10000000;\ne = Number(e.toFixed(7));\n\nvar durastop = msg.paths.path_3[0] + 1.0;\nvar thrust    = \"0\";\nvar dv        = \"0\";\nvar isp       = \"0\";\nvar drymass   = \"0\";\nvar ergolmass = \"0\";\nvar surface   = \"0\";\n\nvar myDate = new Date(msg.paths.path_3[1]);\nvar DATE = myDate.toISOString();\n\n// Vérification des valeurs provenant de path_1 (ou d'autres sources)\nif (!isNaN(msg.isp)) { \n    isp = msg.isp; \n}\nif (!isNaN(msg.paths.path_13[1])) { \n    ergolmass = msg.paths.path_13[1]; \n}\nif (!isNaN(msg.paths.path_13[0])) { \n    drymass = msg.paths.path_13[0]; \n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––\n  GENERIC EXTRA PARAMETER EXTRACTION\n  On suppose que les paramètres supplémentaires (par exemple, \"Maneuver_Type\", \"SMA_2\", \n  ou \"input_5\", \"input_6\", etc.) sont transmis dans un objet contenu dans msg.paths.path_8.\n–––––––––––––––––––––––––––––––––––––––––––––––*/\nvar extraHeaders = [];\nvar extraValues = [];\n\nif (msg.paths && msg.paths.path_8 && typeof msg.paths.path_8 === 'object') {\n  // On récupère les noms et valeurs des propriétés de l'objet extra\n  extraHeaders = Object.keys(msg.paths.path_8);\n  extraValues  = Object.values(msg.paths.path_8);\n} else {\n  node.warn(\"msg.paths.path_8 est indéfini ou non valide, aucun paramètre supplémentaire n'est ajouté.\");\n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––\n  ASSEMBLAGE FINAL DU PAYLOAD\n  La première entrée est une chaîne d'en-tête.\n  On garde les colonnes fixes puis on ajoute les colonnes issues du chemin précédent.\n–––––––––––––––––––––––––––––––––––––––––––––––*/\n// Les colonnes fixes\nvar fixedHeader = \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass\";\n// On ajoute dynamiquement les noms des colonnes supplémentaires, si elles existent\nvar header = fixedHeader + (extraHeaders.length ? \", \" + extraHeaders.join(\", \") : \"\");\n\n// On construit le tableau final en respectant le même format que précédemment\nmsg.payload = [\n  header,\n  DATE,\n  a,\n  e,\n  msg.paths.path_2[2],\n  msg.paths.path_2[3],\n  msg.paths.path_2[5],\n  msg.paths.path_2[6],\n  drymass,\n  surface,\n  thrust,\n  isp,\n  ergolmass\n].concat(extraValues);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 760,
        "wires": [
            [
                "cc64e235a8a42a0c"
            ]
        ]
    },
    {
        "id": "69679720c63c7e8f",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 500,
        "wires": [
            [
                "2c68744b670e3680"
            ]
        ]
    },
    {
        "id": "2c68744b670e3680",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 500,
        "wires": [
            [
                "618cdfd5edc68ee2"
            ]
        ]
    },
    {
        "id": "fb6fdd44529ed699",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 700,
        "wires": [
            [
                "403e440c990d8cd9"
            ]
        ]
    },
    {
        "id": "403e440c990d8cd9",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 740,
        "y": 700,
        "wires": [
            [
                "69679720c63c7e8f"
            ]
        ]
    },
    {
        "id": "dee2c8055438d038",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 160,
        "y": 340,
        "wires": []
    },
    {
        "id": "20d5a44c4220a980",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 100,
        "y": 380,
        "wires": []
    },
    {
        "id": "2b7bd5fd8fc170c2",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 160,
        "wires": [
            [
                "462326252050f099"
            ]
        ]
    },
    {
        "id": "02985c7ea691397b",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4100,
        "y": 320,
        "wires": [
            [
                "084c7aee1aae4be3",
                "c86649ed510e51b5"
            ]
        ]
    },
    {
        "id": "d4f62f0d394a181f",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3210,
        "y": 720,
        "wires": []
    },
    {
        "id": "d8840b061a5d7163",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3880,
        "y": 200,
        "wires": []
    },
    {
        "id": "4501f71efc643ce8",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 560,
        "wires": []
    },
    {
        "id": "0f117d94f8b52130",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 500,
        "wires": []
    },
    {
        "id": "9d341f568b85e938",
        "type": "comment",
        "z": "0b6378c01090c728",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 90,
        "y": 20,
        "wires": []
    },
    {
        "id": "58ab9aa518a871c9",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4080,
        "y": 700,
        "wires": [
            [
                "cd8264a1001f3910"
            ]
        ]
    },
    {
        "id": "9ecd112a0864c5b8",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 720,
        "wires": [
            [
                "4359c6ab0e03460b"
            ]
        ]
    },
    {
        "id": "4359c6ab0e03460b",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 4475,
        "y": 640,
        "wires": []
    },
    {
        "id": "cd759db6e2613739",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "var max=6;\nvar random = Math.floor(Math.random() * max);\n\nif (msg.payload.includes(\"hyperbolic orbits cannot be handled\")){\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\nelse if (msg.payload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (msg.payload.includes(\"Eccentricity\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver !\";\n}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3430,
        "y": 660,
        "wires": [
            [
                "cb0dd5c3dde6183b"
            ]
        ]
    },
    {
        "id": "cb0dd5c3dde6183b",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3575,
        "y": 660,
        "wires": []
    },
    {
        "id": "8710a899457da368",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3670,
        "y": 120,
        "wires": [
            [
                "32bc142aa01f342e"
            ]
        ]
    },
    {
        "id": "7c54733069edd9c3",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3660,
        "y": 80,
        "wires": []
    },
    {
        "id": "ef8c8201ea562186",
        "type": "catch",
        "z": "0b6378c01090c728",
        "name": "",
        "scope": [
            "32bc142aa01f342e"
        ],
        "uncaught": false,
        "x": 3440,
        "y": 100,
        "wires": [
            [
                "8710a899457da368",
                "7c54733069edd9c3"
            ]
        ]
    },
    {
        "id": "2723ca01f0060947",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 700,
        "wires": []
    },
    {
        "id": "cfd6f544d00d3e1f",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3410,
        "y": 400,
        "wires": []
    },
    {
        "id": "9a7f8e5ed048bb42",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST ISP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 960,
        "wires": []
    },
    {
        "id": "61ffb19b424233bc",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 760,
        "wires": []
    },
    {
        "id": "e4aae852813a309a",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 720,
        "wires": []
    },
    {
        "id": "b39b9a89efe9768c",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 280,
        "wires": []
    },
    {
        "id": "089c1fb3e4d408f7",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_8",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 320,
        "wires": [
            [
                "444b5bc2569af448",
                "07ee1f967fae3394",
                "f83c0987a7cf7426",
                "df1823ed770ab525"
            ]
        ]
    },
    {
        "id": "96742321e46a7a85",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "PATH 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 840,
        "wires": []
    },
    {
        "id": "619abc8d2a38027e",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 760,
        "wires": []
    },
    {
        "id": "e9825cf6cf10cda5",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "PATH 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 620,
        "wires": []
    },
    {
        "id": "4c5c8d67b5c205c6",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 460,
        "wires": []
    },
    {
        "id": "a65281e033f3b3c1",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 540,
        "wires": []
    },
    {
        "id": "228ee28ac51d40e0",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2950,
        "y": 760,
        "wires": []
    },
    {
        "id": "fca0721d040edf2a",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 940,
        "wires": []
    },
    {
        "id": "05523a88dd6982c1",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 800,
        "wires": []
    },
    {
        "id": "e07edf54cb04ebf2",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "query to read PostManeuverDate2.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 720,
        "wires": [
            [
                "2b489db7ced8390b"
            ]
        ]
    },
    {
        "id": "2b489db7ced8390b",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/PostManeuverDate2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3760,
        "y": 720,
        "wires": [
            [
                "6f121a3ba51fc794"
            ]
        ]
    },
    {
        "id": "6f121a3ba51fc794",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3820,
        "y": 780,
        "wires": [
            [
                "0929eced28fa49f9"
            ]
        ]
    },
    {
        "id": "0929eced28fa49f9",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 820,
        "wires": [
            [
                "eddc05de70c3515c",
                "cc9edb470e97f06a"
            ]
        ]
    },
    {
        "id": "eddc05de70c3515c",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 860,
        "wires": []
    },
    {
        "id": "bb09e79e1531c69e",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3480,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "a5dee241c064bf3a",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1740,
        "y": 560,
        "wires": [
            [
                "ec2697faa79e76e4"
            ]
        ]
    },
    {
        "id": "ec2697faa79e76e4",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1900,
        "y": 560,
        "wires": [
            [
                "f166f66a9f937bf0"
            ]
        ]
    },
    {
        "id": "f166f66a9f937bf0",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2080,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "19e91ea79007ad49",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 560,
        "wires": [
            [
                "a5dee241c064bf3a"
            ]
        ]
    },
    {
        "id": "84b6a1ce3401ccf8",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_7\",\"path_8\",\"path_9\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1090,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "96505256665e4bf9",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_9",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_9",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 360,
        "wires": [
            [
                "09407ae7f0d26791"
            ]
        ]
    },
    {
        "id": "4fbc62c096db4a36",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "ManeuverParameters2.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar pathArray = (msg.paths && msg.paths.path_2) ? Object.values(msg.paths.path_2) : [0, 0, 0, 0,0,0,0,0];\nvar pathArray2 = (msg.paths && msg.paths.path_10) ? Object.values(msg.paths.path_10) : [0];\n// Try reading path_17 as a single numeric value\nvar path17Val = 0;\nif (msg.paths && msg.paths.path_17 !== undefined) {\n    // Convert whatever is at path_17 into a Number (or default to 0 if invalid)\n    path17Val = Number(msg.paths.path_17) || 0;\n}\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray[1] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray[2] || 0; // Troisième élément ou 0 si non défini\nvar isp = pathArray[3] || 0; // Quatrième élément ou 0 si non défini\nvar maneuvertype = pathArray2[0] || 0; // Premier élément ou 0 si non défini\nvar SMA_2 = pathArray2[1] || 0; // Deuxième élément ou 0 si non défini\n\n// Vérifier si msg.paths.path_2 existe avant d'accéder à ses valeurs\nvar a; // semi-major axis\nvar acube; // acube = a³ \nvar N = (msg.paths && msg.paths.path_2 && msg.paths.path_2[7]) ? Number(msg.paths.path_2[7]) : 0;\nvar mu = 398600.4418;\nvar J = 86400;\nvar n;\n\nn = 2 * Math.PI * N / J;  // n = 2pi/T where T is the period\nacube = mu / (n * n); // acube = a³ \na = path17Val; // Cubic root for semi-major axis // Format de l'excentricité\n\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"ManeuverType, SMA_1,SMA_2\",\n    maneuvertype, a,SMA_2\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 120,
        "wires": [
            [
                "93407d2811ad0ed5"
            ]
        ]
    },
    {
        "id": "93407d2811ad0ed5",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/ManeuverParameters2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 180,
        "wires": [
            [
                "1cf4444b06feb7f2",
                "d88cb96ad3dc13c8"
            ]
        ]
    },
    {
        "id": "1cf4444b06feb7f2",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1360,
        "y": 180,
        "wires": [
            [
                "195fa5efd2fd28a8",
                "5aac959c9cf93fe1"
            ]
        ]
    },
    {
        "id": "195fa5efd2fd28a8",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1540,
        "y": 200,
        "wires": [
            [
                "af6fecb1a8061781"
            ]
        ]
    },
    {
        "id": "af6fecb1a8061781",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1720,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "5aac959c9cf93fe1",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 140,
        "wires": []
    },
    {
        "id": "d88cb96ad3dc13c8",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 100,
        "wires": []
    },
    {
        "id": "689d8a35b8415119",
        "type": "ui_template",
        "z": "0b6378c01090c728",
        "group": "ef71537c5ac2b5d9",
        "name": "BLUE2 Vehicule template",
        "order": 7,
        "width": 10,
        "height": "1",
        "format": "<style>\n    .form-container2 {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        overflow-x: hidden;\n        margin-top: 1px;\n    }\n\n    .parameters-row {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 5px;\n        margin-top: 5px;\n    }\n\n    .column {\n        flex: 1;\n        padding: 0 10px;\n        max-width: 300px;\n        box-sizing: border-box;\n    }\n\n    .md-input-container {\n        width: 100%;\n        margin: 20px 20px;\n        color: #ffffff !important;\n        \n    }\n\n    .md-input-container label {\n        color: #ffffff !important;\n    }\n\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 10px;\n    }\n\n    .third-row {\n        margin-bottom: 10px;\n    }\n\n    .result-display {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 18px;\n        color: white;\n        margin: 15px 0;\n    }\n\n    .result-value {\n        font-weight: bold;\n        color: #ffcc00;\n    }\n</style>\n\n<!-- HTML form structure -->\n<form id=\"myForm2\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n    <div class=\"form-container2\">\n        <!-- Centered Surface field with a top margin -->\n        <div class=\"parameters-row\">\n            <div class=\"column\">\n                <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n                    <label for=\"form2_isp\">ISP (s)</label>\n                    <input type=\"text\" id=\"form2_isp\" name=\"isp\" ng-model=\"msg.payload.isp\" ng-change=\"send({payload: msg.payload})\">\n                </md-input-container>\n            </div>\n        </div>\n\n    </div>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "9a7f8e5ed048bb42",
                "96505256665e4bf9",
                "cd2a1e270fb43098",
                "39353fb8a1dc4a6f",
                "68346d0f46d3b96c",
                "a9eff125b2e73552"
            ]
        ]
    },
    {
        "id": "68346d0f46d3b96c",
        "type": "ui_template",
        "z": "0b6378c01090c728",
        "group": "ef71537c5ac2b5d9",
        "name": "BLUE2 Vehicule Submit",
        "order": 9,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 20px;\n    }\n</style>\n\n<div class=\"button-container\">\n    <!-- Utilisation de ng-click pour envoyer msg.payload au clic -->\n    <button type=\"submit\" id=\"submitButtonb1\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">\n    Submit\n  </button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 680,
        "wires": [
            [
                "1e16bc368751988f"
            ]
        ]
    },
    {
        "id": "23589e9822251517",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_10\",\"path_2\",\"path_17\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 890,
        "y": 180,
        "wires": [
            [
                "4fbc62c096db4a36",
                "2ba23de2bffb5ba4"
            ],
            []
        ]
    },
    {
        "id": "09407ae7f0d26791",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "3a8f0e8618c7f3db",
        "type": "exec",
        "z": "0b6378c01090c728",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue2 -DcommandParameter=\"calculateMass\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 2080,
        "y": 100,
        "wires": [
            [
                "4521385c641098f0",
                "acc56415e85119ca"
            ],
            [
                "5d0f58aad332dab9"
            ],
            []
        ]
    },
    {
        "id": "4521385c641098f0",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ConsommationErgols2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2360,
        "y": 100,
        "wires": [
            [
                "cef8086dc99ab261"
            ]
        ]
    },
    {
        "id": "7f6cc2c224f6e97a",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 100,
        "wires": [
            [
                "6af6ce2205e08847",
                "415d7ab8c1f5d55b"
            ]
        ]
    },
    {
        "id": "6af6ce2205e08847",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.consommationErgols = parseFloat(msg.payload[n-1])\n\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 100,
        "wires": [
            [
                "ab72a370f6deceb2",
                "cf0f69adcc6b101d"
            ]
        ]
    },
    {
        "id": "ab72a370f6deceb2",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST CONSO ERGOLS BLUE2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 100,
        "wires": []
    },
    {
        "id": "cef8086dc99ab261",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2540,
        "y": 100,
        "wires": [
            [
                "7f6cc2c224f6e97a"
            ]
        ]
    },
    {
        "id": "cf0f69adcc6b101d",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "ConsommationErgols",
        "mode": "link",
        "links": [
            "67aa5efb2967785b"
        ],
        "x": 3165,
        "y": 140,
        "wires": []
    },
    {
        "id": "54433f6fb3a1a390",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ManeuverParameters.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1800,
        "y": 160,
        "wires": [
            [
                "7b7ea72d7068997e"
            ]
        ]
    },
    {
        "id": "7b7ea72d7068997e",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1980,
        "y": 160,
        "wires": [
            [
                "818f63affb781eb9"
            ]
        ]
    },
    {
        "id": "e70b34c354929d52",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Ergols2.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar pathArray = (msg.paths && msg.paths.path_11) ? Object.values(msg.paths.path_11) : [0, 0];\nvar pathArray2 = (msg.paths && msg.paths.path_12) ? msg.paths.path_12 : [0];\nvar pathArray3 = (msg.paths && msg.paths.path_13) ? msg.paths.path_13 : [0,0,0];\n\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray3[0] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray3[1] || 0; // Troisième élément ou 0 si non défini\nvar isp = pathArray[0] || 0; // Quatrième élément ou 0 si non défini\nvar maneuvertype = pathArray2[1] || 0; // Premier élément ou 0 si non défini\nvar SMA_1 = pathArray2[2] || 0; // Deuxième élément ou 0 si non défini\nvar SMA_2 = pathArray2[3]\n// Vérifier si msg.paths.path_2 existe avant d'accéder à ses valeurs\nvar a = (msg.paths && msg.paths.path_12 && msg.paths.path_12[2]) ? Number(msg.paths.path_12[2]) : 0;\n\n\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"DryMass, ErgolMass, ISP, ManeuverType, SMA_1, SMA_2\",\n    drymass, ergolmass, isp, maneuvertype, a, SMA_2\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 180,
        "wires": [
            [
                "7f449e2c639ca6cc",
                "5bc3fb588ccf8254"
            ]
        ]
    },
    {
        "id": "7f449e2c639ca6cc",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Ergols2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 240,
        "wires": [
            [
                "19854124f10c95ab",
                "4fb9921be87cb7ff"
            ]
        ]
    },
    {
        "id": "19854124f10c95ab",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2900,
        "y": 280,
        "wires": [
            [
                "df47d6d5e2334aec",
                "e45c65dceccb1c68"
            ]
        ]
    },
    {
        "id": "df47d6d5e2334aec",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3080,
        "y": 320,
        "wires": [
            [
                "81165d946f347102"
            ]
        ]
    },
    {
        "id": "e45c65dceccb1c68",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3060,
        "y": 280,
        "wires": []
    },
    {
        "id": "4fb9921be87cb7ff",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2900,
        "y": 240,
        "wires": []
    },
    {
        "id": "81165d946f347102",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3260,
        "y": 320,
        "wires": [
            [
                "f19e33cdc67ea4c3"
            ]
        ]
    },
    {
        "id": "cd2a1e270fb43098",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 920,
        "wires": [
            [
                "75f9487019a7f728",
                "b5383bce053b30c2"
            ]
        ]
    },
    {
        "id": "75f9487019a7f728",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_11\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 710,
        "y": 920,
        "wires": [
            [
                "54433f6fb3a1a390",
                "3d328a6e5d804b82"
            ],
            []
        ]
    },
    {
        "id": "ff9e0241c607b832",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2500,
        "y": 140,
        "wires": []
    },
    {
        "id": "818f63affb781eb9",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 160,
        "wires": [
            [
                "3d328a6e5d804b82",
                "3fdf2acff734ea20"
            ]
        ]
    },
    {
        "id": "3d328a6e5d804b82",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[ \"path_11\", \"path_12\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2330,
        "y": 220,
        "wires": [
            [
                "ff9e0241c607b832",
                "53f2b20892ba2e18",
                "e70b34c354929d52"
            ],
            []
        ]
    },
    {
        "id": "b5383bce053b30c2",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "PATH 11 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 980,
        "wires": []
    },
    {
        "id": "3fdf2acff734ea20",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 220,
        "wires": []
    },
    {
        "id": "53f2b20892ba2e18",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST ERGOLS TXT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 280,
        "wires": []
    },
    {
        "id": "42ad41d61c35b45e",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Sorties Ergols",
        "mode": "link",
        "links": [
            "c2b746fa018c92ad"
        ],
        "x": 3545,
        "y": 300,
        "wires": []
    },
    {
        "id": "c2b746fa018c92ad",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "Entrée Erglos",
        "links": [
            "42ad41d61c35b45e"
        ],
        "x": 1855,
        "y": 100,
        "wires": [
            [
                "3a8f0e8618c7f3db"
            ]
        ]
    },
    {
        "id": "415d7ab8c1f5d55b",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2940,
        "y": 160,
        "wires": []
    },
    {
        "id": "f19e33cdc67ea4c3",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3420,
        "y": 300,
        "wires": [
            [
                "42ad41d61c35b45e"
            ]
        ]
    },
    {
        "id": "11c9f5fc3dcbb830",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3790,
        "y": 960,
        "wires": []
    },
    {
        "id": "a081b9927a873d1a",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 900,
        "wires": [
            [
                "3d328a6e5d804b82",
                "d3a39c1034b51b49",
                "df1823ed770ab525",
                "444b5bc2569af448"
            ]
        ]
    },
    {
        "id": "acdc6c91a7779715",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "ergols",
        "func": "if (msg.payload && msg.payload[0]) {\n    // Assurez-vous que les propriétés existent et ne sont pas null avant de les insérer dans le tableau\n    const dry_mass = msg.payload[0].dry_mass !== undefined ? msg.payload[0].dry_mass : 0;\n    const ergol_mass = msg.payload[0].ergol_mass !== undefined ? msg.payload[0].ergol_mass : 0;\n    const ergol_consumption = msg.payload[0].ergol_consumption !== null && msg.payload[0].ergol_consumption !== undefined ? msg.payload[0].ergol_consumption : 0.0;\n\n    // Créer un tableau avec les valeurs\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"Le payload ne contient pas les données attendues.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 860,
        "wires": [
            [
                "bd941d2648a6f992"
            ]
        ]
    },
    {
        "id": "bd941d2648a6f992",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 800,
        "y": 860,
        "wires": [
            [
                "a1eafdb7ce689747"
            ]
        ]
    },
    {
        "id": "a1eafdb7ce689747",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "object to array",
        "func": "// Découper le CSV en lignes\nlet csvData = msg.payload.split('\\n');\n\n// Vérifier si la deuxième ligne existe\nif (csvData.length > 1) {\n    // Récupérer la deuxième ligne (index 1)\n    let secondLine = csvData[1].trim();\n\n    // Découper la deuxième ligne par espaces ou tabulations\n    let values = secondLine.split(/\\s+/); // Utilisation de \\s+ pour capturer les espaces multiples\n\n    // Convertir les valeurs en nombres (si applicable)\n    let dry_mass = parseFloat(values[0]) || 0;\n    let ergol_mass = parseFloat(values[1]) || 0;\n    let ergol_consumption = parseFloat(values[2]) || 0;\n\n    // Placer les valeurs dans un tableau\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"La deuxième ligne n'existe pas.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 900,
        "wires": [
            [
                "a081b9927a873d1a"
            ]
        ]
    },
    {
        "id": "e4ccc9cbddb8cff0",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST B1 TLE LATEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d3a39c1034b51b49",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "PATH 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 900,
        "wires": []
    },
    {
        "id": "05f0496bbe241c35",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Out Maneuvre prédéfinie b2",
        "mode": "link",
        "links": [
            "bf4f9f57961ab891"
        ],
        "x": 4885,
        "y": 180,
        "wires": []
    },
    {
        "id": "f583e7b1d3f9c777",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "Ergol Mass Update",
        "links": [
            "6753438f0a5b99cb",
            "07d8564e89b73a2a",
            "b1beae978b71e742",
            "6582a47df26b709c",
            "ed11b52c0d40c469"
        ],
        "x": 185,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "5bc3fb588ccf8254",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "ergols",
        "mode": "link",
        "links": [
            "53f9af2d20dd4d88",
            "ce3db67b0fbbef47"
        ],
        "x": 2815,
        "y": 180,
        "wires": []
    },
    {
        "id": "53f9af2d20dd4d88",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "5bc3fb588ccf8254"
        ],
        "x": 45,
        "y": 780,
        "wires": [
            [
                "a00b64923e667759"
            ]
        ]
    },
    {
        "id": "a00b64923e667759",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "7ba924890b26b618",
        "type": "mqtt in",
        "z": "0b6378c01090c728",
        "name": "",
        "topic": "resultat/fichier2",
        "qos": "2",
        "datatype": "auto",
        "broker": "e688816fa768592b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2330,
        "y": 420,
        "wires": [
            [
                "74a577515fc4d9cb",
                "ae535a9e081ea8e6",
                "32d2e1a41c47900b",
                "65373dafbc2207b7",
                "e9c3473f300c9fb1"
            ]
        ]
    },
    {
        "id": "74a577515fc4d9cb",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "MQTT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 460,
        "wires": []
    },
    {
        "id": "7bcbf3a017b5fffb",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "TIMESTAMP",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 740,
        "wires": []
    },
    {
        "id": "65373dafbc2207b7",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2860,
        "y": 420,
        "wires": [
            [
                "e07edf54cb04ebf2"
            ]
        ]
    },
    {
        "id": "33f4e6cf34f2f285",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "query to read Result2.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4440,
        "y": 860,
        "wires": [
            [
                "2ab7338ef2fddc32"
            ]
        ]
    },
    {
        "id": "2ab7338ef2fddc32",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4680,
        "y": 860,
        "wires": [
            [
                "a2cb2350c266aabd"
            ]
        ]
    },
    {
        "id": "a2cb2350c266aabd",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4880,
        "y": 860,
        "wires": [
            [
                "00630658194768ec"
            ]
        ]
    },
    {
        "id": "00630658194768ec",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4400,
        "y": 920,
        "wires": [
            [
                "ceb98cc583fca9b2"
            ]
        ]
    },
    {
        "id": "ceb98cc583fca9b2",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4610,
        "y": 920,
        "wires": [
            [
                "e76d5d98ad58be1e"
            ]
        ]
    },
    {
        "id": "e76d5d98ad58be1e",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 980,
        "wires": [
            [
                "3ea704784981f214",
                "3b6d129a822fc1f1",
                "94d7efd23c708460"
            ]
        ]
    },
    {
        "id": "3ea704784981f214",
        "type": "switch",
        "z": "0b6378c01090c728",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4770,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3b6d129a822fc1f1",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 1060,
        "wires": []
    },
    {
        "id": "f38dbfa64db3a346",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "cb9efc3cb62637db",
            "b86ad223f85a4338"
        ],
        "x": 4205,
        "y": 820,
        "wires": [
            [
                "33f4e6cf34f2f285",
                "1818f3a3ea2c2a2b",
                "187e8329af2f92a3",
                "d467e43a36aac888"
            ]
        ]
    },
    {
        "id": "1818f3a3ea2c2a2b",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4400,
        "y": 820,
        "wires": []
    },
    {
        "id": "bf32f7458465ec43",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4650,
        "y": 600,
        "wires": [
            [
                "2f0e11245e120707",
                "29cf178127aae22e"
            ]
        ]
    },
    {
        "id": "2f0e11245e120707",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 680,
        "wires": []
    },
    {
        "id": "2e20556b9ecf7342",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4660,
        "y": 480,
        "wires": [
            [
                "0ec81feae91b0c8e"
            ]
        ]
    },
    {
        "id": "04f9a208b3e8d77c",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "AP Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4770,
        "y": 520,
        "wires": []
    },
    {
        "id": "11db3983d497c0d6",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4240,
        "y": 360,
        "wires": [
            [
                "084c7aee1aae4be3"
            ]
        ]
    },
    {
        "id": "29cf178127aae22e",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": " Load",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4580,
        "y": 400,
        "wires": [
            [
                "17e0ebf6d63aa56f",
                "c3bf2fcfcf68e42d"
            ]
        ]
    },
    {
        "id": "17e0ebf6d63aa56f",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4880,
        "y": 400,
        "wires": [
            [
                "d96bf0bd9a626570",
                "d484c32ee86223f1"
            ]
        ]
    },
    {
        "id": "c66431454729dc34",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4030,
        "y": 1200,
        "wires": [
            [
                "9c1a58b1df2a9304",
                "ede6d924b2166196"
            ]
        ]
    },
    {
        "id": "9c1a58b1df2a9304",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4320,
        "y": 1160,
        "wires": [
            [
                "ab4809e214cefe6a",
                "549da0be5f72da76"
            ]
        ]
    },
    {
        "id": "549da0be5f72da76",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4510,
        "y": 1160,
        "wires": [
            [
                "1e9decc2bc824acd",
                "7089b023e330660c"
            ],
            []
        ]
    },
    {
        "id": "1e9decc2bc824acd",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Data2.txt format",
        "func": "// Initialize variables\nvar tab = [];\nvar gs = {};\n\n// Split line #2 of the TLE robustly:\n// - trim() removes any leading/trailing spaces\n// - split(/\\s+/) splits on ANY run of whitespace\nvar tle = msg.payload[2].trim().split(/\\s+/);\n\nvar N;      // Mean motion in rev/day (not used below, just declared)\nvar n;      // ...\nvar a;      // Semi-major axis\nvar acube;  // a^3\nvar e;      // eccentricity\n\n// Earth's standard gravitational parameter, etc.\nvar mu = 398600.4418;\nvar J = 86400; // A day in seconds\n\n// From the TLE array\ngs.incli = String(tle[2]);\ngs.raan  = String(tle[3]);\ngs.ecc   = String(tle[4]);\ngs.aop   = String(tle[5]);\ngs.meana = String(tle[6]);\ngs.mean  = String(tle[7]);\n\n// From the rest of payload\ngs.dry_mass          = parseFloat(msg.payload[3]);\ngs.ergol_consumption = parseFloat(msg.payload[5]);\ngs.ergol_mass        = parseFloat(msg.payload[4]);\n\n// Attach everything back to msg and return\nmsg.payload = gs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4790,
        "y": 1160,
        "wires": [
            [
                "ccbf3cc0e7e9ce15",
                "bf32f7458465ec43"
            ]
        ]
    },
    {
        "id": "ab4809e214cefe6a",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "LAST TLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4520,
        "y": 1200,
        "wires": []
    },
    {
        "id": "baa67640d37e83a6",
        "type": "mongodb in",
        "z": "0b6378c01090c728",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 3810,
        "y": 1200,
        "wires": [
            [
                "0ab5bbe8c1837182",
                "c66431454729dc34"
            ]
        ]
    },
    {
        "id": "0ab5bbe8c1837182",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 1260,
        "wires": []
    },
    {
        "id": "187e8329af2f92a3",
        "type": "trigger",
        "z": "0b6378c01090c728",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3600,
        "y": 1200,
        "wires": [
            [
                "baa67640d37e83a6"
            ]
        ]
    },
    {
        "id": "7089b023e330660c",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4780,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ede6d924b2166196",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4320,
        "y": 1220,
        "wires": []
    },
    {
        "id": "ccbf3cc0e7e9ce15",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4800,
        "y": 1220,
        "wires": []
    },
    {
        "id": "94d7efd23c708460",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 1020,
        "wires": []
    },
    {
        "id": "444b5bc2569af448",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_2\",\"path_8\",\"path_13\",\"path_18\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1290,
        "y": 1020,
        "wires": [
            [
                "4b2401921fb55e46",
                "d75e2c6f35b11b41"
            ],
            []
        ]
    },
    {
        "id": "4b2401921fb55e46",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "CommandData2.txt format",
        "func": "var N;       // Mean motion in rev/day\nvar n;       // Angular speed in rad/s\nvar a;       // semi-major axis\nvar acube;   // a³\nvar e;       // eccentricity\n\nvar mu = 398600.4418; // Earth's standard gravitational parameter\nvar J  = 86400;       // Seconds in a day\n\n// Calculations from path_2\nN     = msg.paths.path_2[7];              // Mean motion [rev/day]\nn     = 2 * Math.PI * N / J;              // Angular speed: n = 2π/T\nacube = mu / (n * n);                     // a³ = μ/n²\ne     = Number(msg.paths.path_2[4]) / 10000000; // Normalize eccentricity from TLE format\ne     = e.toFixed(7);                     // Format eccentricity\n\n// Get the value for 'a' from path_18 (if provided)\nvar path18Val = 0;\nif (msg.paths && msg.paths.path_18 !== undefined) {\n    // Convert the value to a Number (default to 0 if invalid)\n    path18Val = Number(msg.paths.path_18) || 0;\n}\na = path18Val;\n\nvar thrust    = \"0\";\nvar dv        = \"0\";\nvar isp       = \"0\";\nvar drymass   = \"0\";\nvar ergolmass = \"0\";\nvar surface   = \"0\";\nvar DATE      = \"\"; // You can set DATE accordingly if needed\n\n// Set ergolmass and drymass from path_13 if the values are valid numbers\nif (!isNaN(msg.paths.path_13[1])) { ergolmass = msg.paths.path_13[1]; }\nif (!isNaN(msg.paths.path_13[0])) { drymass   = msg.paths.path_13[0]; }\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––––––––––\n  EXTRA PARAMETERS: Dynamic extraction from msg.paths.path_8\n  Instead of hardcoding extra fields (e.g., Maneuver_Type, SMA_2, ecc_2),\n  we build the header and the row dynamically from the object keys/values.\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––*/\nvar extraHeaders = [];\nvar extraValues  = [];\nif (msg.paths && msg.paths.path_8 && typeof msg.paths.path_8 === 'object') {\n    extraHeaders = Object.keys(msg.paths.path_8);\n    extraValues  = Object.values(msg.paths.path_8);\n} else {\n    node.warn(\"msg.paths.path_8 est indéfini ou non valide. Aucun paramètre supplémentaire n'est ajouté.\");\n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––––––––––\n  ASSEMBLE FINAL PAYLOAD\n  The first element is the header string (fixed columns plus extra columns),\n  and the second is the data row (in the same order).\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––*/\n// Fixed header columns\nvar fixedHeader = \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass\";\n\n// Combine fixed header with dynamically extracted extra header columns\nvar header = fixedHeader;\nif (extraHeaders.length > 0) {\n    header += \", \" + extraHeaders.join(\", \");\n}\n\n// Build the fixed portion of the data row\nvar dataRow = [\n    DATE,\n    a,\n    e,\n    msg.paths.path_2[2],\n    msg.paths.path_2[3],\n    msg.paths.path_2[5],\n    msg.paths.path_2[6],\n    drymass,\n    surface,\n    thrust,\n    isp,\n    ergolmass\n];\n\n// Append the extra values dynamically (they could be \"Maneuver_Type\", \"SMA_2\", \"ecc_2\" or others)\ndataRow = dataRow.concat(extraValues);\n\n// Set the final payload with the header as the first element and the data row as the second\nmsg.payload = [ header ].concat(dataRow);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1000,
        "wires": [
            [
                "a2b27061ec56b346"
            ]
        ]
    },
    {
        "id": "a2b27061ec56b346",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/CommandData2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 1000,
        "wires": [
            [
                "7e85efe778a634bb"
            ]
        ]
    },
    {
        "id": "7e85efe778a634bb",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1900,
        "y": 1000,
        "wires": [
            [
                "8e2c869180360d93"
            ]
        ]
    },
    {
        "id": "8e2c869180360d93",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2080,
        "y": 1000,
        "wires": [
            [
                "ebb4c28799b82639"
            ]
        ]
    },
    {
        "id": "ebb4c28799b82639",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2260,
        "y": 1000,
        "wires": [
            [
                "d881db2349576dc0",
                "c192d22de48e179e"
            ]
        ]
    },
    {
        "id": "d75e2c6f35b11b41",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "comman",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1080,
        "wires": []
    },
    {
        "id": "88480c7c91af9c83",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "COMMAND DATA",
        "mode": "link",
        "links": [
            "d859079b3352ffc7"
        ],
        "x": 2735,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d881db2349576dc0",
        "type": "exec",
        "z": "0b6378c01090c728",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=blue2 -DcommandParameter=\"determineOrbitInstant\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 2500,
        "y": 1000,
        "wires": [
            [
                "f423c9dedf8af8ba",
                "88480c7c91af9c83"
            ],
            [
                "9e06c78ad2c14564"
            ],
            [
                "cd70597e4a956961"
            ]
        ]
    },
    {
        "id": "cd70597e4a956961",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "APSIDE RETURN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 1120,
        "wires": []
    },
    {
        "id": "9e06c78ad2c14564",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "APSIDE ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 900,
        "wires": []
    },
    {
        "id": "f423c9dedf8af8ba",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "APSIDE OBJECT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 840,
        "wires": []
    },
    {
        "id": "c86649ed510e51b5",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TLE BLUE2 BEFORE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4370,
        "y": 300,
        "wires": []
    },
    {
        "id": "321d72817cb94307",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TLE BLUE2 AFTER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4360,
        "y": 420,
        "wires": []
    },
    {
        "id": "07ee1f967fae3394",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST PATH_8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "f742cf01e3dc8dd7",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "06d435da09c9a3bc",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/TimeIntermediateParameters2.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 260,
        "wires": [
            [
                "9492754cfe4fa056"
            ]
        ]
    },
    {
        "id": "9492754cfe4fa056",
        "type": "csv",
        "z": "0b6378c01090c728",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1400,
        "y": 260,
        "wires": [
            [
                "eb8d469a1dfc7278"
            ]
        ]
    },
    {
        "id": "eb8d469a1dfc7278",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1580,
        "y": 260,
        "wires": [
            [
                "6a0be9ae2ada41d9"
            ]
        ]
    },
    {
        "id": "6a0be9ae2ada41d9",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1800,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f83c0987a7cf7426",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "TimeIntermediateParameters2.txt format",
        "func": "// Retrieve the incoming payload\nvar payload = msg.payload;\n\nif (payload && typeof payload === 'object') {\n    // List of keys to ignore (system keys, etc.)\n    var ignoreKeys = [\"socketid\", \"_msgid\", \"paths\"];\n    \n    // Get all keys from the payload except those in ignoreKeys\n    var keys = Object.keys(payload).filter(function(key) {\n        return ignoreKeys.indexOf(key) === -1;\n    });\n    \n    // Create a header string: a comma separated list of the keys\n    var header = keys.join(\", \");\n    \n    // Get the corresponding values in the same order\n    var values = keys.map(function(key) {\n        return payload[key];\n    });\n    \n    // Set the output payload as an array with the header as the first element\n    // followed by the values\n    msg.payload = [header].concat(values);\n} else {\n    node.warn(\"The incoming payload is undefined or not an object.\");\n    msg.payload = [\"No valid data\"];\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 260,
        "wires": [
            [
                "06d435da09c9a3bc"
            ]
        ]
    },
    {
        "id": "2a9f357bf345a84b",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "edafeb893ef71613"
        ],
        "x": 2205,
        "y": 1060,
        "wires": [
            [
                "d881db2349576dc0"
            ]
        ]
    },
    {
        "id": "1e16bc368751988f",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup25',topic:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 620,
        "wires": [
            [
                "83e39209fd6c0f20",
                "4f9cf62fe9967302"
            ]
        ]
    },
    {
        "id": "ba26c777a2cefa36",
        "type": "switch",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui25",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 680,
        "wires": [
            [
                "39353fb8a1dc4a6f",
                "6c6352ed88a14675",
                "bd21c4af9bc2795f",
                "a918b628e2b10cc8"
            ]
        ]
    },
    {
        "id": "a918b628e2b10cc8",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST ISP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 620,
        "wires": []
    },
    {
        "id": "83e39209fd6c0f20",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST POPUP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 580,
        "wires": []
    },
    {
        "id": "6c6352ed88a14675",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Test switch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 640,
        "wires": []
    },
    {
        "id": "bd21c4af9bc2795f",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "object to array",
        "func": "msg.payload=msg.topic;\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 640,
        "wires": [
            [
                "3b3231bfb2f512c6",
                "a95bd3321541fd99",
                "834d6f820b4fe0a2"
            ]
        ]
    },
    {
        "id": "3b3231bfb2f512c6",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST CONVERT PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 600,
        "wires": []
    },
    {
        "id": "a09a53ed454c9e4a",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TLE Maneuver",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4730,
        "y": 280,
        "wires": []
    },
    {
        "id": "311e1869e5873167",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "acba57567933f2e7",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3420,
        "y": 500,
        "wires": []
    },
    {
        "id": "a35732083c94adb6",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "// This example sends a message to trigger a reload\nmsg.payload = { reload: true };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2530,
        "y": 460,
        "wires": [
            [
                "8dd850843a9e8202"
            ]
        ]
    },
    {
        "id": "b4ba78f5c85857d1",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 500,
        "wires": []
    },
    {
        "id": "a885f374e572ddc8",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2330,
        "y": 460,
        "wires": [
            [
                "a35732083c94adb6"
            ]
        ]
    },
    {
        "id": "58ad9fd6e9a839d6",
        "type": "websocket out",
        "z": "0b6378c01090c728",
        "name": "reload",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 2860,
        "y": 460,
        "wires": []
    },
    {
        "id": "bbd0d4558c9d04a4",
        "type": "websocket in",
        "z": "0b6378c01090c728",
        "name": "",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 2130,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "704a12435d81cfbc",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "RESULT MANOEUVER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 520,
        "wires": []
    },
    {
        "id": "544766180c7d0c6d",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3440,
        "y": 580,
        "wires": []
    },
    {
        "id": "834d6f820b4fe0a2",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 640,
        "wires": [
            [
                "5d167b3cb466cb7b"
            ]
        ]
    },
    {
        "id": "5d167b3cb466cb7b",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Submit Manoeuver",
        "mode": "link",
        "links": [
            "6cdde1f60a94fea3",
            "b2ba87f44ec78cde",
            "d888fb97adbc48c7",
            "7a5fdc442e73fe2f",
            "95e641b82b10c0b2"
        ],
        "x": 1315,
        "y": 640,
        "wires": []
    },
    {
        "id": "6cdde1f60a94fea3",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "5d167b3cb466cb7b",
            "695d46662047c0aa",
            "761476cb27b49aab",
            "19b3347f754f913f",
            "0660063f0dca6f38"
        ],
        "x": 2005,
        "y": 640,
        "wires": [
            [
                "821f9b92043200a2"
            ]
        ]
    },
    {
        "id": "69efe8ba83e09a0c",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[ \"path_10\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1",
        "exactOrder": "true",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2320,
        "y": 640,
        "wires": [
            [
                "569af04fc4b8a348",
                "e92a7918d5512e20",
                "7158c66265fe6028"
            ],
            []
        ]
    },
    {
        "id": "57b176ee1a0789a9",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2700,
        "y": 760,
        "wires": []
    },
    {
        "id": "944c30c051bd9372",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3690,
        "y": 1020,
        "wires": []
    },
    {
        "id": "449a4b215914abe4",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST B1 TLE STORAGE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4440,
        "y": 500,
        "wires": []
    },
    {
        "id": "8a4a5d709ef071c5",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TESTS ERGOLS MAGGLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4270,
        "y": 520,
        "wires": []
    },
    {
        "id": "9255890365fefbda",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4120,
        "y": 420,
        "wires": [
            [
                "11db3983d497c0d6",
                "321d72817cb94307"
            ]
        ]
    },
    {
        "id": "e0b64ff8fc10b89c",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4190,
        "y": 480,
        "wires": [
            [
                "9255890365fefbda"
            ]
        ]
    },
    {
        "id": "44e86bd0f4b034ab",
        "type": "ui_template",
        "z": "0b6378c01090c728",
        "group": "ef71537c5ac2b5d9",
        "name": "",
        "order": 10,
        "width": "10",
        "height": "3",
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    md-card[node-id=\"44e86bd0f4b034ab\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n\n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      pointer-events: none;\n      transition: all 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n      pointer-events: auto;\n    }\n\n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      will-change: transform;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n\n    /* Red Rectangle */\n    .red-rectangle {\n      width: 100px;\n      height: 50px;\n      background-color: red;\n      margin: 20px auto;\n    }\n\n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button - Original Colors */\n    #ouiBtn15 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn15:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button - Original Colors */\n    #nonBtn15 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn15:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <md-card node-id=\"44e86bd0f4b034ab\">\n  </md-card>\n\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal15\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n      <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Cette action déclenchera une manoeuvre prédéfinie à partir des paramètres entrés.<br><br>\n        Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn15\">Oui</button>\n        <button id=\"nonBtn15\">Non</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- JavaScript -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal15');\n      var originalMsg = null;\n      var isTransitioning = false;\n\n      function showModal(msg) {\n        if (isTransitioning) return;\n        isTransitioning = true;\n        originalMsg = msg;\n        \n        // Reset any ongoing transitions\n        modal.style.display = 'block';\n        window.requestAnimationFrame(() => {\n          window.requestAnimationFrame(() => {\n            modal.classList.add('show');\n            isTransitioning = false;\n          });\n        });\n      }\n\n      function hideModal() {\n        if (isTransitioning) return;\n        isTransitioning = true;\n\n        const handleTransitionEnd = (e) => {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handleTransitionEnd);\n            originalMsg = null;\n            isTransitioning = false;\n          }\n        };\n\n        modal.addEventListener('transitionend', handleTransitionEnd);\n        modal.classList.remove('show');\n      }\n\n      // Cleanup function\n      function cleanup() {\n        modal.classList.remove('show');\n        modal.style.display = 'none';\n        isTransitioning = false;\n        originalMsg = null;\n      }\n\n      // Initialize\n      cleanup();\n\n      // Storage event listener\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState15') {\n          if (event.newValue === 'show') {\n            try {\n              const storedMsg = JSON.parse(localStorage.getItem('modalMsg15'));\n              showModal(storedMsg);\n            } catch (e) {\n              console.error('Error parsing stored message:', e);\n              showModal(null);\n            }\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n\n      // Watch for messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState15', 'show');\n          localStorage.setItem('modalMsg15', JSON.stringify(msg));\n          showModal(msg);\n        }\n      });\n\n      // Button handlers with debouncing\n      let isProcessingClick = false;\n      \n      document.getElementById('ouiBtn15').addEventListener('click', function() {\n        if (isProcessingClick) return;\n        isProcessingClick = true;\n        \n        var responseMsg = originalMsg ? \n          { payload: 'oui', topic: originalMsg.topic } : \n          { payload: 'oui' };\n        \n        scope.send(responseMsg);\n        localStorage.setItem('modalState15', 'hide');\n        hideModal();\n        \n        setTimeout(() => { isProcessingClick = false; }, 300);\n      });\n\n      document.getElementById('nonBtn15').addEventListener('click', function() {\n        if (isProcessingClick) return;\n        isProcessingClick = true;\n        \n        var responseMsg = originalMsg ? \n          { payload: 'non', topic: originalMsg.topic } : \n          { payload: 'non' };\n        \n        scope.send(responseMsg);\n        localStorage.setItem('modalState15', 'hide');\n        hideModal();\n        \n        setTimeout(() => { isProcessingClick = false; }, 300);\n      });\n\n      // Cleanup on unload\n      window.addEventListener('unload', cleanup);\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 330,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "4f7c984a9c844a4a",
        "type": "ui_template",
        "z": "0b6378c01090c728",
        "group": "ef71537c5ac2b5d9",
        "name": "",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<script>\n  const socketUrl = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/reload`;\n  const ws = new WebSocket(socketUrl);  // Create the WebSocket connection\n\n  ws.onopen = function() {\n      console.log(\"WebSocket connection established.\");\n  };\n\n  ws.onmessage = function(event) {\n      var msg = JSON.parse(event.data);\n      if (msg.reload) {\n          location.reload();\n      }\n  };\n\n  ws.onerror = function(error) {\n      console.error(\"WebSocket error:\", error);\n  };\n\n  ws.onclose = function() {\n      console.log(\"WebSocket connection closed.\");\n  };\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b0388dbea6663509",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "MANEUV_JOIN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2990,
        "y": 840,
        "wires": []
    },
    {
        "id": "baa6fa4830e61a12",
        "type": "exec",
        "z": "0b6378c01090c728",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate2.txt",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3000,
        "y": 1100,
        "wires": [
            [
                "0d4a785df390e1bf"
            ],
            [],
            []
        ]
    },
    {
        "id": "7524fd590ee401b6",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2930,
        "y": 1160,
        "wires": [
            [
                "baa6fa4830e61a12"
            ]
        ]
    },
    {
        "id": "0d4a785df390e1bf",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1000,
        "wires": [
            [
                "3a25bc0bf659f873",
                "b94f144ac87db9cc"
            ]
        ]
    },
    {
        "id": "8ce44d1c59e59feb",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3300,
        "y": 940,
        "wires": [
            [
                "b94f144ac87db9cc"
            ]
        ]
    },
    {
        "id": "3a25bc0bf659f873",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2920,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b94f144ac87db9cc",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_11\", \"path_12\", \"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3190,
        "y": 1000,
        "wires": [
            [
                "7fd77702675e98e5"
            ],
            []
        ]
    },
    {
        "id": "d3b114c2828ea83d",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3500,
        "y": 1020,
        "wires": []
    },
    {
        "id": "fde441e1c918f6df",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 900,
        "wires": [
            [
                "8ce44d1c59e59feb"
            ]
        ]
    },
    {
        "id": "45d0eb89722211e5",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "test STd ERRORS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3460,
        "y": 680,
        "wires": []
    },
    {
        "id": "09220baa702f3a35",
        "type": "exec",
        "z": "0b6378c01090c728",
        "command": ": > /app/maneuver-manager/Result2.txt && : > /app/maneuver-manager/PostManeuverDate2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3010,
        "y": 560,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c192d22de48e179e",
        "type": "exec",
        "z": "0b6378c01090c728",
        "command": ": > /app/maneuver-manager/ApsideDates2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2380,
        "y": 920,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4e1a40a660c8adfe",
        "type": "exec",
        "z": "0b6378c01090c728",
        "command": "cd /app/maneuver-manager && ./clear.sh blue2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2890,
        "y": 1260,
        "wires": [
            [
                "073d3b61c94c0680"
            ],
            [
                "073d3b61c94c0680"
            ],
            []
        ]
    },
    {
        "id": "073d3b61c94c0680",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 1260,
        "wires": []
    },
    {
        "id": "57b174a0badb68b6",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3030,
        "y": 620,
        "wires": [
            [
                "9e3f92c56d0659b5"
            ]
        ]
    },
    {
        "id": "7fd77702675e98e5",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "const MAX_RANDOM = 6;\nconst randomIndex = Math.floor(Math.random() * MAX_RANDOM);\n\n// Retrieve the error message from path_12\nconst errorPayload = msg.paths?.path_12 || \"\";\n\nif (errorPayload.includes(\"hyperbolic orbits cannot be handled\")) {\n    switch (randomIndex) {\n        case 0:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory detected. Please return to the battlefield, cadet.\";\n            break;\n        case 1:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. Refer to Article L321-7 of the military code.\";\n            break;\n        case 2:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. Are you attempting to desert your duties?\";\n            break;\n        case 3:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. You are not qualified for interplanetary flight.\";\n            break;\n        default:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. No French assets available in this direction.\";\n    }\n} \nelse if (errorPayload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver due to inadequate ergol reserves.\";\n}\nelse if (errorPayload.includes(\"Initial date must be equal to or later\")) {\n    msg.errorMessage = \"**Temporal Error:** The maneuver order is set before the last apsis was reached.\";\n    msg.errorMessage += ` | Last apsis: ${msg.paths.path_11}`;\n} \nelse if (errorPayload.includes(\"horizon\")) {\n    msg.errorMessage = \"**Temporal Error:** The initial date must precede the conclusion of Horizon Time.\";\n    msg.errorMessage += ` | Simulation End Date: ${msg.paths.path_13.enddate}`;\n} \nelse if (errorPayload.includes(\"ccentrici\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver due to invalid eccentricity parameters.\";\n}\nelse {\n    msg.errorMessage = \"Maneuver aborted due to an unspecified error.\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3355,
        "y": 1008,
        "wires": [
            [
                "d3b114c2828ea83d",
                "eccd0ddfda8ad0b8"
            ]
        ]
    },
    {
        "id": "8dd850843a9e8202",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2690,
        "y": 460,
        "wires": [
            [
                "58ad9fd6e9a839d6"
            ]
        ]
    },
    {
        "id": "31845fadbf4e115a",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "AffichageLastManeuverDate b2",
        "mode": "link",
        "links": [
            "785447d40b10d8aa"
        ],
        "x": 3285,
        "y": 640,
        "wires": []
    },
    {
        "id": "751203aee7764589",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4140,
        "y": 780,
        "wires": []
    },
    {
        "id": "55af6ec50c4ab37f",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3320,
        "y": 780,
        "wires": [
            [
                "e07edf54cb04ebf2"
            ]
        ]
    },
    {
        "id": "756da04a05fbbe5a",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3620,
        "y": 760,
        "wires": []
    },
    {
        "id": "eccd0ddfda8ad0b8",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 3465,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7ea3b10367723047",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3900,
        "y": 600,
        "wires": [
            [
                "55099c4d526881ef"
            ]
        ]
    },
    {
        "id": "d467e43a36aac888",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4460,
        "y": 560,
        "wires": [
            [
                "2e20556b9ecf7342"
            ]
        ]
    },
    {
        "id": "c3bf2fcfcf68e42d",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Before Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4460,
        "y": 380,
        "wires": []
    },
    {
        "id": "4f9cf62fe9967302",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "4b07af770e19997b",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f"
        ],
        "x": 125,
        "y": 580,
        "wires": []
    },
    {
        "id": "b1a80a3b9e021614",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "3216b872aa5f404a",
            "b69bea8abb1b280f",
            "b8e26b39226639eb"
        ],
        "x": 255,
        "y": 720,
        "wires": [
            [
                "ba26c777a2cefa36",
                "ae4bbb7ff27c72e9"
            ]
        ]
    },
    {
        "id": "ae4bbb7ff27c72e9",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 720,
        "wires": []
    },
    {
        "id": "0ec81feae91b0c8e",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4770,
        "y": 440,
        "wires": [
            [
                "17e0ebf6d63aa56f",
                "04f9a208b3e8d77c"
            ]
        ]
    },
    {
        "id": "702bb738723a5919",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4740,
        "y": 160,
        "wires": []
    },
    {
        "id": "d484c32ee86223f1",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "echange",
        "func": "// 1) Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    msg.payload = [\"\", \"\"];\n}\n\n// 2) Expand to guarantee at least 2 elements\nwhile (msg.payload.length < 2) {\n    msg.payload.push(\"\");\n}\n\n// 3) Handle possible \"object with .payload\" vs. direct string\nfunction isNonEmpty(val) {\n    return val !== undefined && val !== null && val !== \"\";\n}\n\n// If msg.payload[1] is an object with a payload...\nif (typeof msg.payload[1] === \"object\" && msg.payload[1] !== null) {\n    // Ensure there's a .payload key\n    msg.payload[1].payload = msg.payload[1].payload || \"\";\n    // If .payload is non-empty, copy it to [0].payload (making sure [0] is an object)\n    if (isNonEmpty(msg.payload[1].payload)) {\n        // If msg.payload[0] isn't an object, turn it into one\n        if (typeof msg.payload[0] !== \"object\" || msg.payload[0] === null) {\n            msg.payload[0] = { payload: \"\" };\n        }\n        msg.payload[0].payload = msg.payload[1].payload;\n    }\n    // Always reset [1].payload to empty\n    msg.payload[1].payload = \"\";\n\n// Else if msg.payload[1] is a string...\n} else if (typeof msg.payload[1] === \"string\") {\n    if (isNonEmpty(msg.payload[1])) {\n        // If [0] is object, put the string in [0].payload\n        if (typeof msg.payload[0] === \"object\" && msg.payload[0] !== null) {\n            msg.payload[0].payload = msg.payload[1];\n        } else {\n            // Otherwise, just treat [0] as a string\n            msg.payload[0] = msg.payload[1];\n        }\n    }\n    // Reset [1] to empty string\n    msg.payload[1] = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4720,
        "y": 360,
        "wires": [
            [
                "702bb738723a5919",
                "f932e96f908b0559",
                "05f0496bbe241c35"
            ]
        ]
    },
    {
        "id": "a407f4469c4af464",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2543.015625,
        "y": 613.75,
        "wires": [
            [
                "569af04fc4b8a348"
            ]
        ]
    },
    {
        "id": "e92a7918d5512e20",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2300,
        "y": 580,
        "wires": [
            [
                "a407f4469c4af464"
            ]
        ]
    },
    {
        "id": "0f154b6350b680ed",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "query to read Result2.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3440,
        "y": 1340,
        "wires": [
            [
                "e61ed682123f8809"
            ]
        ]
    },
    {
        "id": "e61ed682123f8809",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3740,
        "y": 1340,
        "wires": [
            [
                "da40b796cee1a9ea"
            ]
        ]
    },
    {
        "id": "da40b796cee1a9ea",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3920,
        "y": 1340,
        "wires": [
            [
                "08c80edd1ff8bee7"
            ]
        ]
    },
    {
        "id": "08c80edd1ff8bee7",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 1400,
        "wires": [
            [
                "1d260b2b476f0b48"
            ]
        ]
    },
    {
        "id": "1d260b2b476f0b48",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 1400,
        "wires": [
            [
                "8a514f11471f1cfe",
                "b4a062649b6cea8f"
            ]
        ]
    },
    {
        "id": "8a514f11471f1cfe",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 1460,
        "wires": [
            [
                "7371ac1ffd06ec3c"
            ]
        ]
    },
    {
        "id": "7371ac1ffd06ec3c",
        "type": "switch",
        "z": "0b6378c01090c728",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3990,
        "y": 1460,
        "wires": [
            [
                "2f153f764c1b6220",
                "2b77e1a0db87076b",
                "7d6f1ab36b1297a4",
                "437abba090ca35d6",
                "4e750643c5c8628f",
                "c0deadf266c66898"
            ],
            [
                "4e750643c5c8628f"
            ]
        ]
    },
    {
        "id": "2b77e1a0db87076b",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3980,
        "y": 1520,
        "wires": [
            [
                "d556402407e0619e"
            ]
        ]
    },
    {
        "id": "d556402407e0619e",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3960,
        "y": 1560,
        "wires": [
            [
                "1148530c8ca691c5"
            ]
        ]
    },
    {
        "id": "1148530c8ca691c5",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Tle b2-postMan-OUT",
        "mode": "link",
        "links": [
            "a4307ff40f12d270"
        ],
        "x": 4065,
        "y": 1600,
        "wires": []
    },
    {
        "id": "2f153f764c1b6220",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4290,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "d15a192c0fdb0be0",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "8077005c0f87eec7"
        ],
        "x": 4395,
        "y": 1500,
        "wires": []
    },
    {
        "id": "14103ec3838af439",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "1e9f03d80af47c23"
        ],
        "x": 3185,
        "y": 1340,
        "wires": [
            [
                "0f154b6350b680ed",
                "1de381c31711b78e"
            ]
        ]
    },
    {
        "id": "7d6f1ab36b1297a4",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_999",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_999",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4260,
        "y": 1440,
        "wires": [
            [
                "026134e2c78ce6d7"
            ]
        ]
    },
    {
        "id": "026134e2c78ce6d7",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "MQTT Signal b2",
        "mode": "link",
        "links": [
            "fd0a7626203eccce"
        ],
        "x": 4455,
        "y": 1440,
        "wires": []
    },
    {
        "id": "1de381c31711b78e",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3230,
        "y": 1480,
        "wires": [
            [
                "aabe4630d7d81697",
                "74567ac04bf28c6c"
            ]
        ]
    },
    {
        "id": "726a2df07191f13a",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "time persistent intermediate",
        "mode": "link",
        "links": [
            "5fcb4e512a728761"
        ],
        "x": 3325,
        "y": 1440,
        "wires": []
    },
    {
        "id": "aabe4630d7d81697",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "test inter timre",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 1520,
        "wires": []
    },
    {
        "id": "437abba090ca35d6",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "update all for B2 OUT",
        "mode": "link",
        "links": [
            "57b7bbaac29962ab"
        ],
        "x": 4215,
        "y": 1500,
        "wires": []
    },
    {
        "id": "b4a062649b6cea8f",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "test result.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3940,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4e750643c5c8628f",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4100,
        "y": 1300,
        "wires": []
    },
    {
        "id": "c0deadf266c66898",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4290,
        "y": 1320,
        "wires": [
            [
                "f4eb8d720452ee8e"
            ]
        ]
    },
    {
        "id": "f4eb8d720452ee8e",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4330,
        "y": 1380,
        "wires": [
            [
                "07971f043dcb0c49"
            ]
        ]
    },
    {
        "id": "07971f043dcb0c49",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4620,
        "y": 1380,
        "wires": []
    },
    {
        "id": "74567ac04bf28c6c",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3220,
        "y": 1440,
        "wires": [
            [
                "726a2df07191f13a"
            ]
        ]
    },
    {
        "id": "83939e3ff5b556f0",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2940,
        "y": 1480,
        "wires": [
            [
                "1de381c31711b78e"
            ]
        ]
    },
    {
        "id": "1e9f03d80af47c23",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Out resultat 1",
        "mode": "link",
        "links": [
            "14103ec3838af439"
        ],
        "x": 2865,
        "y": 380,
        "wires": []
    },
    {
        "id": "7bd7fe4b4a7d70d5",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Prepare Reset Message",
        "func": "msg.reset = true;\nmsg.payload = \"Reset command received\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2600,
        "y": 300,
        "wires": [
            [
                "ae535a9e081ea8e6"
            ]
        ]
    },
    {
        "id": "ae535a9e081ea8e6",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Counter & Loop",
        "func": "// Retrieve the current counter from flow context (default to 0)\nlet count = flow.get('myCounter') || 0;\n\n// Check if this message is a 'reset' or normal 'increment'\nif (msg.reset) {\n    // If reset, set counter to 0\n    count = 0;\n    flow.set('myCounter', count);\n    msg.payload = `Counter reset to ${count}`;\n    return msg;\n}\n\n// Otherwise, increment the counter\ncount += 1;\nflow.set('myCounter', count);\n\n// Update payload with the current count\nmsg.payload = `Counter: ${count}`;\n\n// Define maximum count (optional)\nconst maxCount = 2;\n\nif (count < maxCount) {\n    // Send the count to the debug node and loop back\n    return [null, msg];\n} else {\n    // If max count reached, notify and stop looping\n    msg.payload = \"Done looping, reached \" + maxCount;\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 360,
        "wires": [
            [
                "5faf41c92d0f466f"
            ],
            [
                "ce6a6ad6fc4b0ec0",
                "502f7430e4aae184",
                "a34e0a1020eadb9d",
                "9517644267161c70"
            ]
        ]
    },
    {
        "id": "5faf41c92d0f466f",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "Debug Counter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2850,
        "y": 320,
        "wires": []
    },
    {
        "id": "502f7430e4aae184",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Output Before Maneuver TLEs",
        "mode": "link",
        "links": [
            "e11ff78879677dab"
        ],
        "x": 2805,
        "y": 380,
        "wires": []
    },
    {
        "id": "e11ff78879677dab",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "502f7430e4aae184"
        ],
        "x": 3505,
        "y": 360,
        "wires": [
            [
                "e84bfeacdff3c97d"
            ]
        ]
    },
    {
        "id": "ce6a6ad6fc4b0ec0",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "DEBUG COUNTER DOWN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 320,
        "wires": []
    },
    {
        "id": "4f762837913f0448",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2310,
        "y": 360,
        "wires": [
            [
                "ae535a9e081ea8e6"
            ]
        ]
    },
    {
        "id": "c1b81de5b04c1a74",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2510,
        "y": 240,
        "wires": [
            [
                "7bd7fe4b4a7d70d5"
            ]
        ]
    },
    {
        "id": "be65646a8c88d585",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "RESET COUNTER",
        "mode": "link",
        "links": [
            "cada7635215d019c"
        ],
        "x": 2855,
        "y": 600,
        "wires": []
    },
    {
        "id": "cada7635215d019c",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "be65646a8c88d585"
        ],
        "x": 2345,
        "y": 320,
        "wires": [
            [
                "7bd7fe4b4a7d70d5"
            ]
        ]
    },
    {
        "id": "b104823a1c24c9bb",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "e13dbd5dae4fc261"
        ],
        "x": 2435,
        "y": 320,
        "wires": [
            [
                "7bd7fe4b4a7d70d5"
            ]
        ]
    },
    {
        "id": "e13dbd5dae4fc261",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "end function signal",
        "mode": "link",
        "links": [
            "b104823a1c24c9bb"
        ],
        "x": 3315,
        "y": 600,
        "wires": []
    },
    {
        "id": "a34e0a1020eadb9d",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "SAVE TRIGGER",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 2855,
        "y": 340,
        "wires": []
    },
    {
        "id": "3e141b5eeb83184e",
        "type": "ui_button",
        "z": "0b6378c01090c728",
        "name": "",
        "group": "81d0e5ee7c52f38a",
        "order": 9,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "B2 Reset",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#CC0000",
        "className": "",
        "icon": "fa-undo",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 1620,
        "wires": [
            [
                "6661b54d91c10f2d"
            ]
        ]
    },
    {
        "id": "6661b54d91c10f2d",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup28' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1620,
        "wires": [
            [
                "cf699af35f0d04a1"
            ]
        ]
    },
    {
        "id": "d71ac6499e711c2d",
        "type": "switch",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui28",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 1620,
        "wires": [
            [
                "09305a9aaa0dfe88"
            ]
        ]
    },
    {
        "id": "cf699af35f0d04a1",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "4b07af770e19997b",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f"
        ],
        "x": 405,
        "y": 1620,
        "wires": []
    },
    {
        "id": "e2eb4874baa1131f",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "3216b872aa5f404a",
            "b69bea8abb1b280f",
            "b8e26b39226639eb"
        ],
        "x": 555,
        "y": 1620,
        "wires": [
            [
                "d71ac6499e711c2d"
            ]
        ]
    },
    {
        "id": "7df5ab5d64796514",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "msg.payload = { isp: '' };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 900,
        "wires": [
            [
                "689d8a35b8415119"
            ]
        ]
    },
    {
        "id": "c9335943101b16da",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 940,
        "wires": [
            [
                "7df5ab5d64796514"
            ]
        ]
    },
    {
        "id": "a776c2e90a803e01",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "flush isp",
        "mode": "link",
        "links": [
            "5a3ba8134cd53d2a"
        ],
        "x": 4185,
        "y": 580,
        "wires": []
    },
    {
        "id": "5a3ba8134cd53d2a",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "a776c2e90a803e01"
        ],
        "x": 65,
        "y": 980,
        "wires": [
            [
                "7df5ab5d64796514"
            ]
        ]
    },
    {
        "id": "e78d263870e57de3",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "flush isp error",
        "mode": "link",
        "links": [
            "6c664291419be7ad"
        ],
        "x": 3245,
        "y": 680,
        "wires": []
    },
    {
        "id": "6c664291419be7ad",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "flush isp",
        "links": [
            "e78d263870e57de3"
        ],
        "x": 35,
        "y": 880,
        "wires": [
            [
                "7df5ab5d64796514"
            ]
        ]
    },
    {
        "id": "d064b132cd67d7be",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 80,
        "wires": []
    },
    {
        "id": "662b80af8ffd6c40",
        "type": "file in",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "blue2-tle-storage-out",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 40,
        "wires": [
            [
                "c918a295e26fcb67"
            ]
        ]
    },
    {
        "id": "c918a295e26fcb67",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 700,
        "y": 80,
        "wires": [
            [
                "c68fd8cb85d86f2d"
            ]
        ]
    },
    {
        "id": "c68fd8cb85d86f2d",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "/**\n * Node-RED Function: Compute Semi-Major Axis (SMA) from Mean Motion and Output Only SMA\n *\n * This function:\n * 1. Extracts the 'mean' field from msg.payload (assumed to be in rev/day)\n * 2. Converts 'mean' to Semi-Major Axis (SMA) using Kepler's Third Law\n * 3. Sets msg.payload to the computed SMA (in kilometers), removing all other fields\n *\n * Assumptions:\n * - 'mean' is in revolutions per day (rev/day)\n * - Earth's gravitational parameter (mu) = 398600 km³/s²\n */\n\nif (msg.payload && msg.payload.mean) {\n    // Earth's gravitational parameter (mu) in km^3/s^2\n    const mu = 398600; \n    const secondsPerDay = 86400;\n    const twoPi = 2 * Math.PI;\n\n    // 1. Extract and parse the 'mean' field\n    let meanMotionRevPerDay = parseFloat(msg.payload.mean);\n\n    // Validate the parsed mean motion\n    if (isNaN(meanMotionRevPerDay) || meanMotionRevPerDay <= 0) {\n        node.error(\"Invalid mean motion value: \" + msg.payload.mean);\n        return null; // Stop processing this message\n    }\n\n    // 2. Convert mean motion from rev/day to rad/s\n    let meanMotionRadPerSec = meanMotionRevPerDay * twoPi / secondsPerDay;\n\n    // 3. Compute the orbital period (T) in seconds using T = 2π / n\n    let orbitalPeriod = twoPi / meanMotionRadPerSec; // seconds\n\n    // 4. Compute Semi-Major Axis (a) using Kepler's Third Law:\n    //    a = (mu * T^2 / (4 * pi^2))^(1/3)\n    let aCubed = (mu * Math.pow(orbitalPeriod, 2)) / (4 * Math.PI * Math.PI);\n    let smaKm = Math.pow(aCubed, 1/3); // km\n\n    // Optional: Round SMA to two decimal places for readability\n    smaKm = parseFloat(smaKm.toFixed(2));\n\n    // 5. Set msg.payload to the computed SMA only\n    msg.payload = smaKm;\n\n    // Optional: Log the computed SMA for debugging purposes\n    node.log(\"Computed SMA (km) = \" + smaKm);\n\n    // 6. Return the modified message\n    return msg;\n\n} else {\n    // If 'mean' field is missing, log an error and stop processing\n    node.error(\"No 'mean' field found in msg.payload.\");\n    return null; // Stop processing this message\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 80,
        "wires": [
            [
                "d064b132cd67d7be",
                "355d72d10e3cb85c"
            ]
        ]
    },
    {
        "id": "355d72d10e3cb85c",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_17",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_17",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 120,
        "wires": [
            [
                "23589e9822251517",
                "b1508d0cfad40ece"
            ]
        ]
    },
    {
        "id": "2ba23de2bffb5ba4",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST JOIN WAIT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 220,
        "wires": []
    },
    {
        "id": "a9eff125b2e73552",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Retrieve SMA",
        "mode": "link",
        "links": [
            "a79ed325479a1732"
        ],
        "x": 315,
        "y": 820,
        "wires": []
    },
    {
        "id": "a79ed325479a1732",
        "type": "link in",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "",
        "links": [
            "a9eff125b2e73552"
        ],
        "x": 365,
        "y": 40,
        "wires": [
            [
                "662b80af8ffd6c40"
            ]
        ]
    },
    {
        "id": "b1508d0cfad40ece",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "PATH_17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 140,
        "wires": []
    },
    {
        "id": "f7c12a5417b4675e",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "blue2-tle-storage-out",
        "filename": "blue2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 670,
        "y": 1080,
        "wires": [
            [
                "546e62f8c8655a89"
            ]
        ]
    },
    {
        "id": "546e62f8c8655a89",
        "type": "json",
        "z": "0b6378c01090c728",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 840,
        "y": 1080,
        "wires": [
            [
                "7ce9a3eb390f5aed"
            ]
        ]
    },
    {
        "id": "7ce9a3eb390f5aed",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "/**\n * Node-RED Function: Compute Semi-Major Axis (SMA) from Mean Motion and Output Only SMA\n *\n * This function:\n * 1. Extracts the 'mean' field from msg.payload (assumed to be in rev/day)\n * 2. Converts 'mean' to Semi-Major Axis (SMA) using Kepler's Third Law\n * 3. Sets msg.payload to the computed SMA (in kilometers), removing all other fields\n *\n * Assumptions:\n * - 'mean' is in revolutions per day (rev/day)\n * - Earth's gravitational parameter (mu) = 398600 km³/s²\n */\n\nif (msg.payload && msg.payload.mean) {\n    // Earth's gravitational parameter (mu) in km^3/s^2\n    const mu = 398600; \n    const secondsPerDay = 86400;\n    const twoPi = 2 * Math.PI;\n\n    // 1. Extract and parse the 'mean' field\n    let meanMotionRevPerDay = parseFloat(msg.payload.mean);\n\n    // Validate the parsed mean motion\n    if (isNaN(meanMotionRevPerDay) || meanMotionRevPerDay <= 0) {\n        node.error(\"Invalid mean motion value: \" + msg.payload.mean);\n        return null; // Stop processing this message\n    }\n\n    // 2. Convert mean motion from rev/day to rad/s\n    let meanMotionRadPerSec = meanMotionRevPerDay * twoPi / secondsPerDay;\n\n    // 3. Compute the orbital period (T) in seconds using T = 2π / n\n    let orbitalPeriod = twoPi / meanMotionRadPerSec; // seconds\n\n    // 4. Compute Semi-Major Axis (a) using Kepler's Third Law:\n    //    a = (mu * T^2 / (4 * pi^2))^(1/3)\n    let aCubed = (mu * Math.pow(orbitalPeriod, 2)) / (4 * Math.PI * Math.PI);\n    let smaKm = Math.pow(aCubed, 1/3); // km\n\n    // Optional: Round SMA to two decimal places for readability\n    smaKm = parseFloat(smaKm.toFixed(2));\n\n    // 5. Set msg.payload to the computed SMA only\n    msg.payload = smaKm;\n\n    // Optional: Log the computed SMA for debugging purposes\n    node.log(\"Computed SMA (km) = \" + smaKm);\n\n    // 6. Return the modified message\n    return msg;\n\n} else {\n    // If 'mean' field is missing, log an error and stop processing\n    node.error(\"No 'mean' field found in msg.payload.\");\n    return null; // Stop processing this message\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1080,
        "wires": [
            [
                "55d7b22e4bf13d6d",
                "9f7e493c737b38d2"
            ]
        ]
    },
    {
        "id": "e7c7a3f6db89da1f",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 1160,
        "wires": []
    },
    {
        "id": "55d7b22e4bf13d6d",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_18",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_18",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1020,
        "wires": [
            [
                "444b5bc2569af448",
                "9b9d1d71fb7d71d7",
                "638b69f516fd6663"
            ]
        ]
    },
    {
        "id": "9b9d1d71fb7d71d7",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TESRT TRIGGER BDD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ee5cc50bab78c83d",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "triger bdd time b2",
        "links": [
            "8eb48b695f0ef2ac"
        ],
        "x": 425,
        "y": 1080,
        "wires": [
            [
                "f7c12a5417b4675e"
            ]
        ]
    },
    {
        "id": "d7f84b22db341add",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Prepare File Read",
        "func": "msg.filename = 'app/maneuver-manager/CommandData.txt';\nmsg.action = 'read';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1400,
        "wires": [
            [
                "7e93228e8e99a358"
            ]
        ]
    },
    {
        "id": "7e93228e8e99a358",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Read/Write CommandData2.txt",
        "filename": "/path/to/CommandData2.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1380,
        "y": 1380,
        "wires": [
            [
                "12f4693494e0b8a1"
            ]
        ]
    },
    {
        "id": "12f4693494e0b8a1",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Update SMA Value",
        "func": "const lines = msg.payload.split('\\n');\nlines[0] = msg.data.toString();\nmsg.payload = lines.join('\\n');\nmsg.filename = 'CommandData.txt';\nmsg.action = 'write';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 1340,
        "wires": [
            [
                "7e93228e8e99a358"
            ]
        ]
    },
    {
        "id": "9f7e493c737b38d2",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1080,
        "wires": []
    },
    {
        "id": "eecd6297a243f446",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Update First Line",
        "func": "const lines = msg.payload.split('\\n');\nlines[0] = msg.data.toString();\nmsg.payload = lines.join('\\n');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1200,
        "wires": [
            [
                "11c57714951dc248",
                "5f481982e697960c"
            ]
        ]
    },
    {
        "id": "11c57714951dc248",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "Write CommandData2.txt",
        "filename": "/app/maneuver-manager/CommandData2.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1860,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "2476459d073a0952",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5f481982e697960c",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 1260,
        "wires": []
    },
    {
        "id": "168ec77c1e79a7e8",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_19",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_19",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1200,
        "wires": [
            [
                "638b69f516fd6663"
            ]
        ]
    },
    {
        "id": "638b69f516fd6663",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_18\",\"path_19\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1510,
        "y": 1200,
        "wires": [
            [
                "01b6c444f74ae3a9"
            ],
            []
        ]
    },
    {
        "id": "f75b4f97f6a321fc",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "63da11381ae7cc3b",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "fab7183608daa4be"
        ],
        "x": 465,
        "y": 1040,
        "wires": [
            [
                "f7c12a5417b4675e",
                "97914073cd626c19"
            ]
        ]
    },
    {
        "id": "01b6c444f74ae3a9",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST DEBUG comm data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 1140,
        "wires": []
    },
    {
        "id": "e6e03a6ade4fabaf",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "Trigger Update",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "6973.97",
        "payloadType": "num",
        "x": 970,
        "y": 1180,
        "wires": [
            [
                "97914073cd626c19"
            ]
        ]
    },
    {
        "id": "97914073cd626c19",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "CommandData2.txt",
        "filename": "/app/maneuver-manager/CommandData2.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1100,
        "y": 1140,
        "wires": [
            [
                "168ec77c1e79a7e8",
                "2476459d073a0952"
            ]
        ]
    },
    {
        "id": "140c7386826dc9cd",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3000,
        "y": 960,
        "wires": [
            [
                "b94f144ac87db9cc",
                "cfc47151f76ac2cb"
            ]
        ]
    },
    {
        "id": "4c8ec09dd0f91905",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "aabb98fe3ab1ba7f"
        ],
        "x": 2835,
        "y": 940,
        "wires": [
            [
                "140c7386826dc9cd"
            ]
        ]
    },
    {
        "id": "cfc47151f76ac2cb",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 940,
        "wires": []
    },
    {
        "id": "32d2e1a41c47900b",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 380,
        "wires": [
            [
                "c237d55736974799"
            ]
        ]
    },
    {
        "id": "c237d55736974799",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "link",
        "links": [
            "38208a861ba52b6e"
        ],
        "x": 2235,
        "y": 380,
        "wires": []
    },
    {
        "id": "e2e7293c6ae62c8f",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "65804949ca66fef8"
        ],
        "x": 2575,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "17a395e0d09997ae",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3080,
        "y": 420,
        "wires": []
    },
    {
        "id": "e9c3473f300c9fb1",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2720,
        "y": 400,
        "wires": [
            [
                "1e9f03d80af47c23"
            ]
        ]
    },
    {
        "id": "09305a9aaa0dfe88",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "LOAD CONF",
        "mode": "link",
        "links": [
            "c5b6b5d0caf2f6de"
        ],
        "x": 805,
        "y": 1620,
        "wires": []
    },
    {
        "id": "b50933f8d8ad72dc",
        "type": "link in",
        "z": "0b6378c01090c728",
        "name": "",
        "links": [
            "6d68815a456a141b",
            "00f32cd598b46f61"
        ],
        "x": 3935,
        "y": 2020,
        "wires": [
            [
                "3aebdf75a4620221",
                "1c583846de47b424",
                "cbdfb64e97b3543b",
                "e16e412aa6ce5b3b"
            ]
        ]
    },
    {
        "id": "c938a40d2aa308bb",
        "type": "mongodb in",
        "z": "0b6378c01090c728",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of b2tlelatest",
        "collection": "b2tlelatest",
        "operation": "find",
        "x": 3540,
        "y": 2400,
        "wires": [
            [
                "82528b11884e3d60",
                "9e07f03579eb7428"
            ]
        ]
    },
    {
        "id": "9e07f03579eb7428",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 2400,
        "wires": [
            [
                "4bfa111d3a3f2923",
                "0d2271d06afe70cf"
            ]
        ]
    },
    {
        "id": "82528b11884e3d60",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3770,
        "y": 2460,
        "wires": []
    },
    {
        "id": "0d2271d06afe70cf",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4050,
        "y": 2420,
        "wires": []
    },
    {
        "id": "4bfa111d3a3f2923",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4050,
        "y": 2360,
        "wires": [
            [
                "287beb377b468ecd",
                "77a895bcca75bfad"
            ]
        ]
    },
    {
        "id": "77a895bcca75bfad",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "name": "",
        "paths": "[\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4240,
        "y": 2360,
        "wires": [
            [
                "3ff17f198c17160f",
                "7959218477f85201"
            ],
            []
        ]
    },
    {
        "id": "287beb377b468ecd",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "LAST TLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4250,
        "y": 2400,
        "wires": []
    },
    {
        "id": "019878b2463c3801",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4530,
        "y": 2420,
        "wires": []
    },
    {
        "id": "3ff17f198c17160f",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Data2.txt format",
        "func": "// Initialize variables\nvar tab = [];\nvar gs = {};\n\n// Split line #2 of the TLE robustly:\n// - trim() removes any leading/trailing spaces\n// - split(/\\s+/) splits on ANY run of whitespace\nvar tle = msg.payload[2].trim().split(/\\s+/);\n\nvar N;      // Mean motion in rev/day (not used below, just declared)\nvar n;      // ...\nvar a;      // Semi-major axis\nvar acube;  // a^3\nvar e;      // eccentricity\n\n// Earth's standard gravitational parameter, etc.\nvar mu = 398600.4418;\nvar J = 86400; // A day in seconds\n\n// From the TLE array\ngs.incli = String(tle[2]);\ngs.raan  = String(tle[3]);\ngs.ecc   = String(tle[4]);\ngs.aop   = String(tle[5]);\ngs.meana = String(tle[6]);\ngs.mean  = String(tle[7]);\n\n// From the rest of payload\ngs.dry_mass          = parseFloat(msg.payload[3]);\ngs.ergol_consumption = parseFloat(msg.payload[5]);\ngs.ergol_mass        = parseFloat(msg.payload[4]);\n\n// Attach everything back to msg and return\nmsg.payload = gs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4520,
        "y": 2360,
        "wires": [
            [
                "019878b2463c3801",
                "61c6fa7170025ef8"
            ]
        ]
    },
    {
        "id": "7959218477f85201",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4510,
        "y": 2320,
        "wires": []
    },
    {
        "id": "90d07a179e72abc5",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4490,
        "y": 2260,
        "wires": []
    },
    {
        "id": "3366b4174e457b48",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4490,
        "y": 2220,
        "wires": []
    },
    {
        "id": "f8470932f04077fb",
        "type": "switch",
        "z": "0b6378c01090c728",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4500,
        "y": 2180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c04f30aae144fe86",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 2180,
        "wires": [
            [
                "f8470932f04077fb",
                "90d07a179e72abc5",
                "3366b4174e457b48"
            ]
        ]
    },
    {
        "id": "a5e2118fbbace656",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4130,
        "y": 2120,
        "wires": [
            [
                "23874a54c2b1b50f"
            ]
        ]
    },
    {
        "id": "23874a54c2b1b50f",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4340,
        "y": 2120,
        "wires": [
            [
                "c04f30aae144fe86"
            ]
        ]
    },
    {
        "id": "3aebdf75a4620221",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "query to read Result2.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4170,
        "y": 2060,
        "wires": [
            [
                "e2cc0345318cc3e5"
            ]
        ]
    },
    {
        "id": "1c583846de47b424",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4130,
        "y": 2020,
        "wires": []
    },
    {
        "id": "e2cc0345318cc3e5",
        "type": "file in",
        "z": "0b6378c01090c728",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result2.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4410,
        "y": 2060,
        "wires": [
            [
                "5c646eb98007d890"
            ]
        ]
    },
    {
        "id": "5c646eb98007d890",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4610,
        "y": 2060,
        "wires": [
            [
                "a5e2118fbbace656"
            ]
        ]
    },
    {
        "id": "77eee86a8d947706",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4670,
        "y": 1880,
        "wires": []
    },
    {
        "id": "61c6fa7170025ef8",
        "type": "file",
        "z": "0b6378c01090c728",
        "name": "",
        "filename": "blue2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4380,
        "y": 1800,
        "wires": [
            [
                "77eee86a8d947706",
                "ac8f3ec73444b71f"
            ]
        ]
    },
    {
        "id": "cbdfb64e97b3543b",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4190,
        "y": 1760,
        "wires": [
            [
                "5e5e52002367ae53"
            ]
        ]
    },
    {
        "id": "3809fb9495c53f66",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "AP Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4580,
        "y": 1720,
        "wires": []
    },
    {
        "id": "3e4f10b7b8726213",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 1640,
        "wires": [
            [
                "6fb4660227215ee1",
                "3809fb9495c53f66"
            ]
        ]
    },
    {
        "id": "5e5e52002367ae53",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4390,
        "y": 1680,
        "wires": [
            [
                "3e4f10b7b8726213"
            ]
        ]
    },
    {
        "id": "ac8f3ec73444b71f",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": " Reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4310,
        "y": 1600,
        "wires": [
            [
                "6fb4660227215ee1"
            ]
        ]
    },
    {
        "id": "6fb4660227215ee1",
        "type": "join",
        "z": "0b6378c01090c728",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4610,
        "y": 1600,
        "wires": [
            [
                "59b2fe5268db610d",
                "71378ca187c81caf"
            ]
        ]
    },
    {
        "id": "59b2fe5268db610d",
        "type": "function",
        "z": "0b6378c01090c728",
        "name": "echange",
        "func": "// 1) Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    msg.payload = [\"\", \"\"];\n}\n\n// 2) Expand to guarantee at least 2 elements\nwhile (msg.payload.length < 2) {\n    msg.payload.push(\"\");\n}\n\n// 3) Handle possible \"object with .payload\" vs. direct string\nfunction isNonEmpty(val) {\n    return val !== undefined && val !== null && val !== \"\";\n}\n\n// If msg.payload[1] is an object with a payload...\nif (typeof msg.payload[1] === \"object\" && msg.payload[1] !== null) {\n    // Ensure there's a .payload key\n    msg.payload[1].payload = msg.payload[1].payload || \"\";\n    // If .payload is non-empty, copy it to [0].payload (making sure [0] is an object)\n    if (isNonEmpty(msg.payload[1].payload)) {\n        // If msg.payload[0] isn't an object, turn it into one\n        if (typeof msg.payload[0] !== \"object\" || msg.payload[0] === null) {\n            msg.payload[0] = { payload: \"\" };\n        }\n        msg.payload[0].payload = msg.payload[1].payload;\n    }\n    // Always reset [1].payload to empty\n    msg.payload[1].payload = \"\";\n\n// Else if msg.payload[1] is a string...\n} else if (typeof msg.payload[1] === \"string\") {\n    if (isNonEmpty(msg.payload[1])) {\n        // If [0] is object, put the string in [0].payload\n        if (typeof msg.payload[0] === \"object\" && msg.payload[0] !== null) {\n            msg.payload[0].payload = msg.payload[1];\n        } else {\n            // Otherwise, just treat [0] as a string\n            msg.payload[0] = msg.payload[1];\n        }\n    }\n    // Reset [1] to empty string\n    msg.payload[1] = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4710,
        "y": 1540,
        "wires": [
            [
                "ca64e9a084125e43",
                "9c6ff21bb2e187ba"
            ]
        ]
    },
    {
        "id": "ca64e9a084125e43",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "Out Maneuvre prédéfinie B2",
        "mode": "link",
        "links": [
            "bf4f9f57961ab891"
        ],
        "x": 4755,
        "y": 1420,
        "wires": []
    },
    {
        "id": "3ea015530f7d74c2",
        "type": "ui_template",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "group": "ef71537c5ac2b5d9",
        "name": "Dynamic Form",
        "order": 3,
        "width": "10",
        "height": "8",
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Manoeuvre Hub</title>\n    <style>\n        /* Apply box-sizing globally */\n        *,\n        *::before,\n        *::after {\n            box-sizing: border-box;\n        }\n\n        /* Classe pour masquer des éléments */\n        .hidden {\n            display: none;\n        }\n\n.scrollable-container {\n    height: 100vh;          /* Fixed height to enable scrolling */\n    overflow-y: auto;       /* Enables vertical scrolling */\n    scrollbar-width: none;  /* Firefox */\n    -ms-overflow-style: none; /* Internet Explorer 10+ */\n}\n\n/* Chrome, Safari and Opera */\n.scrollable-container::-webkit-scrollbar {\n    display: none;\n}\n\n\n        /* Prevent overflow from the body and html if desired */\n        body, html {\n            margin: 0;\n            padding: 0;\n        }\n\n        /* Style des champs de formulaire */\n        .form-group {\n            margin-bottom: 13px;\n        }\n\n        .form-group label {\n            display: block;\n            margin-bottom: 10px;\n            font-weight: normal;\n            color: #fff;\n            padding-left: 25px;\n        }\n\n        .form-group input,\n        .form-group select {\n            width: 90%;\n            padding: 8px 0;\n            border: none;\n            background-color: transparent;\n            color: #fff;\n            border-bottom: 2px solid #666;\n            margin: 0 auto;\n            display: block;\n        }\n\n        .form-group input:focus,\n        .form-group select:focus {\n            outline: none;\n            border-bottom: 2px solid #888;\n        }\n\n        /* Style du titre du formulaire */\n        #formTitle {\n            font-size: 18px;\n            font-weight: normal;\n            color: #fff;\n            margin-top: 23px;\n            margin-bottom: 28px;\n            margin-left: 25px;\n        }\n\n        /* Espace en haut du conteneur de champs de saisie */\n        #inputField {\n            margin-top: 17px;\n        }\n\n        /* Style du bouton de soumission */\n        #submitButton {\n            margin-top: 14px;\n            margin-left: 25px;\n            margin-bottom: 85px;\n            padding: 10px 20px;\n            font-size: 16px;\n            font-weight: normal;\n            color: #fff;\n            background-color: rgb(0, 86, 122);\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            transition: background-color 0.3s, transform 0.2s;\n        }\n\n        #submitButton:hover {\n            background-color: rgb(0, 106, 152);\n        }\n\n        #submitButton:active {\n            background-color: rgb(0, 66, 92);\n            transform: scale(0.98);\n        }\n\n        /* Make the button appear grayed out and change the cursor when disabled */\n        #submitButton:disabled {\n            opacity: 0.5;\n            cursor: not-allowed;\n        }\n\n        /* Style du sélecteur de manoeuvre */\n        #maneuverSelect {\n            border-bottom: 2px solid #666;\n            width: 90%;\n            margin: 0 auto;\n            display: block;\n            background-color: #212c31;\n            color: #fff;\n        }\n\n        #maneuverSelect:focus {\n            outline: none;\n            border-bottom: 2px solid #888;\n        }\n\n        /* Style de la section des derniers paramètres soumis */\n        #lastSubmitted {\n            margin-top: 50px;\n            padding: 15px;\n            border: 1px solid #444;\n            border-radius: 4px;\n            background-color: #212c31;\n            color: #fff;\n        }\n\n        #lastSubmitted h3 {\n            margin-bottom: 10px;\n            color: #fff;\n        }\n\n        #lastSubmitted ul {\n            list-style-type: disc;\n            padding-left: 20px;\n        }\n\n        #lastSubmitted li {\n            margin-bottom: 5px;\n            color: #ddd;\n        }\n\n        #lastSubmitted p {\n            margin-bottom: 10px;\n            color: #fff;\n        }\n\n        #lastSubmitted ul li strong {\n            color: #fff;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"scrollable-container\">\n        <!-- Titre dynamique -->\n        <h2 id=\"formTitle\">Veuillez d'abord sélectionner une manoeuvre</h2>\n\n        <!-- Sélecteur de manoeuvre -->\n        <div class=\"form-group\">\n            <label for=\"maneuverSelect\">Type de manoeuvre :</label>\n            <select id=\"maneuverSelect\" class=\"form-control\">\n                <option value=\"\" disabled selected>-- Choisissez une manoeuvre --</option>\n                <option value=\"Hohmann\">Hohmann</option>\n                <option value=\"Bi-elliptique\">Bi-elliptique</option>\n                <option value=\"Inclinaison\">Inclinaison</option>\n                <option value=\"QLaw\">QLaw</option>\n            </select>\n        </div>\n\n        <!-- Le formulaire -->\n        <form id=\"dynamicForm\">\n            <div id=\"inputField\"></div>\n            <button type=\"button\" id=\"submitButton\" class=\"hidden\">Valider les paramètres</button>\n        </form>\n\n        <!-- Section pour afficher les derniers paramètres soumis -->\n        <div id=\"lastSubmitted\" class=\"hidden\">\n            <h3>Derniers paramètres soumis :</h3>\n            <div id=\"submittedContent\"></div>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n    (function(scope) {\n        var inputField = document.getElementById('inputField');\n        var formTitle = document.getElementById('formTitle');\n        var maneuverSelect = document.getElementById('maneuverSelect');\n        var submitButton = document.getElementById('submitButton');\n        var lastSubmittedSection = document.getElementById('lastSubmitted');\n        var submittedContent = document.getElementById('submittedContent');\n        var selectedPayload = null;\n        var isFormSubmitted = false;\n\n        // Mapping des unités pour chaque champ\n        var fieldUnits = {\n            SMA_2: 'km',\n            SMA_int: 'km'\n        };\n\n        // Générer les champs du formulaire selon la manoeuvre sélectionnée\n        function generateForm(payload) {\n            if (!payload) {\n                inputField.innerHTML = \"\";\n                formTitle.innerText = \"Veuillez d'abord sélectionner une manoeuvre\";\n                submitButton.classList.add('hidden');\n                return;\n            }\n\n            // Met à jour le titre\n            formTitle.innerText = `Saisir les paramètres de la manoeuvre : ${payload}`;\n            selectedPayload = payload;\n\n            let formContent = \"\";\n            if (payload === \"Hohmann\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"SMA_2\">Demi-grand axe final SMA_2 (km)</label>\n                        <input type=\"text\" id=\"SMA_2\" name=\"SMA_2\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                `;\n            } else if (payload === \"Bi-elliptique\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"SMA_int\">Demi-grand axe intermédiaire SMA_int (km)</label>\n                        <input type=\"text\" id=\"SMA_int\" name=\"SMA_int\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"SMA_2\">Demi-grand axe final SMA_2 (km)</label>\n                        <input type=\"text\" id=\"SMA_2\" name=\"SMA_2\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                `;\n            } else if (payload === \"Inclinaison\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"input_5\">Intitulé du champ 5</label>\n                        <input type=\"text\" id=\"input_5\" name=\"input_5\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"input_6\">Intitulé du champ 6</label>\n                        <input type=\"text\" id=\"input_6\" name=\"input_6\" class=\"form-control\" />\n                    </div>\n                `;\n            } else if (payload === \"QLaw\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"input_7\">Intitulé du champ 7</label>\n                        <input type=\"text\" id=\"input_7\" name=\"input_7\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"input_8\">Intitulé du champ 8</label>\n                        <input type=\"text\" id=\"input_8\" name=\"input_8\" class=\"form-control\" />\n                    </div>\n                `;\n            }\n\n            inputField.innerHTML = formContent;\n            submitButton.classList.remove('hidden');\n        }\n\n        // Envoi des données\n        function sendData() {\n            var formData = {};\n            var elements = document.querySelectorAll('#dynamicForm input');\n\n            elements.forEach(function(input) {\n                if (input.name && input.value.trim() !== \"\") {\n                    formData[input.name] = input.value.trim();\n                }\n            });\n\n            var payload = {\n                ManeuverType: selectedPayload,\n                ...formData\n            };\n\n            if (Object.keys(formData).length > 0) {\n                scope.send({ payload: payload });\n                isFormSubmitted = false;\n                displayLastSubmitted(payload);\n\n                // Reset\n                inputField.innerHTML = \"\";\n                formTitle.innerText = \"Veuillez d'abord sélectionner une manoeuvre\";\n                maneuverSelect.value = \"\";\n                submitButton.classList.add('hidden');\n            } else {\n                alert(\"Veuillez remplir les champs avant de soumettre.\");\n            }\n        }\n\n        // Afficher les derniers paramètres soumis\n        function displayLastSubmitted(data) {\n            let htmlContent = `\n                <p><strong>Manoeuvre :</strong> ${data.ManeuverType}</p>\n                <ul>\n            `;\n            for (var key in data) {\n                if (data.hasOwnProperty(key) && key !== \"ManeuverType\") {\n                    var unit = fieldUnits[key] || '';\n                    var displayValue = data[key];\n                    if (unit) {\n                        displayValue += ` ${unit}`;\n                    }\n                    htmlContent += `<li><strong>${formatLabel(key)} :</strong> ${displayValue}</li>`;\n                }\n            }\n            htmlContent += `</ul>`;\n            submittedContent.innerHTML = htmlContent;\n            lastSubmittedSection.classList.remove('hidden');\n        }\n\n        // Formater les labels\n        function formatLabel(key) {\n            return key\n                .replace(/_/g, ' ')\n                .replace(/\\b\\w/g, function(l) { return l.toUpperCase(); });\n        }\n\n        // Gestion locale de la sélection\n        maneuverSelect.addEventListener('change', function() {\n            var payload = this.value;\n            isFormSubmitted = false;\n            generateForm(payload);\n        });\n\n        // Bouton de soumission\n        submitButton.onclick = function() {\n            isFormSubmitted = true;\n            if (inputField.innerHTML.trim() !== \"\") {\n                sendData();\n            } else {\n                alert(\"Veuillez sélectionner une manoeuvre avant de soumettre.\");\n            }\n        };\n\n        // État par défaut: submittable (enabled)\n        submitButton.disabled = false;\n\n        // Observer msg.payload uniquement pour le flag disableSubmit\n        scope.$watch('msg.payload', function(payload) {\n            if (!payload) return;\n\n            // Si disableSubmit est un booléen, on l'applique\n            if (typeof payload.disableSubmit === 'boolean') {\n                submitButton.disabled = payload.disableSubmit;\n            } else {\n                // Sinon, on remet le bouton en état \"enabled\"\n                submitButton.disabled = false;\n            }\n        });\n\n        // Réinitialiser isFormSubmitted après envoi\n        scope.on('input', function(msg) {\n            if (isFormSubmitted) {\n                isFormSubmitted = false;\n            }\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "b39b9a89efe9768c",
                "eee435e748ef1ec9",
                "39353fb8a1dc4a6f",
                "fab7183608daa4be",
                "c5d1e97a54fe3f2b",
                "55f3798586d1f287"
            ]
        ]
    },
    {
        "id": "eee435e748ef1ec9",
        "type": "exec",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "command": "cd /app/maneuver-manager/ && rm -rf ManeuverParameters2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 290,
        "y": 100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e0d86c1c42fbd148",
        "type": "debug",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "TEST PATh 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 80,
        "wires": []
    },
    {
        "id": "fab7183608daa4be",
        "type": "link out",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "Trigger Command Data Update",
        "mode": "link",
        "links": [
            "a341c799a803625b",
            "63da11381ae7cc3b"
        ],
        "x": 355,
        "y": 300,
        "wires": []
    },
    {
        "id": "34d9a375349ae7b3",
        "type": "inject",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 60,
        "y": 300,
        "wires": [
            [
                "6964e4842ea531d0"
            ]
        ]
    },
    {
        "id": "6964e4842ea531d0",
        "type": "function",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 300,
        "wires": [
            [
                "3ea015530f7d74c2"
            ]
        ]
    },
    {
        "id": "38208a861ba52b6e",
        "type": "link in",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "Enable / Disable Maneouver button",
        "links": [
            "43b5b85c781ed6ef",
            "c237d55736974799",
            "cd78f44cfafcedc6",
            "191af4d1144a9e5e"
        ],
        "x": 355,
        "y": 160,
        "wires": [
            [
                "3ea015530f7d74c2"
            ]
        ]
    },
    {
        "id": "d10825ab0b82ab88",
        "type": "function",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 200,
        "wires": [
            [
                "3ea015530f7d74c2"
            ]
        ]
    },
    {
        "id": "dadf84190d78d943",
        "type": "inject",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "d10825ab0b82ab88"
            ]
        ]
    },
    {
        "id": "55f3798586d1f287",
        "type": "change",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 180,
        "wires": [
            [
                "23589e9822251517",
                "e0d86c1c42fbd148"
            ]
        ]
    },
    {
        "id": "c5d1e97a54fe3f2b",
        "type": "delay",
        "z": "0b6378c01090c728",
        "g": "57c771c38920ce87",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 240,
        "wires": [
            [
                "089c1fb3e4d408f7"
            ]
        ]
    },
    {
        "id": "67aa5efb2967785b",
        "type": "link in",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "ErgolsConsommés",
        "links": [
            "cf0f69adcc6b101d"
        ],
        "x": 55,
        "y": 1340,
        "wires": [
            [
                "a4f1010740f0fe05",
                "584b18af6e118824",
                "fb8fe517ae0e6b5c"
            ]
        ]
    },
    {
        "id": "fb8fe517ae0e6b5c",
        "type": "change",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "Set path_15",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_15",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1420,
        "wires": [
            [
                "68eb42bd9d157f70",
                "741cf1b3dfea380f",
                "e7f81724b0d83183"
            ]
        ]
    },
    {
        "id": "584b18af6e118824",
        "type": "exec",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "command": "cd /app/maneuver-manager/ && rm -rf ConsommationErgols2.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 1540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a4f1010740f0fe05",
        "type": "debug",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c8ac3622c2fe8335",
        "type": "ui_template",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "group": "ef71537c5ac2b5d9",
        "name": "Affichage Conso",
        "order": 8,
        "width": 10,
        "height": 2,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Affichage Ergols</title>\n\n    <!-- Style pour masquer la barre de défilement tout en permettant le défilement -->\n    <style>\n        /* Conteneur principal pour masquer la barre de défilement */\n        .scroll-container {\n            height: 100vh;\n            overflow-y: scroll; /* Activer le défilement vertical */\n            scrollbar-width: none; /* Masquer la barre pour Firefox */\n        }\n\n        /* Masquer la barre de défilement pour Chrome, Safari, etc. */\n        .scroll-container::-webkit-scrollbar {\n            display: none; /* Masquer la barre de défilement */\n        }\n    </style>\n</head>\n\n<body>\n    <!-- Conteneur principal avec défilement masqué -->\n    <div class=\"scroll-container\">\n        <!-- Section pour afficher Ergols restants -->\n        <div class=\"result-display\">\n            Ergols disponibles avant manoeuvre (kg) : <span class=\"form2_ergolRemaining result-value\">--</span>\n        </div>\n\n        <!-- Section pour afficher Consommation d'ergols -->\n        <div class=\"result-display\">\n            Consommation d'ergols (kg) : <span class=\"form2_ergolResult result-value\">--</span>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        (function(customScope) {\n            // Utiliser $watch pour surveiller les changements dans le payload\n            customScope.$watch('msg.payload', function(payload) {\n                console.log(\"Payload reçu :\", payload); // Pour vérifier si le payload est bien reçu\n                if (payload) {\n                    let ergolsRestants;\n                if (Array.isArray(payload.path_14)) {\n                    // Exemple : on récupère l’élément [2] du tableau\n                    // (vous pouvez ajuster si nécessaire)\n                    ergolsRestants = payload.path_14[2];\n                } else if (typeof payload.path_14 === 'object') {\n                    // Si c’est un objet, prendre par exemple la clé \"ergol_mass\"\n                    // ou toute autre clé appropriée\n                    ergolsRestants = parseFloat(payload.path_14.ergol_mass) || 0.0;\n                } else {\n                    console.log(\"path_14 est manquant ou invalide\");\n                    return;\n                }\n\n                    // Mise à jour de la valeur \"Ergols restants\"\n                    let formattedErgolsRestants = ergolsRestants.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    let remainingElements = document.getElementsByClassName(\"form2_ergolRemaining\");\n                    for (let i = 0; i < remainingElements.length; i++) {\n                        remainingElements[i].textContent = formattedErgolsRestants + \" kg\";\n                    }\n\n                    // Récupérer la consommation d'ergols\n                    let consommation;\n                if (Array.isArray(payload.path_15)) {\n                    // Ex : on lit consommationErgols sur l'index [0]\n                    consommation = payload.path_15[0]?.consommationErgols;\n                } else if (typeof payload.path_15 === 'object') {\n                    // Ex : on lit ergol_consumption (ou autre champ)\n                    consommation = parseFloat(payload.path_15.ergol_consumption) || 0.0;\n                } else {\n                    console.log(\"path_15 est manquant ou invalide\");\n                    return;\n                }\n\n                    // Formattage en notation française\n                    let formattedConsommation = consommation.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    \n                    // Mettre à jour toutes les instances de consommation d'ergols\n                    let elements = document.getElementsByClassName(\"form2_ergolResult\");\n                    for (let i = 0; i < elements.length; i++) {\n                        elements[i].textContent = formattedConsommation + \" kg\";\n                    }\n                } else {\n                    console.log(\"Payload non valide ou consommationErgols manquant\");\n                }\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "ce526742b5bc5aa4",
        "type": "debug",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "ergols",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1240,
        "wires": []
    },
    {
        "id": "741cf1b3dfea380f",
        "type": "debug",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "PATH 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2b8b1bb00aa4b5c1",
        "type": "debug",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "PATH 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1420,
        "wires": []
    },
    {
        "id": "e7f81724b0d83183",
        "type": "change",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1420,
        "wires": [
            [
                "2b8b1bb00aa4b5c1",
                "68eb42bd9d157f70"
            ]
        ]
    },
    {
        "id": "ce3db67b0fbbef47",
        "type": "link in",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "",
        "links": [
            "5bc3fb588ccf8254"
        ],
        "x": 375,
        "y": 1360,
        "wires": [
            [
                "e7f81724b0d83183"
            ]
        ]
    },
    {
        "id": "68eb42bd9d157f70",
        "type": "join-wait",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "",
        "paths": "[\"path_14\",\"path_15\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "9a4424fa6214a2ad",
                "687de38dd90886fd"
            ],
            []
        ]
    },
    {
        "id": "9a4424fa6214a2ad",
        "type": "function",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "",
        "func": "// Suppose que msg.payload contient déjà des informations\nlet paths = msg.paths; // Supposons que les chemins sont dans msg.paths\n\n// Ajouter les informations de paths dans payload\nmsg.payload = paths;\n\n// Retourner le message avec paths inclus dans payload\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1180,
        "wires": [
            [
                "c8ac3622c2fe8335",
                "ce526742b5bc5aa4"
            ]
        ]
    },
    {
        "id": "4a6e401a8753e8c5",
        "type": "link in",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "",
        "links": [
            "3db42ae545d16dbe",
            "5fe6641201072922",
            "c05667073f962a99"
        ],
        "x": 375,
        "y": 1460,
        "wires": [
            [
                "e7f81724b0d83183"
            ]
        ]
    },
    {
        "id": "687de38dd90886fd",
        "type": "debug",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1240,
        "wires": []
    },
    {
        "id": "124c95c9f3d361e3",
        "type": "link in",
        "z": "0b6378c01090c728",
        "g": "0e7bf272a0e91508",
        "name": "",
        "links": [
            "3058f53f34d12d6a",
            "921ef1a8e9d9a5a4",
            "fa1e1ba9b76a52ce"
        ],
        "x": 175,
        "y": 1300,
        "wires": [
            [
                "fb8fe517ae0e6b5c"
            ]
        ]
    },
    {
        "id": "acc56415e85119ca",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 40,
        "wires": []
    },
    {
        "id": "5d0f58aad332dab9",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 120,
        "wires": []
    },
    {
        "id": "e9f54bd0bc7a0ec1",
        "type": "inject",
        "z": "0b6378c01090c728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2220,
        "y": 1120,
        "wires": [
            [
                "d881db2349576dc0"
            ]
        ]
    },
    {
        "id": "821f9b92043200a2",
        "type": "delay",
        "z": "0b6378c01090c728",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2130,
        "y": 640,
        "wires": [
            [
                "69efe8ba83e09a0c"
            ]
        ]
    },
    {
        "id": "9517644267161c70",
        "type": "change",
        "z": "0b6378c01090c728",
        "name": "label blue2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "blue2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2970,
        "y": 360,
        "wires": [
            [
                "b2fb73f3e3075cb1"
            ]
        ]
    },
    {
        "id": "b2fb73f3e3075cb1",
        "type": "link out",
        "z": "0b6378c01090c728",
        "name": "save last blue2",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 3105,
        "y": 360,
        "wires": []
    },
    {
        "id": "e16e412aa6ce5b3b",
        "type": "trigger",
        "z": "0b6378c01090c728",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3330,
        "y": 2400,
        "wires": [
            [
                "c938a40d2aa308bb"
            ]
        ]
    },
    {
        "id": "9c6ff21bb2e187ba",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4765,
        "y": 1610,
        "wires": []
    },
    {
        "id": "71378ca187c81caf",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST JOIN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4746,
        "y": 1665,
        "wires": []
    },
    {
        "id": "d96bf0bd9a626570",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST JOIN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4930,
        "y": 520,
        "wires": []
    },
    {
        "id": "f932e96f908b0559",
        "type": "debug",
        "z": "0b6378c01090c728",
        "name": "TEST ECHANGE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4949,
        "y": 333,
        "wires": []
    },
    {
        "id": "dcc01ab55b50a36f",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "r1 timesettermaneuver IN",
        "links": [
            "f2933fa8dba20ac9",
            "f53aa6e3c64b4915"
        ],
        "x": 465,
        "y": 880,
        "wires": [
            [
                "93a1f1f561f31a42"
            ]
        ]
    },
    {
        "id": "93a1f1f561f31a42",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 880,
        "wires": [
            [
                "ee05b083133f81b2",
                "6aa718beb636a5cc",
                "9bb578aef4ce31a4"
            ]
        ]
    },
    {
        "id": "a621b2a4739edd5b",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 820,
        "wires": [
            [
                "ee05b083133f81b2",
                "8f178a0e70614286"
            ]
        ]
    },
    {
        "id": "ee05b083133f81b2",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 810,
        "y": 880,
        "wires": [
            [
                "7a9bfb08c4c38b73"
            ],
            []
        ]
    },
    {
        "id": "7a9bfb08c4c38b73",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 860,
        "wires": [
            [
                "faccf638fd1bd751",
                "b32c693bd2e4f297",
                "212df3d76148db89"
            ]
        ]
    },
    {
        "id": "f4a69c0c6b6d694d",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 840,
        "wires": [
            [
                "dfb877cd2f115718"
            ]
        ]
    },
    {
        "id": "dfb877cd2f115718",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], 1, 0, 0, 1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 840,
        "wires": [
            [
                "72fef69b11230c9a"
            ]
        ]
    },
    {
        "id": "faccf638fd1bd751",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 780,
        "wires": [
            [
                "8cfd11b6b2080357",
                "3e656a0f65a2f45b"
            ]
        ]
    },
    {
        "id": "8cfd11b6b2080357",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[ \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1390,
        "y": 840,
        "wires": [
            [
                "f4a69c0c6b6d694d"
            ],
            []
        ]
    },
    {
        "id": "72fef69b11230c9a",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1960,
        "y": 840,
        "wires": [
            [
                "0dc9389e38be2123"
            ]
        ]
    },
    {
        "id": "0dc9389e38be2123",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2120,
        "y": 840,
        "wires": [
            [
                "5058e7275b06d156"
            ]
        ]
    },
    {
        "id": "5058e7275b06d156",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2330,
        "y": 840,
        "wires": [
            [
                "8c3d53c3e3558f7c"
            ]
        ]
    },
    {
        "id": "4dcf6543edea58b3",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 1020,
        "wires": [
            [
                "518467c4cecd79b8",
                "73d4070cf325e29b"
            ]
        ]
    },
    {
        "id": "9e8a1c9f32883714",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1160,
        "wires": [
            [
                "518467c4cecd79b8",
                "6a739fcd4aceaa38",
                "39196c6004dd37ff",
                "74b25dff8e2b6a9b"
            ]
        ]
    },
    {
        "id": "518467c4cecd79b8",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_8\",\"path_1\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1410,
        "y": 1020,
        "wires": [
            [
                "3f3fb00cea579f62",
                "58b59ae662a978d8"
            ],
            []
        ]
    },
    {
        "id": "31451bada327c7f8",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1080,
        "wires": [
            [
                "13d441bc854dba65"
            ]
        ]
    },
    {
        "id": "e9e195c16ddc108d",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "query for r1tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1180,
        "wires": [
            [
                "88c06aca88e0658b"
            ]
        ]
    },
    {
        "id": "88c06aca88e0658b",
        "type": "mongodb in",
        "z": "a45be5c622f6091e",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "9986af5f3f514c77",
                "31451bada327c7f8",
                "5345e4abd392e3e1",
                "ba4debfd39bdedb6"
            ]
        ]
    },
    {
        "id": "13d441bc854dba65",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1020,
        "y": 1080,
        "wires": [
            [
                "e2a4a890cbbe3a0b"
            ]
        ]
    },
    {
        "id": "b32c693bd2e4f297",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 920,
        "wires": [
            [
                "518467c4cecd79b8",
                "40e5ddb089ce2ce3",
                "74b25dff8e2b6a9b"
            ]
        ]
    },
    {
        "id": "6d14f1572003dc50",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1880,
        "y": 1120,
        "wires": [
            [
                "0c1d312ae5c25836",
                "ba9526d8f3c2840f"
            ]
        ]
    },
    {
        "id": "0c1d312ae5c25836",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2080,
        "y": 1120,
        "wires": [
            [
                "5e505ccd661971e1"
            ]
        ]
    },
    {
        "id": "5e505ccd661971e1",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2340,
        "y": 1120,
        "wires": [
            [
                "a1e1f905865e4061"
            ]
        ]
    },
    {
        "id": "f02393f1b7d75cf1",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1080,
        "wires": [
            [
                "6d14f1572003dc50",
                "e7acd0c30706f1b9"
            ]
        ]
    },
    {
        "id": "dc5c2052f323026b",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red1 -DcommandParameter=\"compute\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3060,
        "y": 980,
        "wires": [
            [
                "944d74f131dab2f2",
                "798b15f2b55b0baa",
                "8078c5a0afe72e65",
                "da5f890444221252",
                "f762a687393118a3"
            ],
            [
                "01b9e7056a4489d6",
                "b88b485e4d565da9",
                "798b15f2b55b0baa",
                "a73e2a8d1401d8f3",
                "62c5ce2a90fa207f",
                "5caa33c4176c1e37",
                "48cc764aa7135d31"
            ],
            []
        ]
    },
    {
        "id": "8c3d53c3e3558f7c",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 900,
        "wires": [
            [
                "05d49f45edf06d90",
                "1c569209a4aa2072"
            ]
        ]
    },
    {
        "id": "a1e1f905865e4061",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 1000,
        "wires": [
            [
                "05d49f45edf06d90",
                "f0273676138abbbf"
            ]
        ]
    },
    {
        "id": "05d49f45edf06d90",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\",\"path_10\"]",
        "pathsToExpire": "[ \"path_4\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "900",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2750,
        "y": 980,
        "wires": [
            [
                "475f8abe330f729a",
                "410eeaa599fb6173",
                "744fc3e813b96e9b",
                "dc5c2052f323026b",
                "68487bf51e60c0e3"
            ],
            []
        ]
    },
    {
        "id": "8078c5a0afe72e65",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "query to read Result3.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 780,
        "wires": [
            [
                "0a0d8c446a4bb7d9"
            ]
        ]
    },
    {
        "id": "0a0d8c446a4bb7d9",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3740,
        "y": 780,
        "wires": [
            [
                "35a1a84b8c629eb5"
            ]
        ]
    },
    {
        "id": "35a1a84b8c629eb5",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3930,
        "y": 780,
        "wires": [
            [
                "0a94a6408420b38f"
            ]
        ]
    },
    {
        "id": "0a94a6408420b38f",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3620,
        "y": 840,
        "wires": [
            [
                "dfb5449329564d32"
            ]
        ]
    },
    {
        "id": "dfb5449329564d32",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 900,
        "wires": [
            [
                "b664297b9be40f4e"
            ]
        ]
    },
    {
        "id": "b664297b9be40f4e",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 960,
        "wires": [
            [
                "566ed97fb19ab8be"
            ]
        ]
    },
    {
        "id": "e8ad069716b29b9a",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "update all for B1 OUT",
        "mode": "link",
        "links": [
            "4ac641f2a3d366c5",
            "f97955cb1a90dca4",
            "2a754af658e107d7",
            "1168e0151a783577",
            "4d4d54a87a2bb310"
        ],
        "x": 4275,
        "y": 920,
        "wires": []
    },
    {
        "id": "18b446d7231889e5",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "time of post-maneuver",
        "func": "// Ensure msg.body is an array\nif (!Array.isArray(msg.body)) {\n    node.error(\"msg.body is not an array\");\n    return null;\n}\n\nvar n = msg.body.length;\nvar datecurrent = null;\n\n// Loop backwards through msg.body to find the last non-empty element\nfor (var i = n - 1; i >= 0; i--) {\n    if (msg.body[i] !== \"\") {\n        datecurrent = msg.body[i];\n        break;\n    }\n}\n\n// Set msg.payload to the found value (or null if none found)\nmsg.payload = datecurrent;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 1140,
        "wires": [
            [
                "929ac74db7904331",
                "303bae4823c5c008",
                "d94d772448bc9fe4",
                "61956eb5bc977611"
            ]
        ]
    },
    {
        "id": "929ac74db7904331",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 1160,
        "wires": [
            [
                "127f691a8c02dffe"
            ]
        ]
    },
    {
        "id": "127f691a8c02dffe",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 1160,
        "wires": [
            [
                "927fd79efb539323"
            ]
        ]
    },
    {
        "id": "927fd79efb539323",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "query to fill b1 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 1220,
        "wires": [
            [
                "966523039757c388",
                "e78a565dc351cb89"
            ]
        ]
    },
    {
        "id": "966523039757c388",
        "type": "split",
        "z": "a45be5c622f6091e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3800,
        "y": 1220,
        "wires": [
            [
                "beac615087a39154",
                "e6b040767c53b715"
            ]
        ]
    },
    {
        "id": "beac615087a39154",
        "type": "mongodb out",
        "z": "a45be5c622f6091e",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert r1 time tle mongo",
        "collection": "peritimer1",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4080,
        "y": 1220,
        "wires": []
    },
    {
        "id": "1965ba4624ab3a79",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Tle b1-postMan-OUT",
        "mode": "link",
        "links": [
            "eaa764a3200e5895",
            "8c549ce61c13f241",
            "ce4f0fdb27bdb44e",
            "56e6a629bd1f59e2",
            "5b95d42e7eac28c8",
            "e24933176e964d7d",
            "5c2d917dc0d2c6f9"
        ],
        "x": 4485,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6c3ac4075fb00adf",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "5f6ecf562f36cdbb",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "MMB1",
        "info": "",
        "x": 250,
        "y": 180,
        "wires": []
    },
    {
        "id": "1421eccb79767769",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 230,
        "y": 700,
        "wires": []
    },
    {
        "id": "1e3fc6a4c4a38c99",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 110,
        "y": 780,
        "wires": []
    },
    {
        "id": "de76378b3977df81",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 340,
        "y": 780,
        "wires": []
    },
    {
        "id": "d3033b2fbfdb8f65",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 150,
        "y": 740,
        "wires": []
    },
    {
        "id": "303bae4823c5c008",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "red1-date-storage",
        "filename": "red1-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3980,
        "y": 1120,
        "wires": [
            [
                "7fb936064732bb93"
            ]
        ]
    },
    {
        "id": "4287785a29bcd685",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "8a1fd4563455b190",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1570,
        "y": 740,
        "wires": []
    },
    {
        "id": "400e92cbf6be19db",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 880,
        "wires": [
            [
                "d25a622c8b25482e",
                "808bfec3880a2125"
            ]
        ]
    },
    {
        "id": "c29069f9130ec605",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "fabrication de la string",
        "info": "",
        "x": 3790,
        "y": 1000,
        "wires": []
    },
    {
        "id": "60c52bc8d125f743",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 800,
        "y": 940,
        "wires": []
    },
    {
        "id": "44d95da465cf047c",
        "type": "catch",
        "z": "a45be5c622f6091e",
        "name": "",
        "scope": [
            "dc5c2052f323026b"
        ],
        "uncaught": false,
        "x": 3060,
        "y": 1040,
        "wires": [
            [
                "01b9e7056a4489d6"
            ]
        ]
    },
    {
        "id": "566ed97fb19ab8be",
        "type": "switch",
        "z": "a45be5c622f6091e",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4010,
        "y": 960,
        "wires": [
            [
                "d47d1e61783844f6",
                "3a5c1d57d96c283f",
                "7b41eb1d6e62cffc",
                "6923350019c1430e",
                "4c3935f6126e28b8",
                "29aa4632974f551f"
            ],
            []
        ]
    },
    {
        "id": "8b1bd4a9c52ea371",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4100,
        "y": 700,
        "wires": []
    },
    {
        "id": "7c09a1910b36928b",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4580,
        "y": 660,
        "wires": [
            [
                "adfd078d23f1890b",
                "0d2824830208f3c7"
            ]
        ]
    },
    {
        "id": "66ebe48ee67a1aa7",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "read red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3650,
        "y": 520,
        "wires": [
            [
                "6b2b7d1568f3be6a",
                "3d54cd3d168090ae"
            ]
        ]
    },
    {
        "id": "7bb0aa4f8cff5b2c",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Old tle storage",
        "filename": "red1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "6b2b7d1568f3be6a",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3860,
        "y": 560,
        "wires": [
            [
                "7bb0aa4f8cff5b2c",
                "d59da3f345e7fa21"
            ]
        ]
    },
    {
        "id": "e8eb572f828dc3f9",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "11/05/23",
        "info": "",
        "x": 4190,
        "y": 620,
        "wires": []
    },
    {
        "id": "6f05e6e5750f263f",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "TLE visualizer R1",
        "links": [
            "1ad21657b2842d69"
        ],
        "x": 3415,
        "y": 500,
        "wires": [
            [
                "66ebe48ee67a1aa7",
                "49a00345d42a82e7"
            ]
        ]
    },
    {
        "id": "b8ba65d923ce65d3",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "TLE visualizer R1 out",
        "mode": "link",
        "links": [
            "3e84b71925909505"
        ],
        "x": 4595,
        "y": 520,
        "wires": []
    },
    {
        "id": "d59da3f345e7fa21",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4040,
        "y": 560,
        "wires": [
            [
                "56c72b8747255658"
            ]
        ]
    },
    {
        "id": "56c72b8747255658",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4200,
        "y": 520,
        "wires": [
            [
                "460e91160a765b44",
                "250b061b3244f84f"
            ]
        ]
    },
    {
        "id": "e6e323cc7e678781",
        "type": "switch",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4500,
        "y": 520,
        "wires": [
            [
                "b8ba65d923ce65d3"
            ]
        ]
    },
    {
        "id": "460e91160a765b44",
        "type": "split",
        "z": "a45be5c622f6091e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4360,
        "y": 520,
        "wires": [
            [
                "e6e323cc7e678781"
            ]
        ]
    },
    {
        "id": "7d7cbbaf58e7d309",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "read red1-tle-storage",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3690,
        "y": 660,
        "wires": [
            [
                "c7fe75ec5325d5a8"
            ]
        ]
    },
    {
        "id": "c7fe75ec5325d5a8",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3880,
        "y": 660,
        "wires": [
            [
                "b74358ec2f0a28d9",
                "08eb09f20e071ec1"
            ]
        ]
    },
    {
        "id": "b74358ec2f0a28d9",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Old tle storage",
        "filename": "red1-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "250b061b3244f84f",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "echange",
        "func": "\nif(msg.payload[0].version == \"New TLE\" ){\n    var tmp =msg.payload[0];\n    msg.payload[0]= msg.payload[1];\n    msg.payload[1]=tmp;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4360,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "e2a4a890cbbe3a0b",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1160,
        "wires": [
            [
                "9e8a1c9f32883714"
            ]
        ]
    },
    {
        "id": "58b59ae662a978d8",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Data3.txt format",
        "func": "// Calculations from fixed paths remain unchanged\nvar N; // Mean motion in rev/day\nvar n; // Angular speed [rad/s]\nvar a; // semi-major axis\nvar acube; // a³\nvar e; // eccentricity\n\nvar mu = 398600.4418; // Earth's standard gravitational parameter\nvar J = 86400;      // Seconds in a day\n\n// Get the mean motion from path_2 (position [7] is assumed)\nN = msg.paths.path_2[7];\nn = 2 * Math.PI * N / J;  \nacube = mu / (n * n);\na = Math.cbrt(acube);\ne = Number(msg.paths.path_2[4]) / 10000000;\ne = Number(e.toFixed(7));\n\nvar durastop = msg.paths.path_3[0] + 1.0;\nvar thrust    = \"0\";\nvar dv        = \"0\";\nvar isp       = \"0\";\nvar drymass   = \"0\";\nvar ergolmass = \"0\";\nvar surface   = \"0\";\n\nvar myDate = new Date(msg.paths.path_3[1]);\nvar DATE = myDate.toISOString();\n\n// Vérification des valeurs provenant de path_1 (ou d'autres sources)\nif (!isNaN(msg.isp)) { \n    isp = msg.isp; \n}\nif (!isNaN(msg.paths.path_13[1])) { \n    ergolmass = msg.paths.path_13[1]; \n}\nif (!isNaN(msg.paths.path_13[0])) { \n    drymass = msg.paths.path_13[0]; \n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––\n  GENERIC EXTRA PARAMETER EXTRACTION\n  On suppose que les paramètres supplémentaires (par exemple, \"Maneuver_Type\", \"SMA_2\", \n  ou \"input_5\", \"input_6\", etc.) sont transmis dans un objet contenu dans msg.paths.path_8.\n–––––––––––––––––––––––––––––––––––––––––––––––*/\nvar extraHeaders = [];\nvar extraValues = [];\n\nif (msg.paths && msg.paths.path_8 && typeof msg.paths.path_8 === 'object') {\n  // On récupère les noms et valeurs des propriétés de l'objet extra\n  extraHeaders = Object.keys(msg.paths.path_8);\n  extraValues  = Object.values(msg.paths.path_8);\n} else {\n  node.warn(\"msg.paths.path_8 est indéfini ou non valide, aucun paramètre supplémentaire n'est ajouté.\");\n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––\n  ASSEMBLAGE FINAL DU PAYLOAD\n  La première entrée est une chaîne d'en-tête.\n  On garde les colonnes fixes puis on ajoute les colonnes issues du chemin précédent.\n–––––––––––––––––––––––––––––––––––––––––––––––*/\n// Les colonnes fixes\nvar fixedHeader = \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass\";\n// On ajoute dynamiquement les noms des colonnes supplémentaires, si elles existent\nvar header = fixedHeader + (extraHeaders.length ? \", \" + extraHeaders.join(\", \") : \"\");\n\n// On construit le tableau final en respectant le même format que précédemment\nmsg.payload = [\n  header,\n  DATE,\n  a,\n  e,\n  msg.paths.path_2[2],\n  msg.paths.path_2[3],\n  msg.paths.path_2[5],\n  msg.paths.path_2[6],\n  drymass,\n  surface,\n  thrust,\n  isp,\n  ergolmass\n].concat(extraValues);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1080,
        "wires": [
            [
                "f02393f1b7d75cf1"
            ]
        ]
    },
    {
        "id": "0633a0b1b9e2b143",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 820,
        "wires": [
            [
                "affea5697bfdef0c"
            ]
        ]
    },
    {
        "id": "affea5697bfdef0c",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 820,
        "wires": [
            [
                "a621b2a4739edd5b"
            ]
        ]
    },
    {
        "id": "5345e4abd392e3e1",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1020,
        "wires": [
            [
                "a0788663c6bed448"
            ]
        ]
    },
    {
        "id": "a0788663c6bed448",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 740,
        "y": 1020,
        "wires": [
            [
                "0633a0b1b9e2b143"
            ]
        ]
    },
    {
        "id": "de030abd03c23475",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 160,
        "y": 660,
        "wires": []
    },
    {
        "id": "69b106eac6802bbc",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 100,
        "y": 700,
        "wires": []
    },
    {
        "id": "49a00345d42a82e7",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 480,
        "wires": [
            [
                "56c72b8747255658"
            ]
        ]
    },
    {
        "id": "08eb09f20e071ec1",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4100,
        "y": 640,
        "wires": [
            [
                "7c09a1910b36928b",
                "6faa887f5461d671"
            ]
        ]
    },
    {
        "id": "01b9e7056a4489d6",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3210,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3d54cd3d168090ae",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3880,
        "y": 520,
        "wires": []
    },
    {
        "id": "212df3d76148db89",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 880,
        "wires": []
    },
    {
        "id": "8f178a0e70614286",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 820,
        "wires": []
    },
    {
        "id": "a805a6a944cb2230",
        "type": "comment",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 90,
        "y": 180,
        "wires": []
    },
    {
        "id": "3a5c1d57d96c283f",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4080,
        "y": 1020,
        "wires": [
            [
                "6c3ac4075fb00adf"
            ]
        ]
    },
    {
        "id": "d47d1e61783844f6",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 1040,
        "wires": [
            [
                "6923350019c1430e"
            ]
        ]
    },
    {
        "id": "6923350019c1430e",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 4475,
        "y": 960,
        "wires": []
    },
    {
        "id": "5df488ad41294053",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "var max=6;\nvar random = Math.floor(Math.random() * max);\n\nif (msg.payload.includes(\"hyperbolic orbits cannot be handled\")){\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\nelse if (msg.payload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (msg.payload.includes(\"Eccentricity\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver !\";\n}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3430,
        "y": 980,
        "wires": [
            [
                "b84e4288fd61ae53"
            ]
        ]
    },
    {
        "id": "b84e4288fd61ae53",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 3575,
        "y": 980,
        "wires": []
    },
    {
        "id": "6a9ccaeaa4f9d894",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3670,
        "y": 440,
        "wires": [
            [
                "66ebe48ee67a1aa7"
            ]
        ]
    },
    {
        "id": "0d176debd0898968",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3660,
        "y": 400,
        "wires": []
    },
    {
        "id": "cd323e640d5bc2ad",
        "type": "catch",
        "z": "a45be5c622f6091e",
        "name": "",
        "scope": [
            "66ebe48ee67a1aa7"
        ],
        "uncaught": false,
        "x": 3440,
        "y": 420,
        "wires": [
            [
                "6a9ccaeaa4f9d894",
                "0d176debd0898968"
            ]
        ]
    },
    {
        "id": "3f3fb00cea579f62",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 1020,
        "wires": []
    },
    {
        "id": "944d74f131dab2f2",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3410,
        "y": 720,
        "wires": []
    },
    {
        "id": "a88ae584df40ab8f",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST ISP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ba9526d8f3c2840f",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e7acd0c30706f1b9",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fa3595bffd2ea153",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 600,
        "wires": []
    },
    {
        "id": "9b997c8015e27b2f",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_8",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 640,
        "wires": [
            [
                "74b25dff8e2b6a9b",
                "784d88e1702ee4ab",
                "5881492c04513d6b",
                "518467c4cecd79b8"
            ]
        ]
    },
    {
        "id": "6a739fcd4aceaa38",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "PATH 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 1160,
        "wires": []
    },
    {
        "id": "73d4070cf325e29b",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 1080,
        "wires": []
    },
    {
        "id": "40e5ddb089ce2ce3",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "PATH 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 940,
        "wires": []
    },
    {
        "id": "3e656a0f65a2f45b",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 780,
        "wires": []
    },
    {
        "id": "1c569209a4aa2072",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 860,
        "wires": []
    },
    {
        "id": "f0273676138abbbf",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2950,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6aa718beb636a5cc",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9bb578aef4ce31a4",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1120,
        "wires": []
    },
    {
        "id": "acc69661e85c9b4c",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "query to read PostManeuverDate3.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 1040,
        "wires": [
            [
                "0bba70977136dfd0"
            ]
        ]
    },
    {
        "id": "0bba70977136dfd0",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/PostManeuverDate3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3760,
        "y": 1040,
        "wires": [
            [
                "7985fe1c8b26a299"
            ]
        ]
    },
    {
        "id": "7985fe1c8b26a299",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3790,
        "y": 1100,
        "wires": [
            [
                "c054c7f4e17b640e"
            ]
        ]
    },
    {
        "id": "c054c7f4e17b640e",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 1140,
        "wires": [
            [
                "b42eebc9da943a5c",
                "18b446d7231889e5"
            ]
        ]
    },
    {
        "id": "b42eebc9da943a5c",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e6b040767c53b715",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3480,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "9a194c76e0660ec8",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1740,
        "y": 880,
        "wires": [
            [
                "9ce9c7d858f01c16"
            ]
        ]
    },
    {
        "id": "9ce9c7d858f01c16",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1900,
        "y": 880,
        "wires": [
            [
                "0ef55da82e0dd2ce"
            ]
        ]
    },
    {
        "id": "0ef55da82e0dd2ce",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2080,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "073568b6553cf22f",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 880,
        "wires": [
            [
                "9a194c76e0660ec8"
            ]
        ]
    },
    {
        "id": "e0f4c0e1fbf2b918",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_7\",\"path_8\",\"path_9\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1090,
        "y": 680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "95184a3d0b19b2b0",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_9",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_9",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 680,
        "wires": [
            [
                "2007c17e908857fa"
            ]
        ]
    },
    {
        "id": "08646b6a33f3d1d6",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "ManeuverParameters3.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar pathArray = (msg.paths && msg.paths.path_2) ? Object.values(msg.paths.path_2) : [0, 0, 0, 0,0,0,0,0];\nvar pathArray2 = (msg.paths && msg.paths.path_10) ? Object.values(msg.paths.path_10) : [0];\n// Try reading path_17 as a single numeric value\nvar path17Val = 0;\nif (msg.paths && msg.paths.path_17 !== undefined) {\n    // Convert whatever is at path_17 into a Number (or default to 0 if invalid)\n    path17Val = Number(msg.paths.path_17) || 0;\n}\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray[1] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray[2] || 0; // Troisième élément ou 0 si non défini\nvar isp = pathArray[3] || 0; // Quatrième élément ou 0 si non défini\nvar maneuvertype = pathArray2[0] || 0; // Premier élément ou 0 si non défini\nvar SMA_2 = pathArray2[1] || 0; // Deuxième élément ou 0 si non défini\n\n// Vérifier si msg.paths.path_2 existe avant d'accéder à ses valeurs\nvar a; // semi-major axis\nvar acube; // acube = a³ \nvar N = (msg.paths && msg.paths.path_2 && msg.paths.path_2[7]) ? Number(msg.paths.path_2[7]) : 0;\nvar mu = 398600.4418;\nvar J = 86400;\nvar n;\n\nn = 2 * Math.PI * N / J;  // n = 2pi/T where T is the period\nacube = mu / (n * n); // acube = a³ \na = path17Val; // Cubic root for semi-major axis // Format de l'excentricité\n\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"ManeuverType, SMA_1,SMA_2\",\n    maneuvertype, a,SMA_2\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 440,
        "wires": [
            [
                "9ab2d7b401a8a4e3"
            ]
        ]
    },
    {
        "id": "9ab2d7b401a8a4e3",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/ManeuverParameters3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 500,
        "wires": [
            [
                "b7e09434b8fcaa4a",
                "6db55a0cfefd5d97"
            ]
        ]
    },
    {
        "id": "b7e09434b8fcaa4a",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1360,
        "y": 500,
        "wires": [
            [
                "4021b6819c48e6f4",
                "4590d6898a8a099c"
            ]
        ]
    },
    {
        "id": "4021b6819c48e6f4",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1540,
        "y": 520,
        "wires": [
            [
                "eef3281c6e1a8db2"
            ]
        ]
    },
    {
        "id": "eef3281c6e1a8db2",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1720,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "4590d6898a8a099c",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 460,
        "wires": []
    },
    {
        "id": "6db55a0cfefd5d97",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 420,
        "wires": []
    },
    {
        "id": "6d975cc55e1e2fc4",
        "type": "ui_template",
        "z": "a45be5c622f6091e",
        "group": "3befc064653e026e",
        "name": "RED1 Vehicule template",
        "order": 7,
        "width": 10,
        "height": "1",
        "format": "<style>\n    .form-container2 {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        overflow-x: hidden;\n        margin-top: 1px;\n    }\n\n    .parameters-row {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 5px;\n        margin-top: 5px;\n    }\n\n    .column {\n        flex: 1;\n        padding: 0 10px;\n        max-width: 300px;\n        box-sizing: border-box;\n    }\n\n    .md-input-container {\n        width: 100%;\n        margin: 20px 20px;\n        color: #ffffff !important;\n        \n    }\n\n    .md-input-container label {\n        color: #ffffff !important;\n    }\n\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 10px;\n    }\n\n    .third-row {\n        margin-bottom: 10px;\n    }\n\n    .result-display {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 18px;\n        color: white;\n        margin: 15px 0;\n    }\n\n    .result-value {\n        font-weight: bold;\n        color: #ffcc00;\n    }\n</style>\n\n<!-- HTML form structure -->\n<form id=\"myForm2\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n    <div class=\"form-container2\">\n        <!-- Centered Surface field with a top margin -->\n        <div class=\"parameters-row\">\n            <div class=\"column\">\n                <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n                    <label for=\"form2_isp\">ISP (s)</label>\n                    <input type=\"text\" id=\"form2_isp\" name=\"isp\" ng-model=\"msg.payload.isp\" ng-change=\"send({payload: msg.payload})\">\n                </md-input-container>\n            </div>\n        </div>\n\n    </div>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 1180,
        "wires": [
            [
                "a88ae584df40ab8f",
                "95184a3d0b19b2b0",
                "d62cac4bfac3a4ac",
                "e9e195c16ddc108d",
                "3b033fc0ce521547",
                "240840ee5b944dbd"
            ]
        ]
    },
    {
        "id": "3b033fc0ce521547",
        "type": "ui_template",
        "z": "a45be5c622f6091e",
        "group": "3befc064653e026e",
        "name": "RED1 Vehicule Submit",
        "order": 9,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 20px;\n    }\n</style>\n\n<div class=\"button-container\">\n    <!-- Utilisation de ng-click pour envoyer msg.payload au clic -->\n    <button type=\"submit\" id=\"submitButtonb1\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">\n    Submit\n  </button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "0bc595fbf4245188"
            ]
        ]
    },
    {
        "id": "39196c6004dd37ff",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_10\",\"path_2\",\"path_17\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 890,
        "y": 500,
        "wires": [
            [
                "08646b6a33f3d1d6",
                "87c0c6df75d006ce"
            ],
            []
        ]
    },
    {
        "id": "2007c17e908857fa",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 560,
        "wires": []
    },
    {
        "id": "fecea9c583690501",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red1 -DcommandParameter=\"calculateMass\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 2110,
        "y": 420,
        "wires": [
            [
                "1c25ba09fc9e45a4",
                "d08e7c547f762888"
            ],
            [
                "962507df70eb7717"
            ],
            []
        ]
    },
    {
        "id": "1c25ba09fc9e45a4",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ConsommationErgols3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2360,
        "y": 420,
        "wires": [
            [
                "361e0260cfe46f19"
            ]
        ]
    },
    {
        "id": "f21ad6d75ba926f6",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 420,
        "wires": [
            [
                "7951a6856ab25a15",
                "f39aea9d7831b95c"
            ]
        ]
    },
    {
        "id": "7951a6856ab25a15",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.consommationErgols = parseFloat(msg.payload[n-1])\n\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 420,
        "wires": [
            [
                "1a7b5204f253deac",
                "7a51bc3b1c17f7e0"
            ]
        ]
    },
    {
        "id": "1a7b5204f253deac",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3220,
        "y": 420,
        "wires": []
    },
    {
        "id": "361e0260cfe46f19",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2540,
        "y": 420,
        "wires": [
            [
                "f21ad6d75ba926f6"
            ]
        ]
    },
    {
        "id": "7a51bc3b1c17f7e0",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "ConsommationErgols",
        "mode": "link",
        "links": [
            "1c38f2df24292dfc"
        ],
        "x": 3185,
        "y": 480,
        "wires": []
    },
    {
        "id": "b1dc7e6dbad063d0",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ManeuverParameters.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1800,
        "y": 480,
        "wires": [
            [
                "62a352fa462d6010"
            ]
        ]
    },
    {
        "id": "62a352fa462d6010",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1980,
        "y": 480,
        "wires": [
            [
                "737dba709277c7f1"
            ]
        ]
    },
    {
        "id": "eb186b1c400640b9",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Ergols3.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar pathArray = (msg.paths && msg.paths.path_11) ? Object.values(msg.paths.path_11) : [0, 0];\nvar pathArray2 = (msg.paths && msg.paths.path_12) ? msg.paths.path_12 : [0];\nvar pathArray3 = (msg.paths && msg.paths.path_13) ? msg.paths.path_13 : [0,0,0];\n\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray3[0] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray3[1] || 0; // Troisième élément ou 0 si non défini\nvar isp = pathArray[0] || 0; // Quatrième élément ou 0 si non défini\nvar maneuvertype = pathArray2[1] || 0; // Premier élément ou 0 si non défini\nvar SMA_1 = pathArray2[2] || 0; // Deuxième élément ou 0 si non défini\nvar SMA_2 = pathArray2[3]\n// Vérifier si msg.paths.path_2 existe avant d'accéder à ses valeurs\nvar a = (msg.paths && msg.paths.path_12 && msg.paths.path_12[2]) ? Number(msg.paths.path_12[2]) : 0;\n\n\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"DryMass, ErgolMass, ISP, ManeuverType, SMA_1, SMA_2\",\n    drymass, ergolmass, isp, maneuvertype, a, SMA_2\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 500,
        "wires": [
            [
                "13d58aac842eb1fc",
                "f67104029f8ac58f"
            ]
        ]
    },
    {
        "id": "13d58aac842eb1fc",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Ergols3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 560,
        "wires": [
            [
                "afa803226469bcf5",
                "518e1c5f3ffa5c11"
            ]
        ]
    },
    {
        "id": "afa803226469bcf5",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2900,
        "y": 600,
        "wires": [
            [
                "610fb7d10a4d99d5",
                "b10e78ca7f02cd90"
            ]
        ]
    },
    {
        "id": "610fb7d10a4d99d5",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3090,
        "y": 620,
        "wires": [
            [
                "13cd1cf4cd74b196"
            ]
        ]
    },
    {
        "id": "b10e78ca7f02cd90",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3070,
        "y": 580,
        "wires": []
    },
    {
        "id": "518e1c5f3ffa5c11",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2900,
        "y": 560,
        "wires": []
    },
    {
        "id": "13cd1cf4cd74b196",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3270,
        "y": 620,
        "wires": [
            [
                "4c860c312cd63b9c"
            ]
        ]
    },
    {
        "id": "d62cac4bfac3a4ac",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1240,
        "wires": [
            [
                "475bcad2979a200f",
                "92012f0f4a602e86"
            ]
        ]
    },
    {
        "id": "475bcad2979a200f",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_11\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 710,
        "y": 1240,
        "wires": [
            [
                "b1dc7e6dbad063d0",
                "f3a410f6033e1f45"
            ],
            []
        ]
    },
    {
        "id": "921a7fac195b48a5",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2500,
        "y": 460,
        "wires": []
    },
    {
        "id": "737dba709277c7f1",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 480,
        "wires": [
            [
                "f3a410f6033e1f45",
                "fddd530c43f2862d"
            ]
        ]
    },
    {
        "id": "f3a410f6033e1f45",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[ \"path_11\", \"path_12\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2330,
        "y": 540,
        "wires": [
            [
                "921a7fac195b48a5",
                "17aca1cb78f59fb8",
                "eb186b1c400640b9"
            ],
            []
        ]
    },
    {
        "id": "92012f0f4a602e86",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "PATH 11 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1300,
        "wires": []
    },
    {
        "id": "fddd530c43f2862d",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 540,
        "wires": []
    },
    {
        "id": "17aca1cb78f59fb8",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST ERGOLS TXT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 600,
        "wires": []
    },
    {
        "id": "d2bae3e62b5797ad",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Sorties Ergols",
        "mode": "link",
        "links": [
            "587893bca53cc827"
        ],
        "x": 3545,
        "y": 620,
        "wires": []
    },
    {
        "id": "587893bca53cc827",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "Entrée Erglos",
        "links": [
            "d2bae3e62b5797ad"
        ],
        "x": 1905,
        "y": 420,
        "wires": [
            [
                "fecea9c583690501"
            ]
        ]
    },
    {
        "id": "f39aea9d7831b95c",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2940,
        "y": 480,
        "wires": []
    },
    {
        "id": "4c860c312cd63b9c",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3420,
        "y": 620,
        "wires": [
            [
                "d2bae3e62b5797ad"
            ]
        ]
    },
    {
        "id": "d94d772448bc9fe4",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3790,
        "y": 1280,
        "wires": []
    },
    {
        "id": "e852ef4233da6b9c",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1220,
        "wires": [
            [
                "f3a410f6033e1f45",
                "ccae6a107f94eb9a",
                "518467c4cecd79b8",
                "74b25dff8e2b6a9b"
            ]
        ]
    },
    {
        "id": "ba4debfd39bdedb6",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "ergols",
        "func": "if (msg.payload && msg.payload[0]) {\n    // Assurez-vous que les propriétés existent et ne sont pas null avant de les insérer dans le tableau\n    const dry_mass = msg.payload[0].dry_mass !== undefined ? msg.payload[0].dry_mass : 0;\n    const ergol_mass = msg.payload[0].ergol_mass !== undefined ? msg.payload[0].ergol_mass : 0;\n    const ergol_consumption = msg.payload[0].ergol_consumption !== null && msg.payload[0].ergol_consumption !== undefined ? msg.payload[0].ergol_consumption : 0.0;\n\n    // Créer un tableau avec les valeurs\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"Le payload ne contient pas les données attendues.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1180,
        "wires": [
            [
                "d6e3594812fd6090"
            ]
        ]
    },
    {
        "id": "d6e3594812fd6090",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 800,
        "y": 1180,
        "wires": [
            [
                "ea27b5bfd689d273"
            ]
        ]
    },
    {
        "id": "ea27b5bfd689d273",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "object to array",
        "func": "// Découper le CSV en lignes\nlet csvData = msg.payload.split('\\n');\n\n// Vérifier si la deuxième ligne existe\nif (csvData.length > 1) {\n    // Récupérer la deuxième ligne (index 1)\n    let secondLine = csvData[1].trim();\n\n    // Découper la deuxième ligne par espaces ou tabulations\n    let values = secondLine.split(/\\s+/); // Utilisation de \\s+ pour capturer les espaces multiples\n\n    // Convertir les valeurs en nombres (si applicable)\n    let dry_mass = parseFloat(values[0]) || 0;\n    let ergol_mass = parseFloat(values[1]) || 0;\n    let ergol_consumption = parseFloat(values[2]) || 0;\n\n    // Placer les valeurs dans un tableau\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"La deuxième ligne n'existe pas.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1220,
        "wires": [
            [
                "e852ef4233da6b9c"
            ]
        ]
    },
    {
        "id": "9986af5f3f514c77",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST B1 TLE LATEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1360,
        "wires": []
    },
    {
        "id": "ccae6a107f94eb9a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "PATH 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 1220,
        "wires": []
    },
    {
        "id": "adfd078d23f1890b",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Out Maneuvre prédéfinie r1",
        "mode": "link",
        "links": [
            "4570b59cbe263a1a"
        ],
        "x": 4775,
        "y": 540,
        "wires": []
    },
    {
        "id": "93469e58b0cca3ed",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "Ergol Mass Update",
        "links": [
            "2a1e9040f57c85ee"
        ],
        "x": 215,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f67104029f8ac58f",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "ergols",
        "mode": "link",
        "links": [
            "f1a5d3c695f0d1fd",
            "1cd7ae11b7249260"
        ],
        "x": 2815,
        "y": 500,
        "wires": []
    },
    {
        "id": "f1a5d3c695f0d1fd",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "f67104029f8ac58f"
        ],
        "x": 75,
        "y": 1120,
        "wires": [
            [
                "df2704ffc9cbb976"
            ]
        ]
    },
    {
        "id": "df2704ffc9cbb976",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "2142c285e9dcfbd4",
        "type": "mqtt in",
        "z": "a45be5c622f6091e",
        "name": "",
        "topic": "resultat/fichier3",
        "qos": "2",
        "datatype": "auto",
        "broker": "e688816fa768592b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2330,
        "y": 740,
        "wires": [
            [
                "224d769c27e4820a",
                "3d84be6b5506dc78",
                "6ecae73f602f3980",
                "a68d6130067153bc",
                "7801b79e0d3a8f56"
            ]
        ]
    },
    {
        "id": "224d769c27e4820a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "MQTT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 780,
        "wires": []
    },
    {
        "id": "93f259dc09b83202",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "TIMESTAMP",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 1060,
        "wires": []
    },
    {
        "id": "a68d6130067153bc",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2860,
        "y": 740,
        "wires": [
            [
                "acc69661e85c9b4c"
            ]
        ]
    },
    {
        "id": "ef64fa1402604583",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "query to read Result3.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4440,
        "y": 1180,
        "wires": [
            [
                "6377b3eea624a263"
            ]
        ]
    },
    {
        "id": "6377b3eea624a263",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4680,
        "y": 1180,
        "wires": [
            [
                "2bcf7ba73f8e0435"
            ]
        ]
    },
    {
        "id": "2bcf7ba73f8e0435",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4880,
        "y": 1180,
        "wires": [
            [
                "84596c77a3986df4"
            ]
        ]
    },
    {
        "id": "84596c77a3986df4",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4400,
        "y": 1240,
        "wires": [
            [
                "d86bb69984d41a17"
            ]
        ]
    },
    {
        "id": "d86bb69984d41a17",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4610,
        "y": 1240,
        "wires": [
            [
                "715baeb3a968de09"
            ]
        ]
    },
    {
        "id": "715baeb3a968de09",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 1300,
        "wires": [
            [
                "87ac64d188db1f0a",
                "6302b793c1d7bcb1",
                "7d9cdc239b4a7f5b"
            ]
        ]
    },
    {
        "id": "87ac64d188db1f0a",
        "type": "switch",
        "z": "a45be5c622f6091e",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4770,
        "y": 1300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6302b793c1d7bcb1",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ede046e780b859f6",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "cb9efc3cb62637db",
            "b86ad223f85a4338"
        ],
        "x": 4205,
        "y": 1140,
        "wires": [
            [
                "ef64fa1402604583",
                "4437569fe40918eb",
                "a5bacd787a65237b",
                "9a73315ac6b28d25"
            ]
        ]
    },
    {
        "id": "4437569fe40918eb",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4400,
        "y": 1140,
        "wires": []
    },
    {
        "id": "bbb4f70ba4554f47",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4650,
        "y": 920,
        "wires": [
            [
                "6452f82d69eb11a9",
                "4448640aec475fa3"
            ]
        ]
    },
    {
        "id": "6452f82d69eb11a9",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 1000,
        "wires": []
    },
    {
        "id": "06484146564372d2",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4660,
        "y": 800,
        "wires": [
            [
                "1cc34fa2c6b5bed4"
            ]
        ]
    },
    {
        "id": "f1e669e9a74059e1",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "AP Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4770,
        "y": 840,
        "wires": []
    },
    {
        "id": "5eb8b3cb487a37cc",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4240,
        "y": 680,
        "wires": [
            [
                "7c09a1910b36928b"
            ]
        ]
    },
    {
        "id": "4448640aec475fa3",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": " Load",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4580,
        "y": 720,
        "wires": [
            [
                "8b75c4c33fd5b297",
                "ea4b5cba499fd050"
            ]
        ]
    },
    {
        "id": "8b75c4c33fd5b297",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4880,
        "y": 720,
        "wires": [
            [
                "4609769246099fe5",
                "0f7efc4322df9d94"
            ]
        ]
    },
    {
        "id": "92f80a10bd9a56dd",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4030,
        "y": 1520,
        "wires": [
            [
                "49aff2ec9a52ea69",
                "62234bdbb61c0e30"
            ]
        ]
    },
    {
        "id": "49aff2ec9a52ea69",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4320,
        "y": 1480,
        "wires": [
            [
                "d40b95af97f2ca26",
                "45d4d90b3b18c93d"
            ]
        ]
    },
    {
        "id": "45d4d90b3b18c93d",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4510,
        "y": 1480,
        "wires": [
            [
                "c0e0f3c3bda47ba7",
                "2fad42569cd4f5a5"
            ],
            []
        ]
    },
    {
        "id": "c0e0f3c3bda47ba7",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Data3.txt format",
        "func": "// Initialize variables\nvar tab = [];\nvar gs = {};\n\n// Split line #2 of the TLE robustly:\n// - trim() removes any leading/trailing spaces\n// - split(/\\s+/) splits on ANY run of whitespace\nvar tle = msg.payload[2].trim().split(/\\s+/);\n\nvar N;      // Mean motion in rev/day (not used below, just declared)\nvar n;      // ...\nvar a;      // Semi-major axis\nvar acube;  // a^3\nvar e;      // eccentricity\n\n// Earth's standard gravitational parameter, etc.\nvar mu = 398600.4418;\nvar J = 86400; // A day in seconds\n\n// From the TLE array\ngs.incli = String(tle[2]);\ngs.raan  = String(tle[3]);\ngs.ecc   = String(tle[4]);\ngs.aop   = String(tle[5]);\ngs.meana = String(tle[6]);\ngs.mean  = String(tle[7]);\n\n// From the rest of payload\ngs.dry_mass          = parseFloat(msg.payload[3]);\ngs.ergol_consumption = parseFloat(msg.payload[5]);\ngs.ergol_mass        = parseFloat(msg.payload[4]);\n\n// Attach everything back to msg and return\nmsg.payload = gs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4790,
        "y": 1480,
        "wires": [
            [
                "ffe5118d65d83aab",
                "bbb4f70ba4554f47"
            ]
        ]
    },
    {
        "id": "d40b95af97f2ca26",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "LAST TLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4520,
        "y": 1520,
        "wires": []
    },
    {
        "id": "fefb011d5e3d48aa",
        "type": "mongodb in",
        "z": "a45be5c622f6091e",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 3810,
        "y": 1520,
        "wires": [
            [
                "69a109f7c2f3fed5",
                "92f80a10bd9a56dd"
            ]
        ]
    },
    {
        "id": "69a109f7c2f3fed5",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a5bacd787a65237b",
        "type": "trigger",
        "z": "a45be5c622f6091e",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3600,
        "y": 1520,
        "wires": [
            [
                "fefb011d5e3d48aa"
            ]
        ]
    },
    {
        "id": "2fad42569cd4f5a5",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4780,
        "y": 1440,
        "wires": []
    },
    {
        "id": "62234bdbb61c0e30",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4320,
        "y": 1540,
        "wires": []
    },
    {
        "id": "ffe5118d65d83aab",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4800,
        "y": 1540,
        "wires": []
    },
    {
        "id": "7d9cdc239b4a7f5b",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 1340,
        "wires": []
    },
    {
        "id": "74b25dff8e2b6a9b",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_2\",\"path_8\",\"path_13\",\"path_18\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1290,
        "y": 1340,
        "wires": [
            [
                "5665818c514e309e",
                "d2db717bb2c2b6e7"
            ],
            []
        ]
    },
    {
        "id": "5665818c514e309e",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "CommandData3.txt format",
        "func": "var N;       // Mean motion in rev/day\nvar n;       // Angular speed in rad/s\nvar a;       // semi-major axis\nvar acube;   // a³\nvar e;       // eccentricity\n\nvar mu = 398600.4418; // Earth's standard gravitational parameter\nvar J  = 86400;       // Seconds in a day\n\n// Calculations from path_2\nN     = msg.paths.path_2[7];              // Mean motion [rev/day]\nn     = 2 * Math.PI * N / J;              // Angular speed: n = 2π/T\nacube = mu / (n * n);                     // a³ = μ/n²\ne     = Number(msg.paths.path_2[4]) / 10000000; // Normalize eccentricity from TLE format\ne     = e.toFixed(7);                     // Format eccentricity\n\n// Get the value for 'a' from path_18 (if provided)\nvar path18Val = 0;\nif (msg.paths && msg.paths.path_18 !== undefined) {\n    // Convert the value to a Number (default to 0 if invalid)\n    path18Val = Number(msg.paths.path_18) || 0;\n}\na = path18Val;\n\nvar thrust    = \"0\";\nvar dv        = \"0\";\nvar isp       = \"0\";\nvar drymass   = \"0\";\nvar ergolmass = \"0\";\nvar surface   = \"0\";\nvar DATE      = \"\"; // You can set DATE accordingly if needed\n\n// Set ergolmass and drymass from path_13 if the values are valid numbers\nif (!isNaN(msg.paths.path_13[1])) { ergolmass = msg.paths.path_13[1]; }\nif (!isNaN(msg.paths.path_13[0])) { drymass   = msg.paths.path_13[0]; }\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––––––––––\n  EXTRA PARAMETERS: Dynamic extraction from msg.paths.path_8\n  Instead of hardcoding extra fields (e.g., Maneuver_Type, SMA_2, ecc_2),\n  we build the header and the row dynamically from the object keys/values.\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––*/\nvar extraHeaders = [];\nvar extraValues  = [];\nif (msg.paths && msg.paths.path_8 && typeof msg.paths.path_8 === 'object') {\n    extraHeaders = Object.keys(msg.paths.path_8);\n    extraValues  = Object.values(msg.paths.path_8);\n} else {\n    node.warn(\"msg.paths.path_8 est indéfini ou non valide. Aucun paramètre supplémentaire n'est ajouté.\");\n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––––––––––\n  ASSEMBLE FINAL PAYLOAD\n  The first element is the header string (fixed columns plus extra columns),\n  and the second is the data row (in the same order).\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––*/\n// Fixed header columns\nvar fixedHeader = \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass\";\n\n// Combine fixed header with dynamically extracted extra header columns\nvar header = fixedHeader;\nif (extraHeaders.length > 0) {\n    header += \", \" + extraHeaders.join(\", \");\n}\n\n// Build the fixed portion of the data row\nvar dataRow = [\n    DATE,\n    a,\n    e,\n    msg.paths.path_2[2],\n    msg.paths.path_2[3],\n    msg.paths.path_2[5],\n    msg.paths.path_2[6],\n    drymass,\n    surface,\n    thrust,\n    isp,\n    ergolmass\n];\n\n// Append the extra values dynamically (they could be \"Maneuver_Type\", \"SMA_2\", \"ecc_2\" or others)\ndataRow = dataRow.concat(extraValues);\n\n// Set the final payload with the header as the first element and the data row as the second\nmsg.payload = [ header ].concat(dataRow);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1320,
        "wires": [
            [
                "73ac59dfd5dfdb97"
            ]
        ]
    },
    {
        "id": "73ac59dfd5dfdb97",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/CommandData3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 1320,
        "wires": [
            [
                "59bcc5ff0b5e744d"
            ]
        ]
    },
    {
        "id": "59bcc5ff0b5e744d",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1900,
        "y": 1320,
        "wires": [
            [
                "a370136994058246"
            ]
        ]
    },
    {
        "id": "a370136994058246",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2080,
        "y": 1320,
        "wires": [
            [
                "499693b17b8d52a4"
            ]
        ]
    },
    {
        "id": "499693b17b8d52a4",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2260,
        "y": 1320,
        "wires": [
            [
                "8bf787dd1f883019",
                "143b877b97aac995"
            ]
        ]
    },
    {
        "id": "d2db717bb2c2b6e7",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "comman",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1400,
        "wires": []
    },
    {
        "id": "8270e30c8cfd84b5",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "COMMAND DATA",
        "mode": "link",
        "links": [
            "01dc28fdb7452259"
        ],
        "x": 2735,
        "y": 1320,
        "wires": []
    },
    {
        "id": "8bf787dd1f883019",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red1 -DcommandParameter=\"determineOrbitInstant\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 2500,
        "y": 1320,
        "wires": [
            [
                "aa7108e8f52a2706",
                "8270e30c8cfd84b5"
            ],
            [
                "e49cc16a2565a23a"
            ],
            [
                "355d87899eb4a143"
            ]
        ]
    },
    {
        "id": "355d87899eb4a143",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "APSIDE RETURN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 1400,
        "wires": []
    },
    {
        "id": "e49cc16a2565a23a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "APSIDE ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 1220,
        "wires": []
    },
    {
        "id": "aa7108e8f52a2706",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "APSIDE OBJECT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 1160,
        "wires": []
    },
    {
        "id": "6faa887f5461d671",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TLE RED1 BEFORE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4370,
        "y": 620,
        "wires": []
    },
    {
        "id": "15e22961e1824e2a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TLE RED1 AFTER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4360,
        "y": 740,
        "wires": []
    },
    {
        "id": "784d88e1702ee4ab",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST PATH_8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 700,
        "wires": []
    },
    {
        "id": "d3fdeed58b41ceee",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ab435d4089067dc1",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/TimeIntermediateParameters3.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 580,
        "wires": [
            [
                "1dbf7a7906d8819d"
            ]
        ]
    },
    {
        "id": "1dbf7a7906d8819d",
        "type": "csv",
        "z": "a45be5c622f6091e",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1400,
        "y": 580,
        "wires": [
            [
                "0f4b326e76f5356f"
            ]
        ]
    },
    {
        "id": "0f4b326e76f5356f",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1580,
        "y": 580,
        "wires": [
            [
                "882963c7fce6a3a3"
            ]
        ]
    },
    {
        "id": "882963c7fce6a3a3",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1800,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "5881492c04513d6b",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "TimeIntermediateParameters3.txt format",
        "func": "// Retrieve the incoming payload\nvar payload = msg.payload;\n\nif (payload && typeof payload === 'object') {\n    // List of keys to ignore (system keys, etc.)\n    var ignoreKeys = [\"socketid\", \"_msgid\", \"paths\"];\n    \n    // Get all keys from the payload except those in ignoreKeys\n    var keys = Object.keys(payload).filter(function(key) {\n        return ignoreKeys.indexOf(key) === -1;\n    });\n    \n    // Create a header string: a comma separated list of the keys\n    var header = keys.join(\", \");\n    \n    // Get the corresponding values in the same order\n    var values = keys.map(function(key) {\n        return payload[key];\n    });\n    \n    // Set the output payload as an array with the header as the first element\n    // followed by the values\n    msg.payload = [header].concat(values);\n} else {\n    node.warn(\"The incoming payload is undefined or not an object.\");\n    msg.payload = [\"No valid data\"];\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 580,
        "wires": [
            [
                "ab435d4089067dc1"
            ]
        ]
    },
    {
        "id": "0cbb9426de836acf",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "3eeb63580a19ce99"
        ],
        "x": 2235,
        "y": 1380,
        "wires": [
            [
                "8bf787dd1f883019"
            ]
        ]
    },
    {
        "id": "0bc595fbf4245188",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup35',topic:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 940,
        "wires": [
            [
                "2d0d973a2f5a374c",
                "f758aea01c369809"
            ]
        ]
    },
    {
        "id": "bf3befb4928638fe",
        "type": "switch",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui35",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "e9e195c16ddc108d",
                "ea37b0af0b30c12a",
                "136ce14b01e66c0d",
                "2d9db66cb98db106"
            ]
        ]
    },
    {
        "id": "2d9db66cb98db106",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST ISP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 940,
        "wires": []
    },
    {
        "id": "2d0d973a2f5a374c",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST POPUP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 900,
        "wires": []
    },
    {
        "id": "ea37b0af0b30c12a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Test switch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 960,
        "wires": []
    },
    {
        "id": "136ce14b01e66c0d",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "object to array",
        "func": "msg.payload=msg.topic;\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 960,
        "wires": [
            [
                "0b4021c9042f41ab",
                "4dcf6543edea58b3",
                "57c4c21bfc315c81"
            ]
        ]
    },
    {
        "id": "0b4021c9042f41ab",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST CONVERT PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 920,
        "wires": []
    },
    {
        "id": "0d2824830208f3c7",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TLE Maneuver",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4730,
        "y": 600,
        "wires": []
    },
    {
        "id": "6a561761aa9811dc",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "bbb3ca2e8b61550e",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3420,
        "y": 820,
        "wires": []
    },
    {
        "id": "b88b485e4d565da9",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "// This example sends a message to trigger a reload\nmsg.payload = { reload: true };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2530,
        "y": 780,
        "wires": [
            [
                "6bce1f4cd683554a"
            ]
        ]
    },
    {
        "id": "524186651dbc7306",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 820,
        "wires": []
    },
    {
        "id": "f01f0134dff9d181",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2330,
        "y": 780,
        "wires": [
            [
                "b88b485e4d565da9"
            ]
        ]
    },
    {
        "id": "5e45d5fbdb1ed7a0",
        "type": "websocket out",
        "z": "a45be5c622f6091e",
        "name": "reload",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 2860,
        "y": 780,
        "wires": []
    },
    {
        "id": "09999e9eee9787d5",
        "type": "websocket in",
        "z": "a45be5c622f6091e",
        "name": "",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 2130,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "798b15f2b55b0baa",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "RESULT MANOEUVER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 840,
        "wires": []
    },
    {
        "id": "23ce43aa47bfa630",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3440,
        "y": 900,
        "wires": []
    },
    {
        "id": "57c4c21bfc315c81",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "8ffb0b1105c5a7db"
            ]
        ]
    },
    {
        "id": "8ffb0b1105c5a7db",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Submit Manoeuver r1",
        "mode": "link",
        "links": [
            "b7bdec49af0f7c1e"
        ],
        "x": 1315,
        "y": 960,
        "wires": []
    },
    {
        "id": "b7bdec49af0f7c1e",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "8ffb0b1105c5a7db",
            "695d46662047c0aa",
            "761476cb27b49aab",
            "19b3347f754f913f",
            "0660063f0dca6f38"
        ],
        "x": 1985,
        "y": 960,
        "wires": [
            [
                "683731c4a94b836c"
            ]
        ]
    },
    {
        "id": "7d04ce24f5b0370d",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[ \"path_10\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1",
        "exactOrder": "true",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2320,
        "y": 980,
        "wires": [
            [
                "05d49f45edf06d90",
                "b770c3b498f9376e",
                "8c3d53c3e3558f7c"
            ],
            []
        ]
    },
    {
        "id": "cb1fec228cdfbacc",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2700,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e78a565dc351cb89",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3690,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d25a622c8b25482e",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST B1 TLE STORAGE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4440,
        "y": 820,
        "wires": []
    },
    {
        "id": "7b41eb1d6e62cffc",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TESTS ERGOLS MAGGLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4270,
        "y": 840,
        "wires": []
    },
    {
        "id": "6025c490caee781f",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4120,
        "y": 740,
        "wires": [
            [
                "5eb8b3cb487a37cc",
                "15e22961e1824e2a"
            ]
        ]
    },
    {
        "id": "808bfec3880a2125",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4190,
        "y": 800,
        "wires": [
            [
                "6025c490caee781f"
            ]
        ]
    },
    {
        "id": "dcff1f2be8c93d32",
        "type": "ui_template",
        "z": "a45be5c622f6091e",
        "group": "3befc064653e026e",
        "name": "",
        "order": 10,
        "width": "10",
        "height": "3",
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    md-card[node-id=\"dcff1f2be8c93d32\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n\n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      pointer-events: none;\n      transition: all 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n      pointer-events: auto;\n    }\n\n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      will-change: transform;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n\n    /* Red Rectangle */\n    .red-rectangle {\n      width: 100px;\n      height: 50px;\n      background-color: red;\n      margin: 20px auto;\n    }\n\n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button - Original Colors */\n    #ouiBtn15 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn15:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button - Original Colors */\n    #nonBtn15 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn15:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <md-card node-id=\"dcff1f2be8c93d32\">\n  </md-card>\n\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal15\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n      <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Cette action déclenchera une manoeuvre prédéfinie à partir des paramètres entrés.<br><br>\n        Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn15\">Oui</button>\n        <button id=\"nonBtn15\">Non</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- JavaScript -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal15');\n      var originalMsg = null;\n      var isTransitioning = false;\n\n      function showModal(msg) {\n        if (isTransitioning) return;\n        isTransitioning = true;\n        originalMsg = msg;\n        \n        // Reset any ongoing transitions\n        modal.style.display = 'block';\n        window.requestAnimationFrame(() => {\n          window.requestAnimationFrame(() => {\n            modal.classList.add('show');\n            isTransitioning = false;\n          });\n        });\n      }\n\n      function hideModal() {\n        if (isTransitioning) return;\n        isTransitioning = true;\n\n        const handleTransitionEnd = (e) => {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handleTransitionEnd);\n            originalMsg = null;\n            isTransitioning = false;\n          }\n        };\n\n        modal.addEventListener('transitionend', handleTransitionEnd);\n        modal.classList.remove('show');\n      }\n\n      // Cleanup function\n      function cleanup() {\n        modal.classList.remove('show');\n        modal.style.display = 'none';\n        isTransitioning = false;\n        originalMsg = null;\n      }\n\n      // Initialize\n      cleanup();\n\n      // Storage event listener\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState15') {\n          if (event.newValue === 'show') {\n            try {\n              const storedMsg = JSON.parse(localStorage.getItem('modalMsg15'));\n              showModal(storedMsg);\n            } catch (e) {\n              console.error('Error parsing stored message:', e);\n              showModal(null);\n            }\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n\n      // Watch for messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState15', 'show');\n          localStorage.setItem('modalMsg15', JSON.stringify(msg));\n          showModal(msg);\n        }\n      });\n\n      // Button handlers with debouncing\n      let isProcessingClick = false;\n      \n      document.getElementById('ouiBtn15').addEventListener('click', function() {\n        if (isProcessingClick) return;\n        isProcessingClick = true;\n        \n        var responseMsg = originalMsg ? \n          { payload: 'oui', topic: originalMsg.topic } : \n          { payload: 'oui' };\n        \n        scope.send(responseMsg);\n        localStorage.setItem('modalState15', 'hide');\n        hideModal();\n        \n        setTimeout(() => { isProcessingClick = false; }, 300);\n      });\n\n      document.getElementById('nonBtn15').addEventListener('click', function() {\n        if (isProcessingClick) return;\n        isProcessingClick = true;\n        \n        var responseMsg = originalMsg ? \n          { payload: 'non', topic: originalMsg.topic } : \n          { payload: 'non' };\n        \n        scope.send(responseMsg);\n        localStorage.setItem('modalState15', 'hide');\n        hideModal();\n        \n        setTimeout(() => { isProcessingClick = false; }, 300);\n      });\n\n      // Cleanup on unload\n      window.addEventListener('unload', cleanup);\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 330,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "63cd2338d6604d3f",
        "type": "ui_template",
        "z": "a45be5c622f6091e",
        "group": "3befc064653e026e",
        "name": "",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<script>\n  const socketUrl = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/reload`;\n  const ws = new WebSocket(socketUrl);  // Create the WebSocket connection\n\n  ws.onopen = function() {\n      console.log(\"WebSocket connection established.\");\n  };\n\n  ws.onmessage = function(event) {\n      var msg = JSON.parse(event.data);\n      if (msg.reload) {\n          location.reload();\n      }\n  };\n\n  ws.onerror = function(error) {\n      console.error(\"WebSocket error:\", error);\n  };\n\n  ws.onclose = function() {\n      console.log(\"WebSocket connection closed.\");\n  };\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "475f8abe330f729a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "MANEUV_JOIN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2990,
        "y": 1160,
        "wires": []
    },
    {
        "id": "a73e2a8d1401d8f3",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate3.txt",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3000,
        "y": 1420,
        "wires": [
            [
                "0999c09f8cb42a5e"
            ],
            [],
            []
        ]
    },
    {
        "id": "e5691631930fdb9c",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2930,
        "y": 1480,
        "wires": [
            [
                "a73e2a8d1401d8f3"
            ]
        ]
    },
    {
        "id": "0999c09f8cb42a5e",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1320,
        "wires": [
            [
                "b45475454c9c3ecc",
                "aa11ef3fa94ca2b7"
            ]
        ]
    },
    {
        "id": "62c5ce2a90fa207f",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3300,
        "y": 1260,
        "wires": [
            [
                "aa11ef3fa94ca2b7"
            ]
        ]
    },
    {
        "id": "b45475454c9c3ecc",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2920,
        "y": 1380,
        "wires": []
    },
    {
        "id": "aa11ef3fa94ca2b7",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_11\", \"path_12\", \"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3190,
        "y": 1320,
        "wires": [
            [
                "c2e1478bfa976f03"
            ],
            []
        ]
    },
    {
        "id": "2005d2f82fe1c97e",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3500,
        "y": 1340,
        "wires": []
    },
    {
        "id": "84abcf9ce450a20d",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 1220,
        "wires": [
            [
                "62c5ce2a90fa207f"
            ]
        ]
    },
    {
        "id": "5caa33c4176c1e37",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "test STd ERRORS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3460,
        "y": 1000,
        "wires": []
    },
    {
        "id": "410eeaa599fb6173",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "command": ": > /app/maneuver-manager/Result3.txt && : > /app/maneuver-manager/PostManeuverDate3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3040,
        "y": 880,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "143b877b97aac995",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "command": ": > /app/maneuver-manager/ApsideDates3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2380,
        "y": 1240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "744fc3e813b96e9b",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "command": "cd /app/maneuver-manager && ./clear.sh red1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2890,
        "y": 1580,
        "wires": [
            [
                "6ea8e3f6adae81a7"
            ],
            [
                "6ea8e3f6adae81a7"
            ],
            []
        ]
    },
    {
        "id": "6ea8e3f6adae81a7",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4f1c52ec68ebf564",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3030,
        "y": 940,
        "wires": [
            [
                "dc5c2052f323026b"
            ]
        ]
    },
    {
        "id": "c2e1478bfa976f03",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "const MAX_RANDOM = 6;\nconst randomIndex = Math.floor(Math.random() * MAX_RANDOM);\n\n// Retrieve the error message from path_12\nconst errorPayload = msg.paths?.path_12 || \"\";\n\nif (errorPayload.includes(\"hyperbolic orbits cannot be handled\")) {\n    switch (randomIndex) {\n        case 0:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory detected. Please return to the battlefield, cadet.\";\n            break;\n        case 1:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. Refer to Article L321-7 of the military code.\";\n            break;\n        case 2:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. Are you attempting to desert your duties?\";\n            break;\n        case 3:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. You are not qualified for interplanetary flight.\";\n            break;\n        default:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. No French assets available in this direction.\";\n    }\n} \nelse if (errorPayload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver due to inadequate ergol reserves.\";\n}\nelse if (errorPayload.includes(\"Initial date must be equal to or later\")) {\n    msg.errorMessage = \"**Temporal Error:** The maneuver order is set before the last apsis was reached.\";\n    msg.errorMessage += ` | Last apsis: ${msg.paths.path_11}`;\n} \nelse if (errorPayload.includes(\"horizon\")) {\n    msg.errorMessage = \"**Temporal Error:** The initial date must precede the conclusion of Horizon Time.\";\n    msg.errorMessage += ` | Simulation End Date: ${msg.paths.path_13.enddate}`;\n} \nelse if (errorPayload.includes(\"ccentrici\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver due to invalid eccentricity parameters.\";\n}\nelse {\n    msg.errorMessage = \"Maneuver aborted due to an unspecified error.\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3355,
        "y": 1328,
        "wires": [
            [
                "2005d2f82fe1c97e",
                "53a89502e38ac48e"
            ]
        ]
    },
    {
        "id": "6bce1f4cd683554a",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2690,
        "y": 780,
        "wires": [
            [
                "5e45d5fbdb1ed7a0"
            ]
        ]
    },
    {
        "id": "da5f890444221252",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "AffichageLastManeuverDate 3",
        "mode": "link",
        "links": [
            "e1f765a663a80a9e"
        ],
        "x": 3295,
        "y": 960,
        "wires": []
    },
    {
        "id": "7fb936064732bb93",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4140,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d0ecc8f6f42f8072",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3330,
        "y": 1100,
        "wires": [
            [
                "acc69661e85c9b4c"
            ]
        ]
    },
    {
        "id": "61956eb5bc977611",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3550,
        "y": 1080,
        "wires": []
    },
    {
        "id": "53a89502e38ac48e",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 3465,
        "y": 1380,
        "wires": []
    },
    {
        "id": "4c3935f6126e28b8",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3900,
        "y": 920,
        "wires": [
            [
                "400e92cbf6be19db"
            ]
        ]
    },
    {
        "id": "9a73315ac6b28d25",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4460,
        "y": 880,
        "wires": [
            [
                "06484146564372d2"
            ]
        ]
    },
    {
        "id": "ea4b5cba499fd050",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Before Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4460,
        "y": 700,
        "wires": []
    },
    {
        "id": "f758aea01c369809",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "6258723b1d975706",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f"
        ],
        "x": 75,
        "y": 900,
        "wires": []
    },
    {
        "id": "7b5f893bdc29d8db",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "94a8919ad8194b6f",
            "b69bea8abb1b280f",
            "b8e26b39226639eb"
        ],
        "x": 185,
        "y": 1040,
        "wires": [
            [
                "bf3befb4928638fe",
                "2f43f0d4a63a620a"
            ]
        ]
    },
    {
        "id": "2f43f0d4a63a620a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1cc34fa2c6b5bed4",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4770,
        "y": 760,
        "wires": [
            [
                "8b75c4c33fd5b297",
                "f1e669e9a74059e1"
            ]
        ]
    },
    {
        "id": "0442d4d85c05d7a4",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4740,
        "y": 480,
        "wires": []
    },
    {
        "id": "4609769246099fe5",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "echange",
        "func": "// 1) Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    msg.payload = [\"\", \"\"];\n}\n\n// 2) Expand to guarantee at least 2 elements\nwhile (msg.payload.length < 2) {\n    msg.payload.push(\"\");\n}\n\n// 3) Handle possible \"object with .payload\" vs. direct string\nfunction isNonEmpty(val) {\n    return val !== undefined && val !== null && val !== \"\";\n}\n\n// If msg.payload[1] is an object with a payload...\nif (typeof msg.payload[1] === \"object\" && msg.payload[1] !== null) {\n    // Ensure there's a .payload key\n    msg.payload[1].payload = msg.payload[1].payload || \"\";\n    // If .payload is non-empty, copy it to [0].payload (making sure [0] is an object)\n    if (isNonEmpty(msg.payload[1].payload)) {\n        // If msg.payload[0] isn't an object, turn it into one\n        if (typeof msg.payload[0] !== \"object\" || msg.payload[0] === null) {\n            msg.payload[0] = { payload: \"\" };\n        }\n        msg.payload[0].payload = msg.payload[1].payload;\n    }\n    // Always reset [1].payload to empty\n    msg.payload[1].payload = \"\";\n\n// Else if msg.payload[1] is a string...\n} else if (typeof msg.payload[1] === \"string\") {\n    if (isNonEmpty(msg.payload[1])) {\n        // If [0] is object, put the string in [0].payload\n        if (typeof msg.payload[0] === \"object\" && msg.payload[0] !== null) {\n            msg.payload[0].payload = msg.payload[1];\n        } else {\n            // Otherwise, just treat [0] as a string\n            msg.payload[0] = msg.payload[1];\n        }\n    }\n    // Reset [1] to empty string\n    msg.payload[1] = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4750,
        "y": 680,
        "wires": [
            [
                "adfd078d23f1890b",
                "0442d4d85c05d7a4",
                "79753b826616bd32"
            ]
        ]
    },
    {
        "id": "fccf562dcf8db09d",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2543.015625,
        "y": 933.75,
        "wires": [
            [
                "05d49f45edf06d90"
            ]
        ]
    },
    {
        "id": "b770c3b498f9376e",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2300,
        "y": 900,
        "wires": [
            [
                "fccf562dcf8db09d"
            ]
        ]
    },
    {
        "id": "9c45bb1176dfcfd5",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "query to read Result3.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3440,
        "y": 1660,
        "wires": [
            [
                "642d6a0a7af2919d"
            ]
        ]
    },
    {
        "id": "642d6a0a7af2919d",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3740,
        "y": 1660,
        "wires": [
            [
                "6129fee1b3f3a43a"
            ]
        ]
    },
    {
        "id": "6129fee1b3f3a43a",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3920,
        "y": 1660,
        "wires": [
            [
                "e93a158e7562150c"
            ]
        ]
    },
    {
        "id": "e93a158e7562150c",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 1720,
        "wires": [
            [
                "7c1e92acea555b8b"
            ]
        ]
    },
    {
        "id": "7c1e92acea555b8b",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 1720,
        "wires": [
            [
                "577b52a0927027f5",
                "2ddbbd0a90840c29"
            ]
        ]
    },
    {
        "id": "577b52a0927027f5",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 1780,
        "wires": [
            [
                "a5d1d6c51e43850c"
            ]
        ]
    },
    {
        "id": "a5d1d6c51e43850c",
        "type": "switch",
        "z": "a45be5c622f6091e",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3990,
        "y": 1780,
        "wires": [
            [
                "56422f3ccc4514b4",
                "0bf4e161e82df8a0",
                "190cd5c627d83299",
                "0667911a85c3c1a6",
                "f5e9403dd1aeb1a1",
                "3977c6fab1059e5d"
            ],
            [
                "f5e9403dd1aeb1a1"
            ]
        ]
    },
    {
        "id": "0bf4e161e82df8a0",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3980,
        "y": 1840,
        "wires": [
            [
                "c1afc4164d685569"
            ]
        ]
    },
    {
        "id": "c1afc4164d685569",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3960,
        "y": 1880,
        "wires": [
            [
                "d4a984c658761c27"
            ]
        ]
    },
    {
        "id": "d4a984c658761c27",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Tle r1-postMan-OUT",
        "mode": "link",
        "links": [
            "7e5337741e7dc71f"
        ],
        "x": 4105,
        "y": 1880,
        "wires": []
    },
    {
        "id": "56422f3ccc4514b4",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4290,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "b756b50a84c365a5",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 4285,
        "y": 1820,
        "wires": []
    },
    {
        "id": "e93492895f224181",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "a60ca8ed227afdff"
        ],
        "x": 3185,
        "y": 1660,
        "wires": [
            [
                "9c45bb1176dfcfd5",
                "6fed588eef1c20ac"
            ]
        ]
    },
    {
        "id": "190cd5c627d83299",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_999",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_999",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4260,
        "y": 1760,
        "wires": [
            [
                "b18e4e51bdaf93e7"
            ]
        ]
    },
    {
        "id": "b18e4e51bdaf93e7",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "MQTT Signal",
        "mode": "link",
        "links": [
            "c94e8a646f6ffced"
        ],
        "x": 4455,
        "y": 1760,
        "wires": []
    },
    {
        "id": "6fed588eef1c20ac",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3230,
        "y": 1800,
        "wires": [
            [
                "d3fa8df8ffeb89ab",
                "ae98c4107a638eb8"
            ]
        ]
    },
    {
        "id": "43e744b82393b7e1",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "time persistent intermediate",
        "mode": "link",
        "links": [
            "5fcb4e512a728761"
        ],
        "x": 3325,
        "y": 1760,
        "wires": []
    },
    {
        "id": "d3fa8df8ffeb89ab",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "test inter timre",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 1840,
        "wires": []
    },
    {
        "id": "0667911a85c3c1a6",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "update all for B1 OUT",
        "mode": "link",
        "links": [
            "4ac641f2a3d366c5",
            "f97955cb1a90dca4",
            "2a754af658e107d7",
            "1168e0151a783577",
            "4d4d54a87a2bb310"
        ],
        "x": 4215,
        "y": 1820,
        "wires": []
    },
    {
        "id": "2ddbbd0a90840c29",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "test result.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3940,
        "y": 1720,
        "wires": []
    },
    {
        "id": "f5e9403dd1aeb1a1",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4100,
        "y": 1620,
        "wires": []
    },
    {
        "id": "3977c6fab1059e5d",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4290,
        "y": 1640,
        "wires": [
            [
                "879e7764e626a240"
            ]
        ]
    },
    {
        "id": "879e7764e626a240",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4330,
        "y": 1700,
        "wires": [
            [
                "72c6f2a5cc7eba82"
            ]
        ]
    },
    {
        "id": "72c6f2a5cc7eba82",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4620,
        "y": 1700,
        "wires": []
    },
    {
        "id": "ae98c4107a638eb8",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3220,
        "y": 1760,
        "wires": [
            [
                "43e744b82393b7e1"
            ]
        ]
    },
    {
        "id": "03344feaba12ec55",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2950,
        "y": 1800,
        "wires": [
            [
                "6fed588eef1c20ac"
            ]
        ]
    },
    {
        "id": "a60ca8ed227afdff",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Out resultat 1",
        "mode": "link",
        "links": [
            "e93492895f224181"
        ],
        "x": 2865,
        "y": 700,
        "wires": []
    },
    {
        "id": "abf1b13a3f884e77",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Prepare Reset Message",
        "func": "msg.reset = true;\nmsg.payload = \"Reset command received\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2600,
        "y": 620,
        "wires": [
            [
                "3d84be6b5506dc78"
            ]
        ]
    },
    {
        "id": "3d84be6b5506dc78",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Counter & Loop",
        "func": "// Retrieve the current counter from flow context (default to 0)\nlet count = flow.get('myCounter') || 0;\n\n// Check if this message is a 'reset' or normal 'increment'\nif (msg.reset) {\n    // If reset, set counter to 0\n    count = 0;\n    flow.set('myCounter', count);\n    msg.payload = `Counter reset to ${count}`;\n    return msg;\n}\n\n// Otherwise, increment the counter\ncount += 1;\nflow.set('myCounter', count);\n\n// Update payload with the current count\nmsg.payload = `Counter: ${count}`;\n\n// Define maximum count (optional)\nconst maxCount = 2;\n\nif (count < maxCount) {\n    // Send the count to the debug node and loop back\n    return [null, msg];\n} else {\n    // If max count reached, notify and stop looping\n    msg.payload = \"Done looping, reached \" + maxCount;\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 680,
        "wires": [
            [
                "bed1dcb9d2ea4782"
            ],
            [
                "923145cb5e1ec9d4",
                "6de638f814a85441",
                "fa10fc9a5ac7d51a",
                "be066244988849d9"
            ]
        ]
    },
    {
        "id": "bed1dcb9d2ea4782",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "Debug Counter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2850,
        "y": 640,
        "wires": []
    },
    {
        "id": "6de638f814a85441",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Output Before Maneuver TLEs",
        "mode": "link",
        "links": [
            "5a67480e740535c9"
        ],
        "x": 2795,
        "y": 700,
        "wires": []
    },
    {
        "id": "5a67480e740535c9",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "6de638f814a85441"
        ],
        "x": 3545,
        "y": 660,
        "wires": [
            [
                "7d7cbbaf58e7d309"
            ]
        ]
    },
    {
        "id": "923145cb5e1ec9d4",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "DEBUG COUNTER DOWN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 640,
        "wires": []
    },
    {
        "id": "a3fd79ed56d4e521",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2310,
        "y": 680,
        "wires": [
            [
                "3d84be6b5506dc78"
            ]
        ]
    },
    {
        "id": "ce550766fc64d72f",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2510,
        "y": 560,
        "wires": [
            [
                "abf1b13a3f884e77"
            ]
        ]
    },
    {
        "id": "68487bf51e60c0e3",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "RESET COUNTER",
        "mode": "link",
        "links": [
            "7cf95738b9b67818"
        ],
        "x": 2855,
        "y": 920,
        "wires": []
    },
    {
        "id": "7cf95738b9b67818",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "68487bf51e60c0e3"
        ],
        "x": 2345,
        "y": 640,
        "wires": [
            [
                "abf1b13a3f884e77"
            ]
        ]
    },
    {
        "id": "0a6bd01609ca3415",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "f762a687393118a3"
        ],
        "x": 2435,
        "y": 640,
        "wires": [
            [
                "abf1b13a3f884e77"
            ]
        ]
    },
    {
        "id": "f762a687393118a3",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "end function signal",
        "mode": "link",
        "links": [
            "0a6bd01609ca3415"
        ],
        "x": 3315,
        "y": 920,
        "wires": []
    },
    {
        "id": "fa10fc9a5ac7d51a",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "SAVE TRIGGER",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 2855,
        "y": 660,
        "wires": []
    },
    {
        "id": "80186d0eda996a60",
        "type": "ui_button",
        "z": "a45be5c622f6091e",
        "name": "",
        "group": "c02dcce485dfb187",
        "order": 9,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "R1 Reset",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#4C6E91",
        "className": "",
        "icon": "fa-undo",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1940,
        "wires": [
            [
                "ddca569f1fc7d6e0"
            ]
        ]
    },
    {
        "id": "ddca569f1fc7d6e0",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup38' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1940,
        "wires": [
            [
                "281a8e4793b1e00c"
            ]
        ]
    },
    {
        "id": "e6bf21cf2e2c5ca9",
        "type": "switch",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui38",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 1940,
        "wires": [
            [
                "8541c24772608099"
            ]
        ]
    },
    {
        "id": "281a8e4793b1e00c",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "6258723b1d975706",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f"
        ],
        "x": 415,
        "y": 1940,
        "wires": []
    },
    {
        "id": "8e7b8918d8ced60d",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "94a8919ad8194b6f",
            "b69bea8abb1b280f",
            "b8e26b39226639eb"
        ],
        "x": 565,
        "y": 1940,
        "wires": [
            [
                "e6bf21cf2e2c5ca9"
            ]
        ]
    },
    {
        "id": "dd9aaf8608ed8020",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "msg.payload = { isp: '' };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 1220,
        "wires": [
            [
                "6d975cc55e1e2fc4"
            ]
        ]
    },
    {
        "id": "eb368c22ebe3a6b5",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1260,
        "wires": [
            [
                "dd9aaf8608ed8020"
            ]
        ]
    },
    {
        "id": "29aa4632974f551f",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "flush isp",
        "mode": "link",
        "links": [
            "dfe919689b23368f"
        ],
        "x": 4185,
        "y": 900,
        "wires": []
    },
    {
        "id": "dfe919689b23368f",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "29aa4632974f551f"
        ],
        "x": 65,
        "y": 1300,
        "wires": [
            [
                "dd9aaf8608ed8020"
            ]
        ]
    },
    {
        "id": "48cc764aa7135d31",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "flush isp error",
        "mode": "link",
        "links": [
            "761f38e115192ca2"
        ],
        "x": 3245,
        "y": 1000,
        "wires": []
    },
    {
        "id": "761f38e115192ca2",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "flush isp",
        "links": [
            "48cc764aa7135d31"
        ],
        "x": 25,
        "y": 1240,
        "wires": [
            [
                "dd9aaf8608ed8020"
            ]
        ]
    },
    {
        "id": "a6738fc2a7488ec7",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 400,
        "wires": []
    },
    {
        "id": "985a20876c18596d",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "red1-tle-storage-out",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 400,
        "wires": [
            [
                "843cf1605dcbb125"
            ]
        ]
    },
    {
        "id": "843cf1605dcbb125",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 700,
        "y": 400,
        "wires": [
            [
                "aa4a0b74796028d5"
            ]
        ]
    },
    {
        "id": "aa4a0b74796028d5",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "/**\n * Node-RED Function: Compute Semi-Major Axis (SMA) from Mean Motion and Output Only SMA\n *\n * This function:\n * 1. Extracts the 'mean' field from msg.payload (assumed to be in rev/day)\n * 2. Converts 'mean' to Semi-Major Axis (SMA) using Kepler's Third Law\n * 3. Sets msg.payload to the computed SMA (in kilometers), removing all other fields\n *\n * Assumptions:\n * - 'mean' is in revolutions per day (rev/day)\n * - Earth's gravitational parameter (mu) = 398600 km³/s²\n */\n\nif (msg.payload && msg.payload.mean) {\n    // Earth's gravitational parameter (mu) in km^3/s^2\n    const mu = 398600; \n    const secondsPerDay = 86400;\n    const twoPi = 2 * Math.PI;\n\n    // 1. Extract and parse the 'mean' field\n    let meanMotionRevPerDay = parseFloat(msg.payload.mean);\n\n    // Validate the parsed mean motion\n    if (isNaN(meanMotionRevPerDay) || meanMotionRevPerDay <= 0) {\n        node.error(\"Invalid mean motion value: \" + msg.payload.mean);\n        return null; // Stop processing this message\n    }\n\n    // 2. Convert mean motion from rev/day to rad/s\n    let meanMotionRadPerSec = meanMotionRevPerDay * twoPi / secondsPerDay;\n\n    // 3. Compute the orbital period (T) in seconds using T = 2π / n\n    let orbitalPeriod = twoPi / meanMotionRadPerSec; // seconds\n\n    // 4. Compute Semi-Major Axis (a) using Kepler's Third Law:\n    //    a = (mu * T^2 / (4 * pi^2))^(1/3)\n    let aCubed = (mu * Math.pow(orbitalPeriod, 2)) / (4 * Math.PI * Math.PI);\n    let smaKm = Math.pow(aCubed, 1/3); // km\n\n    // Optional: Round SMA to two decimal places for readability\n    smaKm = parseFloat(smaKm.toFixed(2));\n\n    // 5. Set msg.payload to the computed SMA only\n    msg.payload = smaKm;\n\n    // Optional: Log the computed SMA for debugging purposes\n    node.log(\"Computed SMA (km) = \" + smaKm);\n\n    // 6. Return the modified message\n    return msg;\n\n} else {\n    // If 'mean' field is missing, log an error and stop processing\n    node.error(\"No 'mean' field found in msg.payload.\");\n    return null; // Stop processing this message\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 400,
        "wires": [
            [
                "a6738fc2a7488ec7",
                "91117d08d9ace2a4"
            ]
        ]
    },
    {
        "id": "91117d08d9ace2a4",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_17",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_17",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 440,
        "wires": [
            [
                "39196c6004dd37ff",
                "49c96f471b8fbc28"
            ]
        ]
    },
    {
        "id": "87c0c6df75d006ce",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST JOIN WAIT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 540,
        "wires": []
    },
    {
        "id": "240840ee5b944dbd",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Retrieve SMA",
        "mode": "link",
        "links": [
            "8fb6748d706a9a4a"
        ],
        "x": 315,
        "y": 1140,
        "wires": []
    },
    {
        "id": "8fb6748d706a9a4a",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "240840ee5b944dbd"
        ],
        "x": 315,
        "y": 400,
        "wires": [
            [
                "985a20876c18596d"
            ]
        ]
    },
    {
        "id": "49c96f471b8fbc28",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "PATH_17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 460,
        "wires": []
    },
    {
        "id": "21693f7e43ddf27a",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "red1-tle-storage-out",
        "filename": "red1-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 660,
        "y": 1400,
        "wires": [
            [
                "8d531ee14ab3072e"
            ]
        ]
    },
    {
        "id": "8d531ee14ab3072e",
        "type": "json",
        "z": "a45be5c622f6091e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 840,
        "y": 1400,
        "wires": [
            [
                "ee8e03bcc3899b6e"
            ]
        ]
    },
    {
        "id": "ee8e03bcc3899b6e",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "/**\n * Node-RED Function: Compute Semi-Major Axis (SMA) from Mean Motion and Output Only SMA\n *\n * This function:\n * 1. Extracts the 'mean' field from msg.payload (assumed to be in rev/day)\n * 2. Converts 'mean' to Semi-Major Axis (SMA) using Kepler's Third Law\n * 3. Sets msg.payload to the computed SMA (in kilometers), removing all other fields\n *\n * Assumptions:\n * - 'mean' is in revolutions per day (rev/day)\n * - Earth's gravitational parameter (mu) = 398600 km³/s²\n */\n\nif (msg.payload && msg.payload.mean) {\n    // Earth's gravitational parameter (mu) in km^3/s^2\n    const mu = 398600; \n    const secondsPerDay = 86400;\n    const twoPi = 2 * Math.PI;\n\n    // 1. Extract and parse the 'mean' field\n    let meanMotionRevPerDay = parseFloat(msg.payload.mean);\n\n    // Validate the parsed mean motion\n    if (isNaN(meanMotionRevPerDay) || meanMotionRevPerDay <= 0) {\n        node.error(\"Invalid mean motion value: \" + msg.payload.mean);\n        return null; // Stop processing this message\n    }\n\n    // 2. Convert mean motion from rev/day to rad/s\n    let meanMotionRadPerSec = meanMotionRevPerDay * twoPi / secondsPerDay;\n\n    // 3. Compute the orbital period (T) in seconds using T = 2π / n\n    let orbitalPeriod = twoPi / meanMotionRadPerSec; // seconds\n\n    // 4. Compute Semi-Major Axis (a) using Kepler's Third Law:\n    //    a = (mu * T^2 / (4 * pi^2))^(1/3)\n    let aCubed = (mu * Math.pow(orbitalPeriod, 2)) / (4 * Math.PI * Math.PI);\n    let smaKm = Math.pow(aCubed, 1/3); // km\n\n    // Optional: Round SMA to two decimal places for readability\n    smaKm = parseFloat(smaKm.toFixed(2));\n\n    // 5. Set msg.payload to the computed SMA only\n    msg.payload = smaKm;\n\n    // Optional: Log the computed SMA for debugging purposes\n    node.log(\"Computed SMA (km) = \" + smaKm);\n\n    // 6. Return the modified message\n    return msg;\n\n} else {\n    // If 'mean' field is missing, log an error and stop processing\n    node.error(\"No 'mean' field found in msg.payload.\");\n    return null; // Stop processing this message\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1400,
        "wires": [
            [
                "28cc6c62543065f3",
                "042abfebe538b4d6"
            ]
        ]
    },
    {
        "id": "0facbb0a29d30da7",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 1480,
        "wires": []
    },
    {
        "id": "28cc6c62543065f3",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_18",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_18",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1340,
        "wires": [
            [
                "74b25dff8e2b6a9b",
                "46c4d26d0a6f71f2",
                "eba6b8e03bacc4a8"
            ]
        ]
    },
    {
        "id": "46c4d26d0a6f71f2",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TESRT TRIGGER BDD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1440,
        "wires": []
    },
    {
        "id": "a1586487c2a8cf30",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "triger bdd time r1",
        "links": [
            "f1854b905263a150"
        ],
        "x": 475,
        "y": 1440,
        "wires": [
            [
                "21693f7e43ddf27a"
            ]
        ]
    },
    {
        "id": "5ce8df3c24284bcd",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Prepare File Read",
        "func": "msg.filename = 'app/maneuver-manager/CommandData.txt';\nmsg.action = 'read';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1720,
        "wires": [
            [
                "06e0a5b1e2cd4d9a"
            ]
        ]
    },
    {
        "id": "06e0a5b1e2cd4d9a",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Read/Write CommandData3.txt",
        "filename": "/path/to/CommandData3.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1380,
        "y": 1700,
        "wires": [
            [
                "3e1390b32ed49411"
            ]
        ]
    },
    {
        "id": "3e1390b32ed49411",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Update SMA Value",
        "func": "const lines = msg.payload.split('\\n');\nlines[0] = msg.data.toString();\nmsg.payload = lines.join('\\n');\nmsg.filename = 'CommandData.txt';\nmsg.action = 'write';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 1660,
        "wires": [
            [
                "06e0a5b1e2cd4d9a"
            ]
        ]
    },
    {
        "id": "042abfebe538b4d6",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1400,
        "wires": []
    },
    {
        "id": "9e8aa4801c72b6de",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Update First Line",
        "func": "const lines = msg.payload.split('\\n');\nlines[0] = msg.data.toString();\nmsg.payload = lines.join('\\n');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1520,
        "wires": [
            [
                "5a0cdfb30e136f37",
                "a741201813df82bd"
            ]
        ]
    },
    {
        "id": "5a0cdfb30e136f37",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "Write CommandData3.txt",
        "filename": "/app/maneuver-manager/CommandData3.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1860,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "9e99e372cdcb8d8a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1560,
        "wires": []
    },
    {
        "id": "a741201813df82bd",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 1580,
        "wires": []
    },
    {
        "id": "1b4d16fee52d68a6",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_19",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_19",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1520,
        "wires": [
            [
                "eba6b8e03bacc4a8"
            ]
        ]
    },
    {
        "id": "eba6b8e03bacc4a8",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_18\",\"path_19\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1510,
        "y": 1520,
        "wires": [
            [
                "52bb396d3b8d2714"
            ],
            []
        ]
    },
    {
        "id": "3b0419967757231c",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "b5706df02266428b",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "3313c2b3844ad03b"
        ],
        "x": 465,
        "y": 1360,
        "wires": [
            [
                "21693f7e43ddf27a",
                "e194535f15461681"
            ]
        ]
    },
    {
        "id": "52bb396d3b8d2714",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "TEST DEBUG comm data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 1460,
        "wires": []
    },
    {
        "id": "9806bca1bb6483a3",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "name": "Trigger Update",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "6973.97",
        "payloadType": "num",
        "x": 970,
        "y": 1500,
        "wires": [
            [
                "e194535f15461681"
            ]
        ]
    },
    {
        "id": "e194535f15461681",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "CommandData3.txt",
        "filename": "/app/maneuver-manager/CommandData3.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1100,
        "y": 1460,
        "wires": [
            [
                "1b4d16fee52d68a6",
                "9e99e372cdcb8d8a"
            ]
        ]
    },
    {
        "id": "7e7a744d8c35880e",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3000,
        "y": 1280,
        "wires": [
            [
                "aa11ef3fa94ca2b7",
                "b5a8661dda1f9d91"
            ]
        ]
    },
    {
        "id": "4609410af2641697",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "aabb98fe3ab1ba7f"
        ],
        "x": 2835,
        "y": 1260,
        "wires": [
            [
                "7e7a744d8c35880e"
            ]
        ]
    },
    {
        "id": "b5a8661dda1f9d91",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 1260,
        "wires": []
    },
    {
        "id": "6ecae73f602f3980",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 700,
        "wires": [
            [
                "ec1cb201eff49ec8"
            ]
        ]
    },
    {
        "id": "ec1cb201eff49ec8",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "link",
        "links": [
            "582b20c3fb7fcbdc"
        ],
        "x": 2235,
        "y": 700,
        "wires": []
    },
    {
        "id": "4c60605bb9b8ada9",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "65804949ca66fef8"
        ],
        "x": 2625,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3492407a4d6daa8f",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3080,
        "y": 740,
        "wires": []
    },
    {
        "id": "7801b79e0d3a8f56",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2720,
        "y": 720,
        "wires": [
            [
                "a60ca8ed227afdff"
            ]
        ]
    },
    {
        "id": "8541c24772608099",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "LOAD CONF",
        "mode": "link",
        "links": [
            "c5b6b5d0caf2f6de"
        ],
        "x": 805,
        "y": 1940,
        "wires": []
    },
    {
        "id": "f2b7fba095ddcde8",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "name": "",
        "links": [
            "6d68815a456a141b",
            "00f32cd598b46f61"
        ],
        "x": 3935,
        "y": 2340,
        "wires": [
            [
                "566b95921588c47a",
                "16e3a2707f4c7733",
                "647198a3a8afd4d6",
                "7567a57f4e91f77b"
            ]
        ]
    },
    {
        "id": "e99ab8e28db9c3d4",
        "type": "mongodb in",
        "z": "a45be5c622f6091e",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r1tlelatest",
        "collection": "r1tlelatest",
        "operation": "find",
        "x": 3540,
        "y": 2720,
        "wires": [
            [
                "f196ff20e8f791e3",
                "36711772b3c884da"
            ]
        ]
    },
    {
        "id": "36711772b3c884da",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 2720,
        "wires": [
            [
                "2b08b7471aabf5e8",
                "df65e1e15154e088"
            ]
        ]
    },
    {
        "id": "f196ff20e8f791e3",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3770,
        "y": 2780,
        "wires": []
    },
    {
        "id": "df65e1e15154e088",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4050,
        "y": 2740,
        "wires": []
    },
    {
        "id": "2b08b7471aabf5e8",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4050,
        "y": 2680,
        "wires": [
            [
                "4f4d4e6197483ebb",
                "ae420519e6163ae6"
            ]
        ]
    },
    {
        "id": "ae420519e6163ae6",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "name": "",
        "paths": "[\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4240,
        "y": 2680,
        "wires": [
            [
                "292d30d2e28909e3",
                "b84335371f2d9b80"
            ],
            []
        ]
    },
    {
        "id": "4f4d4e6197483ebb",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "LAST TLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4250,
        "y": 2720,
        "wires": []
    },
    {
        "id": "a04a9756b38971bb",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4530,
        "y": 2740,
        "wires": []
    },
    {
        "id": "292d30d2e28909e3",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Data3.txt format",
        "func": "// Initialize variables\nvar tab = [];\nvar gs = {};\n\n// Split line #2 of the TLE robustly:\n// - trim() removes any leading/trailing spaces\n// - split(/\\s+/) splits on ANY run of whitespace\nvar tle = msg.payload[2].trim().split(/\\s+/);\n\nvar N;      // Mean motion in rev/day (not used below, just declared)\nvar n;      // ...\nvar a;      // Semi-major axis\nvar acube;  // a^3\nvar e;      // eccentricity\n\n// Earth's standard gravitational parameter, etc.\nvar mu = 398600.4418;\nvar J = 86400; // A day in seconds\n\n// From the TLE array\ngs.incli = String(tle[2]);\ngs.raan  = String(tle[3]);\ngs.ecc   = String(tle[4]);\ngs.aop   = String(tle[5]);\ngs.meana = String(tle[6]);\ngs.mean  = String(tle[7]);\n\n// From the rest of payload\ngs.dry_mass          = parseFloat(msg.payload[3]);\ngs.ergol_consumption = parseFloat(msg.payload[5]);\ngs.ergol_mass        = parseFloat(msg.payload[4]);\n\n// Attach everything back to msg and return\nmsg.payload = gs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4520,
        "y": 2680,
        "wires": [
            [
                "a04a9756b38971bb",
                "318ebd92b4133dfe"
            ]
        ]
    },
    {
        "id": "b84335371f2d9b80",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4510,
        "y": 2640,
        "wires": []
    },
    {
        "id": "6b859de52421ed1a",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4490,
        "y": 2580,
        "wires": []
    },
    {
        "id": "4625396fd2c79f1c",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4490,
        "y": 2540,
        "wires": []
    },
    {
        "id": "7c250a0295904213",
        "type": "switch",
        "z": "a45be5c622f6091e",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4500,
        "y": 2500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "109f5feedc17f445",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 2500,
        "wires": [
            [
                "7c250a0295904213",
                "6b859de52421ed1a",
                "4625396fd2c79f1c"
            ]
        ]
    },
    {
        "id": "1fc2e06b883860e1",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4130,
        "y": 2440,
        "wires": [
            [
                "083dfda127f2ad7d"
            ]
        ]
    },
    {
        "id": "083dfda127f2ad7d",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4340,
        "y": 2440,
        "wires": [
            [
                "109f5feedc17f445"
            ]
        ]
    },
    {
        "id": "566b95921588c47a",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "query to read Result3.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4170,
        "y": 2380,
        "wires": [
            [
                "b7ef3867cf516ba9"
            ]
        ]
    },
    {
        "id": "16e3a2707f4c7733",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4130,
        "y": 2340,
        "wires": []
    },
    {
        "id": "b7ef3867cf516ba9",
        "type": "file in",
        "z": "a45be5c622f6091e",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result3.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4410,
        "y": 2380,
        "wires": [
            [
                "549b4ffd5b67648e"
            ]
        ]
    },
    {
        "id": "549b4ffd5b67648e",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4610,
        "y": 2380,
        "wires": [
            [
                "1fc2e06b883860e1"
            ]
        ]
    },
    {
        "id": "9be08a0083c9f781",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4670,
        "y": 2200,
        "wires": []
    },
    {
        "id": "318ebd92b4133dfe",
        "type": "file",
        "z": "a45be5c622f6091e",
        "name": "",
        "filename": "red1-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4380,
        "y": 2120,
        "wires": [
            [
                "9be08a0083c9f781",
                "744292f68f6349dd"
            ]
        ]
    },
    {
        "id": "647198a3a8afd4d6",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4190,
        "y": 2080,
        "wires": [
            [
                "7791136f6be73cb7"
            ]
        ]
    },
    {
        "id": "9d1b9118e8c29260",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "AP Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4580,
        "y": 2040,
        "wires": []
    },
    {
        "id": "667881fd6e0e7a18",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 1960,
        "wires": [
            [
                "072555d365409df1",
                "9d1b9118e8c29260"
            ]
        ]
    },
    {
        "id": "7791136f6be73cb7",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4390,
        "y": 2000,
        "wires": [
            [
                "667881fd6e0e7a18"
            ]
        ]
    },
    {
        "id": "744292f68f6349dd",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": " Reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4310,
        "y": 1920,
        "wires": [
            [
                "072555d365409df1"
            ]
        ]
    },
    {
        "id": "072555d365409df1",
        "type": "join",
        "z": "a45be5c622f6091e",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4610,
        "y": 1920,
        "wires": [
            [
                "a6f6e52039c378ec",
                "f14d7b1b7dcdf454"
            ]
        ]
    },
    {
        "id": "a6f6e52039c378ec",
        "type": "function",
        "z": "a45be5c622f6091e",
        "name": "echange",
        "func": "// 1) Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    msg.payload = [\"\", \"\"];\n}\n\n// 2) Expand to guarantee at least 2 elements\nwhile (msg.payload.length < 2) {\n    msg.payload.push(\"\");\n}\n\n// 3) Handle possible \"object with .payload\" vs. direct string\nfunction isNonEmpty(val) {\n    return val !== undefined && val !== null && val !== \"\";\n}\n\n// If msg.payload[1] is an object with a payload...\nif (typeof msg.payload[1] === \"object\" && msg.payload[1] !== null) {\n    // Ensure there's a .payload key\n    msg.payload[1].payload = msg.payload[1].payload || \"\";\n    // If .payload is non-empty, copy it to [0].payload (making sure [0] is an object)\n    if (isNonEmpty(msg.payload[1].payload)) {\n        // If msg.payload[0] isn't an object, turn it into one\n        if (typeof msg.payload[0] !== \"object\" || msg.payload[0] === null) {\n            msg.payload[0] = { payload: \"\" };\n        }\n        msg.payload[0].payload = msg.payload[1].payload;\n    }\n    // Always reset [1].payload to empty\n    msg.payload[1].payload = \"\";\n\n// Else if msg.payload[1] is a string...\n} else if (typeof msg.payload[1] === \"string\") {\n    if (isNonEmpty(msg.payload[1])) {\n        // If [0] is object, put the string in [0].payload\n        if (typeof msg.payload[0] === \"object\" && msg.payload[0] !== null) {\n            msg.payload[0].payload = msg.payload[1];\n        } else {\n            // Otherwise, just treat [0] as a string\n            msg.payload[0] = msg.payload[1];\n        }\n    }\n    // Reset [1] to empty string\n    msg.payload[1] = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4710,
        "y": 1860,
        "wires": [
            [
                "84b5da682c47b7e7",
                "27d9c102c10107f6"
            ]
        ]
    },
    {
        "id": "84b5da682c47b7e7",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "Out Maneuvre prédéfinie",
        "mode": "link",
        "links": [
            "b9a06d4ecb7c304d",
            "4de5d0666377ecc1",
            "d3a880f48b073068",
            "4570b59cbe263a1a",
            "b778ce59ad6de1b6"
        ],
        "x": 4775,
        "y": 1820,
        "wires": []
    },
    {
        "id": "688484175ede1ce7",
        "type": "ui_template",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "group": "3befc064653e026e",
        "name": "Dynamic Form",
        "order": 3,
        "width": "10",
        "height": "8",
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Manoeuvre Hub</title>\n    <style>\n        /* Apply box-sizing globally */\n        *,\n        *::before,\n        *::after {\n            box-sizing: border-box;\n        }\n\n        /* Classe pour masquer des éléments */\n        .hidden {\n            display: none;\n        }\n\n        /* Example container style (based on your preference) */\n        .scrollable-container {\n            /* If needed, remove or enable scrolling properties here */\n            overflow: hidden;\n        }\n\n        /* Prevent overflow from the body and html if desired */\n        body, html {\n            margin: 0;\n            padding: 0;\n        }\n\n        /* Style des champs de formulaire */\n        .form-group {\n            margin-bottom: 13px;\n        }\n\n        .form-group label {\n            display: block;\n            margin-bottom: 10px;\n            font-weight: normal;\n            color: #fff;\n            padding-left: 25px;\n        }\n\n        .form-group input,\n        .form-group select {\n            width: 90%;\n            padding: 8px 0;\n            border: none;\n            background-color: transparent;\n            color: #fff;\n            border-bottom: 2px solid #666;\n            margin: 0 auto;\n            display: block;\n        }\n\n        .form-group input:focus,\n        .form-group select:focus {\n            outline: none;\n            border-bottom: 2px solid #888;\n        }\n\n        /* Style du titre du formulaire */\n        #formTitle {\n            font-size: 18px;\n            font-weight: normal;\n            color: #fff;\n            margin-top: 23px;\n            margin-bottom: 28px;\n            margin-left: 25px;\n        }\n\n        /* Espace en haut du conteneur de champs de saisie */\n        #inputField {\n            margin-top: 17px;\n        }\n\n        /* Style du bouton de soumission */\n        #submitButton {\n            margin-top: 14px;\n            margin-left: 25px;\n            margin-bottom: 75px;\n            padding: 10px 20px;\n            font-size: 16px;\n            font-weight: normal;\n            color: #fff;\n            background-color: rgb(0, 86, 122);\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            transition: background-color 0.3s, transform 0.2s;\n        }\n\n        #submitButton:hover {\n            background-color: rgb(0, 106, 152);\n        }\n\n        #submitButton:active {\n            background-color: rgb(0, 66, 92);\n            transform: scale(0.98);\n        }\n\n        /* Make the button appear grayed out and change the cursor when disabled */\n        #submitButton:disabled {\n            opacity: 0.5;\n            cursor: not-allowed;\n        }\n\n        /* Style du sélecteur de manoeuvre */\n        #maneuverSelect {\n            border-bottom: 2px solid #666;\n            width: 90%;\n            margin: 0 auto;\n            display: block;\n            background-color: #212c31;\n            color: #fff;\n        }\n\n        #maneuverSelect:focus {\n            outline: none;\n            border-bottom: 2px solid #888;\n        }\n\n        /* Style de la section des derniers paramètres soumis */\n        #lastSubmitted {\n            margin-top: 50px;\n            padding: 15px;\n            border: 1px solid #444;\n            border-radius: 4px;\n            background-color: #212c31;\n            color: #fff;\n        }\n\n        #lastSubmitted h3 {\n            margin-bottom: 10px;\n            color: #fff;\n        }\n\n        #lastSubmitted ul {\n            list-style-type: disc;\n            padding-left: 20px;\n        }\n\n        #lastSubmitted li {\n            margin-bottom: 5px;\n            color: #ddd;\n        }\n\n        #lastSubmitted p {\n            margin-bottom: 10px;\n            color: #fff;\n        }\n\n        #lastSubmitted ul li strong {\n            color: #fff;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"scrollable-container\">\n        <!-- Titre dynamique -->\n        <h2 id=\"formTitle\">Veuillez d'abord sélectionner une manoeuvre</h2>\n\n        <!-- Sélecteur de manoeuvre -->\n        <div class=\"form-group\">\n            <label for=\"maneuverSelect\">Type de manoeuvre :</label>\n            <select id=\"maneuverSelect\" class=\"form-control\">\n                <option value=\"\" disabled selected>-- Choisissez une manoeuvre --</option>\n                <option value=\"Hohmann\">Hohmann</option>\n                <option value=\"Bi-elliptique\">Bi-elliptique</option>\n                <option value=\"Inclinaison\">Inclinaison</option>\n                <option value=\"QLaw\">QLaw</option>\n            </select>\n        </div>\n\n        <!-- Le formulaire -->\n        <form id=\"dynamicForm\">\n            <div id=\"inputField\"></div>\n            <button type=\"button\" id=\"submitButton\" class=\"hidden\">Valider les paramètres</button>\n        </form>\n\n        <!-- Section pour afficher les derniers paramètres soumis -->\n        <div id=\"lastSubmitted\" class=\"hidden\">\n            <h3>Derniers paramètres soumis :</h3>\n            <div id=\"submittedContent\"></div>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n    (function(scope) {\n        var inputField = document.getElementById('inputField');\n        var formTitle = document.getElementById('formTitle');\n        var maneuverSelect = document.getElementById('maneuverSelect');\n        var submitButton = document.getElementById('submitButton');\n        var lastSubmittedSection = document.getElementById('lastSubmitted');\n        var submittedContent = document.getElementById('submittedContent');\n        var selectedPayload = null;\n        var isFormSubmitted = false;\n\n        // Mapping des unités pour chaque champ\n        var fieldUnits = {\n            SMA_2: 'km',\n            SMA_int: 'km'\n        };\n\n        // Générer les champs du formulaire selon la manoeuvre sélectionnée\n        function generateForm(payload) {\n            if (!payload) {\n                inputField.innerHTML = \"\";\n                formTitle.innerText = \"Veuillez d'abord sélectionner une manoeuvre\";\n                submitButton.classList.add('hidden');\n                return;\n            }\n\n            // Met à jour le titre\n            formTitle.innerText = `Saisir les paramètres de la manoeuvre : ${payload}`;\n            selectedPayload = payload;\n\n            let formContent = \"\";\n            if (payload === \"Hohmann\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"SMA_2\">Demi-grand axe final SMA_2 (km)</label>\n                        <input type=\"text\" id=\"SMA_2\" name=\"SMA_2\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                `;\n            } else if (payload === \"Bi-elliptique\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"SMA_int\">Demi-grand axe intermédiaire SMA_int (km)</label>\n                        <input type=\"text\" id=\"SMA_int\" name=\"SMA_int\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"SMA_2\">Demi-grand axe final SMA_2 (km)</label>\n                        <input type=\"text\" id=\"SMA_2\" name=\"SMA_2\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                `;\n            } else if (payload === \"Inclinaison\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"input_5\">Intitulé du champ 5</label>\n                        <input type=\"text\" id=\"input_5\" name=\"input_5\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"input_6\">Intitulé du champ 6</label>\n                        <input type=\"text\" id=\"input_6\" name=\"input_6\" class=\"form-control\" />\n                    </div>\n                `;\n            } else if (payload === \"QLaw\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"input_7\">Intitulé du champ 7</label>\n                        <input type=\"text\" id=\"input_7\" name=\"input_7\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"input_8\">Intitulé du champ 8</label>\n                        <input type=\"text\" id=\"input_8\" name=\"input_8\" class=\"form-control\" />\n                    </div>\n                `;\n            }\n\n            inputField.innerHTML = formContent;\n            submitButton.classList.remove('hidden');\n        }\n\n        // Envoi des données\n        function sendData() {\n            var formData = {};\n            var elements = document.querySelectorAll('#dynamicForm input');\n\n            elements.forEach(function(input) {\n                if (input.name && input.value.trim() !== \"\") {\n                    formData[input.name] = input.value.trim();\n                }\n            });\n\n            var payload = {\n                ManeuverType: selectedPayload,\n                ...formData\n            };\n\n            if (Object.keys(formData).length > 0) {\n                scope.send({ payload: payload });\n                isFormSubmitted = false;\n                displayLastSubmitted(payload);\n\n                // Reset\n                inputField.innerHTML = \"\";\n                formTitle.innerText = \"Veuillez d'abord sélectionner une manoeuvre\";\n                maneuverSelect.value = \"\";\n                submitButton.classList.add('hidden');\n            } else {\n                alert(\"Veuillez remplir les champs avant de soumettre.\");\n            }\n        }\n\n        // Afficher les derniers paramètres soumis\n        function displayLastSubmitted(data) {\n            let htmlContent = `\n                <p><strong>Manoeuvre :</strong> ${data.ManeuverType}</p>\n                <ul>\n            `;\n            for (var key in data) {\n                if (data.hasOwnProperty(key) && key !== \"ManeuverType\") {\n                    var unit = fieldUnits[key] || '';\n                    var displayValue = data[key];\n                    if (unit) {\n                        displayValue += ` ${unit}`;\n                    }\n                    htmlContent += `<li><strong>${formatLabel(key)} :</strong> ${displayValue}</li>`;\n                }\n            }\n            htmlContent += `</ul>`;\n            submittedContent.innerHTML = htmlContent;\n            lastSubmittedSection.classList.remove('hidden');\n        }\n\n        // Formater les labels\n        function formatLabel(key) {\n            return key\n                .replace(/_/g, ' ')\n                .replace(/\\b\\w/g, function(l) { return l.toUpperCase(); });\n        }\n\n        // Gestion locale de la sélection\n        maneuverSelect.addEventListener('change', function() {\n            var payload = this.value;\n            isFormSubmitted = false;\n            generateForm(payload);\n        });\n\n        // Bouton de soumission\n        submitButton.onclick = function() {\n            isFormSubmitted = true;\n            if (inputField.innerHTML.trim() !== \"\") {\n                sendData();\n            } else {\n                alert(\"Veuillez sélectionner une manoeuvre avant de soumettre.\");\n            }\n        };\n\n        // État par défaut: submittable (enabled)\n        submitButton.disabled = false;\n\n        // Observer msg.payload uniquement pour le flag disableSubmit\n        scope.$watch('msg.payload', function(payload) {\n            if (!payload) return;\n\n            // Si disableSubmit est un booléen, on l'applique\n            if (typeof payload.disableSubmit === 'boolean') {\n                submitButton.disabled = payload.disableSubmit;\n            } else {\n                // Sinon, on remet le bouton en état \"enabled\"\n                submitButton.disabled = false;\n            }\n        });\n\n        // Réinitialiser isFormSubmitted après envoi\n        scope.on('input', function(msg) {\n            if (isFormSubmitted) {\n                isFormSubmitted = false;\n            }\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "fa3595bffd2ea153",
                "506316a1a0095eae",
                "e9e195c16ddc108d",
                "3313c2b3844ad03b",
                "75b50fd31abdf6af",
                "2fd26a2560a1632c"
            ]
        ]
    },
    {
        "id": "506316a1a0095eae",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "command": "cd /app/maneuver-manager/ && rm -rf ManeuverParameters3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 490,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "edeedd1e94d3dfd9",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "TEST PATh 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 440,
        "wires": []
    },
    {
        "id": "3313c2b3844ad03b",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "Trigger Command Data Update",
        "mode": "link",
        "links": [
            "a341c799a803625b",
            "b5706df02266428b"
        ],
        "x": 405,
        "y": 620,
        "wires": []
    },
    {
        "id": "4e701b2b001caf33",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 560,
        "wires": [
            [
                "8ad2529ac5750509"
            ]
        ]
    },
    {
        "id": "8ad2529ac5750509",
        "type": "function",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 560,
        "wires": [
            [
                "688484175ede1ce7"
            ]
        ]
    },
    {
        "id": "582b20c3fb7fcbdc",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "Enable / Disable Maneouver button",
        "links": [
            "43b5b85c781ed6ef",
            "ec1cb201eff49ec8",
            "e7e49290a59cf863",
            "c71ba3ca6e2f98cd"
        ],
        "x": 375,
        "y": 500,
        "wires": [
            [
                "688484175ede1ce7"
            ]
        ]
    },
    {
        "id": "c752f23bac61eef1",
        "type": "function",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 280,
        "wires": [
            [
                "688484175ede1ce7"
            ]
        ]
    },
    {
        "id": "950e99890b5087c6",
        "type": "inject",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "c752f23bac61eef1"
            ]
        ]
    },
    {
        "id": "2fd26a2560a1632c",
        "type": "change",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 500,
        "wires": [
            [
                "39196c6004dd37ff",
                "edeedd1e94d3dfd9"
            ]
        ]
    },
    {
        "id": "75b50fd31abdf6af",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "g": "dd296aa6c795b727",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 560,
        "wires": [
            [
                "9b997c8015e27b2f"
            ]
        ]
    },
    {
        "id": "1c38f2df24292dfc",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "ErgolsConsommés",
        "links": [
            "7a51bc3b1c17f7e0"
        ],
        "x": 55,
        "y": 1640,
        "wires": [
            [
                "2200ce3b5872f2a3",
                "a95f86c78555b34e",
                "509e945025685dc6"
            ]
        ]
    },
    {
        "id": "509e945025685dc6",
        "type": "change",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "Set path_15",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_15",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1740,
        "wires": [
            [
                "1eaa7813be5ec9c0",
                "88fa4be425998c53",
                "23c40dab4e99a1e4"
            ]
        ]
    },
    {
        "id": "a95f86c78555b34e",
        "type": "exec",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "command": "cd /app/maneuver-manager/ && rm -rf ConsommationErgols3.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 1860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2200ce3b5872f2a3",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 1500,
        "wires": []
    },
    {
        "id": "73d3a53a4abea0f8",
        "type": "ui_template",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "group": "3befc064653e026e",
        "name": "Affichage Conso",
        "order": 8,
        "width": 10,
        "height": 2,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Affichage Ergols</title>\n\n    <!-- Style pour masquer la barre de défilement tout en permettant le défilement -->\n    <style>\n        /* Conteneur principal pour masquer la barre de défilement */\n        .scroll-container {\n            height: 100vh;\n            overflow-y: scroll; /* Activer le défilement vertical */\n            scrollbar-width: none; /* Masquer la barre pour Firefox */\n        }\n\n        /* Masquer la barre de défilement pour Chrome, Safari, etc. */\n        .scroll-container::-webkit-scrollbar {\n            display: none; /* Masquer la barre de défilement */\n        }\n    </style>\n</head>\n\n<body>\n    <!-- Conteneur principal avec défilement masqué -->\n    <div class=\"scroll-container\">\n        <!-- Section pour afficher Ergols restants -->\n        <div class=\"result-display\">\n            Ergols disponibles avant manoeuvre (kg) : <span class=\"form2_ergolRemaining result-value\">--</span>\n        </div>\n\n        <!-- Section pour afficher Consommation d'ergols -->\n        <div class=\"result-display\">\n            Consommation d'ergols (kg) : <span class=\"form2_ergolResult result-value\">--</span>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        (function(customScope) {\n            // Utiliser $watch pour surveiller les changements dans le payload\n            customScope.$watch('msg.payload', function(payload) {\n                console.log(\"Payload reçu :\", payload); // Pour vérifier si le payload est bien reçu\n                if (payload) {\n                    let ergolsRestants;\n                if (Array.isArray(payload.path_14)) {\n                    // Exemple : on récupère l’élément [2] du tableau\n                    // (vous pouvez ajuster si nécessaire)\n                    ergolsRestants = payload.path_14[2];\n                } else if (typeof payload.path_14 === 'object') {\n                    // Si c’est un objet, prendre par exemple la clé \"ergol_mass\"\n                    // ou toute autre clé appropriée\n                    ergolsRestants = parseFloat(payload.path_14.ergol_mass) || 0.0;\n                } else {\n                    console.log(\"path_14 est manquant ou invalide\");\n                    return;\n                }\n\n                    // Mise à jour de la valeur \"Ergols restants\"\n                    let formattedErgolsRestants = ergolsRestants.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    let remainingElements = document.getElementsByClassName(\"form2_ergolRemaining\");\n                    for (let i = 0; i < remainingElements.length; i++) {\n                        remainingElements[i].textContent = formattedErgolsRestants + \" kg\";\n                    }\n\n                    // Récupérer la consommation d'ergols\n                    let consommation;\n                if (Array.isArray(payload.path_15)) {\n                    // Ex : on lit consommationErgols sur l'index [0]\n                    consommation = payload.path_15[0]?.consommationErgols;\n                } else if (typeof payload.path_15 === 'object') {\n                    // Ex : on lit ergol_consumption (ou autre champ)\n                    consommation = parseFloat(payload.path_15.ergol_consumption) || 0.0;\n                } else {\n                    console.log(\"path_15 est manquant ou invalide\");\n                    return;\n                }\n\n                    // Formattage en notation française\n                    let formattedConsommation = consommation.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    \n                    // Mettre à jour toutes les instances de consommation d'ergols\n                    let elements = document.getElementsByClassName(\"form2_ergolResult\");\n                    for (let i = 0; i < elements.length; i++) {\n                        elements[i].textContent = formattedConsommation + \" kg\";\n                    }\n                } else {\n                    console.log(\"Payload non valide ou consommationErgols manquant\");\n                }\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "336e7c9174de0213",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "ergols",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1560,
        "wires": []
    },
    {
        "id": "88fa4be425998c53",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "PATH 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1660,
        "wires": []
    },
    {
        "id": "a9e1292beea07036",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "PATH 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1740,
        "wires": []
    },
    {
        "id": "23c40dab4e99a1e4",
        "type": "change",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1740,
        "wires": [
            [
                "a9e1292beea07036",
                "1eaa7813be5ec9c0"
            ]
        ]
    },
    {
        "id": "1cd7ae11b7249260",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "",
        "links": [
            "f67104029f8ac58f"
        ],
        "x": 375,
        "y": 1680,
        "wires": [
            [
                "23c40dab4e99a1e4"
            ]
        ]
    },
    {
        "id": "1eaa7813be5ec9c0",
        "type": "join-wait",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "",
        "paths": "[\"path_14\",\"path_15\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 370,
        "y": 1500,
        "wires": [
            [
                "52e4808188c6ed3c",
                "0408abc39ae1f825"
            ],
            []
        ]
    },
    {
        "id": "52e4808188c6ed3c",
        "type": "function",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "",
        "func": "// Suppose que msg.payload contient déjà des informations\nlet paths = msg.paths; // Supposons que les chemins sont dans msg.paths\n\n// Ajouter les informations de paths dans payload\nmsg.payload = paths;\n\n// Retourner le message avec paths inclus dans payload\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1500,
        "wires": [
            [
                "73d3a53a4abea0f8",
                "336e7c9174de0213"
            ]
        ]
    },
    {
        "id": "1d6a91b5bf41350a",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "",
        "links": [
            "3db42ae545d16dbe",
            "5fe6641201072922",
            "a633d760f9c46055"
        ],
        "x": 375,
        "y": 1780,
        "wires": [
            [
                "23c40dab4e99a1e4"
            ]
        ]
    },
    {
        "id": "0408abc39ae1f825",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ba5ed5086870bb27",
        "type": "link in",
        "z": "a45be5c622f6091e",
        "g": "f64a804bade9b6f9",
        "name": "",
        "links": [
            "3058f53f34d12d6a",
            "921ef1a8e9d9a5a4",
            "c219e7d022b02bf1"
        ],
        "x": 235,
        "y": 1680,
        "wires": [
            [
                "509e945025685dc6"
            ]
        ]
    },
    {
        "id": "962507df70eb7717",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "DEBUG MASS CALCUL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 360,
        "wires": []
    },
    {
        "id": "d08e7c547f762888",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "RETURN MASS CALCUL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 280,
        "wires": []
    },
    {
        "id": "683731c4a94b836c",
        "type": "delay",
        "z": "a45be5c622f6091e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2130,
        "y": 960,
        "wires": [
            [
                "7d04ce24f5b0370d"
            ]
        ]
    },
    {
        "id": "be066244988849d9",
        "type": "change",
        "z": "a45be5c622f6091e",
        "name": "label red1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "red1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 680,
        "wires": [
            [
                "bafc3afbdedfc38d"
            ]
        ]
    },
    {
        "id": "bafc3afbdedfc38d",
        "type": "link out",
        "z": "a45be5c622f6091e",
        "name": "save last red1",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 3005,
        "y": 680,
        "wires": []
    },
    {
        "id": "7567a57f4e91f77b",
        "type": "trigger",
        "z": "a45be5c622f6091e",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3330,
        "y": 2720,
        "wires": [
            [
                "e99ab8e28db9c3d4"
            ]
        ]
    },
    {
        "id": "f14d7b1b7dcdf454",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4750,
        "y": 1940,
        "wires": []
    },
    {
        "id": "79753b826616bd32",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4930,
        "y": 680,
        "wires": []
    },
    {
        "id": "0f7efc4322df9d94",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4930,
        "y": 820,
        "wires": []
    },
    {
        "id": "27d9c102c10107f6",
        "type": "debug",
        "z": "a45be5c622f6091e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4850,
        "y": 1880,
        "wires": []
    },
    {
        "id": "060d1d76f651e072",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "r2 timesettermaneuver IN",
        "links": [
            "51ecbdb6f445d9e7",
            "00f5602bb540900e"
        ],
        "x": 465,
        "y": 660,
        "wires": [
            [
                "12410dec9ee5d9a5"
            ]
        ]
    },
    {
        "id": "12410dec9ee5d9a5",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_5",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 660,
        "wires": [
            [
                "b2df27d76465d4ea",
                "4af87d0614ad863a",
                "9fe90df1ddd7e56a"
            ]
        ]
    },
    {
        "id": "27cc942b73a7f469",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 600,
        "wires": [
            [
                "b2df27d76465d4ea",
                "5b1f9d1b1b008950"
            ]
        ]
    },
    {
        "id": "b2df27d76465d4ea",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[ \"path_4\", \"path_5\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 810,
        "y": 660,
        "wires": [
            [
                "618c407a9640ec08"
            ],
            []
        ]
    },
    {
        "id": "618c407a9640ec08",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "duration calc (delay from tle to man)",
        "func": "//var tletime = msg.paths.path_4[0].peritimeb1[0]\nvar tletime = msg.paths.path_4; // 03/05/23 We disco the mongo\n// We use therefore the path4 directly as it comes from the date storage\n// we set teletime to the element 0 of the field peritimeb1 of path_4\nvar mantime = msg.paths.path_5\n// the man time\n//is  in the path5 because of the Setpath_5\nvar timeCorrectionMM =0;\nvar duration = (mantime)/1000 - (tletime/1000);\ntletime = tletime - timeCorrectionMM;\nmsg.payload = [duration, tletime, mantime]\nmsg.body = [tletime, mantime]\n// it is thedurqtion before mqnoeuver at the tle time\n//msg.payload = [duration, tletime-timeCorrectionMM, mantime]\n//msg.body = [tletime-timeCorrectionMM, mantime]\nreturn msg;\n\n//-38000 because of MM time error when propagating",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 640,
        "wires": [
            [
                "241ff045611d789f",
                "42417afeb59afe36",
                "b83856db65409675"
            ]
        ]
    },
    {
        "id": "1216cdad29f68b53",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Maneuv4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 620,
        "wires": [
            [
                "9439a5470f0e6793"
            ]
        ]
    },
    {
        "id": "9439a5470f0e6793",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Maneuv storage injection",
        "func": "msg.payload = [\"Relative DATE, Dx, Dy, Dz, contdura\",msg.paths.path_7[0], 1, 0, 0, 1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 620,
        "wires": [
            [
                "50c86f8895984927"
            ]
        ]
    },
    {
        "id": "241ff045611d789f",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_7",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_7",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 560,
        "wires": [
            [
                "5fc74ed247de07de",
                "49d355e8d0ea0b08"
            ]
        ]
    },
    {
        "id": "5fc74ed247de07de",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[ \"path_7\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1390,
        "y": 620,
        "wires": [
            [
                "1216cdad29f68b53"
            ],
            []
        ]
    },
    {
        "id": "50c86f8895984927",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1960,
        "y": 620,
        "wires": [
            [
                "e3cac333e96f6f32"
            ]
        ]
    },
    {
        "id": "e3cac333e96f6f32",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2120,
        "y": 620,
        "wires": [
            [
                "2442a83eeab9d794"
            ]
        ]
    },
    {
        "id": "2442a83eeab9d794",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Maneuv-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2330,
        "y": 620,
        "wires": [
            [
                "e8b9c8978258a0bf"
            ]
        ]
    },
    {
        "id": "8c93639f58d6cab1",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 800,
        "wires": [
            [
                "e2d42b4195748d69",
                "b3942181f64e62a3"
            ]
        ]
    },
    {
        "id": "9e458a922f5f3bc0",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 940,
        "wires": [
            [
                "e2d42b4195748d69",
                "9991a3bf086b1bc7",
                "0860020f8d8bfce2",
                "c17e8a3e6bc88009"
            ]
        ]
    },
    {
        "id": "e2d42b4195748d69",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_3\", \"path_2\", \"path_8\",\"path_1\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1410,
        "y": 800,
        "wires": [
            [
                "f5a8185c93190b78",
                "1512e7d1bc80db83"
            ],
            []
        ]
    },
    {
        "id": "d9a7549468fe4d41",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "tle2",
        "func": "msg.payload = msg.payload[0].tle2;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 860,
        "wires": [
            [
                "aa37985224372a90"
            ]
        ]
    },
    {
        "id": "e2fec3d7e3e7f41a",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "query for r2tlelatest",
        "func": "msg.payload = {}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "be26a807054d972f"
            ]
        ]
    },
    {
        "id": "be26a807054d972f",
        "type": "mongodb in",
        "z": "32fc9731f5355a29",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 510,
        "y": 860,
        "wires": [
            [
                "385435dcfc12eb14",
                "d9a7549468fe4d41",
                "dea5ce01daa666a0",
                "b39045c6ebae4427"
            ]
        ]
    },
    {
        "id": "aa37985224372a90",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1020,
        "y": 860,
        "wires": [
            [
                "db84cb1b5c9b2fa0"
            ]
        ]
    },
    {
        "id": "42417afeb59afe36",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_3",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 700,
        "wires": [
            [
                "e2d42b4195748d69",
                "c8aaa44faddad1fe",
                "c17e8a3e6bc88009"
            ]
        ]
    },
    {
        "id": "9983f951e5371c81",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1880,
        "y": 900,
        "wires": [
            [
                "98c0115b91c884df",
                "85111ae65ea07a54"
            ]
        ]
    },
    {
        "id": "98c0115b91c884df",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2080,
        "y": 900,
        "wires": [
            [
                "03645f6dbacf2061"
            ]
        ]
    },
    {
        "id": "03645f6dbacf2061",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2340,
        "y": 900,
        "wires": [
            [
                "7b5ad267ae0950b9"
            ]
        ]
    },
    {
        "id": "a5bcc90a0f34542d",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 860,
        "wires": [
            [
                "9983f951e5371c81",
                "c8955de24421f812"
            ]
        ]
    },
    {
        "id": "52bd782358dcd3a7",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red2 -DcommandParameter=\"compute\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 3050,
        "y": 760,
        "wires": [
            [
                "c11b6f240bb76309",
                "a6255808bc22b439",
                "4093f960dad859a2",
                "bf34a4dc8fd58fdb",
                "2d01a94380302bc2"
            ],
            [
                "1c4cbff27d426090",
                "b06546accd44b0ea",
                "a6255808bc22b439",
                "944e70fbd398e962",
                "a3f95fa7ec1ef7e8",
                "26c1664cbc9cecfc",
                "f6e8db19d9438ca1"
            ],
            []
        ]
    },
    {
        "id": "e8b9c8978258a0bf",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 680,
        "wires": [
            [
                "f6afac48abe328a4",
                "79bdea138e2307bb"
            ]
        ]
    },
    {
        "id": "7b5ad267ae0950b9",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 780,
        "wires": [
            [
                "f6afac48abe328a4",
                "73f0a56789a886f2"
            ]
        ]
    },
    {
        "id": "f6afac48abe328a4",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[ \"path_1\", \"path_2\",\"path_10\"]",
        "pathsToExpire": "[ \"path_4\"]",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "900",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2750,
        "y": 760,
        "wires": [
            [
                "c0db1b7c5f1c728a",
                "7d76c3d0f49824a4",
                "352baaf0e40dd714",
                "52bd782358dcd3a7",
                "e5160d72c98dc4cc"
            ],
            []
        ]
    },
    {
        "id": "4093f960dad859a2",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "query to read Result4.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 560,
        "wires": [
            [
                "fb8b81cca3c9fa36"
            ]
        ]
    },
    {
        "id": "fb8b81cca3c9fa36",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3740,
        "y": 560,
        "wires": [
            [
                "8bd80a55464d8878"
            ]
        ]
    },
    {
        "id": "8bd80a55464d8878",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3900,
        "y": 600,
        "wires": [
            [
                "15b439ad2ac26273"
            ]
        ]
    },
    {
        "id": "15b439ad2ac26273",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3620,
        "y": 620,
        "wires": [
            [
                "85eb6a0bbbedc74f"
            ]
        ]
    },
    {
        "id": "85eb6a0bbbedc74f",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 680,
        "wires": [
            [
                "0119598f8539c8b0"
            ]
        ]
    },
    {
        "id": "0119598f8539c8b0",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 740,
        "wires": [
            [
                "743d3fb33c72d3a9"
            ]
        ]
    },
    {
        "id": "59886789b2e9b3e8",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "update all for B1 OUT",
        "mode": "link",
        "links": [
            "4ac641f2a3d366c5",
            "f97955cb1a90dca4",
            "1168e0151a783577",
            "4d4d54a87a2bb310",
            "73dd4bb1ee938070"
        ],
        "x": 4275,
        "y": 700,
        "wires": []
    },
    {
        "id": "e9594caba5b1db3f",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "time of post-maneuver",
        "func": "// Ensure msg.body is an array\nif (!Array.isArray(msg.body)) {\n    node.error(\"msg.body is not an array\");\n    return null;\n}\n\nvar n = msg.body.length;\nvar datecurrent = null;\n\n// Loop backwards through msg.body to find the last non-empty element\nfor (var i = n - 1; i >= 0; i--) {\n    if (msg.body[i] !== \"\") {\n        datecurrent = msg.body[i];\n        break;\n    }\n}\n\n// Set msg.payload to the found value (or null if none found)\nmsg.payload = datecurrent;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 920,
        "wires": [
            [
                "30a1a7e6f70d8f2e",
                "ceddfac12498b1bf",
                "c349fbaacb4289e7",
                "097b1e9de69e6482"
            ]
        ]
    },
    {
        "id": "30a1a7e6f70d8f2e",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "time of TLE",
        "func": "var time = msg.payload ;\n\n\nvar tjd = (((time/1000) + 631152000)/86400);\ntjda =tjd*100000000;      \narrondi = Math.round(tjda);\ntjd = arrondi/100000000;\n\nvar year = Math.trunc(tjd/365-51)+1;\nvar day = Math.trunc(tjd-(0.25*366*(2000+year-1950)+0.75*365*(2000+year-1950)))+1;//or +1\nvar fraca = (tjd-Math.trunc(tjd))*1000000;\nvar frac = Math.round(fraca)/1000000;\nvar epoch = 1000*year+day+frac;\n\n\n\n   return{\n topic:\"tle time\",\n payload: time,\n //payload:[\"1 40053U 14034A   21320.55992951  .00000013  00000-0  12611-4 0  9996\", \"2 40053  98.2013  26.1889 0001138  92.3043 267.8286 14.58552780393059\"],\n body:[time, tjd, year, day, frac, epoch]\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3820,
        "y": 940,
        "wires": [
            [
                "9ae96f55e7b21722"
            ]
        ]
    },
    {
        "id": "9ae96f55e7b21722",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "injection",
        "func": "var payload = msg.body;\nvar newMsg = {};\nnewMsg.payload = payload;\nnode.send(newMsg);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 940,
        "wires": [
            [
                "f371df0a6d1c5b74"
            ]
        ]
    },
    {
        "id": "f371df0a6d1c5b74",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "query to fill b1 tle time database",
        "func": "var tab = []\nvar tm = {}\n\n //From the GS\ntm.peritimeb1 = msg.payload\ntab.push(tm)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 1000,
        "wires": [
            [
                "68c2d3b29aaa3d7d",
                "3ff4f238f8de762a"
            ]
        ]
    },
    {
        "id": "68c2d3b29aaa3d7d",
        "type": "split",
        "z": "32fc9731f5355a29",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3800,
        "y": 1000,
        "wires": [
            [
                "bd35ef434dc378de",
                "7b278a4063dc15d8"
            ]
        ]
    },
    {
        "id": "bd35ef434dc378de",
        "type": "mongodb out",
        "z": "32fc9731f5355a29",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "insert r2 time tle mongo",
        "collection": "peritimer2",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4080,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4b7e1e30846bb6e4",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Tle b1-postMan-OUT",
        "mode": "link",
        "links": [],
        "x": 4485,
        "y": 860,
        "wires": []
    },
    {
        "id": "955629b77b6bdc2b",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "132d30489f088003",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "MMB1",
        "info": "",
        "x": 310,
        "y": 80,
        "wires": []
    },
    {
        "id": "49654e30d53aa214",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "03/05/23",
        "info": "We use for now the persist",
        "x": 230,
        "y": 480,
        "wires": []
    },
    {
        "id": "35540b1866c0640f",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "03/05/23",
        "info": "THIS should be connected to the function Maneuver param",
        "x": 110,
        "y": 560,
        "wires": []
    },
    {
        "id": "5556ead0077fd854",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "Unix Time stamp of the manoeuver",
        "info": "",
        "x": 170,
        "y": 640,
        "wires": []
    },
    {
        "id": "0bf1e6df228ff3a5",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "Unix timestamp of TLE",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "ceddfac12498b1bf",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "red2-date-storage",
        "filename": "red2-date-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3980,
        "y": 900,
        "wires": [
            [
                "19c6461127cf69c3"
            ]
        ]
    },
    {
        "id": "d78b64c5338d95aa",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "thrust angle and Manoeuver duration",
        "info": "",
        "x": 180,
        "y": 200,
        "wires": []
    },
    {
        "id": "395df5c814924d38",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "Vehicule, Old TLE, and Manoeuver delay",
        "info": "",
        "x": 1570,
        "y": 520,
        "wires": []
    },
    {
        "id": "e524a5f2010d417d",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 660,
        "wires": [
            [
                "f082e169eb9ea86c",
                "5c43832bdd9ed15a"
            ]
        ]
    },
    {
        "id": "3bbfc0cc93fc57e3",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "fabrication de la string",
        "info": "",
        "x": 3790,
        "y": 780,
        "wires": []
    },
    {
        "id": "5f22161d636bfb7b",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "090523",
        "info": "Changed to discard also null values ",
        "x": 800,
        "y": 720,
        "wires": []
    },
    {
        "id": "f2adaefc6c4e77f4",
        "type": "catch",
        "z": "32fc9731f5355a29",
        "name": "",
        "scope": [
            "52bd782358dcd3a7"
        ],
        "uncaught": false,
        "x": 3060,
        "y": 820,
        "wires": [
            [
                "1c4cbff27d426090"
            ]
        ]
    },
    {
        "id": "743d3fb33c72d3a9",
        "type": "switch",
        "z": "32fc9731f5355a29",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4010,
        "y": 740,
        "wires": [
            [
                "4f579ba3f2c1aee5",
                "df06018f04bcae82",
                "8ba5fe402b4f7cee",
                "22f046e501da06bc",
                "63a6044a2134f27f",
                "05daa5c41990befd"
            ],
            []
        ]
    },
    {
        "id": "1484ea45f6c1626e",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "090523",
        "info": "Modif to discard message if null NaN ..",
        "x": 4100,
        "y": 480,
        "wires": []
    },
    {
        "id": "27f45fd1cf1d2c5b",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4580,
        "y": 440,
        "wires": [
            [
                "0ef08be962cfc6a0",
                "da25dc99dcc82ef2"
            ]
        ]
    },
    {
        "id": "c95d6ad5203e0111",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "read red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3650,
        "y": 300,
        "wires": [
            [
                "5f3760859e2c0a1a",
                "9940f04f769f445c"
            ]
        ]
    },
    {
        "id": "8b9e1337b841f7cf",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Old tle storage",
        "filename": "red2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "5f3760859e2c0a1a",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3860,
        "y": 340,
        "wires": [
            [
                "8b9e1337b841f7cf",
                "509691747102a482"
            ]
        ]
    },
    {
        "id": "9728daf84d417d4f",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "11/05/23",
        "info": "",
        "x": 4190,
        "y": 400,
        "wires": []
    },
    {
        "id": "c44e1cad8a03cc82",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "TLE visualizer B1",
        "links": [
            "68f8a4538f23291d"
        ],
        "x": 3415,
        "y": 280,
        "wires": [
            [
                "c95d6ad5203e0111",
                "d29d223e24fb1e57"
            ]
        ]
    },
    {
        "id": "5093ac2e2ddb6701",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "TLE visualizer R2 out",
        "mode": "link",
        "links": [
            "65d2f35495558a56"
        ],
        "x": 4595,
        "y": 300,
        "wires": []
    },
    {
        "id": "509691747102a482",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Act",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Old TLE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4040,
        "y": 340,
        "wires": [
            [
                "f2ac0b0d67100129"
            ]
        ]
    },
    {
        "id": "f2ac0b0d67100129",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4200,
        "y": 300,
        "wires": [
            [
                "031acd3c0d797253",
                "ecea409645bbec97"
            ]
        ]
    },
    {
        "id": "e92a32384e3fd786",
        "type": "switch",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "New TLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4500,
        "y": 300,
        "wires": [
            [
                "5093ac2e2ddb6701"
            ]
        ]
    },
    {
        "id": "031acd3c0d797253",
        "type": "split",
        "z": "32fc9731f5355a29",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4360,
        "y": 300,
        "wires": [
            [
                "e92a32384e3fd786"
            ]
        ]
    },
    {
        "id": "e8e52c836840611a",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "read red2-tle-storage",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3690,
        "y": 440,
        "wires": [
            [
                "2f958af835f0cb04"
            ]
        ]
    },
    {
        "id": "2f958af835f0cb04",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3880,
        "y": 440,
        "wires": [
            [
                "0ee3ae19b14609c5",
                "7ea180853be91b26"
            ]
        ]
    },
    {
        "id": "0ee3ae19b14609c5",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Old tle storage",
        "filename": "red2-old-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3890,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "ecea409645bbec97",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "echange",
        "func": "\nif(msg.payload[0].version == \"New TLE\" ){\n    var tmp =msg.payload[0];\n    msg.payload[0]= msg.payload[1];\n    msg.payload[1]=tmp;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4360,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "db84cb1b5c9b2fa0",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 940,
        "wires": [
            [
                "9e458a922f5f3bc0"
            ]
        ]
    },
    {
        "id": "1512e7d1bc80db83",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Data4.txt format",
        "func": "// Calculations from fixed paths remain unchanged\nvar N; // Mean motion in rev/day\nvar n; // Angular speed [rad/s]\nvar a; // semi-major axis\nvar acube; // a³\nvar e; // eccentricity\n\nvar mu = 398600.4418; // Earth's standard gravitational parameter\nvar J = 86400;      // Seconds in a day\n\n// Get the mean motion from path_2 (position [7] is assumed)\nN = msg.paths.path_2[7];\nn = 2 * Math.PI * N / J;  \nacube = mu / (n * n);\na = Math.cbrt(acube);\ne = Number(msg.paths.path_2[4]) / 10000000;\ne = Number(e.toFixed(7));\n\nvar durastop = msg.paths.path_3[0] + 1.0;\nvar thrust    = \"0\";\nvar dv        = \"0\";\nvar isp       = \"0\";\nvar drymass   = \"0\";\nvar ergolmass = \"0\";\nvar surface   = \"0\";\n\nvar myDate = new Date(msg.paths.path_3[1]);\nvar DATE = myDate.toISOString();\n\n// Vérification des valeurs provenant de path_1 (ou d'autres sources)\nif (!isNaN(msg.isp)) { \n    isp = msg.isp; \n}\nif (!isNaN(msg.paths.path_13[1])) { \n    ergolmass = msg.paths.path_13[1]; \n}\nif (!isNaN(msg.paths.path_13[0])) { \n    drymass = msg.paths.path_13[0]; \n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––\n  GENERIC EXTRA PARAMETER EXTRACTION\n  On suppose que les paramètres supplémentaires (par exemple, \"Maneuver_Type\", \"SMA_2\", \n  ou \"input_5\", \"input_6\", etc.) sont transmis dans un objet contenu dans msg.paths.path_8.\n–––––––––––––––––––––––––––––––––––––––––––––––*/\nvar extraHeaders = [];\nvar extraValues = [];\n\nif (msg.paths && msg.paths.path_8 && typeof msg.paths.path_8 === 'object') {\n  // On récupère les noms et valeurs des propriétés de l'objet extra\n  extraHeaders = Object.keys(msg.paths.path_8);\n  extraValues  = Object.values(msg.paths.path_8);\n} else {\n  node.warn(\"msg.paths.path_8 est indéfini ou non valide, aucun paramètre supplémentaire n'est ajouté.\");\n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––\n  ASSEMBLAGE FINAL DU PAYLOAD\n  La première entrée est une chaîne d'en-tête.\n  On garde les colonnes fixes puis on ajoute les colonnes issues du chemin précédent.\n–––––––––––––––––––––––––––––––––––––––––––––––*/\n// Les colonnes fixes\nvar fixedHeader = \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass\";\n// On ajoute dynamiquement les noms des colonnes supplémentaires, si elles existent\nvar header = fixedHeader + (extraHeaders.length ? \", \" + extraHeaders.join(\", \") : \"\");\n\n// On construit le tableau final en respectant le même format que précédemment\nmsg.payload = [\n  header,\n  DATE,\n  a,\n  e,\n  msg.paths.path_2[2],\n  msg.paths.path_2[3],\n  msg.paths.path_2[5],\n  msg.paths.path_2[6],\n  drymass,\n  surface,\n  thrust,\n  isp,\n  ergolmass\n].concat(extraValues);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 860,
        "wires": [
            [
                "a5bcc90a0f34542d"
            ]
        ]
    },
    {
        "id": "4341b87d91714d35",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 600,
        "wires": [
            [
                "f4a9c7db53036b21"
            ]
        ]
    },
    {
        "id": "f4a9c7db53036b21",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "TLE date extraction",
        "func": "var milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n// extract the epoch from the array formed using the methode values()\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\n\n//                Correction 050723\n\n//fractionOfDay = fractionOfDay.toFixed(6);\n// the fraction of the day is given on 8 digit not 6\n//we are loosing accuracy for no reason here\n//                 COrrection 050723\nfractionOfDay = fractionOfDay.toFixed(8);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\n//Compute the year \nvar year=milleniumCentury+decade;\n// Calculate the time in milliseconds for the fractional part\n// of the day\nvar fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\n/*For this new version of the function\nall the parameters have to be prepared ahead and we use the \nstatic methode UTC to translate the year dayinto a UTC timestamp\nthat we then add to the fraction of the day in ms to obtain \nthe UTC timestamp of the epoch.\n*/\nvar utctimestamp = Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds; \n/*it can be seen that we don't define the mounth as the day parameter\naccepts overflow*/\nmsg.payload=utctimestamp;\n\nreturn msg;\n\n// OLD VERSION FROM 170523:\n/*\nvar milleniumCentury = 2000;\n// Don't forget to change that on the 31/12/2099!\n\nvar epochTLE = Number(msg.payload[3]);\n\nvar fractionOfDay = epochTLE-Math.trunc(epochTLE);\nfractionOfDay = fractionOfDay.toFixed(6);\nvar decade = Math.trunc(Math.trunc(epochTLE)/1000);\nvar dayOfYear = Math.trunc(epochTLE)-(decade*1000);\nvar year=milleniumCentury+decade;\n \n  // Initialize with January 1st of the given year\n // date.setDate(dayOfYear); \n  // Set the day of the year\n\n  // Calculate the time in milliseconds for the fractional part\n  // of the day\n  \n var fractionOfDayMilliseconds = fractionOfDay * 24 * 60 * 60 * 1000;\nvar date = new Date(Date.UTC(year,0,dayOfYear)+fractionOfDayMilliseconds); \n  // Add the fractional part to the date\n\nmsg.payload=date.getTime()\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 600,
        "wires": [
            [
                "27cc942b73a7f469"
            ]
        ]
    },
    {
        "id": "dea5ce01daa666a0",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "tle1",
        "func": "msg.payload = msg.payload[0].tle1;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 800,
        "wires": [
            [
                "e75218a8521d9a1b"
            ]
        ]
    },
    {
        "id": "e75218a8521d9a1b",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "Space CSV",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 740,
        "y": 800,
        "wires": [
            [
                "4341b87d91714d35"
            ]
        ]
    },
    {
        "id": "0c73fc60fbe15775",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "170523 New functionality",
        "info": "This new function was introduced because the date from the persistent is not always the one we want for the MM as it can be changed by juste moving the slider at any time.",
        "x": 160,
        "y": 440,
        "wires": []
    },
    {
        "id": "03ac774c0fba3a31",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "220523",
        "info": "injection of the body in payload suppressed as we have for the time setter of the TLE update a property msg.dateString used for the date display",
        "x": 100,
        "y": 480,
        "wires": []
    },
    {
        "id": "d29d223e24fb1e57",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "New TLE",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "New TLE",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3650,
        "y": 260,
        "wires": [
            [
                "f2ac0b0d67100129"
            ]
        ]
    },
    {
        "id": "7ea180853be91b26",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "Before manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4100,
        "y": 420,
        "wires": [
            [
                "27f45fd1cf1d2c5b",
                "3fa580f6a59f1a55"
            ]
        ]
    },
    {
        "id": "1c4cbff27d426090",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Error MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3210,
        "y": 820,
        "wires": []
    },
    {
        "id": "9940f04f769f445c",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3880,
        "y": 300,
        "wires": []
    },
    {
        "id": "b83856db65409675",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 660,
        "wires": []
    },
    {
        "id": "5b1f9d1b1b008950",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "fe44fe1f4b34bd44",
        "type": "comment",
        "z": "32fc9731f5355a29",
        "name": "ANGLES description",
        "info": "beta is the angle arround x or y in LVLH \nalpha is the angle around Z",
        "x": 150,
        "y": 80,
        "wires": []
    },
    {
        "id": "df06018f04bcae82",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4080,
        "y": 800,
        "wires": [
            [
                "955629b77b6bdc2b"
            ]
        ]
    },
    {
        "id": "4f579ba3f2c1aee5",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 820,
        "wires": [
            [
                "22f046e501da06bc"
            ]
        ]
    },
    {
        "id": "22f046e501da06bc",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 4475,
        "y": 740,
        "wires": []
    },
    {
        "id": "e8dd4402ca57197d",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "var max=6;\nvar random = Math.floor(Math.random() * max);\n\nif (msg.payload.includes(\"hyperbolic orbits cannot be handled\")){\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\nelse if (msg.payload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver !\";\n}\nelse if (msg.payload.includes(\"Eccentricity\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver !\";\n}\nelse{msg.errorMessage=\"Maneuver aborted\";}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3430,
        "y": 760,
        "wires": [
            [
                "05b4d5115dd0d7a8"
            ]
        ]
    },
    {
        "id": "05b4d5115dd0d7a8",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 3575,
        "y": 760,
        "wires": []
    },
    {
        "id": "8fb9504729589e65",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3670,
        "y": 220,
        "wires": [
            [
                "c95d6ad5203e0111"
            ]
        ]
    },
    {
        "id": "614c571e0ac96c2d",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "error: no tle storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3660,
        "y": 180,
        "wires": []
    },
    {
        "id": "a2bfbc7b9b4f6722",
        "type": "catch",
        "z": "32fc9731f5355a29",
        "name": "",
        "scope": [
            "c95d6ad5203e0111"
        ],
        "uncaught": false,
        "x": 3440,
        "y": 200,
        "wires": [
            [
                "8fb9504729589e65",
                "614c571e0ac96c2d"
            ]
        ]
    },
    {
        "id": "f5a8185c93190b78",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 800,
        "wires": []
    },
    {
        "id": "c11b6f240bb76309",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "OUT MM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3410,
        "y": 500,
        "wires": []
    },
    {
        "id": "782414758fb9ed7c",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST ISP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 1060,
        "wires": []
    },
    {
        "id": "85111ae65ea07a54",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 860,
        "wires": []
    },
    {
        "id": "c8955de24421f812",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 820,
        "wires": []
    },
    {
        "id": "f14715e8412e3b55",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 380,
        "wires": []
    },
    {
        "id": "a65b53cdd204f8d2",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_8",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_8",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 420,
        "wires": [
            [
                "c17e8a3e6bc88009",
                "8d2f2a8b24657147",
                "1ae6aee2ef8769cc",
                "e2d42b4195748d69"
            ]
        ]
    },
    {
        "id": "9991a3bf086b1bc7",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "PATH 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 940,
        "wires": []
    },
    {
        "id": "b3942181f64e62a3",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 860,
        "wires": []
    },
    {
        "id": "c8aaa44faddad1fe",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "PATH 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 720,
        "wires": []
    },
    {
        "id": "49d355e8d0ea0b08",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 560,
        "wires": []
    },
    {
        "id": "79bdea138e2307bb",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2570,
        "y": 640,
        "wires": []
    },
    {
        "id": "73f0a56789a886f2",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2950,
        "y": 860,
        "wires": []
    },
    {
        "id": "4af87d0614ad863a",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9fe90df1ddd7e56a",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 900,
        "wires": []
    },
    {
        "id": "df6cc57e0e2f24ea",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "query to read PostManeuverDate4.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 820,
        "wires": [
            [
                "faefa7921ef36aa2"
            ]
        ]
    },
    {
        "id": "faefa7921ef36aa2",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/PostManeuverDate4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3760,
        "y": 820,
        "wires": [
            [
                "042f56dbf891b5bb"
            ]
        ]
    },
    {
        "id": "042f56dbf891b5bb",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3820,
        "y": 880,
        "wires": [
            [
                "353dd2edd2978871"
            ]
        ]
    },
    {
        "id": "353dd2edd2978871",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 920,
        "wires": [
            [
                "f3505549b7ef8d4f",
                "e9594caba5b1db3f"
            ]
        ]
    },
    {
        "id": "f3505549b7ef8d4f",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 960,
        "wires": []
    },
    {
        "id": "7b278a4063dc15d8",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3480,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "a190426ffbe0105e",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1740,
        "y": 660,
        "wires": [
            [
                "f783a6b26a608940"
            ]
        ]
    },
    {
        "id": "f783a6b26a608940",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1900,
        "y": 660,
        "wires": [
            [
                "d42364a07d541358"
            ]
        ]
    },
    {
        "id": "d42364a07d541358",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2080,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "5fae4e26bd42f3f1",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Data4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 660,
        "wires": [
            [
                "a190426ffbe0105e"
            ]
        ]
    },
    {
        "id": "289f7b651981ad19",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_7\",\"path_8\",\"path_9\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1090,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "71c948a6945296d6",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_9",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_9",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 460,
        "wires": [
            [
                "c841a9b3563d257a"
            ]
        ]
    },
    {
        "id": "08e3981267b0afb0",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "ManeuverParameters4.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar pathArray = (msg.paths && msg.paths.path_2) ? Object.values(msg.paths.path_2) : [0, 0, 0, 0,0,0,0,0];\nvar pathArray2 = (msg.paths && msg.paths.path_10) ? Object.values(msg.paths.path_10) : [0];\n// Try reading path_17 as a single numeric value\nvar path17Val = 0;\nif (msg.paths && msg.paths.path_17 !== undefined) {\n    // Convert whatever is at path_17 into a Number (or default to 0 if invalid)\n    path17Val = Number(msg.paths.path_17) || 0;\n}\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray[1] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray[2] || 0; // Troisième élément ou 0 si non défini\nvar isp = pathArray[3] || 0; // Quatrième élément ou 0 si non défini\nvar maneuvertype = pathArray2[0] || 0; // Premier élément ou 0 si non défini\nvar SMA_2 = pathArray2[1] || 0; // Deuxième élément ou 0 si non défini\n\n// Vérifier si msg.paths.path_2 existe avant d'accéder à ses valeurs\nvar a; // semi-major axis\nvar acube; // acube = a³ \nvar N = (msg.paths && msg.paths.path_2 && msg.paths.path_2[7]) ? Number(msg.paths.path_2[7]) : 0;\nvar mu = 398600.4418;\nvar J = 86400;\nvar n;\n\nn = 2 * Math.PI * N / J;  // n = 2pi/T where T is the period\nacube = mu / (n * n); // acube = a³ \na = path17Val; // Cubic root for semi-major axis // Format de l'excentricité\n\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"ManeuverType, SMA_1,SMA_2\",\n    maneuvertype, a,SMA_2\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 120,
        "wires": [
            [
                "803804b789872edf"
            ]
        ]
    },
    {
        "id": "803804b789872edf",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/ManeuverParameters4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "eb6dfd7553de133d",
                "e66e9b72a5d6719d"
            ]
        ]
    },
    {
        "id": "eb6dfd7553de133d",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1360,
        "y": 280,
        "wires": [
            [
                "c05071746c82eaf5",
                "cc37538e75d1d4d2"
            ]
        ]
    },
    {
        "id": "c05071746c82eaf5",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1540,
        "y": 300,
        "wires": [
            [
                "329bfe7ec62f7f38"
            ]
        ]
    },
    {
        "id": "329bfe7ec62f7f38",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1720,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "cc37538e75d1d4d2",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 240,
        "wires": []
    },
    {
        "id": "e66e9b72a5d6719d",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 200,
        "wires": []
    },
    {
        "id": "5cd1e30e951c4b77",
        "type": "ui_template",
        "z": "32fc9731f5355a29",
        "group": "a1e2900e2867cd47",
        "name": "RED2 Vehicule template",
        "order": 7,
        "width": 10,
        "height": "1",
        "format": "<style>\n    .form-container2 {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        overflow-x: hidden;\n        margin-top: 1px;\n    }\n\n    .parameters-row {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 5px;\n        margin-top: 5px;\n    }\n\n    .column {\n        flex: 1;\n        padding: 0 10px;\n        max-width: 300px;\n        box-sizing: border-box;\n    }\n\n    .md-input-container {\n        width: 100%;\n        margin: 20px 20px;\n        color: #ffffff !important;\n        \n    }\n\n    .md-input-container label {\n        color: #ffffff !important;\n    }\n\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 10px;\n    }\n\n    .third-row {\n        margin-bottom: 10px;\n    }\n\n    .result-display {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 18px;\n        color: white;\n        margin: 15px 0;\n    }\n\n    .result-value {\n        font-weight: bold;\n        color: #ffcc00;\n    }\n</style>\n\n<!-- HTML form structure -->\n<form id=\"myForm2\" class=\"nr-dashboard-theme md-content nr-dashboard-form ng-pristine ng-invalid ng-invalid-required\">\n    <div class=\"form-container2\">\n        <!-- Centered Surface field with a top margin -->\n        <div class=\"parameters-row\">\n            <div class=\"column\">\n                <md-input-container class=\"md-block md-auto-horizontal-margin flex md-input-container\">\n                    <label for=\"form2_isp\">ISP (s)</label>\n                    <input type=\"text\" id=\"form2_isp\" name=\"isp\" ng-model=\"msg.payload.isp\" ng-change=\"send({payload: msg.payload})\">\n                </md-input-container>\n            </div>\n        </div>\n\n    </div>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 960,
        "wires": [
            [
                "782414758fb9ed7c",
                "71c948a6945296d6",
                "c6fdcb944e9d650f",
                "e2fec3d7e3e7f41a",
                "b2c8d91bf3bca8d3",
                "fa5a3ef3b5935980"
            ]
        ]
    },
    {
        "id": "b2c8d91bf3bca8d3",
        "type": "ui_template",
        "z": "32fc9731f5355a29",
        "group": "a1e2900e2867cd47",
        "name": "RED2 Vehicule Submit",
        "order": 9,
        "width": 10,
        "height": 1,
        "format": "<style>\n    .button-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        padding: 0 10px;\n        box-sizing: border-box;\n    }\n\n    .button-container button {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .button-container button:first-child {\n        margin-top: 20px;\n    }\n</style>\n\n<div class=\"button-container\">\n    <!-- Utilisation de ng-click pour envoyer msg.payload au clic -->\n    <button type=\"submit\" id=\"submitButtonb1\" class=\"md-raised md-button md-ink-ripple\" ng-click=\"send({payload: msg.payload})\">\n    Submit\n  </button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 780,
        "wires": [
            [
                "e0091adf5667a830"
            ]
        ]
    },
    {
        "id": "0860020f8d8bfce2",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_10\",\"path_2\",\"path_17\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 890,
        "y": 280,
        "wires": [
            [
                "08e3981267b0afb0",
                "89e59b8c91b24ec8"
            ],
            []
        ]
    },
    {
        "id": "c841a9b3563d257a",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 340,
        "wires": []
    },
    {
        "id": "6cb692bfe73c9af5",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red2 -DcommandParameter=\"calculateMass\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 2080,
        "y": 200,
        "wires": [
            [
                "416fcea8a0422552"
            ],
            [],
            []
        ]
    },
    {
        "id": "416fcea8a0422552",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ConsommationErgols4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2360,
        "y": 200,
        "wires": [
            [
                "f901f4c43c97efca"
            ]
        ]
    },
    {
        "id": "2f2467f4da49b59a",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 200,
        "wires": [
            [
                "1f39c074a26543db",
                "7dc70c6eb833b1ca"
            ]
        ]
    },
    {
        "id": "1f39c074a26543db",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\n\nvar n = msg.payload.length\n\n //From the GS\ngs.consommationErgols = parseFloat(msg.payload[n-1])\n\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 200,
        "wires": [
            [
                "411b4e7bad8b0854",
                "4afe4d4806de387a"
            ]
        ]
    },
    {
        "id": "411b4e7bad8b0854",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3220,
        "y": 200,
        "wires": []
    },
    {
        "id": "f901f4c43c97efca",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2540,
        "y": 200,
        "wires": [
            [
                "2f2467f4da49b59a"
            ]
        ]
    },
    {
        "id": "4afe4d4806de387a",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "ConsommationErgols",
        "mode": "link",
        "links": [
            "77925db08f8193f1"
        ],
        "x": 3235,
        "y": 260,
        "wires": []
    },
    {
        "id": "369779220cfad154",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/ManeuverParameters4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1800,
        "y": 260,
        "wires": [
            [
                "b381225fdb168b17"
            ]
        ]
    },
    {
        "id": "b381225fdb168b17",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1980,
        "y": 260,
        "wires": [
            [
                "564971715798bec8"
            ]
        ]
    },
    {
        "id": "02657922488d6678",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Ergols4.txt format",
        "func": "// Vérifier si msg.paths et les chemins spécifiques existent\nvar pathArray = (msg.paths && msg.paths.path_11) ? Object.values(msg.paths.path_11) : [0, 0];\nvar pathArray2 = (msg.paths && msg.paths.path_12) ? msg.paths.path_12 : [0];\nvar pathArray3 = (msg.paths && msg.paths.path_13) ? msg.paths.path_13 : [0,0,0];\n\n// Accéder aux valeurs par index avec vérification\nvar drymass = pathArray3[0] || 0;  // Deuxième élément ou 0 si non défini\nvar ergolmass = pathArray3[1] || 0; // Troisième élément ou 0 si non défini\nvar isp = pathArray[0] || 0; // Quatrième élément ou 0 si non défini\nvar maneuvertype = pathArray2[1] || 0; // Premier élément ou 0 si non défini\nvar SMA_1 = pathArray2[2] || 0; // Deuxième élément ou 0 si non défini\nvar SMA_2 = pathArray2[3]\n// Vérifier si msg.paths.path_2 existe avant d'accéder à ses valeurs\nvar a = (msg.paths && msg.paths.path_12 && msg.paths.path_12[2]) ? Number(msg.paths.path_12[2]) : 0;\n\n\n// Créer un payload avec les valeurs récupérées\nmsg.payload = [\n    \"DryMass, ErgolMass, ISP, ManeuverType, SMA_1, SMA_2\",\n    drymass, ergolmass, isp, maneuvertype, a, SMA_2\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 280,
        "wires": [
            [
                "b2ce4ee689dd365d",
                "b7e5c8bfed43974d"
            ]
        ]
    },
    {
        "id": "b2ce4ee689dd365d",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/Ergols4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 340,
        "wires": [
            [
                "30b7c128c9e64509",
                "c1849f86b8068ed1"
            ]
        ]
    },
    {
        "id": "30b7c128c9e64509",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 2900,
        "y": 380,
        "wires": [
            [
                "6cc8af854c6aca5e",
                "7371151609a37e9e"
            ]
        ]
    },
    {
        "id": "6cc8af854c6aca5e",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 3080,
        "y": 420,
        "wires": [
            [
                "c7116845ed276303"
            ]
        ]
    },
    {
        "id": "7371151609a37e9e",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3060,
        "y": 380,
        "wires": []
    },
    {
        "id": "c1849f86b8068ed1",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Before CSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2900,
        "y": 340,
        "wires": []
    },
    {
        "id": "c7116845ed276303",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3260,
        "y": 420,
        "wires": [
            [
                "dfc78188bc450692"
            ]
        ]
    },
    {
        "id": "c6fdcb944e9d650f",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "0980ce47ec82f9b7",
                "421c84637df31e82"
            ]
        ]
    },
    {
        "id": "0980ce47ec82f9b7",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_11\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 710,
        "y": 1020,
        "wires": [
            [
                "369779220cfad154",
                "2ae633d3014e5204"
            ],
            []
        ]
    },
    {
        "id": "cd2fe26393165fee",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2500,
        "y": 240,
        "wires": []
    },
    {
        "id": "564971715798bec8",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 260,
        "wires": [
            [
                "2ae633d3014e5204",
                "cf16b965382c6922"
            ]
        ]
    },
    {
        "id": "2ae633d3014e5204",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[ \"path_11\", \"path_12\",\"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2330,
        "y": 320,
        "wires": [
            [
                "cd2fe26393165fee",
                "80cda73fbefa66e9",
                "02657922488d6678"
            ],
            []
        ]
    },
    {
        "id": "421c84637df31e82",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "PATH 11 DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1080,
        "wires": []
    },
    {
        "id": "cf16b965382c6922",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 320,
        "wires": []
    },
    {
        "id": "80cda73fbefa66e9",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST ERGOLS TXT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 380,
        "wires": []
    },
    {
        "id": "43712bc528a36068",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Sorties Ergols",
        "mode": "link",
        "links": [
            "30a57fff61fc53f7"
        ],
        "x": 3545,
        "y": 420,
        "wires": []
    },
    {
        "id": "30a57fff61fc53f7",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "Entrée Erglos",
        "links": [
            "43712bc528a36068"
        ],
        "x": 1855,
        "y": 200,
        "wires": [
            [
                "6cb692bfe73c9af5"
            ]
        ]
    },
    {
        "id": "7dc70c6eb833b1ca",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2940,
        "y": 260,
        "wires": []
    },
    {
        "id": "dfc78188bc450692",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3420,
        "y": 400,
        "wires": [
            [
                "43712bc528a36068"
            ]
        ]
    },
    {
        "id": "c349fbaacb4289e7",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "debugg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3790,
        "y": 1060,
        "wires": []
    },
    {
        "id": "addb62d91f151f47",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1000,
        "wires": [
            [
                "2ae633d3014e5204",
                "e17e832294545016",
                "e2d42b4195748d69",
                "c17e8a3e6bc88009"
            ]
        ]
    },
    {
        "id": "b39045c6ebae4427",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "ergols",
        "func": "if (msg.payload && msg.payload[0]) {\n    // Assurez-vous que les propriétés existent et ne sont pas null avant de les insérer dans le tableau\n    const dry_mass = msg.payload[0].dry_mass !== undefined ? msg.payload[0].dry_mass : 0;\n    const ergol_mass = msg.payload[0].ergol_mass !== undefined ? msg.payload[0].ergol_mass : 0;\n    const ergol_consumption = msg.payload[0].ergol_consumption !== null && msg.payload[0].ergol_consumption !== undefined ? msg.payload[0].ergol_consumption : 0.0;\n\n    // Créer un tableau avec les valeurs\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"Le payload ne contient pas les données attendues.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 960,
        "wires": [
            [
                "cf48425e04a3f421"
            ]
        ]
    },
    {
        "id": "cf48425e04a3f421",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 800,
        "y": 960,
        "wires": [
            [
                "e6e8c03eba155d77"
            ]
        ]
    },
    {
        "id": "e6e8c03eba155d77",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "object to array",
        "func": "// Découper le CSV en lignes\nlet csvData = msg.payload.split('\\n');\n\n// Vérifier si la deuxième ligne existe\nif (csvData.length > 1) {\n    // Récupérer la deuxième ligne (index 1)\n    let secondLine = csvData[1].trim();\n\n    // Découper la deuxième ligne par espaces ou tabulations\n    let values = secondLine.split(/\\s+/); // Utilisation de \\s+ pour capturer les espaces multiples\n\n    // Convertir les valeurs en nombres (si applicable)\n    let dry_mass = parseFloat(values[0]) || 0;\n    let ergol_mass = parseFloat(values[1]) || 0;\n    let ergol_consumption = parseFloat(values[2]) || 0;\n\n    // Placer les valeurs dans un tableau\n    msg.payload = [dry_mass, ergol_mass, ergol_consumption];\n} else {\n    node.error(\"La deuxième ligne n'existe pas.\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1000,
        "wires": [
            [
                "addb62d91f151f47"
            ]
        ]
    },
    {
        "id": "385435dcfc12eb14",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST B1 TLE LATEST",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1140,
        "wires": []
    },
    {
        "id": "e17e832294545016",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "PATH 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 1000,
        "wires": []
    },
    {
        "id": "0ef08be962cfc6a0",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Out Maneuvre prédéfinie",
        "mode": "link",
        "links": [
            "b9a06d4ecb7c304d",
            "4de5d0666377ecc1",
            "d3a880f48b073068",
            "b778ce59ad6de1b6",
            "d4add07ec86f7324"
        ],
        "x": 4895,
        "y": 400,
        "wires": []
    },
    {
        "id": "72bdc1c1a6faf79f",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "Ergol Mass Update",
        "links": [
            "8d0aa4bce003bc30"
        ],
        "x": 175,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "b7e5c8bfed43974d",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "ergols",
        "mode": "link",
        "links": [
            "13949f7a170ee914",
            "f4cfb143dc89d75b"
        ],
        "x": 2815,
        "y": 280,
        "wires": []
    },
    {
        "id": "13949f7a170ee914",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "b7e5c8bfed43974d"
        ],
        "x": 75,
        "y": 900,
        "wires": [
            [
                "7705c73ee4fda2a5"
            ]
        ]
    },
    {
        "id": "7705c73ee4fda2a5",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "9201b661112aca54",
        "type": "mqtt in",
        "z": "32fc9731f5355a29",
        "name": "",
        "topic": "resultat/fichier4",
        "qos": "2",
        "datatype": "auto",
        "broker": "e688816fa768592b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2330,
        "y": 520,
        "wires": [
            [
                "8ca8d8ded9c21273",
                "45670aa757acaef4",
                "5f151c4370c557ee",
                "38db58c06c98e221",
                "c9fbf64090674b20"
            ]
        ]
    },
    {
        "id": "8ca8d8ded9c21273",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "MQTT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 560,
        "wires": []
    },
    {
        "id": "c1b472898bfe0bdc",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "TIMESTAMP",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 840,
        "wires": []
    },
    {
        "id": "38db58c06c98e221",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2860,
        "y": 520,
        "wires": [
            [
                "df6cc57e0e2f24ea"
            ]
        ]
    },
    {
        "id": "632cfc6f53b0d069",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "query to read Result4.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4440,
        "y": 960,
        "wires": [
            [
                "41c8c19ff2fb64a7"
            ]
        ]
    },
    {
        "id": "41c8c19ff2fb64a7",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4680,
        "y": 960,
        "wires": [
            [
                "76ec85017b397ca1"
            ]
        ]
    },
    {
        "id": "76ec85017b397ca1",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4880,
        "y": 960,
        "wires": [
            [
                "4c5586c068addd10"
            ]
        ]
    },
    {
        "id": "4c5586c068addd10",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4400,
        "y": 1020,
        "wires": [
            [
                "3825a5e2b5803676"
            ]
        ]
    },
    {
        "id": "3825a5e2b5803676",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4610,
        "y": 1020,
        "wires": [
            [
                "2418523c1d8af938"
            ]
        ]
    },
    {
        "id": "2418523c1d8af938",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 1080,
        "wires": [
            [
                "39739705924cbca4",
                "4cf83ee5bcce1213",
                "e9d9d0ce9258d9a3"
            ]
        ]
    },
    {
        "id": "39739705924cbca4",
        "type": "switch",
        "z": "32fc9731f5355a29",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4770,
        "y": 1080,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4cf83ee5bcce1213",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 1160,
        "wires": []
    },
    {
        "id": "95ff3924537bd85a",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "cb9efc3cb62637db",
            "b86ad223f85a4338"
        ],
        "x": 4205,
        "y": 920,
        "wires": [
            [
                "632cfc6f53b0d069",
                "9097a801b631c640",
                "2bf12a976a681d75",
                "0386b0426e66eae5"
            ]
        ]
    },
    {
        "id": "9097a801b631c640",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4400,
        "y": 920,
        "wires": []
    },
    {
        "id": "f52d143db66d7aec",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4650,
        "y": 700,
        "wires": [
            [
                "b37dbcd65287589c",
                "58158c361bfdc039"
            ]
        ]
    },
    {
        "id": "b37dbcd65287589c",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 780,
        "wires": []
    },
    {
        "id": "4cd44e0158288d56",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4660,
        "y": 580,
        "wires": [
            [
                "295d5ed617fd5e9f"
            ]
        ]
    },
    {
        "id": "5ff6a0bb74d810f3",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "AP Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4770,
        "y": 620,
        "wires": []
    },
    {
        "id": "6e7af2fae09fee49",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "After Manoeuvre",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4240,
        "y": 460,
        "wires": [
            [
                "27f45fd1cf1d2c5b"
            ]
        ]
    },
    {
        "id": "58158c361bfdc039",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": " Load",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4580,
        "y": 500,
        "wires": [
            [
                "9ee2761850535f7f",
                "5989eb1c6c8a37cd"
            ]
        ]
    },
    {
        "id": "9ee2761850535f7f",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4880,
        "y": 500,
        "wires": [
            [
                "59ab8b12c84c9895",
                "5a9525b7644bad21"
            ]
        ]
    },
    {
        "id": "f4074a97985795cf",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4030,
        "y": 1300,
        "wires": [
            [
                "aa9528f630523878",
                "5c5feae917c78f8d"
            ]
        ]
    },
    {
        "id": "aa9528f630523878",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4320,
        "y": 1260,
        "wires": [
            [
                "1355f4c9e3e95417",
                "4cf10753f1ed0b67"
            ]
        ]
    },
    {
        "id": "4cf10753f1ed0b67",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4510,
        "y": 1260,
        "wires": [
            [
                "db484e4b733210cb",
                "6a97107dd0fee1cf"
            ],
            []
        ]
    },
    {
        "id": "db484e4b733210cb",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Data4.txt format",
        "func": "// Initialize variables\nvar tab = [];\nvar gs = {};\n\n// Split line #2 of the TLE robustly:\n// - trim() removes any leading/trailing spaces\n// - split(/\\s+/) splits on ANY run of whitespace\nvar tle = msg.payload[2].trim().split(/\\s+/);\n\nvar N;      // Mean motion in rev/day (not used below, just declared)\nvar n;      // ...\nvar a;      // Semi-major axis\nvar acube;  // a^3\nvar e;      // eccentricity\n\n// Earth's standard gravitational parameter, etc.\nvar mu = 398600.4418;\nvar J = 86400; // A day in seconds\n\n// From the TLE array\ngs.incli = String(tle[2]);\ngs.raan  = String(tle[3]);\ngs.ecc   = String(tle[4]);\ngs.aop   = String(tle[5]);\ngs.meana = String(tle[6]);\ngs.mean  = String(tle[7]);\n\n// From the rest of payload\ngs.dry_mass          = parseFloat(msg.payload[3]);\ngs.ergol_consumption = parseFloat(msg.payload[5]);\ngs.ergol_mass        = parseFloat(msg.payload[4]);\n\n// Attach everything back to msg and return\nmsg.payload = gs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4790,
        "y": 1260,
        "wires": [
            [
                "881598ae94445638",
                "f52d143db66d7aec"
            ]
        ]
    },
    {
        "id": "1355f4c9e3e95417",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "LAST TLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4520,
        "y": 1300,
        "wires": []
    },
    {
        "id": "610fabf2a6b894d5",
        "type": "mongodb in",
        "z": "32fc9731f5355a29",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 3810,
        "y": 1300,
        "wires": [
            [
                "d83bff89f63a0459",
                "f4074a97985795cf"
            ]
        ]
    },
    {
        "id": "d83bff89f63a0459",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 1360,
        "wires": []
    },
    {
        "id": "2bf12a976a681d75",
        "type": "trigger",
        "z": "32fc9731f5355a29",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3600,
        "y": 1300,
        "wires": [
            [
                "610fabf2a6b894d5"
            ]
        ]
    },
    {
        "id": "6a97107dd0fee1cf",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4780,
        "y": 1220,
        "wires": []
    },
    {
        "id": "5c5feae917c78f8d",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4320,
        "y": 1320,
        "wires": []
    },
    {
        "id": "881598ae94445638",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4800,
        "y": 1320,
        "wires": []
    },
    {
        "id": "e9d9d0ce9258d9a3",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4760,
        "y": 1120,
        "wires": []
    },
    {
        "id": "c17e8a3e6bc88009",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_2\",\"path_8\",\"path_13\",\"path_18\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "60",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1290,
        "y": 1120,
        "wires": [
            [
                "c636d2cc1a2ce662",
                "86123708ce1d494e"
            ],
            []
        ]
    },
    {
        "id": "c636d2cc1a2ce662",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "CommandData4.txt format",
        "func": "var N;       // Mean motion in rev/day\nvar n;       // Angular speed in rad/s\nvar a;       // semi-major axis\nvar acube;   // a³\nvar e;       // eccentricity\n\nvar mu = 398600.4418; // Earth's standard gravitational parameter\nvar J  = 86400;       // Seconds in a day\n\n// Calculations from path_2\nN     = msg.paths.path_2[7];              // Mean motion [rev/day]\nn     = 2 * Math.PI * N / J;              // Angular speed: n = 2π/T\nacube = mu / (n * n);                     // a³ = μ/n²\ne     = Number(msg.paths.path_2[4]) / 10000000; // Normalize eccentricity from TLE format\ne     = e.toFixed(7);                     // Format eccentricity\n\n// Get the value for 'a' from path_18 (if provided)\nvar path18Val = 0;\nif (msg.paths && msg.paths.path_18 !== undefined) {\n    // Convert the value to a Number (default to 0 if invalid)\n    path18Val = Number(msg.paths.path_18) || 0;\n}\na = path18Val;\n\nvar thrust    = \"0\";\nvar dv        = \"0\";\nvar isp       = \"0\";\nvar drymass   = \"0\";\nvar ergolmass = \"0\";\nvar surface   = \"0\";\nvar DATE      = \"\"; // You can set DATE accordingly if needed\n\n// Set ergolmass and drymass from path_13 if the values are valid numbers\nif (!isNaN(msg.paths.path_13[1])) { ergolmass = msg.paths.path_13[1]; }\nif (!isNaN(msg.paths.path_13[0])) { drymass   = msg.paths.path_13[0]; }\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––––––––––\n  EXTRA PARAMETERS: Dynamic extraction from msg.paths.path_8\n  Instead of hardcoding extra fields (e.g., Maneuver_Type, SMA_2, ecc_2),\n  we build the header and the row dynamically from the object keys/values.\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––*/\nvar extraHeaders = [];\nvar extraValues  = [];\nif (msg.paths && msg.paths.path_8 && typeof msg.paths.path_8 === 'object') {\n    extraHeaders = Object.keys(msg.paths.path_8);\n    extraValues  = Object.values(msg.paths.path_8);\n} else {\n    node.warn(\"msg.paths.path_8 est indéfini ou non valide. Aucun paramètre supplémentaire n'est ajouté.\");\n}\n\n/*–––––––––––––––––––––––––––––––––––––––––––––––––––––––\n  ASSEMBLE FINAL PAYLOAD\n  The first element is the header string (fixed columns plus extra columns),\n  and the second is the data row (in the same order).\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––*/\n// Fixed header columns\nvar fixedHeader = \"DATE, SMA, ECC, INC, RAAN, AoP, MeanAnom, Dry Mass, SurfRef, Thurst, ISP, Ergol mass\";\n\n// Combine fixed header with dynamically extracted extra header columns\nvar header = fixedHeader;\nif (extraHeaders.length > 0) {\n    header += \", \" + extraHeaders.join(\", \");\n}\n\n// Build the fixed portion of the data row\nvar dataRow = [\n    DATE,\n    a,\n    e,\n    msg.paths.path_2[2],\n    msg.paths.path_2[3],\n    msg.paths.path_2[5],\n    msg.paths.path_2[6],\n    drymass,\n    surface,\n    thrust,\n    isp,\n    ergolmass\n];\n\n// Append the extra values dynamically (they could be \"Maneuver_Type\", \"SMA_2\", \"ecc_2\" or others)\ndataRow = dataRow.concat(extraValues);\n\n// Set the final payload with the header as the first element and the data row as the second\nmsg.payload = [ header ].concat(dataRow);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1100,
        "wires": [
            [
                "e6b059e8b99c2d48"
            ]
        ]
    },
    {
        "id": "e6b059e8b99c2d48",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/CommandData4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 1100,
        "wires": [
            [
                "2b56c6e2fabe9665"
            ]
        ]
    },
    {
        "id": "2b56c6e2fabe9665",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1900,
        "y": 1100,
        "wires": [
            [
                "53c121740110f07e"
            ]
        ]
    },
    {
        "id": "53c121740110f07e",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 2080,
        "y": 1100,
        "wires": [
            [
                "bffb61fda5edc254"
            ]
        ]
    },
    {
        "id": "bffb61fda5edc254",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2260,
        "y": 1100,
        "wires": [
            [
                "fbf5f34be17754eb",
                "82bb83b60a6003cb"
            ]
        ]
    },
    {
        "id": "86123708ce1d494e",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "comman",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1180,
        "wires": []
    },
    {
        "id": "cb3db85bc08fcc43",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "COMMAND DATA",
        "mode": "link",
        "links": [
            "db31ea2b2b4da4a2"
        ],
        "x": 2735,
        "y": 1100,
        "wires": []
    },
    {
        "id": "fbf5f34be17754eb",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "command": "cd /app/maneuver-manager/ && /usr/bin/java -DmodeParameter=red2 -DcommandParameter=\"determineOrbitInstant\" -noverify -cp OrbitalManeuver.jar:/app/maneuver-manager/json-20250107.jar OrbitalManeuver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Run ManeuverManager",
        "x": 2450,
        "y": 1100,
        "wires": [
            [
                "dffe582e08908864",
                "cb3db85bc08fcc43"
            ],
            [
                "65f32c07f665c2af"
            ],
            [
                "44fe515835f3b962"
            ]
        ]
    },
    {
        "id": "44fe515835f3b962",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "APSIDE RETURN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 1180,
        "wires": []
    },
    {
        "id": "65f32c07f665c2af",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "APSIDE ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 1000,
        "wires": []
    },
    {
        "id": "dffe582e08908864",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "APSIDE OBJECT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 940,
        "wires": []
    },
    {
        "id": "3fa580f6a59f1a55",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TLE RED2 BEFORE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4370,
        "y": 400,
        "wires": []
    },
    {
        "id": "179a2b0cbcc03e5b",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TLE RED2 AFTER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4360,
        "y": 520,
        "wires": []
    },
    {
        "id": "8d2f2a8b24657147",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST PATH_8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 480,
        "wires": []
    },
    {
        "id": "97e643b185ad9d90",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "31f5bc62f4e523b1",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "\"/app/maneuver-manager/TimeIntermediateParameters4.txt\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 360,
        "wires": [
            [
                "efdc685d580d903c"
            ]
        ]
    },
    {
        "id": "efdc685d580d903c",
        "type": "csv",
        "z": "32fc9731f5355a29",
        "name": "",
        "sep": "\\n",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1400,
        "y": 360,
        "wires": [
            [
                "4c49015d93fe8456"
            ]
        ]
    },
    {
        "id": "4c49015d93fe8456",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "javascriptConvert",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 1580,
        "y": 360,
        "wires": [
            [
                "6ba42b3171d94fb5"
            ]
        ]
    },
    {
        "id": "6ba42b3171d94fb5",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Data-storage",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1800,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1ae6aee2ef8769cc",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "TimeIntermediateParameters4.txt format",
        "func": "// Retrieve the incoming payload\nvar payload = msg.payload;\n\nif (payload && typeof payload === 'object') {\n    // List of keys to ignore (system keys, etc.)\n    var ignoreKeys = [\"socketid\", \"_msgid\", \"paths\"];\n    \n    // Get all keys from the payload except those in ignoreKeys\n    var keys = Object.keys(payload).filter(function(key) {\n        return ignoreKeys.indexOf(key) === -1;\n    });\n    \n    // Create a header string: a comma separated list of the keys\n    var header = keys.join(\", \");\n    \n    // Get the corresponding values in the same order\n    var values = keys.map(function(key) {\n        return payload[key];\n    });\n    \n    // Set the output payload as an array with the header as the first element\n    // followed by the values\n    msg.payload = [header].concat(values);\n} else {\n    node.warn(\"The incoming payload is undefined or not an object.\");\n    msg.payload = [\"No valid data\"];\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 360,
        "wires": [
            [
                "31f5bc62f4e523b1"
            ]
        ]
    },
    {
        "id": "f8dfcc63acd7a27f",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "e96b1dc68bc775f5"
        ],
        "x": 2205,
        "y": 1160,
        "wires": [
            [
                "fbf5f34be17754eb"
            ]
        ]
    },
    {
        "id": "e0091adf5667a830",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup45',topic:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 720,
        "wires": [
            [
                "cbcf8cae9eab7156",
                "127a851b720279da"
            ]
        ]
    },
    {
        "id": "068024f1c35376b8",
        "type": "switch",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui45",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 780,
        "wires": [
            [
                "e2fec3d7e3e7f41a",
                "a6e67bfbd6e47bad",
                "39b4d5235d0aa773",
                "c4dc79412101c00c"
            ]
        ]
    },
    {
        "id": "c4dc79412101c00c",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST ISP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 720,
        "wires": []
    },
    {
        "id": "cbcf8cae9eab7156",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST POPUP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 680,
        "wires": []
    },
    {
        "id": "a6e67bfbd6e47bad",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Test switch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 740,
        "wires": []
    },
    {
        "id": "39b4d5235d0aa773",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "object to array",
        "func": "msg.payload=msg.topic;\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 740,
        "wires": [
            [
                "81dc4918a3845519",
                "8c93639f58d6cab1",
                "d25ab98e2f07c966"
            ]
        ]
    },
    {
        "id": "81dc4918a3845519",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST CONVERT PAYLOAD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 700,
        "wires": []
    },
    {
        "id": "da25dc99dcc82ef2",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TLE Maneuver",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4730,
        "y": 380,
        "wires": []
    },
    {
        "id": "1e6fb93c2570c4a3",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "7ce99e1941f9b178",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3420,
        "y": 600,
        "wires": []
    },
    {
        "id": "b06546accd44b0ea",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "// This example sends a message to trigger a reload\nmsg.payload = { reload: true };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2530,
        "y": 560,
        "wires": [
            [
                "666673fa974d7cb4"
            ]
        ]
    },
    {
        "id": "515415c57211615c",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 600,
        "wires": []
    },
    {
        "id": "03e8addd9352d7d0",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2330,
        "y": 560,
        "wires": [
            [
                "b06546accd44b0ea"
            ]
        ]
    },
    {
        "id": "ca3cc510545f7e20",
        "type": "websocket out",
        "z": "32fc9731f5355a29",
        "name": "reload",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 2860,
        "y": 560,
        "wires": []
    },
    {
        "id": "165dd2e840690415",
        "type": "websocket in",
        "z": "32fc9731f5355a29",
        "name": "",
        "server": "8233308af7b752f1",
        "client": "",
        "x": 2130,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "a6255808bc22b439",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "RESULT MANOEUVER",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 620,
        "wires": []
    },
    {
        "id": "5114c5e261a38552",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3440,
        "y": 680,
        "wires": []
    },
    {
        "id": "d25ab98e2f07c966",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 740,
        "wires": [
            [
                "38146a0610422448"
            ]
        ]
    },
    {
        "id": "38146a0610422448",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Submit Manoeuver",
        "mode": "link",
        "links": [
            "332713cb37631d32",
            "b2ba87f44ec78cde",
            "d888fb97adbc48c7",
            "7a5fdc442e73fe2f",
            "95e641b82b10c0b2"
        ],
        "x": 1315,
        "y": 740,
        "wires": []
    },
    {
        "id": "332713cb37631d32",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "38146a0610422448",
            "695d46662047c0aa",
            "761476cb27b49aab",
            "19b3347f754f913f",
            "0660063f0dca6f38"
        ],
        "x": 2015,
        "y": 740,
        "wires": [
            [
                "31650a75784a5be4"
            ]
        ]
    },
    {
        "id": "80ff14d5e297cf2f",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[ \"path_10\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "10",
        "timeoutUnits": "1",
        "exactOrder": "true",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 2370,
        "y": 740,
        "wires": [
            [
                "f6afac48abe328a4",
                "6c8a479b4d4888bf",
                "e8b9c8978258a0bf"
            ],
            []
        ]
    },
    {
        "id": "7147d3acdde269aa",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2700,
        "y": 860,
        "wires": []
    },
    {
        "id": "3ff4f238f8de762a",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3690,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f082e169eb9ea86c",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST B1 TLE STORAGE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4440,
        "y": 600,
        "wires": []
    },
    {
        "id": "8ba5fe402b4f7cee",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TESTS ERGOLS MAGGLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4270,
        "y": 620,
        "wires": []
    },
    {
        "id": "f52e0c091c53fea0",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4120,
        "y": 520,
        "wires": [
            [
                "6e7af2fae09fee49",
                "179a2b0cbcc03e5b"
            ]
        ]
    },
    {
        "id": "5c43832bdd9ed15a",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4190,
        "y": 580,
        "wires": [
            [
                "f52e0c091c53fea0"
            ]
        ]
    },
    {
        "id": "ea8d62860b472089",
        "type": "ui_template",
        "z": "32fc9731f5355a29",
        "group": "a1e2900e2867cd47",
        "name": "",
        "order": 10,
        "width": "10",
        "height": "3",
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Confirmation Modal</title>\n  <style>\n    md-card[node-id=\"ea8d62860b472089\"] {\n      background-color: black !important;\n      color: white;\n      padding: 10px;\n      border-radius: 4px;\n      display: block;\n      margin: 20px;\n      box-sizing: border-box;\n    }\n\n    /* Modal Overlay */\n    .modal {\n      position: fixed;\n      z-index: 9999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      background-color: rgba(128, 128, 128, 0.6);\n      opacity: 0;\n      visibility: hidden;\n      pointer-events: none;\n      transition: all 0.3s ease;\n    }\n    \n    .modal.show {\n      opacity: 1;\n      visibility: visible;\n      pointer-events: auto;\n    }\n\n    /* Modal Content */\n    .modal-content {\n      background-color: #244052;\n      margin: 15% auto;\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%;\n      max-width: 400px;\n      text-align: center;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.9);\n      color: white;\n      transform: translateY(-20px);\n      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      will-change: transform;\n    }\n    \n    .modal.show .modal-content {\n      transform: translateY(0);\n    }\n\n    /* Red Rectangle */\n    .red-rectangle {\n      width: 100px;\n      height: 50px;\n      background-color: red;\n      margin: 20px auto;\n    }\n\n    /* Button Group */\n    .button-group {\n      margin-top: 20px;\n    }\n    \n    /* Buttons */\n    .button-group button {\n      padding: 10px 20px;\n      margin: 0 15px;\n      font-size: 16px;\n      cursor: pointer;\n      border: none;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n      color: white;\n    }\n    \n    /* Oui Button - Original Colors */\n    #ouiBtn15 {\n      background-color: #4CAF50;\n    }\n    \n    #ouiBtn15:hover {\n      background-color: #45a049;\n    }\n    \n    /* Non Button - Original Colors */\n    #nonBtn15 {\n      background-color: #f44336;\n    }\n    \n    #nonBtn15:hover {\n      background-color: #da190b;\n    }\n  </style>\n</head>\n<body>\n  <md-card node-id=\"ea8d62860b472089\">\n  </md-card>\n\n  <!-- Confirmation Modal -->\n  <div id=\"confirmationModal15\" class=\"modal\" aria-labelledby=\"modalTitle\" role=\"dialog\" aria-modal=\"true\">\n    <div class=\"modal-content\">\n      <p id=\"modalTitle\" class=\"modal-text\" style=\"background-color: #244052 !important; color: white !important; padding: 10px; border-radius: 4px; font-size: 18px; margin: 0 0 20px 0; font-weight: bold;\">\n        Cette action déclenchera une manoeuvre prédéfinie à partir des paramètres entrés.<br><br>\n        Voulez-vous continuer ?\n      </p>\n      <div class=\"button-group\">\n        <button id=\"ouiBtn15\">Oui</button>\n        <button id=\"nonBtn15\">Non</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- JavaScript -->\n  <script>\n    (function(scope) {\n      var modal = document.getElementById('confirmationModal15');\n      var originalMsg = null;\n      var isTransitioning = false;\n\n      function showModal(msg) {\n        if (isTransitioning) return;\n        isTransitioning = true;\n        originalMsg = msg;\n        \n        // Reset any ongoing transitions\n        modal.style.display = 'block';\n        window.requestAnimationFrame(() => {\n          window.requestAnimationFrame(() => {\n            modal.classList.add('show');\n            isTransitioning = false;\n          });\n        });\n      }\n\n      function hideModal() {\n        if (isTransitioning) return;\n        isTransitioning = true;\n\n        const handleTransitionEnd = (e) => {\n          if (e.propertyName === 'opacity') {\n            modal.style.display = 'none';\n            modal.removeEventListener('transitionend', handleTransitionEnd);\n            originalMsg = null;\n            isTransitioning = false;\n          }\n        };\n\n        modal.addEventListener('transitionend', handleTransitionEnd);\n        modal.classList.remove('show');\n      }\n\n      // Cleanup function\n      function cleanup() {\n        modal.classList.remove('show');\n        modal.style.display = 'none';\n        isTransitioning = false;\n        originalMsg = null;\n      }\n\n      // Initialize\n      cleanup();\n\n      // Storage event listener\n      window.addEventListener('storage', function(event) {\n        if (event.key === 'modalState15') {\n          if (event.newValue === 'show') {\n            try {\n              const storedMsg = JSON.parse(localStorage.getItem('modalMsg15'));\n              showModal(storedMsg);\n            } catch (e) {\n              console.error('Error parsing stored message:', e);\n              showModal(null);\n            }\n          } else if (event.newValue === 'hide') {\n            hideModal();\n          }\n        }\n      });\n\n      // Watch for messages\n      scope.$watch('msg', function(msg) {\n        if (msg && msg.payload === 'showPopup') {\n          localStorage.setItem('modalState15', 'show');\n          localStorage.setItem('modalMsg15', JSON.stringify(msg));\n          showModal(msg);\n        }\n      });\n\n      // Button handlers with debouncing\n      let isProcessingClick = false;\n      \n      document.getElementById('ouiBtn15').addEventListener('click', function() {\n        if (isProcessingClick) return;\n        isProcessingClick = true;\n        \n        var responseMsg = originalMsg ? \n          { payload: 'oui', topic: originalMsg.topic } : \n          { payload: 'oui' };\n        \n        scope.send(responseMsg);\n        localStorage.setItem('modalState15', 'hide');\n        hideModal();\n        \n        setTimeout(() => { isProcessingClick = false; }, 300);\n      });\n\n      document.getElementById('nonBtn15').addEventListener('click', function() {\n        if (isProcessingClick) return;\n        isProcessingClick = true;\n        \n        var responseMsg = originalMsg ? \n          { payload: 'non', topic: originalMsg.topic } : \n          { payload: 'non' };\n        \n        scope.send(responseMsg);\n        localStorage.setItem('modalState15', 'hide');\n        hideModal();\n        \n        setTimeout(() => { isProcessingClick = false; }, 300);\n      });\n\n      // Cleanup on unload\n      window.addEventListener('unload', cleanup);\n    })(scope);\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 330,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "361840fba70788a1",
        "type": "ui_template",
        "z": "32fc9731f5355a29",
        "group": "a1e2900e2867cd47",
        "name": "",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<script>\n  const socketUrl = `${window.location.protocol === 'https:' ? 'wss' : 'ws'}://${window.location.hostname}:1880/ws/reload`;\n  const ws = new WebSocket(socketUrl);  // Create the WebSocket connection\n\n  ws.onopen = function() {\n      console.log(\"WebSocket connection established.\");\n  };\n\n  ws.onmessage = function(event) {\n      var msg = JSON.parse(event.data);\n      if (msg.reload) {\n          location.reload();\n      }\n  };\n\n  ws.onerror = function(error) {\n      console.error(\"WebSocket error:\", error);\n  };\n\n  ws.onclose = function() {\n      console.log(\"WebSocket connection closed.\");\n  };\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c0db1b7c5f1c728a",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "MANEUV_JOIN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2990,
        "y": 940,
        "wires": []
    },
    {
        "id": "944e70fbd398e962",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "command": "cd /app/maneuver-manager/ && tail -n 1 LastManeuverDate4.txt",
        "addpay": "lastLine",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3000,
        "y": 1200,
        "wires": [
            [
                "db157e166dc64e8b"
            ],
            [],
            []
        ]
    },
    {
        "id": "715429c62a52cab4",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2930,
        "y": 1260,
        "wires": [
            [
                "944e70fbd398e962"
            ]
        ]
    },
    {
        "id": "db157e166dc64e8b",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_11",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_11",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1100,
        "wires": [
            [
                "07226a34af0e134b",
                "4a237cd729b8151d"
            ]
        ]
    },
    {
        "id": "a3f95fa7ec1ef7e8",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_12",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_12",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3300,
        "y": 1040,
        "wires": [
            [
                "4a237cd729b8151d"
            ]
        ]
    },
    {
        "id": "07226a34af0e134b",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2920,
        "y": 1160,
        "wires": []
    },
    {
        "id": "4a237cd729b8151d",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_11\", \"path_12\", \"path_13\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 3190,
        "y": 1100,
        "wires": [
            [
                "cb01c64663333665"
            ],
            []
        ]
    },
    {
        "id": "eba11dd26a9d167a",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Test ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3500,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b7be6e3af32fea4b",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 1000,
        "wires": [
            [
                "a3f95fa7ec1ef7e8"
            ]
        ]
    },
    {
        "id": "26c1664cbc9cecfc",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "test STd ERRORS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3460,
        "y": 780,
        "wires": []
    },
    {
        "id": "7d76c3d0f49824a4",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "command": ": > /app/maneuver-manager/Result4.txt && : > /app/maneuver-manager/PostManeuverDate4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3040,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "82bb83b60a6003cb",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "command": ": > /app/maneuver-manager/ApsideDates4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2380,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "352baaf0e40dd714",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "command": "cd /app/maneuver-manager && ./clear.sh red2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 2890,
        "y": 1360,
        "wires": [
            [
                "a03fa69bc186b18a"
            ],
            [
                "a03fa69bc186b18a"
            ],
            []
        ]
    },
    {
        "id": "a03fa69bc186b18a",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 1360,
        "wires": []
    },
    {
        "id": "d1785cefc5f57fa1",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3030,
        "y": 720,
        "wires": [
            [
                "52bd782358dcd3a7"
            ]
        ]
    },
    {
        "id": "cb01c64663333665",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "const MAX_RANDOM = 6;\nconst randomIndex = Math.floor(Math.random() * MAX_RANDOM);\n\n// Retrieve the error message from path_12\nconst errorPayload = msg.paths?.path_12 || \"\";\n\nif (errorPayload.includes(\"hyperbolic orbits cannot be handled\")) {\n    switch (randomIndex) {\n        case 0:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory detected. Please return to the battlefield, cadet.\";\n            break;\n        case 1:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. Refer to Article L321-7 of the military code.\";\n            break;\n        case 2:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. Are you attempting to desert your duties?\";\n            break;\n        case 3:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. You are not qualified for interplanetary flight.\";\n            break;\n        default:\n            msg.errorMessage = \"Maneuver aborted: Hyperbolic trajectory. No French assets available in this direction.\";\n    }\n} \nelse if (errorPayload.includes(\"masse finale ne peut\")) {\n    msg.errorMessage = \"**Insufficient Ergol:** Unable to complete the maneuver due to inadequate ergol reserves.\";\n}\nelse if (errorPayload.includes(\"Initial date must be equal to or later\")) {\n    msg.errorMessage = \"**Temporal Error:** The maneuver order is set before the last apsis was reached.\";\n    msg.errorMessage += ` | Last apsis: ${msg.paths.path_11}`;\n} \nelse if (errorPayload.includes(\"horizon\")) {\n    msg.errorMessage = \"**Temporal Error:** The initial date must precede the conclusion of Horizon Time.\";\n    msg.errorMessage += ` | Simulation End Date: ${msg.paths.path_13.enddate}`;\n} \nelse if (errorPayload.includes(\"ccentrici\")) {\n    msg.errorMessage = \"**Incorrect Eccentricity:** Unable to complete the maneuver due to invalid eccentricity parameters.\";\n}\nelse {\n    msg.errorMessage = \"Maneuver aborted due to an unspecified error.\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3355,
        "y": 1108,
        "wires": [
            [
                "eba11dd26a9d167a",
                "81c3e21d708c2d24"
            ]
        ]
    },
    {
        "id": "666673fa974d7cb4",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2690,
        "y": 560,
        "wires": [
            [
                "ca3cc510545f7e20"
            ]
        ]
    },
    {
        "id": "bf34a4dc8fd58fdb",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "AffichageLastManeuverDate r2",
        "mode": "link",
        "links": [
            "be1f3f44481fcb31"
        ],
        "x": 3335,
        "y": 740,
        "wires": []
    },
    {
        "id": "19c6461127cf69c3",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4140,
        "y": 880,
        "wires": []
    },
    {
        "id": "3f8146e4fce011d2",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3330,
        "y": 880,
        "wires": [
            [
                "df6cc57e0e2f24ea"
            ]
        ]
    },
    {
        "id": "097b1e9de69e6482",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3620,
        "y": 860,
        "wires": []
    },
    {
        "id": "81c3e21d708c2d24",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 3465,
        "y": 1160,
        "wires": []
    },
    {
        "id": "63a6044a2134f27f",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3900,
        "y": 700,
        "wires": [
            [
                "e524a5f2010d417d"
            ]
        ]
    },
    {
        "id": "0386b0426e66eae5",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4460,
        "y": 660,
        "wires": [
            [
                "4cd44e0158288d56"
            ]
        ]
    },
    {
        "id": "5989eb1c6c8a37cd",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Before Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4460,
        "y": 480,
        "wires": []
    },
    {
        "id": "127a851b720279da",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f",
            "1a12589aeb64156f"
        ],
        "x": 125,
        "y": 680,
        "wires": []
    },
    {
        "id": "481b35b7fc677684",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "b69bea8abb1b280f",
            "b8e26b39226639eb",
            "2284c0160c191b60"
        ],
        "x": 255,
        "y": 820,
        "wires": [
            [
                "068024f1c35376b8",
                "cff9c68f5389b1c9"
            ]
        ]
    },
    {
        "id": "cff9c68f5389b1c9",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 820,
        "wires": []
    },
    {
        "id": "295d5ed617fd5e9f",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4770,
        "y": 540,
        "wires": [
            [
                "9ee2761850535f7f",
                "5ff6a0bb74d810f3"
            ]
        ]
    },
    {
        "id": "378e981cc929a51c",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4740,
        "y": 260,
        "wires": []
    },
    {
        "id": "59ab8b12c84c9895",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "echange",
        "func": "// 1) Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    msg.payload = [\"\", \"\"];\n}\n\n// 2) Expand to guarantee at least 2 elements\nwhile (msg.payload.length < 2) {\n    msg.payload.push(\"\");\n}\n\n// 3) Handle possible \"object with .payload\" vs. direct string\nfunction isNonEmpty(val) {\n    return val !== undefined && val !== null && val !== \"\";\n}\n\n// If msg.payload[1] is an object with a payload...\nif (typeof msg.payload[1] === \"object\" && msg.payload[1] !== null) {\n    // Ensure there's a .payload key\n    msg.payload[1].payload = msg.payload[1].payload || \"\";\n    // If .payload is non-empty, copy it to [0].payload (making sure [0] is an object)\n    if (isNonEmpty(msg.payload[1].payload)) {\n        // If msg.payload[0] isn't an object, turn it into one\n        if (typeof msg.payload[0] !== \"object\" || msg.payload[0] === null) {\n            msg.payload[0] = { payload: \"\" };\n        }\n        msg.payload[0].payload = msg.payload[1].payload;\n    }\n    // Always reset [1].payload to empty\n    msg.payload[1].payload = \"\";\n\n// Else if msg.payload[1] is a string...\n} else if (typeof msg.payload[1] === \"string\") {\n    if (isNonEmpty(msg.payload[1])) {\n        // If [0] is object, put the string in [0].payload\n        if (typeof msg.payload[0] === \"object\" && msg.payload[0] !== null) {\n            msg.payload[0].payload = msg.payload[1];\n        } else {\n            // Otherwise, just treat [0] as a string\n            msg.payload[0] = msg.payload[1];\n        }\n    }\n    // Reset [1] to empty string\n    msg.payload[1] = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4750,
        "y": 460,
        "wires": [
            [
                "0ef08be962cfc6a0",
                "378e981cc929a51c",
                "15711b3639e0ddb4"
            ]
        ]
    },
    {
        "id": "e7c6654e885a41c6",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_4",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2543.015625,
        "y": 713.75,
        "wires": [
            [
                "f6afac48abe328a4"
            ]
        ]
    },
    {
        "id": "6c8a479b4d4888bf",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2300,
        "y": 680,
        "wires": [
            [
                "e7c6654e885a41c6"
            ]
        ]
    },
    {
        "id": "6eefd1acf1608af4",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "query to read Result4.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3440,
        "y": 1440,
        "wires": [
            [
                "efee7efebf91845e"
            ]
        ]
    },
    {
        "id": "efee7efebf91845e",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3740,
        "y": 1440,
        "wires": [
            [
                "673ed2f4b8097533"
            ]
        ]
    },
    {
        "id": "673ed2f4b8097533",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3920,
        "y": 1440,
        "wires": [
            [
                "a5d3d1cd89d1d9bf"
            ]
        ]
    },
    {
        "id": "a5d3d1cd89d1d9bf",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 1500,
        "wires": [
            [
                "94ee079d4b5883d7"
            ]
        ]
    },
    {
        "id": "94ee079d4b5883d7",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3730,
        "y": 1500,
        "wires": [
            [
                "2bd446736fadba08",
                "fda70362c32194c6"
            ]
        ]
    },
    {
        "id": "2bd446736fadba08",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 1560,
        "wires": [
            [
                "0dc9056a18145d56"
            ]
        ]
    },
    {
        "id": "0dc9056a18145d56",
        "type": "switch",
        "z": "32fc9731f5355a29",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3990,
        "y": 1560,
        "wires": [
            [
                "79a48d24c0566472",
                "dd35ccdd1d2da340",
                "7708de8dfe2fe4c5",
                "e3c25dd78fa7731c",
                "29b2cff2294e0c5c",
                "92f4cd9abcac9244"
            ],
            [
                "29b2cff2294e0c5c"
            ]
        ]
    },
    {
        "id": "dd35ccdd1d2da340",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "dateTLE",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3980,
        "y": 1620,
        "wires": [
            [
                "de5279c59ad33fdc"
            ]
        ]
    },
    {
        "id": "de5279c59ad33fdc",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3960,
        "y": 1660,
        "wires": [
            [
                "8c91e4e55bf1a128"
            ]
        ]
    },
    {
        "id": "8c91e4e55bf1a128",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Tle r2-postMan-OUT",
        "mode": "link",
        "links": [
            "3cda6a28825e07b9"
        ],
        "x": 4105,
        "y": 1660,
        "wires": []
    },
    {
        "id": "79a48d24c0566472",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorMessage",
                "pt": "msg",
                "to": "Manoeuvre successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4290,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "bfeccd2c57ad6b40",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "AudioManoeuver",
        "mode": "link",
        "links": [
            "fcb6777d67efa239"
        ],
        "x": 4395,
        "y": 1600,
        "wires": []
    },
    {
        "id": "2ec2fdd6744e1eb3",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "76ec91f8f3bbbe50"
        ],
        "x": 3185,
        "y": 1440,
        "wires": [
            [
                "6eefd1acf1608af4",
                "d9aa6e52c24042e2"
            ]
        ]
    },
    {
        "id": "7708de8dfe2fe4c5",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_999",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_999",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4260,
        "y": 1540,
        "wires": [
            [
                "f32279ed0ca356bb"
            ]
        ]
    },
    {
        "id": "f32279ed0ca356bb",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "MQTT Signal",
        "mode": "link",
        "links": [
            "cd3f51956308c239"
        ],
        "x": 4455,
        "y": 1540,
        "wires": []
    },
    {
        "id": "d9aa6e52c24042e2",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "time-persistence-intermediate.json",
        "filename": "/app/maneuver-manager/time-persistence-intermediate.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3230,
        "y": 1580,
        "wires": [
            [
                "9435647a50e813cc",
                "3aa83d9c6376c327"
            ]
        ]
    },
    {
        "id": "0b18c2274661f461",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "time persistent intermediate",
        "mode": "link",
        "links": [
            "5fcb4e512a728761"
        ],
        "x": 3325,
        "y": 1540,
        "wires": []
    },
    {
        "id": "9435647a50e813cc",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "test inter timre",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3530,
        "y": 1620,
        "wires": []
    },
    {
        "id": "e3c25dd78fa7731c",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "update all for R2 OUT",
        "mode": "link",
        "links": [
            "73dd4bb1ee938070"
        ],
        "x": 4225,
        "y": 1600,
        "wires": []
    },
    {
        "id": "fda70362c32194c6",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "test result4.txt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3950,
        "y": 1500,
        "wires": []
    },
    {
        "id": "29b2cff2294e0c5c",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4100,
        "y": 1400,
        "wires": []
    },
    {
        "id": "92f4cd9abcac9244",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4290,
        "y": 1420,
        "wires": [
            [
                "0b995abcedfa37b5"
            ]
        ]
    },
    {
        "id": "0b995abcedfa37b5",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4330,
        "y": 1480,
        "wires": [
            [
                "ddcd8162ce672f1b"
            ]
        ]
    },
    {
        "id": "ddcd8162ce672f1b",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4620,
        "y": 1480,
        "wires": []
    },
    {
        "id": "3aa83d9c6376c327",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3220,
        "y": 1540,
        "wires": [
            [
                "0b18c2274661f461"
            ]
        ]
    },
    {
        "id": "24e21e1e9b0fd544",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2950,
        "y": 1580,
        "wires": [
            [
                "d9aa6e52c24042e2"
            ]
        ]
    },
    {
        "id": "76ec91f8f3bbbe50",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Out resultat 1",
        "mode": "link",
        "links": [
            "2ec2fdd6744e1eb3"
        ],
        "x": 2865,
        "y": 480,
        "wires": []
    },
    {
        "id": "7418a9ad3e55ba93",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Prepare Reset Message",
        "func": "msg.reset = true;\nmsg.payload = \"Reset command received\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2600,
        "y": 400,
        "wires": [
            [
                "45670aa757acaef4"
            ]
        ]
    },
    {
        "id": "45670aa757acaef4",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Counter & Loop",
        "func": "// Retrieve the current counter from flow context (default to 0)\nlet count = flow.get('myCounter') || 0;\n\n// Check if this message is a 'reset' or normal 'increment'\nif (msg.reset) {\n    // If reset, set counter to 0\n    count = 0;\n    flow.set('myCounter', count);\n    msg.payload = `Counter reset to ${count}`;\n    return msg;\n}\n\n// Otherwise, increment the counter\ncount += 1;\nflow.set('myCounter', count);\n\n// Update payload with the current count\nmsg.payload = `Counter: ${count}`;\n\n// Define maximum count (optional)\nconst maxCount = 2;\n\nif (count < maxCount) {\n    // Send the count to the debug node and loop back\n    return [null, msg];\n} else {\n    // If max count reached, notify and stop looping\n    msg.payload = \"Done looping, reached \" + maxCount;\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 460,
        "wires": [
            [
                "3bad3a583d4ed8d2"
            ],
            [
                "33c999d74e1bf6da",
                "c5c5ef4ee8ee5b1c",
                "f826db85e17e6167",
                "23d9a9ca5f6c29d0"
            ]
        ]
    },
    {
        "id": "3bad3a583d4ed8d2",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "Debug Counter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 2850,
        "y": 420,
        "wires": []
    },
    {
        "id": "c5c5ef4ee8ee5b1c",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Output Before Maneuver TLEs",
        "mode": "link",
        "links": [
            "9175dbc39a9b7531"
        ],
        "x": 2805,
        "y": 480,
        "wires": []
    },
    {
        "id": "9175dbc39a9b7531",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "c5c5ef4ee8ee5b1c"
        ],
        "x": 3505,
        "y": 460,
        "wires": [
            [
                "e8e52c836840611a"
            ]
        ]
    },
    {
        "id": "33c999d74e1bf6da",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "DEBUG COUNTER DOWN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2170,
        "y": 420,
        "wires": []
    },
    {
        "id": "dbe9d512c38b61b1",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2310,
        "y": 460,
        "wires": [
            [
                "45670aa757acaef4"
            ]
        ]
    },
    {
        "id": "96b0b3e8cc0ef07e",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2510,
        "y": 340,
        "wires": [
            [
                "7418a9ad3e55ba93"
            ]
        ]
    },
    {
        "id": "e5160d72c98dc4cc",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "RESET COUNTER",
        "mode": "link",
        "links": [
            "6115c5065429b925"
        ],
        "x": 2855,
        "y": 700,
        "wires": []
    },
    {
        "id": "6115c5065429b925",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "e5160d72c98dc4cc"
        ],
        "x": 2345,
        "y": 420,
        "wires": [
            [
                "7418a9ad3e55ba93"
            ]
        ]
    },
    {
        "id": "da05f462714ff911",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "2d01a94380302bc2"
        ],
        "x": 2435,
        "y": 420,
        "wires": [
            [
                "7418a9ad3e55ba93"
            ]
        ]
    },
    {
        "id": "2d01a94380302bc2",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "end function signal",
        "mode": "link",
        "links": [
            "da05f462714ff911"
        ],
        "x": 3315,
        "y": 700,
        "wires": []
    },
    {
        "id": "f826db85e17e6167",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "SAVE TRIGGER",
        "mode": "link",
        "links": [
            "9b7d970fd077b87c"
        ],
        "x": 2855,
        "y": 440,
        "wires": []
    },
    {
        "id": "1af218e6c13a7761",
        "type": "ui_button",
        "z": "32fc9731f5355a29",
        "name": "",
        "group": "d4e830c4b00daeae",
        "order": 9,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "R2 Reset",
        "tooltip": "",
        "color": "#000000",
        "bgcolor": "#4C6E91",
        "className": "",
        "icon": "fa-undo",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1720,
        "wires": [
            [
                "384b133cdaa82267"
            ]
        ]
    },
    {
        "id": "384b133cdaa82267",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Trigger Pop-up",
        "func": "return { payload: 'showPopup48' };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1720,
        "wires": [
            [
                "de52151a62aaac31"
            ]
        ]
    },
    {
        "id": "44a5bcae59ab1e75",
        "type": "switch",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oui48",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 1720,
        "wires": [
            [
                "502deed56b914252"
            ]
        ]
    },
    {
        "id": "de52151a62aaac31",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "trigger1",
        "mode": "link",
        "links": [
            "bddb06e20e93a2b7",
            "7fa3ad457ea33552",
            "3eedf9446ffbe513",
            "e1233e0aafd7477f",
            "1a12589aeb64156f"
        ],
        "x": 415,
        "y": 1720,
        "wires": []
    },
    {
        "id": "938a95745ad448b7",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "d4feff847a4301e9",
            "731fcc774bc7f8ef",
            "b69bea8abb1b280f",
            "b8e26b39226639eb",
            "2284c0160c191b60"
        ],
        "x": 565,
        "y": 1720,
        "wires": [
            [
                "44a5bcae59ab1e75"
            ]
        ]
    },
    {
        "id": "e70f3fab269cafd2",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "msg.payload = { isp: '' };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "5cd1e30e951c4b77"
            ]
        ]
    },
    {
        "id": "782a28e264ba4023",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1040,
        "wires": [
            [
                "e70f3fab269cafd2"
            ]
        ]
    },
    {
        "id": "05daa5c41990befd",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "flush isp",
        "mode": "link",
        "links": [
            "ef0da5f02c45c0d9"
        ],
        "x": 4185,
        "y": 680,
        "wires": []
    },
    {
        "id": "ef0da5f02c45c0d9",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "05daa5c41990befd"
        ],
        "x": 65,
        "y": 1080,
        "wires": [
            [
                "e70f3fab269cafd2"
            ]
        ]
    },
    {
        "id": "f6e8db19d9438ca1",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "flush isp error",
        "mode": "link",
        "links": [
            "deab8b655b4c1c1e"
        ],
        "x": 3245,
        "y": 780,
        "wires": []
    },
    {
        "id": "deab8b655b4c1c1e",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "flush isp",
        "links": [
            "f6e8db19d9438ca1"
        ],
        "x": 45,
        "y": 1000,
        "wires": [
            [
                "e70f3fab269cafd2"
            ]
        ]
    },
    {
        "id": "3e02a4c46a671f80",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 180,
        "wires": []
    },
    {
        "id": "0dc5fff9494b90bd",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "red2-tle-storage-out",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 140,
        "wires": [
            [
                "10d549a69580fd66"
            ]
        ]
    },
    {
        "id": "10d549a69580fd66",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "24fbc8254add6ce5"
            ]
        ]
    },
    {
        "id": "24fbc8254add6ce5",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "/**\n * Node-RED Function: Compute Semi-Major Axis (SMA) from Mean Motion and Output Only SMA\n *\n * This function:\n * 1. Extracts the 'mean' field from msg.payload (assumed to be in rev/day)\n * 2. Converts 'mean' to Semi-Major Axis (SMA) using Kepler's Third Law\n * 3. Sets msg.payload to the computed SMA (in kilometers), removing all other fields\n *\n * Assumptions:\n * - 'mean' is in revolutions per day (rev/day)\n * - Earth's gravitational parameter (mu) = 398600 km³/s²\n */\n\nif (msg.payload && msg.payload.mean) {\n    // Earth's gravitational parameter (mu) in km^3/s^2\n    const mu = 398600; \n    const secondsPerDay = 86400;\n    const twoPi = 2 * Math.PI;\n\n    // 1. Extract and parse the 'mean' field\n    let meanMotionRevPerDay = parseFloat(msg.payload.mean);\n\n    // Validate the parsed mean motion\n    if (isNaN(meanMotionRevPerDay) || meanMotionRevPerDay <= 0) {\n        node.error(\"Invalid mean motion value: \" + msg.payload.mean);\n        return null; // Stop processing this message\n    }\n\n    // 2. Convert mean motion from rev/day to rad/s\n    let meanMotionRadPerSec = meanMotionRevPerDay * twoPi / secondsPerDay;\n\n    // 3. Compute the orbital period (T) in seconds using T = 2π / n\n    let orbitalPeriod = twoPi / meanMotionRadPerSec; // seconds\n\n    // 4. Compute Semi-Major Axis (a) using Kepler's Third Law:\n    //    a = (mu * T^2 / (4 * pi^2))^(1/3)\n    let aCubed = (mu * Math.pow(orbitalPeriod, 2)) / (4 * Math.PI * Math.PI);\n    let smaKm = Math.pow(aCubed, 1/3); // km\n\n    // Optional: Round SMA to two decimal places for readability\n    smaKm = parseFloat(smaKm.toFixed(2));\n\n    // 5. Set msg.payload to the computed SMA only\n    msg.payload = smaKm;\n\n    // Optional: Log the computed SMA for debugging purposes\n    node.log(\"Computed SMA (km) = \" + smaKm);\n\n    // 6. Return the modified message\n    return msg;\n\n} else {\n    // If 'mean' field is missing, log an error and stop processing\n    node.error(\"No 'mean' field found in msg.payload.\");\n    return null; // Stop processing this message\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 140,
        "wires": [
            [
                "3e02a4c46a671f80",
                "a9a61392408b16b7"
            ]
        ]
    },
    {
        "id": "a9a61392408b16b7",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_17",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_17",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 220,
        "wires": [
            [
                "0860020f8d8bfce2",
                "d0775234a95a99bc"
            ]
        ]
    },
    {
        "id": "89e59b8c91b24ec8",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST JOIN WAIT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 320,
        "wires": []
    },
    {
        "id": "fa5a3ef3b5935980",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Retrieve SMA",
        "mode": "link",
        "links": [
            "ee6dd4e9df86c5ae"
        ],
        "x": 315,
        "y": 920,
        "wires": []
    },
    {
        "id": "ee6dd4e9df86c5ae",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "fa5a3ef3b5935980"
        ],
        "x": 195,
        "y": 140,
        "wires": [
            [
                "0dc5fff9494b90bd"
            ]
        ]
    },
    {
        "id": "d0775234a95a99bc",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "PATH_17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "5a7d48af285bc509",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "red2-tle-storage-out",
        "filename": "red2-tle-storage.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 660,
        "y": 1180,
        "wires": [
            [
                "6d039db2e8391911"
            ]
        ]
    },
    {
        "id": "6d039db2e8391911",
        "type": "json",
        "z": "32fc9731f5355a29",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 840,
        "y": 1180,
        "wires": [
            [
                "445f74db4830a77f"
            ]
        ]
    },
    {
        "id": "445f74db4830a77f",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "/**\n * Node-RED Function: Compute Semi-Major Axis (SMA) from Mean Motion and Output Only SMA\n *\n * This function:\n * 1. Extracts the 'mean' field from msg.payload (assumed to be in rev/day)\n * 2. Converts 'mean' to Semi-Major Axis (SMA) using Kepler's Third Law\n * 3. Sets msg.payload to the computed SMA (in kilometers), removing all other fields\n *\n * Assumptions:\n * - 'mean' is in revolutions per day (rev/day)\n * - Earth's gravitational parameter (mu) = 398600 km³/s²\n */\n\nif (msg.payload && msg.payload.mean) {\n    // Earth's gravitational parameter (mu) in km^3/s^2\n    const mu = 398600; \n    const secondsPerDay = 86400;\n    const twoPi = 2 * Math.PI;\n\n    // 1. Extract and parse the 'mean' field\n    let meanMotionRevPerDay = parseFloat(msg.payload.mean);\n\n    // Validate the parsed mean motion\n    if (isNaN(meanMotionRevPerDay) || meanMotionRevPerDay <= 0) {\n        node.error(\"Invalid mean motion value: \" + msg.payload.mean);\n        return null; // Stop processing this message\n    }\n\n    // 2. Convert mean motion from rev/day to rad/s\n    let meanMotionRadPerSec = meanMotionRevPerDay * twoPi / secondsPerDay;\n\n    // 3. Compute the orbital period (T) in seconds using T = 2π / n\n    let orbitalPeriod = twoPi / meanMotionRadPerSec; // seconds\n\n    // 4. Compute Semi-Major Axis (a) using Kepler's Third Law:\n    //    a = (mu * T^2 / (4 * pi^2))^(1/3)\n    let aCubed = (mu * Math.pow(orbitalPeriod, 2)) / (4 * Math.PI * Math.PI);\n    let smaKm = Math.pow(aCubed, 1/3); // km\n\n    // Optional: Round SMA to two decimal places for readability\n    smaKm = parseFloat(smaKm.toFixed(2));\n\n    // 5. Set msg.payload to the computed SMA only\n    msg.payload = smaKm;\n\n    // Optional: Log the computed SMA for debugging purposes\n    node.log(\"Computed SMA (km) = \" + smaKm);\n\n    // 6. Return the modified message\n    return msg;\n\n} else {\n    // If 'mean' field is missing, log an error and stop processing\n    node.error(\"No 'mean' field found in msg.payload.\");\n    return null; // Stop processing this message\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1180,
        "wires": [
            [
                "53b7c0d5faf92853",
                "ad1d30b6f60f6ef1"
            ]
        ]
    },
    {
        "id": "203cab877a7ec310",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 1260,
        "wires": []
    },
    {
        "id": "53b7c0d5faf92853",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_18",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_18",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1120,
        "wires": [
            [
                "c17e8a3e6bc88009",
                "70a30773a03a0cc7",
                "a83688f4fe72bbe8"
            ]
        ]
    },
    {
        "id": "70a30773a03a0cc7",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TESRT TRIGGER BDD",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1220,
        "wires": []
    },
    {
        "id": "e02233293ac18921",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "triger bdd time r2",
        "links": [
            "bbe0593381268527"
        ],
        "x": 425,
        "y": 1180,
        "wires": [
            [
                "5a7d48af285bc509"
            ]
        ]
    },
    {
        "id": "70085fcde49460ed",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Prepare File Read",
        "func": "msg.filename = 'app/maneuver-manager/CommandData.txt';\nmsg.action = 'read';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1500,
        "wires": [
            [
                "1269daaa325656ab"
            ]
        ]
    },
    {
        "id": "1269daaa325656ab",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Read/Write CommandData4.txt",
        "filename": "/path/to/CommandData4.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1380,
        "y": 1480,
        "wires": [
            [
                "e2968246dac4d61b"
            ]
        ]
    },
    {
        "id": "e2968246dac4d61b",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Update SMA Value",
        "func": "const lines = msg.payload.split('\\n');\nlines[0] = msg.data.toString();\nmsg.payload = lines.join('\\n');\nmsg.filename = 'CommandData.txt';\nmsg.action = 'write';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 1440,
        "wires": [
            [
                "1269daaa325656ab"
            ]
        ]
    },
    {
        "id": "ad1d30b6f60f6ef1",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f9d67ff86bd4f075",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Update First Line",
        "func": "const lines = msg.payload.split('\\n');\nlines[0] = msg.data.toString();\nmsg.payload = lines.join('\\n');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1300,
        "wires": [
            [
                "962fbd8362974a32",
                "09fa14b2805071d3"
            ]
        ]
    },
    {
        "id": "962fbd8362974a32",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "Write CommandData.txt",
        "filename": "/app/maneuver-manager/CommandData.txt",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1860,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "77e7d14c9b324522",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 1340,
        "wires": []
    },
    {
        "id": "09fa14b2805071d3",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 1360,
        "wires": []
    },
    {
        "id": "a7c27a94bf3a76d3",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_19",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_19",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 1300,
        "wires": [
            [
                "a83688f4fe72bbe8"
            ]
        ]
    },
    {
        "id": "a83688f4fe72bbe8",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_18\",\"path_19\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1510,
        "y": 1300,
        "wires": [
            [
                "82bb403ff1e51a6f"
            ],
            []
        ]
    },
    {
        "id": "549a9b24785d5117",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "dd77fe3d0fd12955",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "5fd6e611ea04cace"
        ],
        "x": 465,
        "y": 1140,
        "wires": [
            [
                "5a7d48af285bc509",
                "16aa1fde0db7a31d"
            ]
        ]
    },
    {
        "id": "82bb403ff1e51a6f",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "TEST DEBUG comm data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 1240,
        "wires": []
    },
    {
        "id": "638ddf38cda1a079",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "name": "Trigger Update",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "6973.97",
        "payloadType": "num",
        "x": 970,
        "y": 1280,
        "wires": [
            [
                "16aa1fde0db7a31d"
            ]
        ]
    },
    {
        "id": "16aa1fde0db7a31d",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "CommandData4.txt",
        "filename": "/app/maneuver-manager/CommandData4.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1100,
        "y": 1240,
        "wires": [
            [
                "a7c27a94bf3a76d3",
                "77e7d14c9b324522"
            ]
        ]
    },
    {
        "id": "b810c825dd98faba",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_13",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_13",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3000,
        "y": 1060,
        "wires": [
            [
                "4a237cd729b8151d",
                "91b6efe3811fa3f7"
            ]
        ]
    },
    {
        "id": "4662bfc6a9b47168",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "aabb98fe3ab1ba7f"
        ],
        "x": 2835,
        "y": 1040,
        "wires": [
            [
                "b810c825dd98faba"
            ]
        ]
    },
    {
        "id": "91b6efe3811fa3f7",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 1040,
        "wires": []
    },
    {
        "id": "5f151c4370c557ee",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 480,
        "wires": [
            [
                "e0b29f85b2e77ba6"
            ]
        ]
    },
    {
        "id": "e0b29f85b2e77ba6",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "link",
        "links": [
            "4aa96be32ec24727"
        ],
        "x": 2235,
        "y": 480,
        "wires": []
    },
    {
        "id": "674ea034eaa018a4",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "65804949ca66fef8"
        ],
        "x": 2625,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "33afb68025df178b",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3080,
        "y": 520,
        "wires": []
    },
    {
        "id": "c9fbf64090674b20",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2720,
        "y": 500,
        "wires": [
            [
                "76ec91f8f3bbbe50"
            ]
        ]
    },
    {
        "id": "502deed56b914252",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "LOAD CONF",
        "mode": "link",
        "links": [
            "c5b6b5d0caf2f6de"
        ],
        "x": 805,
        "y": 1720,
        "wires": []
    },
    {
        "id": "99316e73af4e2cfd",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "name": "",
        "links": [
            "6d68815a456a141b",
            "00f32cd598b46f61"
        ],
        "x": 3935,
        "y": 2120,
        "wires": [
            [
                "6894861a073657e2",
                "27751c88813daa01",
                "c43ec23f2a027191",
                "a6a1f26c12f2f90c"
            ]
        ]
    },
    {
        "id": "a6a1f26c12f2f90c",
        "type": "trigger",
        "z": "32fc9731f5355a29",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3330,
        "y": 2500,
        "wires": [
            [
                "1b7305fabfae09df"
            ]
        ]
    },
    {
        "id": "1b7305fabfae09df",
        "type": "mongodb in",
        "z": "32fc9731f5355a29",
        "mongodb": "8de6bb2e.d8b2a8",
        "name": "Show * of r2tlelatest",
        "collection": "r2tlelatest",
        "operation": "find",
        "x": 3540,
        "y": 2500,
        "wires": [
            [
                "28428e773b7d6d30",
                "641ddb8a9d1835cb"
            ]
        ]
    },
    {
        "id": "641ddb8a9d1835cb",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "object to array",
        "func": "msg.payload=Object.values(msg.payload[0]);\n/*Today needed to add this function to use\nObject.values to convert the key: value object into an array\nso we don't have random keys depending \non the spaces or tabs caused by the TLE format,*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 2500,
        "wires": [
            [
                "837384c8f5048224",
                "0e548cb301131d79"
            ]
        ]
    },
    {
        "id": "28428e773b7d6d30",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3770,
        "y": 2560,
        "wires": []
    },
    {
        "id": "0e548cb301131d79",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4050,
        "y": 2520,
        "wires": []
    },
    {
        "id": "837384c8f5048224",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4050,
        "y": 2460,
        "wires": [
            [
                "596c08191db00123",
                "530980c467202404"
            ]
        ]
    },
    {
        "id": "530980c467202404",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "name": "",
        "paths": "[\"path_2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 4240,
        "y": 2460,
        "wires": [
            [
                "f4064af3b25e070d",
                "75ddd2c77aaff6a0"
            ],
            []
        ]
    },
    {
        "id": "596c08191db00123",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "LAST TLE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4250,
        "y": 2500,
        "wires": []
    },
    {
        "id": "8bb7205cb86e97a0",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4530,
        "y": 2520,
        "wires": []
    },
    {
        "id": "f4064af3b25e070d",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Data4.txt format",
        "func": "// Initialize variables\nvar tab = [];\nvar gs = {};\n\n// Split line #2 of the TLE robustly:\n// - trim() removes any leading/trailing spaces\n// - split(/\\s+/) splits on ANY run of whitespace\nvar tle = msg.payload[2].trim().split(/\\s+/);\n\nvar N;      // Mean motion in rev/day (not used below, just declared)\nvar n;      // ...\nvar a;      // Semi-major axis\nvar acube;  // a^3\nvar e;      // eccentricity\n\n// Earth's standard gravitational parameter, etc.\nvar mu = 398600.4418;\nvar J = 86400; // A day in seconds\n\n// From the TLE array\ngs.incli = String(tle[2]);\ngs.raan  = String(tle[3]);\ngs.ecc   = String(tle[4]);\ngs.aop   = String(tle[5]);\ngs.meana = String(tle[6]);\ngs.mean  = String(tle[7]);\n\n// From the rest of payload\ngs.dry_mass          = parseFloat(msg.payload[3]);\ngs.ergol_consumption = parseFloat(msg.payload[5]);\ngs.ergol_mass        = parseFloat(msg.payload[4]);\n\n// Attach everything back to msg and return\nmsg.payload = gs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4520,
        "y": 2460,
        "wires": [
            [
                "8bb7205cb86e97a0",
                "eeac7689bb0453fe"
            ]
        ]
    },
    {
        "id": "75ddd2c77aaff6a0",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4510,
        "y": 2420,
        "wires": []
    },
    {
        "id": "c6fa1374f5f1ffbe",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4490,
        "y": 2360,
        "wires": []
    },
    {
        "id": "71889adee1ec13a2",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4490,
        "y": 2320,
        "wires": []
    },
    {
        "id": "719d09e3fe371b70",
        "type": "switch",
        "z": "32fc9731f5355a29",
        "name": "test for errorFlag",
        "property": "errorFlag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4500,
        "y": 2280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "06ea2e40c0ce6ac3",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "tle injection in persistence",
        "func": "var gs = {}\n\n //From the GS\n if (Math.trunc(msg.payload[0].inc) > 99) {\n    gs.incli = String(msg.payload[0].inc)\n}\nelse if (Math.trunc(msg.payload[0].inc) > 9) {\n    gs.incli = '0'+String(msg.payload[0].inc)\n} else {\n    gs.incli = '00'+String(msg.payload[0].inc)\n}\n\nif (Math.trunc(msg.payload[0].raan) > 99) {\n    gs.raan = String(msg.payload[0].raan)\n} else if (Math.trunc(msg.payload[0].raan) > 9) {\n    gs.raan = '0'+String(msg.payload[0].raan)\n} else {\n    gs.raan = '00'+String(msg.payload[0].raan)\n}\n//             10/05/23\n//gs.ecc = String(msg.payload[0].ecc).substring(2,String(msg.payload[0].ecc).length)\n//Line is useless because we first parse a string at the previous function to then\n//construct a string from the number oject .. we can directly get the substring of interest\n// in the original string\ngs.ecc = msg.payload[0].ecc.substring(2,(msg.payload[0].ecc).length);\n\nif (Math.trunc(msg.payload[0].aop) > 99) {\n    gs.aop = String(msg.payload[0].aop)\n} else if (Math.trunc(msg.payload[0].aop) > 9) {\n    gs.aop = '0'+String(msg.payload[0].aop)\n} else {\n    gs.aop = '00'+String(msg.payload[0].aop)\n}\n\nif (Math.trunc(msg.payload[0].meananom) > 99) {\n    gs.meana = String(msg.payload[0].meananom)\n} else if (Math.trunc(msg.payload[0].meananom) > 9) {\n    gs.meana = '0'+String(msg.payload[0].meananom)\n} else {\n    gs.meana = '00'+String(msg.payload[0].meananom)\n}\n\nif (Math.trunc(msg.payload[0].meanmove) > 9) {\n    gs.mean = String(msg.payload[0].meanmove)\n} else {\n    gs.mean = '0'+String(msg.payload[0].meanmove)\n}\ngs.ergol_mass = msg.payload[0].ergolmass;\ngs.dry_mass = msg.payload[0].dry_mass;\ngs.ergol_consumption = msg.payload[0].ergol_consumption;\n\n\nmsg.body = null\nmsg.topic = null\nmsg.dateTLE = msg.payload[0].date\nmsg.payload = gs\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 2280,
        "wires": [
            [
                "719d09e3fe371b70",
                "c6fa1374f5f1ffbe",
                "71889adee1ec13a2"
            ]
        ]
    },
    {
        "id": "492ab0febd2044fd",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result-setter",
        "func": "//var data = msg.payload.name; \n//data=data.toString();\n\n//var msg={};\n\n//msg.payload=data;\n\n\n\n\n   return{\n topic:\"data setter\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4130,
        "y": 2220,
        "wires": [
            [
                "6cc00d5d0c917a86"
            ]
        ]
    },
    {
        "id": "6cc00d5d0c917a86",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "Result message setter",
        "func": "var tab = []\nvar gs = {}\nvar max=6;\nvar random = Math.floor(Math.random() * max);\nvar n = msg.payload.length\n\n //From the GS\ngs.dry_mass = parseFloat(msg.payload[n - 14])\ngs.ergol_consumption = parseFloat(msg.payload[n - 13])\ngs.ergolmass = parseFloat(msg.payload[n - 12])\ngs.date = Date.parse(msg.payload[n-11])\ngs.alti = parseFloat(msg.payload[n-10])\ngs.sma = parseFloat(msg.payload[n-9])\ngs.ecc = msg.payload[n-8]\ngs.inc = parseFloat(msg.payload[n-7]).toFixed(4)\ngs.raan = (parseFloat(msg.payload[n-6])).toFixed(4)\ngs.aop = parseFloat(msg.payload[n-5]).toFixed(4)\ngs.meananom = (parseFloat(msg.payload[n-4])+0.0).toFixed(4)\ngs.meanmove = parseFloat(msg.payload[n-3]).toFixed(14)\ngs.period = parseFloat(msg.payload[n-2])\n\n// 090523 adding a null NAN undefiened detector it triggers also if all elements are null\nmsg.errorFlag=Object.values(gs).some((element) => isNaN(element)||element===null) || Object.values(gs).every((element) => element===0);\n//\n\nif(msg.errorFlag){msg.errorMessage=\"Manoeuvre aborted ,calculation error!\"}\n\nif (gs.sma<0 && gs.ecc>1){\n    msg.errorFlag=true;\n    if(random==0){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Return to the battlefield cadet!\";}\n    else if(random==1){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Article L321-7 of military code!\";}\n    else if(random==2){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. Are you deserting ?\";}\n    else if(random==3){msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory. You arn't qualified for interplanetary flight!\";}\n    else{msg.errorMessage=\"Maneuver aborted, hyperbolic trajectory.No French assets in this direction!\";}\n}\n\ntab.push(gs)\n\nmsg.payload = tab\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4340,
        "y": 2220,
        "wires": [
            [
                "06ea2e40c0ce6ac3"
            ]
        ]
    },
    {
        "id": "6894861a073657e2",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "query to read Result4.txt",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4170,
        "y": 2160,
        "wires": [
            [
                "851f04d6f7bfd846"
            ]
        ]
    },
    {
        "id": "27751c88813daa01",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4130,
        "y": 2120,
        "wires": []
    },
    {
        "id": "851f04d6f7bfd846",
        "type": "file in",
        "z": "32fc9731f5355a29",
        "name": "Result file reader",
        "filename": "/app/maneuver-manager/Result4.txt",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4410,
        "y": 2160,
        "wires": [
            [
                "5dfb7539a6b6929f"
            ]
        ]
    },
    {
        "id": "5dfb7539a6b6929f",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4610,
        "y": 2160,
        "wires": [
            [
                "492ab0febd2044fd"
            ]
        ]
    },
    {
        "id": "7aaf6ba318fd892e",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4670,
        "y": 1980,
        "wires": []
    },
    {
        "id": "eeac7689bb0453fe",
        "type": "file",
        "z": "32fc9731f5355a29",
        "name": "",
        "filename": "red2-tle-storage.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4380,
        "y": 1900,
        "wires": [
            [
                "7aaf6ba318fd892e",
                "49ba79af77228b6a"
            ]
        ]
    },
    {
        "id": "c43ec23f2a027191",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4190,
        "y": 1860,
        "wires": [
            [
                "1331a1a29da39a40"
            ]
        ]
    },
    {
        "id": "386c7611e6acaab5",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "AP Load",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4580,
        "y": 1820,
        "wires": []
    },
    {
        "id": "7509020e5d72ac61",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "echange",
        "func": "msg.payload =\"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 1740,
        "wires": [
            [
                "e5c0b89a89a47742",
                "386c7611e6acaab5"
            ]
        ]
    },
    {
        "id": "1331a1a29da39a40",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Ap",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4390,
        "y": 1780,
        "wires": [
            [
                "7509020e5d72ac61"
            ]
        ]
    },
    {
        "id": "49ba79af77228b6a",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "Before",
        "rules": [
            {
                "t": "set",
                "p": "payload.version",
                "pt": "msg",
                "to": " Reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4310,
        "y": 1700,
        "wires": [
            [
                "e5c0b89a89a47742"
            ]
        ]
    },
    {
        "id": "e5c0b89a89a47742",
        "type": "join",
        "z": "32fc9731f5355a29",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4610,
        "y": 1700,
        "wires": [
            [
                "9b8a4301805106ad",
                "513df883ac574ad4"
            ]
        ]
    },
    {
        "id": "9b8a4301805106ad",
        "type": "function",
        "z": "32fc9731f5355a29",
        "name": "echange",
        "func": "// 1) Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    msg.payload = [\"\", \"\"];\n}\n\n// 2) Expand to guarantee at least 2 elements\nwhile (msg.payload.length < 2) {\n    msg.payload.push(\"\");\n}\n\n// 3) Handle possible \"object with .payload\" vs. direct string\nfunction isNonEmpty(val) {\n    return val !== undefined && val !== null && val !== \"\";\n}\n\n// If msg.payload[1] is an object with a payload...\nif (typeof msg.payload[1] === \"object\" && msg.payload[1] !== null) {\n    // Ensure there's a .payload key\n    msg.payload[1].payload = msg.payload[1].payload || \"\";\n    // If .payload is non-empty, copy it to [0].payload (making sure [0] is an object)\n    if (isNonEmpty(msg.payload[1].payload)) {\n        // If msg.payload[0] isn't an object, turn it into one\n        if (typeof msg.payload[0] !== \"object\" || msg.payload[0] === null) {\n            msg.payload[0] = { payload: \"\" };\n        }\n        msg.payload[0].payload = msg.payload[1].payload;\n    }\n    // Always reset [1].payload to empty\n    msg.payload[1].payload = \"\";\n\n// Else if msg.payload[1] is a string...\n} else if (typeof msg.payload[1] === \"string\") {\n    if (isNonEmpty(msg.payload[1])) {\n        // If [0] is object, put the string in [0].payload\n        if (typeof msg.payload[0] === \"object\" && msg.payload[0] !== null) {\n            msg.payload[0].payload = msg.payload[1];\n        } else {\n            // Otherwise, just treat [0] as a string\n            msg.payload[0] = msg.payload[1];\n        }\n    }\n    // Reset [1] to empty string\n    msg.payload[1] = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4710,
        "y": 1640,
        "wires": [
            [
                "510909bf9ff03e69",
                "d4eee4b9a41122ea"
            ]
        ]
    },
    {
        "id": "510909bf9ff03e69",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "Out Maneuvre prédéfinie",
        "mode": "link",
        "links": [
            "b9a06d4ecb7c304d",
            "4de5d0666377ecc1",
            "d3a880f48b073068",
            "b778ce59ad6de1b6",
            "d4add07ec86f7324"
        ],
        "x": 4775,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d445c8ef0e74fddc",
        "type": "ui_template",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "group": "a1e2900e2867cd47",
        "name": "Dynamic Form",
        "order": 3,
        "width": "10",
        "height": "8",
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Manoeuvre Hub</title>\n    <style>\n        /* Apply box-sizing globally */\n        *,\n        *::before,\n        *::after {\n            box-sizing: border-box;\n        }\n\n        /* Classe pour masquer des éléments */\n        .hidden {\n            display: none;\n        }\n\n        /* Example container style (based on your preference) */\n        .scrollable-container {\n            /* If needed, remove or enable scrolling properties here */\n            overflow: hidden;\n        }\n\n        /* Prevent overflow from the body and html if desired */\n        body, html {\n            margin: 0;\n            padding: 0;\n        }\n\n        /* Style des champs de formulaire */\n        .form-group {\n            margin-bottom: 13px;\n        }\n\n        .form-group label {\n            display: block;\n            margin-bottom: 10px;\n            font-weight: normal;\n            color: #fff;\n            padding-left: 25px;\n        }\n\n        .form-group input,\n        .form-group select {\n            width: 90%;\n            padding: 8px 0;\n            border: none;\n            background-color: transparent;\n            color: #fff;\n            border-bottom: 2px solid #666;\n            margin: 0 auto;\n            display: block;\n        }\n\n        .form-group input:focus,\n        .form-group select:focus {\n            outline: none;\n            border-bottom: 2px solid #888;\n        }\n\n        /* Style du titre du formulaire */\n        #formTitle {\n            font-size: 18px;\n            font-weight: normal;\n            color: #fff;\n            margin-top: 23px;\n            margin-bottom: 28px;\n            margin-left: 25px;\n        }\n\n        /* Espace en haut du conteneur de champs de saisie */\n        #inputField {\n            margin-top: 17px;\n        }\n\n        /* Style du bouton de soumission */\n        #submitButton {\n            margin-top: 14px;\n            margin-left: 25px;\n            margin-bottom: 75px;\n            padding: 10px 20px;\n            font-size: 16px;\n            font-weight: normal;\n            color: #fff;\n            background-color: rgb(0, 86, 122);\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            transition: background-color 0.3s, transform 0.2s;\n        }\n\n        #submitButton:hover {\n            background-color: rgb(0, 106, 152);\n        }\n\n        #submitButton:active {\n            background-color: rgb(0, 66, 92);\n            transform: scale(0.98);\n        }\n\n        /* Make the button appear grayed out and change the cursor when disabled */\n        #submitButton:disabled {\n            opacity: 0.5;\n            cursor: not-allowed;\n        }\n\n        /* Style du sélecteur de manoeuvre */\n        #maneuverSelect {\n            border-bottom: 2px solid #666;\n            width: 90%;\n            margin: 0 auto;\n            display: block;\n            background-color: #212c31;\n            color: #fff;\n        }\n\n        #maneuverSelect:focus {\n            outline: none;\n            border-bottom: 2px solid #888;\n        }\n\n        /* Style de la section des derniers paramètres soumis */\n        #lastSubmitted {\n            margin-top: 50px;\n            padding: 15px;\n            border: 1px solid #444;\n            border-radius: 4px;\n            background-color: #212c31;\n            color: #fff;\n        }\n\n        #lastSubmitted h3 {\n            margin-bottom: 10px;\n            color: #fff;\n        }\n\n        #lastSubmitted ul {\n            list-style-type: disc;\n            padding-left: 20px;\n        }\n\n        #lastSubmitted li {\n            margin-bottom: 5px;\n            color: #ddd;\n        }\n\n        #lastSubmitted p {\n            margin-bottom: 10px;\n            color: #fff;\n        }\n\n        #lastSubmitted ul li strong {\n            color: #fff;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"scrollable-container\">\n        <!-- Titre dynamique -->\n        <h2 id=\"formTitle\">Veuillez d'abord sélectionner une manoeuvre</h2>\n\n        <!-- Sélecteur de manoeuvre -->\n        <div class=\"form-group\">\n            <label for=\"maneuverSelect\">Type de manoeuvre :</label>\n            <select id=\"maneuverSelect\" class=\"form-control\">\n                <option value=\"\" disabled selected>-- Choisissez une manoeuvre --</option>\n                <option value=\"Hohmann\">Hohmann</option>\n                <option value=\"Bi-elliptique\">Bi-elliptique</option>\n                <option value=\"Inclinaison\">Inclinaison</option>\n                <option value=\"QLaw\">QLaw</option>\n            </select>\n        </div>\n\n        <!-- Le formulaire -->\n        <form id=\"dynamicForm\">\n            <div id=\"inputField\"></div>\n            <button type=\"button\" id=\"submitButton\" class=\"hidden\">Valider les paramètres</button>\n        </form>\n\n        <!-- Section pour afficher les derniers paramètres soumis -->\n        <div id=\"lastSubmitted\" class=\"hidden\">\n            <h3>Derniers paramètres soumis :</h3>\n            <div id=\"submittedContent\"></div>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n    (function(scope) {\n        var inputField = document.getElementById('inputField');\n        var formTitle = document.getElementById('formTitle');\n        var maneuverSelect = document.getElementById('maneuverSelect');\n        var submitButton = document.getElementById('submitButton');\n        var lastSubmittedSection = document.getElementById('lastSubmitted');\n        var submittedContent = document.getElementById('submittedContent');\n        var selectedPayload = null;\n        var isFormSubmitted = false;\n\n        // Mapping des unités pour chaque champ\n        var fieldUnits = {\n            SMA_2: 'km',\n            SMA_int: 'km'\n        };\n\n        // Générer les champs du formulaire selon la manoeuvre sélectionnée\n        function generateForm(payload) {\n            if (!payload) {\n                inputField.innerHTML = \"\";\n                formTitle.innerText = \"Veuillez d'abord sélectionner une manoeuvre\";\n                submitButton.classList.add('hidden');\n                return;\n            }\n\n            // Met à jour le titre\n            formTitle.innerText = `Saisir les paramètres de la manoeuvre : ${payload}`;\n            selectedPayload = payload;\n\n            let formContent = \"\";\n            if (payload === \"Hohmann\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"SMA_2\">Demi-grand axe final SMA_2 (km)</label>\n                        <input type=\"text\" id=\"SMA_2\" name=\"SMA_2\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                `;\n            } else if (payload === \"Bi-elliptique\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"SMA_int\">Demi-grand axe intermédiaire SMA_int (km)</label>\n                        <input type=\"text\" id=\"SMA_int\" name=\"SMA_int\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"SMA_2\">Demi-grand axe final SMA_2 (km)</label>\n                        <input type=\"text\" id=\"SMA_2\" name=\"SMA_2\" class=\"form-control\" data-unit=\"km\" />\n                    </div>\n                `;\n            } else if (payload === \"Inclinaison\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"input_5\">Intitulé du champ 5</label>\n                        <input type=\"text\" id=\"input_5\" name=\"input_5\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"input_6\">Intitulé du champ 6</label>\n                        <input type=\"text\" id=\"input_6\" name=\"input_6\" class=\"form-control\" />\n                    </div>\n                `;\n            } else if (payload === \"QLaw\") {\n                formContent = `\n                    <div class=\"form-group\">\n                        <label for=\"input_7\">Intitulé du champ 7</label>\n                        <input type=\"text\" id=\"input_7\" name=\"input_7\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"input_8\">Intitulé du champ 8</label>\n                        <input type=\"text\" id=\"input_8\" name=\"input_8\" class=\"form-control\" />\n                    </div>\n                `;\n            }\n\n            inputField.innerHTML = formContent;\n            submitButton.classList.remove('hidden');\n        }\n\n        // Envoi des données\n        function sendData() {\n            var formData = {};\n            var elements = document.querySelectorAll('#dynamicForm input');\n\n            elements.forEach(function(input) {\n                if (input.name && input.value.trim() !== \"\") {\n                    formData[input.name] = input.value.trim();\n                }\n            });\n\n            var payload = {\n                ManeuverType: selectedPayload,\n                ...formData\n            };\n\n            if (Object.keys(formData).length > 0) {\n                scope.send({ payload: payload });\n                isFormSubmitted = false;\n                displayLastSubmitted(payload);\n\n                // Reset\n                inputField.innerHTML = \"\";\n                formTitle.innerText = \"Veuillez d'abord sélectionner une manoeuvre\";\n                maneuverSelect.value = \"\";\n                submitButton.classList.add('hidden');\n            } else {\n                alert(\"Veuillez remplir les champs avant de soumettre.\");\n            }\n        }\n\n        // Afficher les derniers paramètres soumis\n        function displayLastSubmitted(data) {\n            let htmlContent = `\n                <p><strong>Manoeuvre :</strong> ${data.ManeuverType}</p>\n                <ul>\n            `;\n            for (var key in data) {\n                if (data.hasOwnProperty(key) && key !== \"ManeuverType\") {\n                    var unit = fieldUnits[key] || '';\n                    var displayValue = data[key];\n                    if (unit) {\n                        displayValue += ` ${unit}`;\n                    }\n                    htmlContent += `<li><strong>${formatLabel(key)} :</strong> ${displayValue}</li>`;\n                }\n            }\n            htmlContent += `</ul>`;\n            submittedContent.innerHTML = htmlContent;\n            lastSubmittedSection.classList.remove('hidden');\n        }\n\n        // Formater les labels\n        function formatLabel(key) {\n            return key\n                .replace(/_/g, ' ')\n                .replace(/\\b\\w/g, function(l) { return l.toUpperCase(); });\n        }\n\n        // Gestion locale de la sélection\n        maneuverSelect.addEventListener('change', function() {\n            var payload = this.value;\n            isFormSubmitted = false;\n            generateForm(payload);\n        });\n\n        // Bouton de soumission\n        submitButton.onclick = function() {\n            isFormSubmitted = true;\n            if (inputField.innerHTML.trim() !== \"\") {\n                sendData();\n            } else {\n                alert(\"Veuillez sélectionner une manoeuvre avant de soumettre.\");\n            }\n        };\n\n        // État par défaut: submittable (enabled)\n        submitButton.disabled = false;\n\n        // Observer msg.payload uniquement pour le flag disableSubmit\n        scope.$watch('msg.payload', function(payload) {\n            if (!payload) return;\n\n            // Si disableSubmit est un booléen, on l'applique\n            if (typeof payload.disableSubmit === 'boolean') {\n                submitButton.disabled = payload.disableSubmit;\n            } else {\n                // Sinon, on remet le bouton en état \"enabled\"\n                submitButton.disabled = false;\n            }\n        });\n\n        // Réinitialiser isFormSubmitted après envoi\n        scope.on('input', function(msg) {\n            if (isFormSubmitted) {\n                isFormSubmitted = false;\n            }\n        });\n    })(scope);\n    </script>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "f14715e8412e3b55",
                "97fbc98f0f9bb72b",
                "e2fec3d7e3e7f41a",
                "5fd6e611ea04cace",
                "b430d5ced93a6cdf",
                "7fd223cdc9b763ca"
            ]
        ]
    },
    {
        "id": "97fbc98f0f9bb72b",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "command": "cd /app/maneuver-manager/ && rm -rf ManeuverParameters4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "94680b2fe58bb2d0",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "TEST PATh 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 200,
        "wires": []
    },
    {
        "id": "5fd6e611ea04cace",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "Trigger Command Data Update",
        "mode": "link",
        "links": [
            "a341c799a803625b",
            "dd77fe3d0fd12955"
        ],
        "x": 425,
        "y": 400,
        "wires": []
    },
    {
        "id": "e791b1e73bc76f67",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 400,
        "wires": [
            [
                "bdc31cc1d657bcb8"
            ]
        ]
    },
    {
        "id": "bdc31cc1d657bcb8",
        "type": "function",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: false\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 400,
        "wires": [
            [
                "d445c8ef0e74fddc"
            ]
        ]
    },
    {
        "id": "4aa96be32ec24727",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "Enable / Disable Maneouver button",
        "links": [
            "43b5b85c781ed6ef",
            "e0b29f85b2e77ba6",
            "07f5c28189b9ccbf",
            "7660123249ed8b61"
        ],
        "x": 365,
        "y": 280,
        "wires": [
            [
                "d445c8ef0e74fddc"
            ]
        ]
    },
    {
        "id": "e6d3b3af4413ae90",
        "type": "function",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "",
        "func": "// Function Node: Disable Submit Button\nmsg.payload = {\n    disableSubmit: true\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 320,
        "wires": [
            [
                "d445c8ef0e74fddc"
            ]
        ]
    },
    {
        "id": "1d6db1efa516fbd3",
        "type": "inject",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "e6d3b3af4413ae90"
            ]
        ]
    },
    {
        "id": "7fd223cdc9b763ca",
        "type": "change",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "Set path_10",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "0860020f8d8bfce2",
                "94680b2fe58bb2d0"
            ]
        ]
    },
    {
        "id": "b430d5ced93a6cdf",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "g": "22a28b69317eec26",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 340,
        "wires": [
            [
                "a65b53cdd204f8d2"
            ]
        ]
    },
    {
        "id": "77925db08f8193f1",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "ErgolsConsommés",
        "links": [
            "4afe4d4806de387a"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "9cd65be85c851193",
                "783da612e8cc7528",
                "38c615b728663735"
            ]
        ]
    },
    {
        "id": "38c615b728663735",
        "type": "change",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "Set path_15",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_15",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1520,
        "wires": [
            [
                "9e0dc15cc6b3ba1e",
                "31903f148581f8df",
                "e71dd297ba26fbb4"
            ]
        ]
    },
    {
        "id": "783da612e8cc7528",
        "type": "exec",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "command": "cd /app/maneuver-manager/ && rm -rf ConsommationErgols4.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 1640,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9cd65be85c851193",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 1280,
        "wires": []
    },
    {
        "id": "3a216e20a647fd26",
        "type": "ui_template",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "group": "a1e2900e2867cd47",
        "name": "Affichage Conso",
        "order": 8,
        "width": 10,
        "height": 2,
        "format": "<!DOCTYPE html>\n<html lang=\"fr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Affichage Ergols</title>\n\n    <!-- Style pour masquer la barre de défilement tout en permettant le défilement -->\n    <style>\n        /* Conteneur principal pour masquer la barre de défilement */\n        .scroll-container {\n            height: 100vh;\n            overflow-y: scroll; /* Activer le défilement vertical */\n            scrollbar-width: none; /* Masquer la barre pour Firefox */\n        }\n\n        /* Masquer la barre de défilement pour Chrome, Safari, etc. */\n        .scroll-container::-webkit-scrollbar {\n            display: none; /* Masquer la barre de défilement */\n        }\n    </style>\n</head>\n\n<body>\n    <!-- Conteneur principal avec défilement masqué -->\n    <div class=\"scroll-container\">\n        <!-- Section pour afficher Ergols restants -->\n        <div class=\"result-display\">\n            Ergols disponibles avant manoeuvre (kg) : <span class=\"form2_ergolRemaining result-value\">--</span>\n        </div>\n\n        <!-- Section pour afficher Consommation d'ergols -->\n        <div class=\"result-display\">\n            Consommation d'ergols (kg) : <span class=\"form2_ergolResult result-value\">--</span>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        (function(customScope) {\n            // Utiliser $watch pour surveiller les changements dans le payload\n            customScope.$watch('msg.payload', function(payload) {\n                console.log(\"Payload reçu :\", payload); // Pour vérifier si le payload est bien reçu\n                if (payload) {\n                     let ergolsRestants;\n                if (Array.isArray(payload.path_14)) {\n                    // Exemple : on récupère l’élément [2] du tableau\n                    // (vous pouvez ajuster si nécessaire)\n                    ergolsRestants = payload.path_14[2];\n                } else if (typeof payload.path_14 === 'object') {\n                    // Si c’est un objet, prendre par exemple la clé \"ergol_mass\"\n                    // ou toute autre clé appropriée\n                    ergolsRestants = parseFloat(payload.path_14.ergol_mass) || 0.0;\n                } else {\n                    console.log(\"path_14 est manquant ou invalide\");\n                    return;\n                }\n\n                    // Mise à jour de la valeur \"Ergols restants\"\n                    let formattedErgolsRestants = ergolsRestants.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    let remainingElements = document.getElementsByClassName(\"form2_ergolRemaining\");\n                    for (let i = 0; i < remainingElements.length; i++) {\n                        remainingElements[i].textContent = formattedErgolsRestants + \" kg\";\n                    }\n\n                    // Récupérer la consommation d'ergols\n                    let consommation;\n                if (Array.isArray(payload.path_15)) {\n                    // Ex : on lit consommationErgols sur l'index [0]\n                    consommation = payload.path_15[0]?.consommationErgols;\n                } else if (typeof payload.path_15 === 'object') {\n                    // Ex : on lit ergol_consumption (ou autre champ)\n                    consommation = parseFloat(payload.path_15.ergol_consumption) || 0.0;\n                } else {\n                    console.log(\"path_15 est manquant ou invalide\");\n                    return;\n                }\n\n                    // Formattage en notation française\n                    let formattedConsommation = consommation.toFixed(2).replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n                    \n                    // Mettre à jour toutes les instances de consommation d'ergols\n                    let elements = document.getElementsByClassName(\"form2_ergolResult\");\n                    for (let i = 0; i < elements.length; i++) {\n                        elements[i].textContent = formattedConsommation + \" kg\";\n                    }\n                } else {\n                    console.log(\"Payload non valide ou consommationErgols manquant\");\n                }\n            });\n        })(scope);\n    </script>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "3441df73db98bd2a",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "ergols",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1340,
        "wires": []
    },
    {
        "id": "31903f148581f8df",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "PATH 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1440,
        "wires": []
    },
    {
        "id": "94e6b249f2fa4e47",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "PATH 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e71dd297ba26fbb4",
        "type": "change",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "Set path_14",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_14",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1520,
        "wires": [
            [
                "94e6b249f2fa4e47",
                "9e0dc15cc6b3ba1e"
            ]
        ]
    },
    {
        "id": "f4cfb143dc89d75b",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "",
        "links": [
            "b7e5c8bfed43974d"
        ],
        "x": 375,
        "y": 1460,
        "wires": [
            [
                "e71dd297ba26fbb4"
            ]
        ]
    },
    {
        "id": "9e0dc15cc6b3ba1e",
        "type": "join-wait",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "",
        "paths": "[\"path_14\",\"path_15\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 370,
        "y": 1280,
        "wires": [
            [
                "3c42ff531313de09",
                "42b2da0c1e826576"
            ],
            []
        ]
    },
    {
        "id": "3c42ff531313de09",
        "type": "function",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "",
        "func": "// Suppose que msg.payload contient déjà des informations\nlet paths = msg.paths; // Supposons que les chemins sont dans msg.paths\n\n// Ajouter les informations de paths dans payload\nmsg.payload = paths;\n\n// Retourner le message avec paths inclus dans payload\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "3a216e20a647fd26",
                "3441df73db98bd2a"
            ]
        ]
    },
    {
        "id": "ab80b748dde74f55",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "",
        "links": [
            "3db42ae545d16dbe",
            "5fe6641201072922",
            "d902f30b26a89e9a"
        ],
        "x": 375,
        "y": 1560,
        "wires": [
            [
                "e71dd297ba26fbb4"
            ]
        ]
    },
    {
        "id": "42b2da0c1e826576",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1340,
        "wires": []
    },
    {
        "id": "4205c15db8cc3252",
        "type": "link in",
        "z": "32fc9731f5355a29",
        "g": "e40219163c90eaf0",
        "name": "",
        "links": [
            "3058f53f34d12d6a",
            "921ef1a8e9d9a5a4",
            "025258c5de761da0"
        ],
        "x": 165,
        "y": 1440,
        "wires": [
            [
                "38c615b728663735"
            ]
        ]
    },
    {
        "id": "31650a75784a5be4",
        "type": "delay",
        "z": "32fc9731f5355a29",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2170,
        "y": 740,
        "wires": [
            [
                "80ff14d5e297cf2f"
            ]
        ]
    },
    {
        "id": "23d9a9ca5f6c29d0",
        "type": "change",
        "z": "32fc9731f5355a29",
        "name": "label red2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "red2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2917,
        "y": 460,
        "wires": [
            [
                "bcbdb649408878f7"
            ]
        ]
    },
    {
        "id": "bcbdb649408878f7",
        "type": "link out",
        "z": "32fc9731f5355a29",
        "name": "save last red2",
        "mode": "link",
        "links": [
            "4fe578c461387f85"
        ],
        "x": 3045,
        "y": 460,
        "wires": []
    },
    {
        "id": "513df883ac574ad4",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4770,
        "y": 1720,
        "wires": []
    },
    {
        "id": "d4eee4b9a41122ea",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4870,
        "y": 1660,
        "wires": []
    },
    {
        "id": "5a9525b7644bad21",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4950,
        "y": 540,
        "wires": []
    },
    {
        "id": "15711b3639e0ddb4",
        "type": "debug",
        "z": "32fc9731f5355a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4930,
        "y": 460,
        "wires": []
    },
    {
        "id": "609a932ba1f54397",
        "type": "ui_form",
        "z": "c852882eb324b626",
        "name": "",
        "label": "Ergol Calculator Form",
        "group": "",
        "order": 7,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Satellite Mass (kg)",
                "value": "Mass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (sec)",
                "value": "ISP",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "Deltav",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Mass": "",
            "ISP": "",
            "Deltav": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "0b60e689d144c7a3"
            ]
        ]
    },
    {
        "id": "72790777b9d2d817",
        "type": "ui_text",
        "z": "c852882eb324b626",
        "group": "",
        "order": 3,
        "width": 10,
        "height": 1,
        "name": "Ergol Mass (kg)",
        "label": "Ergol Mass (kg)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "0b60e689d144c7a3",
        "type": "function",
        "z": "c852882eb324b626",
        "name": "Tsiolkowski-formula",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.mass = msg.payload.Mass\ngs.isp = msg.payload.ISP\ngs.deltav = msg.payload.Deltav\n\n//Default\n//gs.status = 1\n//tab.push(gs)\n\n//msg.payload = tab\nmsg.payload = Math.round(gs.mass*(Math.exp(gs.deltav/(9.81*gs.isp))-1))\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 60,
        "wires": [
            [
                "14efff9800026731",
                "72790777b9d2d817"
            ]
        ]
    },
    {
        "id": "14efff9800026731",
        "type": "debug",
        "z": "c852882eb324b626",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "b4091322e8f418b9",
        "type": "ui_form",
        "z": "c852882eb324b626",
        "name": "",
        "label": "Ergol Calculator Form",
        "group": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Satellite Mass (kg)",
                "value": "Mass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (sec)",
                "value": "ISP",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "Deltav",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Mass": "",
            "ISP": "",
            "Deltav": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "383a984624e38386"
            ]
        ]
    },
    {
        "id": "43e8265357592564",
        "type": "ui_text",
        "z": "c852882eb324b626",
        "group": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Ergol Mass (kg)",
        "label": "Ergol Mass (kg)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "383a984624e38386",
        "type": "function",
        "z": "c852882eb324b626",
        "name": "Tsiolkowski-formula",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.mass = msg.payload.Mass\ngs.isp = msg.payload.ISP\ngs.deltav = msg.payload.Deltav\n\n//Default\n//gs.status = 1\n//tab.push(gs)\n\n//msg.payload = tab\nmsg.payload = Math.round(gs.mass*(1-Math.exp(-gs.deltav/(9.81*gs.isp))))\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 160,
        "wires": [
            [
                "f01c6ae21925a42c",
                "43e8265357592564"
            ]
        ]
    },
    {
        "id": "f01c6ae21925a42c",
        "type": "debug",
        "z": "c852882eb324b626",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "5b1d31999c2aa0d5",
        "type": "ui_form",
        "z": "c852882eb324b626",
        "name": "",
        "label": "Ergol Calculator Form",
        "group": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Satellite Mass (kg)",
                "value": "Mass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (sec)",
                "value": "ISP",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "Deltav",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Mass": "",
            "ISP": "",
            "Deltav": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "6e2a7e698f08da22"
            ]
        ]
    },
    {
        "id": "bd0e61a9bef363ca",
        "type": "ui_text",
        "z": "c852882eb324b626",
        "group": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Ergol Mass (kg)",
        "label": "Ergol Mass (kg)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 700,
        "y": 300,
        "wires": []
    },
    {
        "id": "6e2a7e698f08da22",
        "type": "function",
        "z": "c852882eb324b626",
        "name": "Tsiolkowski-formula",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.mass = msg.payload.Mass\ngs.isp = msg.payload.ISP\ngs.deltav = msg.payload.Deltav\n\n//Default\n//gs.status = 1\n//tab.push(gs)\n\n//msg.payload = tab\nmsg.payload = Math.round(gs.mass*(1-Math.exp(-gs.deltav/(9.81*gs.isp))))\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "7c492fe0f565393d",
                "bd0e61a9bef363ca"
            ]
        ]
    },
    {
        "id": "7c492fe0f565393d",
        "type": "debug",
        "z": "c852882eb324b626",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "56625b28ea767e1b",
        "type": "ui_form",
        "z": "c852882eb324b626",
        "name": "",
        "label": "Ergol Calculator Form",
        "group": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Satellite Mass (kg)",
                "value": "Mass",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP (sec)",
                "value": "ISP",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "Deltav",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Mass": "",
            "ISP": "",
            "Deltav": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "cb6102b2a24f407f"
            ]
        ]
    },
    {
        "id": "a13388a637ba3b93",
        "type": "ui_text",
        "z": "c852882eb324b626",
        "group": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Ergol Mass (kg)",
        "label": "Ergol Mass (kg)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 700,
        "y": 420,
        "wires": []
    },
    {
        "id": "cb6102b2a24f407f",
        "type": "function",
        "z": "c852882eb324b626",
        "name": "Tsiolkowski-formula",
        "func": "var tab = []\n\n\nvar gs = {}\n\n \n //From the GS\n\ngs.mass = msg.payload.Mass\ngs.isp = msg.payload.ISP\ngs.deltav = msg.payload.Deltav\n\n//Default\n//gs.status = 1\n//tab.push(gs)\n\n//msg.payload = tab\nmsg.payload = Math.round(gs.mass*(1-Math.exp(-gs.deltav/(9.81*gs.isp))))\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 360,
        "wires": [
            [
                "54953db0be8d9f05",
                "a13388a637ba3b93"
            ]
        ]
    },
    {
        "id": "54953db0be8d9f05",
        "type": "debug",
        "z": "c852882eb324b626",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "c6c4fe3d5779159b",
        "type": "inject",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "85921a37090da47f"
            ]
        ]
    },
    {
        "id": "85921a37090da47f",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "Loop to send feature number",
        "func": "liste = [0,1,2,3,4,5,6,7,8,9]\nmsg.options = liste\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 100,
        "wires": [
            [
                "1db9414474f6583d",
                "b296d82955a17b06"
            ]
        ]
    },
    {
        "id": "1db9414474f6583d",
        "type": "ui_dropdown",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "label": "SENTINEL Latest Feature Selection",
        "tooltip": "Choose a feature in the list",
        "place": "Select option",
        "group": "cd20a742773dd128",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 790,
        "y": 100,
        "wires": [
            [
                "92d9ca1e710fe674",
                "62c9fb3308641b17"
            ]
        ]
    },
    {
        "id": "92d9ca1e710fe674",
        "type": "http request",
        "z": "9fc2d0daadf97d1e",
        "name": "Sentinel2 request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://planetarycomputer.microsoft.com/api/stac/v1/collections/sentinel-2-l2a/items",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 750,
        "y": 160,
        "wires": [
            [
                "ad5bfb4e8bb784a2"
            ]
        ]
    },
    {
        "id": "ad5bfb4e8bb784a2",
        "type": "switch",
        "z": "9fc2d0daadf97d1e",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 160,
        "wires": [
            [
                "26eab9600fbd4830"
            ],
            []
        ]
    },
    {
        "id": "26eab9600fbd4830",
        "type": "switch",
        "z": "9fc2d0daadf97d1e",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1200,
        "y": 160,
        "wires": [
            [
                "e0690611cda2e2f5"
            ],
            []
        ]
    },
    {
        "id": "e0690611cda2e2f5",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "content_function",
        "func": "   return{\n topic:\"Sentinel content\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 240,
        "wires": [
            [
                "7cbf4df91dd53fdb"
            ]
        ]
    },
    {
        "id": "2fc453ae3caf7bed",
        "type": "debug",
        "z": "9fc2d0daadf97d1e",
        "name": "sentinel check",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 440,
        "wires": []
    },
    {
        "id": "7cbf4df91dd53fdb",
        "type": "json",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 240,
        "wires": [
            [
                "74ba1ee8226fc5d0"
            ]
        ]
    },
    {
        "id": "74ba1ee8226fc5d0",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "loop1",
        "func": "\n//msg.payload.packets.forEach(item => {\n//    if(item.satellite = \"Norbi\"){\n//        return item\n//    }\n\n//})\n\nvar json_data = msg.payload;\nvar result = [];\n\nfor(var i in json_data)\n    result.push([i, json_data [i]]);\n\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "bfa58dc98c5ac55d"
            ]
        ]
    },
    {
        "id": "bfa58dc98c5ac55d",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 240,
        "wires": [
            [
                "300d89bfa37ca69d"
            ]
        ]
    },
    {
        "id": "62c9fb3308641b17",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 100,
        "wires": [
            [
                "300d89bfa37ca69d"
            ]
        ]
    },
    {
        "id": "300d89bfa37ca69d",
        "type": "join-wait",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "paths": "[ \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1540,
        "y": 140,
        "wires": [
            [
                "53db472fe3180ecb",
                "3ceddb50f8d0c106"
            ],
            []
        ]
    },
    {
        "id": "53db472fe3180ecb",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "loop2",
        "func": "//msg.payload.forEach(item => {\n//msg.payload = item[10];\n//    return msg;\n    //if(item.satellite == \"Norbi\"){\n    //    msg.payload = item.satellite;\n    //    return msg;\n    //}\n//})\n\nvar arraylen = msg.payload.length;\nvar result = [];\n\n//result.push(msg.paths.path_1[1][1][msg.paths.path_2].links[5].href);\nresult.push(msg.paths.path_1[1][1][msg.paths.path_2].assets.rendered_preview.href);\nresult.push(msg.paths.path_1[1][1][msg.paths.path_2].properties);\nresult.push(msg.paths.path_1[1][1][msg.paths.path_2].bbox);\n\n\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 180,
        "wires": [
            [
                "f8d3528c43b514ec",
                "951ebbf5c01b1ef4",
                "a0faf6e836426323"
            ]
        ]
    },
    {
        "id": "f8d3528c43b514ec",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "link",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[0];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 360,
        "wires": [
            [
                "39d92325.5b31ec"
            ]
        ]
    },
    {
        "id": "951ebbf5c01b1ef4",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "properties",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[1];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 120,
        "wires": [
            [
                "533612a2a0b24577",
                "dd991964dfce9fe3",
                "9aa8061fc1fff3b4",
                "b2ce7b2bfa5f745c",
                "f5a7daf247383343",
                "92a06a73b70a0c70",
                "d115cfa45281c9a1",
                "937058a78cd6e59e",
                "bafee32a0c709c1c",
                "4c40adb4fbdeceba",
                "7c12138ebcf90b52",
                "4bb10b4268515119"
            ]
        ]
    },
    {
        "id": "39d92325.5b31ec",
        "type": "jimp-image",
        "z": "9fc2d0daadf97d1e",
        "name": "Imagery from Sentinel",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 2320,
        "y": 580,
        "wires": [
            [
                "2d9d272a.787cb8",
                "a5ecda5c.164c28",
                "7f9bc166.833c3"
            ]
        ]
    },
    {
        "id": "2d9d272a.787cb8",
        "type": "image viewer",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "width": "200",
        "data": "payload",
        "dataType": "msg",
        "active": false,
        "x": 2570,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "a5ecda5c.164c28",
        "type": "debug",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2590,
        "y": 540,
        "wires": []
    },
    {
        "id": "d615e8d1.844438",
        "type": "ui_template",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "name": "ui template",
        "order": 2,
        "width": "20",
        "height": "18",
        "format": "<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css\">\n<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2770,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "7f9bc166.833c3",
        "type": "template",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"2048px\" height=\"2048px\" src=\"{{{payload}}}\">",
        "output": "str",
        "x": 2580,
        "y": 580,
        "wires": [
            [
                "d615e8d1.844438"
            ]
        ]
    },
    {
        "id": "bb0d7cc2469a13ab",
        "type": "ui_button",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "group": "cd20a742773dd128",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Load Latest Imagery",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "85921a37090da47f"
            ]
        ]
    },
    {
        "id": "0dc630f9d77cac0a",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "Cloud Cover",
        "icon": "fa-cloud",
        "label": "Cloud Cover",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3010,
        "y": 40,
        "wires": []
    },
    {
        "id": "533612a2a0b24577",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "cloud-cover",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"eo:cloud_cover\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 40,
        "wires": [
            [
                "0dc630f9d77cac0a"
            ]
        ]
    },
    {
        "id": "dd991964dfce9fe3",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "Date to Dashboard",
        "func": "msg.payload = msg.payload[\"s2:generation_time\"]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2870,
        "y": 160,
        "wires": [
            [
                "20319a8bf935b2cd"
            ]
        ]
    },
    {
        "id": "20319a8bf935b2cd",
        "type": "ui_text",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 6,
        "width": "5",
        "height": "1",
        "name": "Date",
        "label": "Imagery Date",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 3070,
        "y": 160,
        "wires": []
    },
    {
        "id": "9aa8061fc1fff3b4",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "Orbit State",
        "func": "msg.payload = msg.payload[\"sat:orbit_state\"]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 200,
        "wires": [
            [
                "79bb576ac365d16c"
            ]
        ]
    },
    {
        "id": "79bb576ac365d16c",
        "type": "ui_text",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 5,
        "width": "5",
        "height": "1",
        "name": "State",
        "label": "Orbit State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 3070,
        "y": 200,
        "wires": []
    },
    {
        "id": "b2ce7b2bfa5f745c",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "water-cover",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:water_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 80,
        "wires": [
            [
                "0fc128f84ec055fd"
            ]
        ]
    },
    {
        "id": "0fc128f84ec055fd",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 8,
        "width": 3,
        "height": 3,
        "name": "Water %",
        "icon": "fa-tint",
        "label": "Water %",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3000,
        "y": 80,
        "wires": []
    },
    {
        "id": "f5a7daf247383343",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "solar-zenith",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:mean_solar_zenith\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 240,
        "wires": [
            [
                "8c8a061a5409eca2"
            ]
        ]
    },
    {
        "id": "8c8a061a5409eca2",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 10,
        "width": 3,
        "height": 3,
        "name": "Mean Solar Zenith",
        "icon": "fa-sun-o ",
        "label": "Mean Solar Zenith",
        "unit": "°",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 90,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3030,
        "y": 240,
        "wires": []
    },
    {
        "id": "92a06a73b70a0c70",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "solar-azimuth",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:mean_solar_azimuth\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2860,
        "y": 280,
        "wires": [
            [
                "3e7f3a51619eaa0c"
            ]
        ]
    },
    {
        "id": "3e7f3a51619eaa0c",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 11,
        "width": 3,
        "height": 3,
        "name": "Mean Solar Azimuth",
        "icon": "fa-sun-o ",
        "label": "Mean Solar Azimuth",
        "unit": "°",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 360,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3060,
        "y": 280,
        "wires": []
    },
    {
        "id": "d115cfa45281c9a1",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "Platform",
        "func": "msg.payload = msg.payload[\"platform\"]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 120,
        "wires": [
            [
                "05de6ff8d4bc0ad7"
            ]
        ]
    },
    {
        "id": "05de6ff8d4bc0ad7",
        "type": "ui_text",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 4,
        "width": "5",
        "height": "1",
        "name": "Platform",
        "label": "Platform",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 3080,
        "y": 120,
        "wires": []
    },
    {
        "id": "1b24ad2f.198453",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "func": "// create random position\n\nmsg.payload={\n    lat:msg.payload[1], \n    lon:msg.payload[0], \n    name:\"Imagery\", \n    icon:\"satellite\", \n    color:\"#000\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 780,
        "wires": [
            [
                "de5c4044.d4e0f"
            ]
        ]
    },
    {
        "id": "223f301c.54ea9",
        "type": "comment",
        "z": "9fc2d0daadf97d1e",
        "name": "How to embed Map in Dashboard",
        "info": "This example shows how to embed the Worldmap \nwithin the `node-red-dashboard`\n\nThe  flow creates a dashboard button that \ngenerates a randon position, with the required \nicon, and passes that to the worldmap. The\nmap is configured to automatically pan to the\nposition of any point that arrives.\n",
        "x": 2460,
        "y": 720,
        "wires": []
    },
    {
        "id": "de5c4044.d4e0f",
        "type": "worldmap-tracks",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "depth": "5",
        "layer": "combined",
        "smooth": false,
        "x": 2510,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "a0faf6e836426323",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "bbox",
        "func": "var len = msg.payload.length;\nmsg.payload = msg.payload[2];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 780,
        "wires": [
            [
                "1b24ad2f.198453"
            ]
        ]
    },
    {
        "id": "749dd3a8d99522fd",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "func": "// create random position\nvar lat = 51 + Math.random() * 0.2;\nvar lon = -1.45 + Math.random() * 0.2;\nmsg.payload={\n    lat:lat, \n    lon:lon, \n    name:\"Imagery\", \n    icon:\"satellite\", \n    color:\"#000\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "937058a78cd6e59e",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "snow_ice",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:snow_ice_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 320,
        "wires": [
            [
                "6e9cd2b586d9b406"
            ]
        ]
    },
    {
        "id": "6e9cd2b586d9b406",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 9,
        "width": 3,
        "height": 3,
        "name": "Snow-Ice %",
        "icon": "fa-snowflake-o ",
        "label": "Snow-Ice %",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3010,
        "y": 320,
        "wires": []
    },
    {
        "id": "bafee32a0c709c1c",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "vegetation",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:vegetation_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 360,
        "wires": [
            [
                "f8cf8fbc33448c79"
            ]
        ]
    },
    {
        "id": "f8cf8fbc33448c79",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 9,
        "width": 3,
        "height": 3,
        "name": "vegetation %",
        "icon": "fa-pagelines",
        "label": "Vegetation %",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3010,
        "y": 360,
        "wires": []
    },
    {
        "id": "4c40adb4fbdeceba",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "cirrus-cover",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:thin_cirrus_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 400,
        "wires": [
            [
                "6d03f75fba191a47"
            ]
        ]
    },
    {
        "id": "6d03f75fba191a47",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "Cirrus Cover",
        "icon": "fa-cloud",
        "label": "Cirrus Cover",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3010,
        "y": 400,
        "wires": []
    },
    {
        "id": "7c12138ebcf90b52",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "high-proba-clouds",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:high_proba_clouds_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2870,
        "y": 440,
        "wires": [
            [
                "acb60b46880fb38c"
            ]
        ]
    },
    {
        "id": "acb60b46880fb38c",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "High proba clouds",
        "icon": "fa-cloud",
        "label": "High proba clouds",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3090,
        "y": 440,
        "wires": []
    },
    {
        "id": "4bb10b4268515119",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "medium-proba-clouds",
        "func": "var len = msg.payload.length;\n\nmsg.payload = msg.payload[\"s2:medium_proba_clouds_percentage\"]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2880,
        "y": 480,
        "wires": [
            [
                "aed1dac097537c5e"
            ]
        ]
    },
    {
        "id": "aed1dac097537c5e",
        "type": "ui_artlessgauge",
        "z": "9fc2d0daadf97d1e",
        "group": "cd20a742773dd128",
        "order": 7,
        "width": 3,
        "height": 3,
        "name": "Medium proba clouds",
        "icon": "fa-cloud",
        "label": "Medium proba clouds",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#07a8c5",
                "t": "min",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#07a8c5",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": 3,
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 3100,
        "y": 480,
        "wires": []
    },
    {
        "id": "eb72cad4260f1314",
        "type": "http request",
        "z": "9fc2d0daadf97d1e",
        "name": "Sentinel2 request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 910,
        "y": 640,
        "wires": [
            [
                "3738920da25037c0"
            ]
        ]
    },
    {
        "id": "d61bdfb240951c99",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 640,
        "wires": [
            [
                "eb72cad4260f1314"
            ]
        ]
    },
    {
        "id": "3ceddb50f8d0c106",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "content_function",
        "func": "   return{\n payload:msg.payload[2][1][4][\"href\"],\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 240,
        "wires": [
            [
                "2fc453ae3caf7bed"
            ]
        ]
    },
    {
        "id": "b296d82955a17b06",
        "type": "ui_dropdown",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "label": "SENTINEL Previous Feature Selection",
        "tooltip": "Choose a feature in the list",
        "place": "Select option",
        "group": "cd20a742773dd128",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 460,
        "wires": [
            [
                "914b80ccabf8c867",
                "d61bdfb240951c99"
            ]
        ]
    },
    {
        "id": "3738920da25037c0",
        "type": "switch",
        "z": "9fc2d0daadf97d1e",
        "name": "Check status code",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 640,
        "wires": [
            [
                "72506c923c6b84f9"
            ],
            []
        ]
    },
    {
        "id": "72506c923c6b84f9",
        "type": "switch",
        "z": "9fc2d0daadf97d1e",
        "name": "Check page content",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "z",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1380,
        "y": 640,
        "wires": [
            [
                "75116bbf56ced9de"
            ],
            []
        ]
    },
    {
        "id": "75116bbf56ced9de",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "content_function",
        "func": "   return{\n topic:\"Sentinel content\",\n payload:msg.payload,\n body:msg.payload\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 760,
        "wires": [
            [
                "7eb01e853a6ed8b6"
            ]
        ]
    },
    {
        "id": "7eb01e853a6ed8b6",
        "type": "json",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1350,
        "y": 760,
        "wires": [
            [
                "a82d382221c6268c"
            ]
        ]
    },
    {
        "id": "a82d382221c6268c",
        "type": "function",
        "z": "9fc2d0daadf97d1e",
        "name": "loop1",
        "func": "\n//msg.payload.packets.forEach(item => {\n//    if(item.satellite = \"Norbi\"){\n//        return item\n//    }\n\n//})\n\nvar json_data = msg.payload;\nvar result = [];\n\nfor(var i in json_data)\n    result.push([i, json_data [i]]);\n\nmsg.payload = result;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 760,
        "wires": [
            [
                "959743bab3d99b11"
            ]
        ]
    },
    {
        "id": "959743bab3d99b11",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "Set path_1",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 760,
        "wires": [
            [
                "702224a1435c6d5d"
            ]
        ]
    },
    {
        "id": "702224a1435c6d5d",
        "type": "join-wait",
        "z": "9fc2d0daadf97d1e",
        "name": "",
        "paths": "[ \"path_2\", \"path_1\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "paths",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "120",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "false",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 1860,
        "y": 760,
        "wires": [
            [
                "53db472fe3180ecb"
            ],
            []
        ]
    },
    {
        "id": "914b80ccabf8c867",
        "type": "change",
        "z": "9fc2d0daadf97d1e",
        "name": "Set path_2",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "msg",
                "to": "path_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 560,
        "wires": [
            [
                "702224a1435c6d5d"
            ]
        ]
    },
    {
        "id": "c9f0b2640e6ecdb7",
        "type": "comment",
        "z": "9fc2d0daadf97d1e",
        "name": "HERE WAS A PERSIST SENTINEL LINK",
        "info": "",
        "x": 1500,
        "y": 360,
        "wires": []
    },
    {
        "id": "f74613a7c5bb39d4",
        "type": "comment",
        "z": "9fc2d0daadf97d1e",
        "name": "HERE WAS A PERSIST SENTINEL LINK",
        "info": "",
        "x": 620,
        "y": 700,
        "wires": []
    },
    {
        "id": "79b07c9deaca4821",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "",
        "label": "Mean movement Form",
        "group": "",
        "order": 10,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "N (orbit/day)",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "726fe71bde08e4c8"
            ]
        ]
    },
    {
        "id": "8bb75c59299e6da3",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "group": "",
        "order": 9,
        "width": 10,
        "height": 1,
        "name": "SMA (km)",
        "label": "Semi major axis (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "726fe71bde08e4c8",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "SMA Computation",
        "func": " //From the GS\n\nvar mean = msg.payload.mean ;// The mean motion\nvar  secondesPerDay = 86164.0905; // How many seconds in a day\nvar t ;// Periode in seconds\nvar mu= 398600 ;// standard gravitational parameter of Earth \nt = secondesPerDay/mean;\n\nmsg.payload = Math.round((t*t*mu/(4*Math.PI*Math.PI))**(1/3));\nreturn msg;\n// Function was changer on the 240523 to make it more readable ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "27ae954d12838df7",
                "8bb75c59299e6da3"
            ]
        ]
    },
    {
        "id": "27ae954d12838df7",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "08430eee228f26d7",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "",
        "label": "Semi major axis Form",
        "group": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Semi major axis (km)",
                "value": "SMA",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "SMA": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "83174910077b059e"
            ]
        ]
    },
    {
        "id": "47cb2f9785ebd863",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "group": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "N (orbits/day)",
        "label": "Mean movement (orbits/day)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 640,
        "y": 240,
        "wires": []
    },
    {
        "id": "83174910077b059e",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "MMotion Computation",
        "func": "var sma = msg.payload.SMA // Semi-major-axis\nvar t; // Periode\nvar secondsInADay = 86164.0905 // Seconds in a sideral day \nt = (sma*sma*sma*4*Math.PI*Math.PI/398600)**(1/2)\nvar N= secondsInADay/t // Mean motion Rev/day\nmsg.payload = N\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 200,
        "wires": [
            [
                "6bdf2e2484a0da64",
                "47cb2f9785ebd863"
            ]
        ]
    },
    {
        "id": "6bdf2e2484a0da64",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "12b73901907ee423",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "8cc23f520ddf1bcb",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "",
        "label": "Mean movement Form",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "N (orbit/day)",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "868d8d56042016ef"
            ]
        ]
    },
    {
        "id": "e553d56e1c2f4824",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "group": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "SMA (km)",
        "label": "Semi major axis (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 620,
        "y": 360,
        "wires": []
    },
    {
        "id": "6830a5c9e7fcfcff",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "744e8e51f18b2f2a",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "",
        "label": "Semi major axis Form",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Semi major axis (km)",
                "value": "SMA",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "SMA": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "1c9766a5428969ad"
            ]
        ]
    },
    {
        "id": "da8610c96e96ee64",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "group": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "N (orbits/day)",
        "label": "Mean movement (orbits/day)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 640,
        "y": 440,
        "wires": []
    },
    {
        "id": "a0a5b0f5b87c588f",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 400,
        "wires": []
    },
    {
        "id": "466bbc6fbc14edb5",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "",
        "label": "Mean movement Form",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "N (orbit/day)",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 180,
        "y": 720,
        "wires": [
            [
                "8d2ed2bbdcaf4084"
            ]
        ]
    },
    {
        "id": "96f133ced1f48432",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "group": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "SMA (km)",
        "label": "Semi major axis (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "3261e2adbf75e542",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 720,
        "wires": []
    },
    {
        "id": "963cb2a06bd831f9",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "",
        "label": "Semi major axis Form",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Semi major axis (km)",
                "value": "SMA",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "SMA": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 180,
        "y": 800,
        "wires": [
            [
                "5d78468f5708a3a7"
            ]
        ]
    },
    {
        "id": "f31bd0fc8ff9cb9b",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "group": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "N (orbits/day)",
        "label": "Mean movement (orbits/day)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 640,
        "y": 840,
        "wires": []
    },
    {
        "id": "926e8ab171ef1799",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 800,
        "wires": []
    },
    {
        "id": "1c9766a5428969ad",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "MMotion Computation",
        "func": "var sma = msg.payload.SMA // Semi-major-axis\nvar t; // Periode\nvar secondsInADay = 86164.0905 // Seconds in a sideral day \nt = (sma*sma*sma*4*Math.PI*Math.PI/398600)**(1/2)\nvar N= secondsInADay/t // Mean motion Rev/day\nmsg.payload = N\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 400,
        "wires": [
            [
                "a0a5b0f5b87c588f",
                "da8610c96e96ee64"
            ]
        ]
    },
    {
        "id": "5d78468f5708a3a7",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "MMotion Computation",
        "func": "var sma = msg.payload.SMA // Semi-major-axis\nvar t; // Periode\nvar secondsInADay = 86164.0905 // Seconds in a sideral day \nt = (sma*sma*sma*4*Math.PI*Math.PI/398600)**(1/2)\nvar N= secondsInADay/t // Mean motion Rev/day\nmsg.payload = N\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 800,
        "wires": [
            [
                "926e8ab171ef1799",
                "f31bd0fc8ff9cb9b"
            ]
        ]
    },
    {
        "id": "ab66bbb721a17c46",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "",
        "label": "Mean movement Form",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "N (orbit/day)",
                "value": "mean",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mean": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "e1aef5bdca676aae"
            ]
        ]
    },
    {
        "id": "91701124e6aeddba",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "group": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "SMA (km)",
        "label": "Semi major axis (km)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 620,
        "y": 560,
        "wires": []
    },
    {
        "id": "15d619667444cffc",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "ded1c2801fd6ed57",
        "type": "ui_form",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "",
        "label": "Semi major axis Form",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Semi major axis (km)",
                "value": "SMA",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "SMA": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "0ac92b32c17d312a"
            ]
        ]
    },
    {
        "id": "e618c621cf58c52e",
        "type": "ui_text",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "group": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "N (orbits/day)",
        "label": "Mean movement (orbits/day)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 640,
        "y": 640,
        "wires": []
    },
    {
        "id": "43ec01f8f568bd93",
        "type": "debug",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 600,
        "wires": []
    },
    {
        "id": "0ac92b32c17d312a",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "MMotion Computation",
        "func": "var sma = msg.payload.SMA // Semi-major-axis\nvar t; // Periode\nvar secondsInADay = 86164.0905 // Seconds in a sideral day \nt = (sma*sma*sma*4*Math.PI*Math.PI/398600)**(1/2)\nvar N= secondsInADay/t // Mean motion Rev/day\nmsg.payload = N\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 600,
        "wires": [
            [
                "43ec01f8f568bd93",
                "e618c621cf58c52e"
            ]
        ]
    },
    {
        "id": "868d8d56042016ef",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "1475cac370a7ea02",
        "name": "SMA Computation",
        "func": " //From the GS\n\nvar mean = msg.payload.mean ;// The mean motion\nvar  secondesPerDay = 86164.0905; // How many seconds in a day\nvar t ;// Periode in seconds\nvar mu= 398600 ;// standard gravitational parameter of Earth \nt = secondesPerDay/mean;\n\nmsg.payload = Math.round((t*t*mu/(4*Math.PI*Math.PI))**(1/3));\nreturn msg;\n// Function was changer on the 240523 to make it more readable ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "6830a5c9e7fcfcff",
                "e553d56e1c2f4824"
            ]
        ]
    },
    {
        "id": "e1aef5bdca676aae",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "5335f31d2952084e",
        "name": "SMA Computation",
        "func": " //From the GS\n\nvar mean = msg.payload.mean ;// The mean motion\nvar  secondesPerDay = 86164.0905; // How many seconds in a day\nvar t ;// Periode in seconds\nvar mu= 398600 ;// standard gravitational parameter of Earth \nt = secondesPerDay/mean;\n\nmsg.payload = Math.round((t*t*mu/(4*Math.PI*Math.PI))**(1/3));\nreturn msg;\n// Function was changer on the 240523 to make it more readable ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 520,
        "wires": [
            [
                "15d619667444cffc",
                "91701124e6aeddba"
            ]
        ]
    },
    {
        "id": "8d2ed2bbdcaf4084",
        "type": "function",
        "z": "4ddfcb5d4ffd885f",
        "g": "a61b6b0beb4dae17",
        "name": "SMA Computation",
        "func": " //From the GS\n\nvar mean = msg.payload.mean ;// The mean motion\nvar  secondesPerDay = 86164.0905; // How many seconds in a day\nvar t ;// Periode in seconds\nvar mu= 398600 ;// standard gravitational parameter of Earth \nt = secondesPerDay/mean;\n\nmsg.payload = Math.round((t*t*mu/(4*Math.PI*Math.PI))**(1/3));\nreturn msg;\n// Function was changer on the 240523 to make it more readable ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 720,
        "wires": [
            [
                "3261e2adbf75e542",
                "96f133ced1f48432"
            ]
        ]
    },
    {
        "id": "e8731e0364c3ca69",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator ",
        "group": "",
        "order": 6,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "7b36718d431f1f2a"
            ]
        ]
    },
    {
        "id": "7b36718d431f1f2a",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus",
        "func": "\nvar M= msg.payload.M\nvar F= msg.payload.F\nvar DV= msg.payload.DV\n\n\nmsg.payload = Number((M*DV)/F).toFixed(4);\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "3d8cc6eb10b3b7fc"
            ]
        ]
    },
    {
        "id": "3d8cc6eb10b3b7fc",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "",
        "order": 4,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "27c022d958307b30",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator ",
        "group": "",
        "order": 7,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 260,
        "y": 240,
        "wires": [
            [
                "85cc9de7b34073f2"
            ]
        ]
    },
    {
        "id": "85cc9de7b34073f2",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus",
        "func": "\nvar M= msg.payload.M\nvar F= msg.payload.F\nvar DV= msg.payload.DV\n\n\nmsg.payload = Number((M*DV)/F).toFixed(2);\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 240,
        "wires": [
            [
                "1401d22d1b22b3aa"
            ]
        ]
    },
    {
        "id": "1401d22d1b22b3aa",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "",
        "order": 8,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 790,
        "y": 240,
        "wires": []
    },
    {
        "id": "1318d2144c4651fb",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator ",
        "group": "",
        "order": 7,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg) ",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "333910e38382be47"
            ]
        ]
    },
    {
        "id": "333910e38382be47",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus",
        "func": "\nvar M= msg.payload.M\nvar F= msg.payload.F\nvar DV= msg.payload.DV\n\n\nmsg.payload = Number((M*DV)/F).toFixed(2);\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "4fa7b12d688e1048"
            ]
        ]
    },
    {
        "id": "4fa7b12d688e1048",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "",
        "order": 8,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "c1147b2b31bd06d3",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator ",
        "group": "",
        "order": 7,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 260,
        "y": 460,
        "wires": [
            [
                "7183cbbff844e4fd"
            ]
        ]
    },
    {
        "id": "7183cbbff844e4fd",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus",
        "func": "\nvar M= msg.payload.M\nvar F= msg.payload.F\nvar DV= msg.payload.DV\n\n\nmsg.payload = Number((M*DV)/F).toFixed(2);\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 460,
        "wires": [
            [
                "115e9ad03c3ee902"
            ]
        ]
    },
    {
        "id": "115e9ad03c3ee902",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "",
        "order": 8,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "f9a46d54a6fa6a4f",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator Tsiolkovski",
        "group": "",
        "order": 1,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP(s)",
                "value": "ISP",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": "",
            "ISP": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "f7a41ac553b4c2b1"
            ]
        ]
    },
    {
        "id": "c66236e835eff38e",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "",
        "order": 5,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1750,
        "y": 140,
        "wires": []
    },
    {
        "id": "80fe7b2acd0242cb",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator Tsiolkovski",
        "group": "",
        "order": 9,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP(s)",
                "value": "ISP",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": "",
            "ISP": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "75279f69b818b56c"
            ]
        ]
    },
    {
        "id": "f2a4c5d8f3a3c112",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "",
        "order": 10,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1750,
        "y": 240,
        "wires": []
    },
    {
        "id": "bb5c0342b77e0074",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator Tsiolkovski",
        "group": "",
        "order": 9,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP(s)",
                "value": "ISP",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": "",
            "ISP": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "7136d5e5ae06e451"
            ]
        ]
    },
    {
        "id": "65c12f3827cd3c5d",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "",
        "order": 10,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1750,
        "y": 360,
        "wires": []
    },
    {
        "id": "4b6a1fa26c929298",
        "type": "ui_form",
        "z": "66f9d9ba2072108b",
        "name": "",
        "label": "Thrust's duration calculator Tsiolkovski",
        "group": "",
        "order": 9,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Thrust (N)",
                "value": "F",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Mass (kg)",
                "value": "M",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ΔV (m/s)",
                "value": "DV",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "ISP(s)",
                "value": "ISP",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "F": "",
            "M": "",
            "DV": "",
            "ISP": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "custom-class-node-red-button",
        "x": 1070,
        "y": 460,
        "wires": [
            [
                "1c8d9108d3b9c57c"
            ]
        ]
    },
    {
        "id": "1c8d9108d3b9c57c",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus Tsiolkovski",
        "func": "\nvar M= msg.payload.M ;\nvar F= msg.payload.F ;\nvar DV= msg.payload.DV ;\nvar g= 9.81 ;\nvar ISP =msg.payload.ISP ;\nmsg.payload = ((-g*ISP*M)/F) * (Math.exp(-(DV/(g*ISP))) - 1);\n\n\n//msg.payload = (DV/F) * M * (1-Math.exp( -( DV/(g*ISP) ) ));\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 460,
        "wires": [
            [
                "306c2c4c2069edca"
            ]
        ]
    },
    {
        "id": "306c2c4c2069edca",
        "type": "ui_text",
        "z": "66f9d9ba2072108b",
        "group": "",
        "order": 10,
        "width": 10,
        "height": 1,
        "name": "Duration (s)",
        "label": "Duration (s)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1750,
        "y": 460,
        "wires": []
    },
    {
        "id": "7136d5e5ae06e451",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus Tsiolkovski",
        "func": "\nvar M= msg.payload.M ;\nvar F= msg.payload.F ;\nvar DV= msg.payload.DV ;\nvar g= 9.81 ;\nvar ISP =msg.payload.ISP ;\nmsg.payload = ((-g*ISP*M)/F) * (Math.exp(-(DV/(g*ISP))) - 1);\n\n\n//msg.payload = (DV/F) * M * (1-Math.exp( -( DV/(g*ISP) ) ));\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 360,
        "wires": [
            [
                "65c12f3827cd3c5d"
            ]
        ]
    },
    {
        "id": "75279f69b818b56c",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus Tsiolkovski",
        "func": "\nvar M= msg.payload.M ;\nvar F= msg.payload.F ;\nvar DV= msg.payload.DV ;\nvar g= 9.81 ;\nvar ISP =msg.payload.ISP ;\nmsg.payload = ((-g*ISP*M)/F) * (Math.exp(-(DV/(g*ISP))) - 1);\n\n\n//msg.payload = (DV/F) * M * (1-Math.exp( -( DV/(g*ISP) ) ));\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 240,
        "wires": [
            [
                "f2a4c5d8f3a3c112"
            ]
        ]
    },
    {
        "id": "f7a41ac553b4c2b1",
        "type": "function",
        "z": "66f9d9ba2072108b",
        "name": "formula duration calculus Tsiolkovski",
        "func": "\nvar M= msg.payload.M ;\nvar F= msg.payload.F ;\nvar DV= msg.payload.DV ;\nvar g= 9.81 ;\nvar ISP =msg.payload.ISP ;\nmsg.payload = ((-g*ISP*M)/F) * (Math.exp(-(DV/(g*ISP))) - 1);\n\n\n//msg.payload = (DV/F) * M * (1-Math.exp( -( DV/(g*ISP) ) ));\nreturn msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 140,
        "wires": [
            [
                "c66236e835eff38e"
            ]
        ]
    },
    {
        "id": "34550cdb808c3798",
        "type": "ui_iframe",
        "z": "50584aeb17eaebde",
        "group": "ce913522.c3fc68",
        "name": "iframe for Home",
        "order": 3,
        "width": "30",
        "height": "16",
        "url": "https://geoxc-apps.bd.esri.com/space/satellite-explorer/#",
        "origin": "*",
        "scale": 100,
        "x": 120,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "09d7a983b9b9ba06",
        "type": "change",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "errorMessage",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "4e5dd8e0ab94d018",
                "d7d53386b355ddc5",
                "b79ec549a72b8687",
                "79a3f0034c6f17d8",
                "a08ca2c646199af5"
            ]
        ]
    },
    {
        "id": "4e5dd8e0ab94d018",
        "type": "ui_audio",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "group": "c02dcce485dfb187",
        "voice": "Google UK English Female",
        "always": true,
        "x": 600,
        "y": 100,
        "wires": []
    },
    {
        "id": "b48acc271cc4016c",
        "type": "ui_audio",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "group": "cbb369e33298cfeb",
        "voice": "Google UK English Female",
        "always": true,
        "x": 660,
        "y": 20,
        "wires": []
    },
    {
        "id": "1861660879507ceb",
        "type": "change",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "errorMessage",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "b48acc271cc4016c",
                "84cf34ad113c1846",
                "b79ec549a72b8687",
                "42b4eb3152dbfcba",
                "f25351986729df8e"
            ]
        ]
    },
    {
        "id": "8077005c0f87eec7",
        "type": "link in",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "Audio BLUE",
        "links": [
            "0b7e677ffd81b460",
            "113ddd11123c9973",
            "137f9ab28c637801",
            "2b24ea015282a48a",
            "40a6d644acf51561",
            "4359c6ab0e03460b",
            "4393c1b970e3a29b",
            "afd2d4c22f5279be",
            "b42a778cbea68a9d",
            "b9d622b5be036a82",
            "bff3cdef37810ee9",
            "cb0dd5c3dde6183b",
            "d15a192c0fdb0be0",
            "eccd0ddfda8ad0b8",
            "f109a18a53ac740b",
            "fee1af77c1489c1e"
        ],
        "x": 205,
        "y": 80,
        "wires": [
            [
                "1861660879507ceb"
            ]
        ]
    },
    {
        "id": "fcb6777d67efa239",
        "type": "link in",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "Audio RED",
        "links": [
            "05b4d5115dd0d7a8",
            "22f046e501da06bc",
            "46b03384f7d40a32",
            "53a89502e38ac48e",
            "6923350019c1430e",
            "81c3e21d708c2d24",
            "b756b50a84c365a5",
            "b84e4288fd61ae53",
            "bfeccd2c57ad6b40",
            "eade1819e9df8266",
            "af34e1ddef02c0df",
            "be1bb9bba660fad6",
            "77f6c6f00b9b6bd9",
            "901bcd91824815fb",
            "54294771baa915d5",
            "66424b21c51293f5"
        ],
        "x": 205,
        "y": 140,
        "wires": [
            [
                "09d7a983b9b9ba06"
            ]
        ]
    },
    {
        "id": "c67ec5067dc22890",
        "type": "link in",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "Audio Celestrak blue",
        "links": [
            "08b8cc1d07b25322",
            "3e608b3210a3b71b",
            "3e846f404d3b3dd4",
            "75c8945074dea488",
            "940f14dc9b5b79d7",
            "bd44410470f18aea",
            "df7454da395c47b4",
            "f22d599e751d9314",
            "ffb4c4b51344ccf8"
        ],
        "x": 315,
        "y": 200,
        "wires": [
            [
                "167f1c74c0957544",
                "1c5f8b40f6f0c84d",
                "b79ec549a72b8687",
                "42b4eb3152dbfcba",
                "f25351986729df8e"
            ]
        ]
    },
    {
        "id": "1c5f8b40f6f0c84d",
        "type": "ui_audio",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "group": "b10e0a54.7b0198",
        "voice": "Google UK English Female",
        "always": true,
        "x": 580,
        "y": 200,
        "wires": []
    },
    {
        "id": "d80cb154.b2fe",
        "type": "http in",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "Serveur HTTP",
        "url": "/audio",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 720,
        "wires": [
            [
                "a43cf0c3ca8f0fd8",
                "f680cce196c2f842"
            ]
        ]
    },
    {
        "id": "a43cf0c3ca8f0fd8",
        "type": "file in",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "",
        "filename": "/app/maneuver-manager/CCG.mp3",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": true,
        "x": 560,
        "y": 720,
        "wires": [
            [
                "f5218ce3ebeb34dc"
            ]
        ]
    },
    {
        "id": "f680cce196c2f842",
        "type": "debug",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 680,
        "wires": []
    },
    {
        "id": "f5218ce3ebeb34dc",
        "type": "http response",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "audio/mpeg"
        },
        "x": 940,
        "y": 720,
        "wires": []
    },
    {
        "id": "2953ffcc68f6be38",
        "type": "ui_template",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "group": "b10e0a54.7b0198",
        "name": "Player Template",
        "order": 19,
        "width": 0,
        "height": 0,
        "format": "\n<audio id=\"audioPlayer\">\n  <source src=\"/audio\" type=\"audio/mpeg\">\n\n</audio>\n\n<script>\n  var audio = document.getElementById(\"audioPlayer\");\n\n  \n  \n  // Play the audio\n  function playAudio() {\n    audio.play();\n  }\n\n  // Pause the audio\n  function pauseAudio() {\n    audio.pause();\n  }\n\n  // Stop the audio and reset the playback time\n  function stopAudio() {\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  // Set the volume based on the provided value\n  function setVolume(volume) {\n    if (!isNaN(volume) && volume >= 0 && volume <= 100) {\n      var normalizedVolume = volume / 100;\n      audio.volume = normalizedVolume;\n    }\n  }\n  scope.$watch('msg.payload', function(volume) {setVolume(volume);});\n  // Initialize the volume on load\n  \n\n  // Play the audio on load\n  document.addEventListener(\"DOMContentLoaded\", function(event) {\n    audio.play();\n  });\n  playAudio();\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 620,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "371f634149e6590c",
        "type": "ui_numeric",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "name": "",
        "label": "volume of music",
        "tooltip": "",
        "group": "7e85bf4a6d733f1e",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "2953ffcc68f6be38",
                "758e3d3b8fb58f33",
                "11d1c90a96340c32"
            ]
        ]
    },
    {
        "id": "11d1c90a96340c32",
        "type": "ui_template",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "group": "7e85bf4a6d733f1e",
        "name": "Button Template",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<button onclick=\"playAudio()\">Play</button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "758e3d3b8fb58f33",
        "type": "ui_template",
        "z": "62804953b962105f",
        "g": "8634c7d9435a8b95",
        "group": "7e85bf4a6d733f1e",
        "name": "Volume Template",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<script>\nscope.$watch('msg.payload', function(volume) {setVolume(volume);});\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "167f1c74c0957544",
        "type": "debug",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 260,
        "wires": []
    },
    {
        "id": "84cf34ad113c1846",
        "type": "debug",
        "z": "62804953b962105f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 20,
        "wires": []
    },
    {
        "id": "d7d53386b355ddc5",
        "type": "debug",
        "z": "62804953b962105f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "b79ec549a72b8687",
        "type": "ui_template",
        "z": "62804953b962105f",
        "group": "89c6e42c.26d338",
        "name": "UI Notigication Home",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Notification System</title>\n    <style>\n        /* Optional: If you're using Node-RED dashboard theming, these lines make the background transparent */\n        .nr-dashboard-theme md-card.nr-dashboard-card {\n            background-color: transparent !important;\n            box-shadow: none !important;\n            margin: 0 !important;\n            padding: 0 !important;\n        }\n\n        .nr-dashboard-theme md-card.nr-dashboard-card .nr-dashboard-cardcontent {\n            background-color: transparent !important;\n            padding: 0 !important;\n        }\n\n        /* Notification container is transparent */\n        .notification-container {\n            background-color: transparent !important;\n            min-height: 1px;\n            position: relative;\n        }\n\n        body {\n            margin: 0;\n            padding: 0;\n            min-height: 1px;\n        }\n\n        .ui-notification {\n            position: fixed;\n            top: 0px;\n            right: 0px;\n            padding: 21px 50px;\n            background-color: #001f3f;\n            color: white;\n            border-radius: 5px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.2);\n            visibility: hidden;\n            opacity: 0;\n            transform: translateY(-20px);\n            transition: opacity 0.3s, transform 0.3s;\n            z-index: 10000;\n            font-size: 19px;\n            font-family: Arial, sans-serif;\n        }\n\n        .ui-notification.visible {\n            visibility: visible;\n            opacity: 1;\n            transform: translateY(0);\n        }\n\n        /* Notification Types */\n        .ui-notification.success {\n            background-color: #001f3f;\n            color: white !important;\n        }\n        .ui-notification.error {\n            background-color: #dc3545;\n            color: white !important;\n        }\n        .ui-notification.info {\n            background-color: #17a2b8;\n            color: white !important;\n        }\n        .ui-notification.warning {\n            background-color: #ffc107;\n            color: black;\n        }\n\n        /* Ensure Child Elements Inherit White Color */\n        .ui-notification * {\n            color: inherit !important;\n        }\n    </style>\n</head>\n\n<body>\n\n    <div class=\"notification-container\">\n        <div class=\"ui-notification\" id=\"uiNotification\" aria-live=\"assertive\">\n            <span id=\"notificationMessage\"></span>\n        </div>\n    </div>\n\n    <script>\n        (function(scope) {\n            const NOTIFICATION_DURATION = 3000; // 3 seconds\n            const CHECK_INTERVAL = 100; // Check every 100ms\n            \n            // Generate a unique page load ID\n            const pageLoadId = Date.now().toString();\n            localStorage.setItem('pageLoadId', pageLoadId);\n\n            let notificationElement = document.getElementById('uiNotification');\n            let messageElement = document.getElementById('notificationMessage');\n            let hideTimeout;\n            let isFirstLoad = true;\n\n            // Add an interval to check for expired notifications\n            const checkInterval = setInterval(() => {\n                const lastNotification = JSON.parse(localStorage.getItem('lastNotification') || '{}');\n                if (lastNotification.timestamp) {\n                    const timeSinceNotification = Date.now() - lastNotification.timestamp;\n                    if (timeSinceNotification >= NOTIFICATION_DURATION && notificationElement.classList.contains('visible')) {\n                        notificationElement.classList.remove('visible');\n                    }\n                }\n            }, CHECK_INTERVAL);\n\n            function showNewNotification(message, type = 'success') {\n                // Skip notifications on first page load if desired\n                if (isFirstLoad) {\n                    isFirstLoad = false;\n                    return;\n                }\n\n                // Clear any existing timeout\n                if (hideTimeout) {\n                    clearTimeout(hideTimeout);\n                }\n\n                // Reset classes and update content\n                notificationElement.className = 'ui-notification';\n                void notificationElement.offsetWidth; // Force reflow\n\n                messageElement.textContent = message;\n                notificationElement.classList.add(type);\n\n                // Store the notification timestamp before showing\n                const timestamp = Date.now();\n                localStorage.setItem('lastNotification', JSON.stringify({\n                    message: message,\n                    type: type,\n                    pageLoadId: pageLoadId,\n                    timestamp: timestamp\n                }));\n\n                // Show notification\n                requestAnimationFrame(() => {\n                    notificationElement.classList.add('visible');\n                });\n\n                // Set timeout to hide\n                hideTimeout = setTimeout(() => {\n                    notificationElement.classList.remove('visible');\n                }, NOTIFICATION_DURATION);\n            }\n\n            // Watch for messages\n            scope.$watch('msg', function(msg) {\n                if (!msg || !msg.payload) return;\n\n                let payload = msg.payload;\n                let message, type;\n\n                if (typeof payload === 'object') {\n                    message = payload.text || 'Notification';\n                    type = payload.type || 'success';\n                } else {\n                    message = payload.toString();\n                    type = 'success';\n                }\n\n                // Always show a new notification, regardless of duplicates\n                showNewNotification(message, type);\n            });\n\n            // Cleanup\n            scope.$on('$destroy', function() {\n                if (hideTimeout) {\n                    clearTimeout(hideTimeout);\n                }\n                clearInterval(checkInterval);\n            });\n\n            // Clear notification visibility on page unload\n            window.addEventListener('beforeunload', function() {\n                notificationElement.classList.remove('visible');\n            });\n        })(scope);\n    </script>\n\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "0e090ffde96409f4",
        "type": "inject",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 20,
        "wires": [
            [
                "1861660879507ceb",
                "09d7a983b9b9ba06"
            ]
        ]
    },
    {
        "id": "ead58675c844f17a",
        "type": "function",
        "z": "62804953b962105f",
        "name": "",
        "func": "msg.payload=\"Situation updated\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 360,
        "wires": [
            [
                "41ff8f36bb2ca25c",
                "b79ec549a72b8687",
                "42b4eb3152dbfcba",
                "f25351986729df8e",
                "79a3f0034c6f17d8",
                "a08ca2c646199af5"
            ]
        ]
    },
    {
        "id": "109d6e4e4d2e94be",
        "type": "inject",
        "z": "62804953b962105f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 300,
        "wires": [
            [
                "ead58675c844f17a"
            ]
        ]
    },
    {
        "id": "41ff8f36bb2ca25c",
        "type": "debug",
        "z": "62804953b962105f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 420,
        "wires": []
    },
    {
        "id": "42b4eb3152dbfcba",
        "type": "ui_template",
        "z": "62804953b962105f",
        "group": "8da1955ffecc49fe",
        "name": "UI Notigication BLUE 1",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Multi-Instance Notification System</title>\n  <style>\n    /* Shared styles for notifications */\n    .notification-container {\n      background-color: transparent !important;\n      min-height: 1px;\n      position: relative;\n    }\n    body {\n      margin: 0;\n      padding: 0;\n      min-height: 1px;\n    }\n    .custom-notification {\n      position: fixed;\n      top: 0px;\n      right: 0px;\n      padding: 21px 50px;\n      background-color: #001f3f;\n      color: white;\n      border-radius: 5px;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n      visibility: hidden;\n      opacity: 0;\n      transform: translateY(-20px);\n      transition: opacity 0.3s, transform 0.3s;\n      z-index: 10000;\n      font-size: 19px;\n      font-family: Arial, sans-serif;\n    }\n    .custom-notification.show {\n      visibility: visible;\n      opacity: 1;\n      transform: translateY(0);\n    }\n    .custom-notification.success { background-color: #001f3f; color: white !important; }\n    .custom-notification.error { background-color: #dc3545; color: white !important; }\n    .custom-notification.info { background-color: #17a2b8; color: white !important; }\n    .custom-notification.warning { background-color: #ffc107; color: black; }\n    .custom-notification * { color: inherit !important; }\n  </style>\n</head>\n<body>\n  <!-- Instance 1 -->\n  <div class=\"template-instance\" data-instance=\"1\">\n    <div class=\"notification-container\">\n      <div class=\"custom-notification\" aria-live=\"assertive\">\n        <span class=\"notification-message\"></span>\n      </div>\n    </div>\n  </div>\n  <!-- Instance 2 -->\n  <div class=\"template-instance\" data-instance=\"2\">\n    <div class=\"notification-container\">\n      <div class=\"custom-notification\" aria-live=\"assertive\">\n        <span class=\"notification-message\"></span>\n      </div>\n    </div>\n  </div>\n  <script>\n    // Ensure AngularJS scope is available\n    (function(scope) {\n      const NOTIFICATION_DURATION = 3000; // 3 seconds\n      const CHECK_INTERVAL = 100; // Check every 100ms\n      const pageLoadId = Date.now().toString();\n      \n      // Store pageLoadId in localStorage\n      localStorage.setItem('pageLoadId', pageLoadId);\n\n      function setupNotification(instanceSelector) {\n        const container = document.querySelector(instanceSelector);\n        const instanceId = container.getAttribute('data-instance');\n        const notificationElement = container.querySelector('.custom-notification');\n        const messageElement = container.querySelector('.notification-message');\n        let hideTimeout;\n        let isFirstLoad = true;\n\n        // Setup interval to check for expired notifications\n        const checkInterval = setInterval(() => {\n          const lastNotification = JSON.parse(localStorage.getItem(`lastNotification_${instanceId}`) || '{}');\n          if (lastNotification.timestamp) {\n            const timeSinceNotification = Date.now() - lastNotification.timestamp;\n            if (timeSinceNotification >= NOTIFICATION_DURATION && notificationElement.classList.contains('show')) {\n              notificationElement.classList.remove('show');\n            }\n          }\n        }, CHECK_INTERVAL);\n  \n        function showNewNotification(message, type = 'success') {\n          if (isFirstLoad) {\n            isFirstLoad = false;\n            return;\n          }\n  \n          clearTimeout(hideTimeout);\n          notificationElement.classList.remove('show');\n          void notificationElement.offsetWidth; // Force reflow\n  \n          messageElement.textContent = message;\n          notificationElement.className = 'custom-notification ' + type;\n\n          // Store the notification timestamp before showing\n          const timestamp = Date.now();\n          localStorage.setItem(`lastNotification_${instanceId}`, JSON.stringify({\n            message: message,\n            type: type,\n            pageLoadId: pageLoadId,\n            timestamp: timestamp\n          }));\n  \n          requestAnimationFrame(() => {\n            notificationElement.classList.add('show');\n          });\n  \n          hideTimeout = setTimeout(() => {\n            notificationElement.classList.remove('show');\n          }, NOTIFICATION_DURATION);\n        }\n  \n        scope.$watch('msg', function(msg) {\n          if (!msg?.payload) return;\n  \n          // Wrap payload to force change detection\n          const wrappedPayload = {\n            text: typeof msg.payload === 'object' ? msg.payload.text || 'Notification' : msg.payload.toString(),\n            timestamp: Date.now(),\n            type: msg.payload?.type || 'success'\n          };\n  \n          showNewNotification(wrappedPayload.text, wrappedPayload.type);\n        });\n  \n        scope.$on('$destroy', () => {\n          clearTimeout(hideTimeout);\n          clearInterval(checkInterval);\n        });\n\n        // Clear notification visibility on page unload\n        window.addEventListener('beforeunload', function() {\n          notificationElement.classList.remove('show');\n        });\n\n        return { checkInterval }; // Return for cleanup\n      }\n  \n      // Setup two instances and store their intervals\n      const instances = [\n        setupNotification('.template-instance[data-instance=\"1\"]'),\n        setupNotification('.template-instance[data-instance=\"2\"]')\n      ];\n\n      // Additional cleanup on scope destroy\n      scope.$on('$destroy', () => {\n        instances.forEach(instance => {\n          if (instance.checkInterval) {\n            clearInterval(instance.checkInterval);\n          }\n        });\n      });\n  \n    })(scope); // Pass the AngularJS scope if available\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f25351986729df8e",
        "type": "ui_template",
        "z": "62804953b962105f",
        "group": "ef71537c5ac2b5d9",
        "name": "UI Notigication BLUE 2",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Multi-Instance Notification System</title>\n  <style>\n    /* Shared styles for notifications */\n    .notification-container {\n      background-color: transparent !important;\n      min-height: 1px;\n      position: relative;\n    }\n    body {\n      margin: 0;\n      padding: 0;\n      min-height: 1px;\n    }\n    .custom-notification {\n      position: fixed;\n      top: 0px;\n      right: 0px;\n      padding: 21px 50px;\n      background-color: #001f3f;\n      color: white;\n      border-radius: 5px;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n      visibility: hidden;\n      opacity: 0;\n      transform: translateY(-20px);\n      transition: opacity 0.3s, transform 0.3s;\n      z-index: 10000;\n      font-size: 19px;\n      font-family: Arial, sans-serif;\n    }\n    .custom-notification.show {\n      visibility: visible;\n      opacity: 1;\n      transform: translateY(0);\n    }\n    .custom-notification.success { background-color: #001f3f; color: white !important; }\n    .custom-notification.error { background-color: #dc3545; color: white !important; }\n    .custom-notification.info { background-color: #17a2b8; color: white !important; }\n    .custom-notification.warning { background-color: #ffc107; color: black; }\n    .custom-notification * { color: inherit !important; }\n  </style>\n</head>\n<body>\n  <!-- Instance 1 -->\n  <div class=\"template-instance\" data-instance=\"1\">\n    <div class=\"notification-container\">\n      <div class=\"custom-notification\" aria-live=\"assertive\">\n        <span class=\"notification-message\"></span>\n      </div>\n    </div>\n  </div>\n  <!-- Instance 2 -->\n  <div class=\"template-instance\" data-instance=\"2\">\n    <div class=\"notification-container\">\n      <div class=\"custom-notification\" aria-live=\"assertive\">\n        <span class=\"notification-message\"></span>\n      </div>\n    </div>\n  </div>\n  <script>\n    // Ensure AngularJS scope is available\n    (function(scope) {\n      const NOTIFICATION_DURATION = 3000; // 3 seconds\n      const CHECK_INTERVAL = 100; // Check every 100ms\n      const pageLoadId = Date.now().toString();\n      \n      // Store pageLoadId in localStorage\n      localStorage.setItem('pageLoadId', pageLoadId);\n\n      function setupNotification(instanceSelector) {\n        const container = document.querySelector(instanceSelector);\n        const instanceId = container.getAttribute('data-instance');\n        const notificationElement = container.querySelector('.custom-notification');\n        const messageElement = container.querySelector('.notification-message');\n        let hideTimeout;\n        let isFirstLoad = true;\n\n        // Setup interval to check for expired notifications\n        const checkInterval = setInterval(() => {\n          const lastNotification = JSON.parse(localStorage.getItem(`lastNotification_${instanceId}`) || '{}');\n          if (lastNotification.timestamp) {\n            const timeSinceNotification = Date.now() - lastNotification.timestamp;\n            if (timeSinceNotification >= NOTIFICATION_DURATION && notificationElement.classList.contains('show')) {\n              notificationElement.classList.remove('show');\n            }\n          }\n        }, CHECK_INTERVAL);\n  \n        function showNewNotification(message, type = 'success') {\n          if (isFirstLoad) {\n            isFirstLoad = false;\n            return;\n          }\n  \n          clearTimeout(hideTimeout);\n          notificationElement.classList.remove('show');\n          void notificationElement.offsetWidth; // Force reflow\n  \n          messageElement.textContent = message;\n          notificationElement.className = 'custom-notification ' + type;\n\n          // Store the notification timestamp before showing\n          const timestamp = Date.now();\n          localStorage.setItem(`lastNotification_${instanceId}`, JSON.stringify({\n            message: message,\n            type: type,\n            pageLoadId: pageLoadId,\n            timestamp: timestamp\n          }));\n  \n          requestAnimationFrame(() => {\n            notificationElement.classList.add('show');\n          });\n  \n          hideTimeout = setTimeout(() => {\n            notificationElement.classList.remove('show');\n          }, NOTIFICATION_DURATION);\n        }\n  \n        scope.$watch('msg', function(msg) {\n          if (!msg?.payload) return;\n  \n          // Wrap payload to force change detection\n          const wrappedPayload = {\n            text: typeof msg.payload === 'object' ? msg.payload.text || 'Notification' : msg.payload.toString(),\n            timestamp: Date.now(),\n            type: msg.payload?.type || 'success'\n          };\n  \n          showNewNotification(wrappedPayload.text, wrappedPayload.type);\n        });\n  \n        scope.$on('$destroy', () => {\n          clearTimeout(hideTimeout);\n          clearInterval(checkInterval);\n        });\n\n        // Clear notification visibility on page unload\n        window.addEventListener('beforeunload', function() {\n          notificationElement.classList.remove('show');\n        });\n\n        return { checkInterval }; // Return for cleanup\n      }\n  \n      // Setup two instances and store their intervals\n      const instances = [\n        setupNotification('.template-instance[data-instance=\"1\"]'),\n        setupNotification('.template-instance[data-instance=\"2\"]')\n      ];\n\n      // Additional cleanup on scope destroy\n      scope.$on('$destroy', () => {\n        instances.forEach(instance => {\n          if (instance.checkInterval) {\n            clearInterval(instance.checkInterval);\n          }\n        });\n      });\n  \n    })(scope); // Pass the AngularJS scope if available\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "79a3f0034c6f17d8",
        "type": "ui_template",
        "z": "62804953b962105f",
        "group": "a1e2900e2867cd47",
        "name": "UI Notigication RED 2",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Multi-Instance Notification System</title>\n  <style>\n    /* Shared styles for notifications */\n    .notification-container {\n      background-color: transparent !important;\n      min-height: 1px;\n      position: relative;\n    }\n    body {\n      margin: 0;\n      padding: 0;\n      min-height: 1px;\n    }\n    .custom-notification {\n      position: fixed;\n      top: 0px;\n      right: 0px;\n      padding: 21px 50px;\n      background-color: #660000;\n      color: white;\n      border-radius: 5px;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n      visibility: hidden;\n      opacity: 0;\n      transform: translateY(-20px);\n      transition: opacity 0.3s, transform 0.3s;\n      z-index: 10000;\n      font-size: 19px;\n      font-family: Arial, sans-serif;\n    }\n    .custom-notification.show {\n      visibility: visible;\n      opacity: 1;\n      transform: translateY(0);\n    }\n    .custom-notification.success { background-color: #660000; color: white !important; }\n    .custom-notification.error { background-color: #dc3545; color: white !important; }\n    .custom-notification.info { background-color: #17a2b8; color: white !important; }\n    .custom-notification.warning { background-color: #ffc107; color: black; }\n    .custom-notification * { color: inherit !important; }\n  </style>\n</head>\n<body>\n  <!-- Instance 1 -->\n  <div class=\"template-instance\" data-instance=\"1\">\n    <div class=\"notification-container\">\n      <div class=\"custom-notification\" aria-live=\"assertive\">\n        <span class=\"notification-message\"></span>\n      </div>\n    </div>\n  </div>\n  <!-- Instance 2 -->\n  <div class=\"template-instance\" data-instance=\"2\">\n    <div class=\"notification-container\">\n      <div class=\"custom-notification\" aria-live=\"assertive\">\n        <span class=\"notification-message\"></span>\n      </div>\n    </div>\n  </div>\n  <script>\n    // Ensure AngularJS scope is available\n    (function(scope) {\n      const NOTIFICATION_DURATION = 3000; // 3 seconds\n      const CHECK_INTERVAL = 100; // Check every 100ms\n      const pageLoadId = Date.now().toString();\n      \n      // Store pageLoadId in localStorage\n      localStorage.setItem('pageLoadId', pageLoadId);\n\n      function setupNotification(instanceSelector) {\n        const container = document.querySelector(instanceSelector);\n        const instanceId = container.getAttribute('data-instance');\n        const notificationElement = container.querySelector('.custom-notification');\n        const messageElement = container.querySelector('.notification-message');\n        let hideTimeout;\n        let isFirstLoad = true;\n\n        // Setup interval to check for expired notifications\n        const checkInterval = setInterval(() => {\n          const lastNotification = JSON.parse(localStorage.getItem(`lastNotification_${instanceId}`) || '{}');\n          if (lastNotification.timestamp) {\n            const timeSinceNotification = Date.now() - lastNotification.timestamp;\n            if (timeSinceNotification >= NOTIFICATION_DURATION && notificationElement.classList.contains('show')) {\n              notificationElement.classList.remove('show');\n            }\n          }\n        }, CHECK_INTERVAL);\n  \n        function showNewNotification(message, type = 'success') {\n          if (isFirstLoad) {\n            isFirstLoad = false;\n            return;\n          }\n  \n          clearTimeout(hideTimeout);\n          notificationElement.classList.remove('show');\n          void notificationElement.offsetWidth; // Force reflow\n  \n          messageElement.textContent = message;\n          notificationElement.className = 'custom-notification ' + type;\n\n          // Store the notification timestamp before showing\n          const timestamp = Date.now();\n          localStorage.setItem(`lastNotification_${instanceId}`, JSON.stringify({\n            message: message,\n            type: type,\n            pageLoadId: pageLoadId,\n            timestamp: timestamp\n          }));\n  \n          requestAnimationFrame(() => {\n            notificationElement.classList.add('show');\n          });\n  \n          hideTimeout = setTimeout(() => {\n            notificationElement.classList.remove('show');\n          }, NOTIFICATION_DURATION);\n        }\n  \n        scope.$watch('msg', function(msg) {\n          if (!msg?.payload) return;\n  \n          // Wrap payload to force change detection\n          const wrappedPayload = {\n            text: typeof msg.payload === 'object' ? msg.payload.text || 'Notification' : msg.payload.toString(),\n            timestamp: Date.now(),\n            type: msg.payload?.type || 'success'\n          };\n  \n          showNewNotification(wrappedPayload.text, wrappedPayload.type);\n        });\n  \n        scope.$on('$destroy', () => {\n          clearTimeout(hideTimeout);\n          clearInterval(checkInterval);\n        });\n\n        // Clear notification visibility on page unload\n        window.addEventListener('beforeunload', function() {\n          notificationElement.classList.remove('show');\n        });\n\n        return { checkInterval }; // Return for cleanup\n      }\n  \n      // Setup two instances and store their intervals\n      const instances = [\n        setupNotification('.template-instance[data-instance=\"1\"]'),\n        setupNotification('.template-instance[data-instance=\"2\"]')\n      ];\n\n      // Additional cleanup on scope destroy\n      scope.$on('$destroy', () => {\n        instances.forEach(instance => {\n          if (instance.checkInterval) {\n            clearInterval(instance.checkInterval);\n          }\n        });\n      });\n  \n    })(scope); // Pass the AngularJS scope if available\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a08ca2c646199af5",
        "type": "ui_template",
        "z": "62804953b962105f",
        "group": "3befc064653e026e",
        "name": "UI Notigication RED 1",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Multi-Instance Notification System</title>\n  <style>\n    /* Shared styles for notifications */\n    .notification-container {\n      background-color: transparent !important;\n      min-height: 1px;\n      position: relative;\n    }\n    body {\n      margin: 0;\n      padding: 0;\n      min-height: 1px;\n    }\n    .custom-notification {\n      position: fixed;\n      top: 0px;\n      right: 0px;\n      padding: 21px 50px;\n      background-color: #660000;\n      color: white;\n      border-radius: 5px;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n      visibility: hidden;\n      opacity: 0;\n      transform: translateY(-20px);\n      transition: opacity 0.3s, transform 0.3s;\n      z-index: 10000;\n      font-size: 19px;\n      font-family: Arial, sans-serif;\n    }\n    .custom-notification.show {\n      visibility: visible;\n      opacity: 1;\n      transform: translateY(0);\n    }\n    .custom-notification.success { background-color: #660000; color: white !important; }\n    .custom-notification.error { background-color: #dc3545; color: white !important; }\n    .custom-notification.info { background-color: #17a2b8; color: white !important; }\n    .custom-notification.warning { background-color: #ffc107; color: black; }\n    .custom-notification * { color: inherit !important; }\n  </style>\n</head>\n<body>\n  <!-- Instance 1 -->\n  <div class=\"template-instance\" data-instance=\"1\">\n    <div class=\"notification-container\">\n      <div class=\"custom-notification\" aria-live=\"assertive\">\n        <span class=\"notification-message\"></span>\n      </div>\n    </div>\n  </div>\n  <!-- Instance 2 -->\n  <div class=\"template-instance\" data-instance=\"2\">\n    <div class=\"notification-container\">\n      <div class=\"custom-notification\" aria-live=\"assertive\">\n        <span class=\"notification-message\"></span>\n      </div>\n    </div>\n  </div>\n  <script>\n    // Ensure AngularJS scope is available\n    (function(scope) {\n      const NOTIFICATION_DURATION = 3000; // 3 seconds\n      const CHECK_INTERVAL = 100; // Check every 100ms\n      const pageLoadId = Date.now().toString();\n      \n      // Store pageLoadId in localStorage\n      localStorage.setItem('pageLoadId', pageLoadId);\n\n      function setupNotification(instanceSelector) {\n        const container = document.querySelector(instanceSelector);\n        const instanceId = container.getAttribute('data-instance');\n        const notificationElement = container.querySelector('.custom-notification');\n        const messageElement = container.querySelector('.notification-message');\n        let hideTimeout;\n        let isFirstLoad = true;\n\n        // Setup interval to check for expired notifications\n        const checkInterval = setInterval(() => {\n          const lastNotification = JSON.parse(localStorage.getItem(`lastNotification_${instanceId}`) || '{}');\n          if (lastNotification.timestamp) {\n            const timeSinceNotification = Date.now() - lastNotification.timestamp;\n            if (timeSinceNotification >= NOTIFICATION_DURATION && notificationElement.classList.contains('show')) {\n              notificationElement.classList.remove('show');\n            }\n          }\n        }, CHECK_INTERVAL);\n  \n        function showNewNotification(message, type = 'success') {\n          if (isFirstLoad) {\n            isFirstLoad = false;\n            return;\n          }\n  \n          clearTimeout(hideTimeout);\n          notificationElement.classList.remove('show');\n          void notificationElement.offsetWidth; // Force reflow\n  \n          messageElement.textContent = message;\n          notificationElement.className = 'custom-notification ' + type;\n\n          // Store the notification timestamp before showing\n          const timestamp = Date.now();\n          localStorage.setItem(`lastNotification_${instanceId}`, JSON.stringify({\n            message: message,\n            type: type,\n            pageLoadId: pageLoadId,\n            timestamp: timestamp\n          }));\n  \n          requestAnimationFrame(() => {\n            notificationElement.classList.add('show');\n          });\n  \n          hideTimeout = setTimeout(() => {\n            notificationElement.classList.remove('show');\n          }, NOTIFICATION_DURATION);\n        }\n  \n        scope.$watch('msg', function(msg) {\n          if (!msg?.payload) return;\n  \n          // Wrap payload to force change detection\n          const wrappedPayload = {\n            text: typeof msg.payload === 'object' ? msg.payload.text || 'Notification' : msg.payload.toString(),\n            timestamp: Date.now(),\n            type: msg.payload?.type || 'success'\n          };\n  \n          showNewNotification(wrappedPayload.text, wrappedPayload.type);\n        });\n  \n        scope.$on('$destroy', () => {\n          clearTimeout(hideTimeout);\n          clearInterval(checkInterval);\n        });\n\n        // Clear notification visibility on page unload\n        window.addEventListener('beforeunload', function() {\n          notificationElement.classList.remove('show');\n        });\n\n        return { checkInterval }; // Return for cleanup\n      }\n  \n      // Setup two instances and store their intervals\n      const instances = [\n        setupNotification('.template-instance[data-instance=\"1\"]'),\n        setupNotification('.template-instance[data-instance=\"2\"]')\n      ];\n\n      // Additional cleanup on scope destroy\n      scope.$on('$destroy', () => {\n        instances.forEach(instance => {\n          if (instance.checkInterval) {\n            clearInterval(instance.checkInterval);\n          }\n        });\n      });\n  \n    })(scope); // Pass the AngularJS scope if available\n  </script>\n</body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e69743906051c56e",
        "type": "link in",
        "z": "62804953b962105f",
        "g": "e570253ed9784b6a",
        "name": "Audio Celestrak red",
        "links": [
            "079f3b4468c4887e",
            "08b8cc1d07b25322",
            "6cf76c8f806eabc0",
            "75c8945074dea488",
            "940f14dc9b5b79d7",
            "bd44410470f18aea",
            "df7454da395c47b4",
            "f22d599e751d9314",
            "ffb4c4b51344ccf8"
        ],
        "x": 375,
        "y": 180,
        "wires": [
            [
                "cc9fdbbe920295e9",
                "79a3f0034c6f17d8",
                "a08ca2c646199af5"
            ]
        ]
    },
    {
        "id": "cc9fdbbe920295e9",
        "type": "ui_audio",
        "z": "62804953b962105f",
        "name": "",
        "group": "b10e0a54.7b0198",
        "voice": "Google UK English Female",
        "always": true,
        "x": 525,
        "y": 170,
        "wires": []
    },
    {
        "id": "56ce8d3a22846083",
        "type": "mqtt in",
        "z": "9329235efacd1483",
        "name": "",
        "topic": "I",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e688816fa768592b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 80,
        "wires": [
            [
                "9262f5982ea259df",
                "ef65fea101648020"
            ]
        ]
    },
    {
        "id": "016c7bf3fc9ddcf0",
        "type": "file",
        "z": "9329235efacd1483",
        "name": "",
        "filename": "courant.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 690,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b7dec590fd1a3e07",
        "type": "debug",
        "z": "9329235efacd1483",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "9262f5982ea259df",
        "type": "function",
        "z": "9329235efacd1483",
        "name": "",
        "func": "msg.payload=(msg.payload*3.3*1000)/4095.0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 40,
        "wires": [
            [
                "016c7bf3fc9ddcf0",
                "b7dec590fd1a3e07"
            ]
        ]
    },
    {
        "id": "ef65fea101648020",
        "type": "debug",
        "z": "9329235efacd1483",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 180,
        "wires": []
    },
    {
        "id": "72105630cf3abe20",
        "type": "ui_form",
        "z": "31490b37c0bdea56",
        "g": "26d8e3a389b016a3",
        "name": "",
        "label": "Effectuez votre calcul",
        "group": "d6013838df620c4f",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "title",
                "value": "Titre",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "param1",
                "value": "param1",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "param2",
                "value": "param2",
                "type": "email",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Titre": "",
            "param1": "",
            "param2": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "ca46b2c9d9e66325"
            ]
        ]
    },
    {
        "id": "ca46b2c9d9e66325",
        "type": "function",
        "z": "31490b37c0bdea56",
        "g": "26d8e3a389b016a3",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 100,
        "wires": [
            [
                "98b4fb3ab826231d",
                "960f9003e5d3c003"
            ]
        ]
    },
    {
        "id": "98b4fb3ab826231d",
        "type": "debug",
        "z": "31490b37c0bdea56",
        "g": "26d8e3a389b016a3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 60,
        "wires": []
    },
    {
        "id": "960f9003e5d3c003",
        "type": "ui_text",
        "z": "31490b37c0bdea56",
        "g": "26d8e3a389b016a3",
        "group": "d6013838df620c4f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "resultat",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "b7215226b17163c0",
        "type": "ui_template",
        "z": "9aae31178d2023fd",
        "group": "345ace8c590be9f3",
        "name": "Iframe sans scrollbar",
        "order": 0,
        "width": "12",
        "height": "10",
        "format": "<style>\n    .iframe-container {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n\n    iframe {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        border: none;\n    }\n</style>\n\n<div class=\"iframe-container\">\n    <iframe src=\"https://exemple.com\" scrolling=\"no\"></iframe>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 40,
        "wires": [
            []
        ]
    }
]